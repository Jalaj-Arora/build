{"version":3,"sources":["assets/images/no-hotlines.svg","assets/images/create-hotline.svg","assets/icons/dots-icon.svg","assets/icons/pencil.svg","components/hotlineMessages/poppins.module.scss","components/hotlineMessages/sfpro.module.scss","components/hotlineMessages/sofia.module.scss","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/images/work-chart.svg","assets/icons/send.svg","assets/icons/HotLine.svg","assets/icons/OpenLine.svg","assets/icons/Polls.svg","assets/icons/ManageEmp.svg","assets/icons/BroadcastMsg.svg","assets/icons/Help.svg","assets/icons/Info.svg","utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","assets/icons/Icon.js","components/manageOrg/AccSidebar.js","components/table/Table.js","components/button/Button.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","components/form/CreateOrgStepOne.js","services/auth-header.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/modal/PrivacyPolicyModal.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/login/Login.js","components/login/AmWebLogin.js","components/login/OrgccLogin.js","components/login/AmccLogin.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/modal/AssignHotlineModal.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","components/hotlineMessages/AmWebSidebar.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/HotlineMessages.js","containers/PermissionDenied.js","components/form/OrgDetails.js","components/modal/ResetPwdModal.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/openlineForm/CreateOpenHotlineStepOne.js","components/openlineForm/CreateOpenHotlineStepTwo.js","components/openlineForm/CreateOpenHotlineStepThree.js","components/openlineCreation/OpnelineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/openlineDirectory/ShowAllOpnlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/hotlineMessages/Poppins.js","components/hotlineMessages/SFPro.js","components/hotlineMessages/Sofia.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/index.js","services/stores.js","App.js","index.js","assets/images/amcc-vector.svg"],"names":["module","exports","getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","email","password","page","axios","post","response","data","JSON","stringify","AES","encrypt","toString","clear","window","location","reload","login","dispatch","AuthService","then","type","payload","user","pwd","Promise","resolve","error","message","reject","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","user_data","is_am_web_user","is_amcc_user","is_org_cc_user","is_app_user","is_idb_user","is_seeded_user","user_details","name","first_name","last_name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","userType","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","Header","Content","collapsed","toggle","setState","createElement","MenuUnfoldOutlined","MenuFoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","manageemp","AccSidebar","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","ShowAllOrganizations","onSearch","filterDt","filterIt","filterData","title","dataIndex","width","render","children","identifier","start_date","status_id","record","path","organization_id","Pencil","organizations","forEach","org","replaceAll","end_date","arr","searchKey","filter","obj","Object","keys","some","disabled","placeholder","Button","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","Form","useForm","form","showError","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","autoComplete","organizationId","validateStatus","status1","onSelect","Option","s1Date","date","disabledDate","current","moment","startOf","htmlType","preventDefault","authHeader","CommonAuthHeader","parse","tokens","access","DeleteModal","visible","show","showModal","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","userId","deleteOrg","handleCancel","history","Authorization","delete","hotlineId","push","catch","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","nextProps","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","lastName","mobile","status2","fromStepTwo","showAddSeededUserForm","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","stepTwoPrev","addSeededUser","s2Date","Password","test","target","validateEmailAddress","validateMobile","userID","CreateOrgStepThree","createNewOrganization","addSeededUserFromThirdStep","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","stepOneOrganization","setStepOneOrganization","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","format","mobile_number","organization","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","orgId","hotLineId","manageOrgData","manageOrg","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","res","flag","property","manageEmp","PrivacyPolicyModal","open","layout","wrapperCol","tailLayout","ForgotPassword","handleLogin","onChangeUsername","onChangePassword","loading","commonForAllUsers","isamcc","isorgcc","isamweb","canSubmit","Amccvector","onSubmit","ref","c","initialValues","remember","rules","required","ResetPassword","Login","isEnabled","AMwebLogin","OrgLogin","suffix","ChangePassword","notification","useNotification","api","contextHolder","currentPwd","newPwd","confirmPwd","setPwd","handleOnChange","old_password","new_password","confirm_password","patch","info","description","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","TextArea","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","iconText","setdisabledbtn","hotlineErrorUpdated","sethotlineErrorUpdated","showCount","maxLength","directoryName","hotline_name","CheckHotlineName","CheckCircleTwoTone","twoToneColor","sDate","status","valuePropName","hotlineIconId","ReactHtmlParser","iconHtml","AssignHotlineModal","handleCheck","selectedRow","stepOneHotLineValues","permissions","getCheckValues","setVisible","a","async","per","find","p","user_id","checked","can_respond","CreateHotlineStepTwo","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","employeeData","prevProps","rowSelection","selectedRowKeys","margin","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setStepTwoHotLine","values","id1","reduce","accumulator","currentValue","can_view_reports","created_by","org_user_id","concat","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","HotlinePopover","DeleteHotlineModal","hotline_id","GridPermission","deleteRecord","permissionData","setPermissionaData","changeDataSource","editable","text","onDelete","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","setValue","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","ShowAllHotlines","hotlines","abc","utc","local","hotlinesdata","hotlinedata","getHotlines","AmWebSidebar","setStatus","urgencyLevel","setUrgencyLevel","hotline","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","undefined","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalUrl","searchString","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","conversation_id","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","str","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","getHotlineMessages","document","getElementById","note","assigne","classList","lastMessage","getElementsByClassName","scrollIntoView","block","convID","replace","onSendMessageClick","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","responder_conversation_name","RegExp","match","messageLength","unread_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","textarea","querySelector","Send","HotlineMessages","conversations","setConversations","initialConv","setInitialConv","loader","setLoader","urgencyFilterData","setUrgencyFilterData","hotlineFilterData","setHotlineFilterData","statusFilterData","setStatusFilterData","setRemoveFilter","setConversation","setSearchString","setSocket","setNewState","unreadCount","setUnreadCount","allConversations","setAllConversations","showdiv","setShowDiv","setChatDiv","webSocket","useRef","getConversations","unSetFilters","allConversationIds","mergedConversations","convoID","increaseOverallCountDuringFilters","WebSocket","onopen","onmessage","newConvo","socketMethod","onclose","onerror","accessed_users","urgencyState","statusState","hotlineState","searchBy","conversationIds","updatedNewConvo","conversationsToDisplay","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","totalFiltersApplied","urgency","filterSocket","toLowerCase","updatedConversations","increaseOverallCount","urgency_level","displayNewConvAtTop","dummyArray","splice","newConvFromDiffUser","incomingConversation","ele","totalConversations","hotlineName","itemMessage","updatedConversation","removeFilterLevel","allAppliedFilters","urlWithFilters","disabledCount","trim","statusFil","ugc","ht","filteredData","highlightText","LeftOutlined","count","urgencyLevels","setAppliedFilters","search","closable","onClose","onConversationClick","fontWeight","updated_by","put","receivedConversation","NoHotlines","opacity","PermissionDenied","justifyContent","EditOrg","onFinish","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","orgID","computedMatch","setEmailValidationError","setMobileValidationError","setOrganizationName","seededUserName","setSeededUserName","seededUserEmail","setSeededUserEmail","org_id","date1","organizationDetails","setOrganizationDetails","date2","seededUserDetails","setSeededUserDetails","editVisible","setEditVisible","deleteClick","setDeleteClick","appendedUsers","seeded_user","soft_delete","onSeededUserEditSubmit","handleSeededUserOnChange","email_from","handleOrganizationOnSelect","handleOrganizationDatePickerChange","handleSeededUserDatePickerChange","handleSeededUserOnSelect","EditHotLine","hotLineData","sethotLineData","seticonHtml","useHistory","useLocation","eDate","dates","setIcon","saveHotLine","CreateOpenHotlineStepOne","stepOneOpenLineInfo","handleStepOneUpload","handleStepOnePreview","handleBeforeUpload","openelineName","action","listType","fileList","file","UploadOutlined","CreateOpenHotlineStepTwo","stepTwoOpenLine","CreateOpenHotlineStepThree","stepOneOpenLine","OpenlineCreation","setStepOneOpenLine","setStepTwoOpenLine","reader","FileReader","onload","base64","result","readAsDataURL","originFileObj","OpenlineDirectory","OpnelineCreation","ShowAllOpnlines","openlines","openlinesdata","openline","getOpenlines","Poppins","styles","heading_sm","xl","message_section","SFPro","Sofia","Routes","isAuthenticated","url","exact","AmccLogin","AmWebLogin","OrgDetails","EditProfile","amcc","OrganizationContainer","amweb","amorg","HotlineContainer","OpenlineContainer","decryptedPassword","localPwd","decrypt","enc","Utf8","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","onIdle","debounce","timeout","ReactDOM"],"mappings":"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","file":"static/js/main.54f9e171.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-typography-sm\":\"poppins_ant-typography-sm__BJFjt\",\"search-box\":\"poppins_search-box__tNSOg\",\"ant-input-group-addon\":\"poppins_ant-input-group-addon__2Jqxg\",\"ant-input-search-button\":\"poppins_ant-input-search-button__1tQAo\",\"small\":\"poppins_small__1IYou\",\"inbox-messages\":\"poppins_inbox-messages__D8Ea-\",\"ant-typography\":\"poppins_ant-typography__22llT\",\"sender\":\"poppins_sender__1W-iq\",\"ant-badge-count\":\"poppins_ant-badge-count__1pDqj\",\"ant-select-dropdown\":\"poppins_ant-select-dropdown__1IF_L\",\"top-filter-pan\":\"poppins_top-filter-pan__2xLBu\",\"selection-panel\":\"poppins_selection-panel__1xZPc\",\"ant-select\":\"poppins_ant-select__2S00T\",\"ant-select-arrow\":\"poppins_ant-select-arrow__loGsd\",\"icon-row\":\"poppins_icon-row__2JOym\",\"icon\":\"poppins_icon__38Gp7\",\"chat-section\":\"poppins_chat-section__24flt\",\"msg-history\":\"poppins_msg-history__SW_AA\",\"message_section\":\"poppins_message_section__ooEa7\",\"ant-tag\":\"poppins_ant-tag__30f6n\",\"incoming-msg\":\"poppins_incoming-msg__2r1jO\",\"received-msg\":\"poppins_received-msg__3jvGJ\",\"sent-msg\":\"poppins_sent-msg__PT0FI\",\"send-msg\":\"poppins_send-msg__2y_EI\",\"send\":\"poppins_send__3h6fY\",\"time-date\":\"poppins_time-date__3kaCt\",\"outgoing-msg\":\"poppins_outgoing-msg__1aAIO\",\"type-msg\":\"poppins_type-msg__1Q3fp\",\"ant-layout-content\":\"poppins_ant-layout-content__3MC7_\",\"filter-wrapper\":\"poppins_filter-wrapper__30T1r\",\"ant-divider\":\"poppins_ant-divider__3f6pc\",\"ant-divider-horizontal\":\"poppins_ant-divider-horizontal__2hYOb\",\"filter-type\":\"poppins_filter-type__3afgF\",\"flex-gap\":\"poppins_flex-gap__2G5Rk\",\"rgt-panel\":\"poppins_rgt-panel__h651L\",\"added-notes\":\"poppins_added-notes__2I4Tz\",\"show-less\":\"poppins_show-less__1ISWd\",\"note-wrapper\":\"poppins_note-wrapper__2zTcT\",\"row-hgt\":\"poppins_row-hgt__2IlJO\",\"icon-create\":\"poppins_icon-create__fWFI6\",\"icon-activity\":\"poppins_icon-activity__3S4DW\",\"icon-assign\":\"poppins_icon-assign__3hBv4\",\"selected\":\"poppins_selected__3CV4L\",\"note-user\":\"poppins_note-user__2K3Kv\",\"ant-timeline-item-head\":\"poppins_ant-timeline-item-head__1mHRU\",\"ant-timeline-item-head-blue\":\"poppins_ant-timeline-item-head-blue__11sVr\",\"ant-timeline-item-tail\":\"poppins_ant-timeline-item-tail__2QALw\",\"assignees\":\"poppins_assignees__1h4gw\",\"msg-wrapper\":\"poppins_msg-wrapper__fcXLg\",\"sm\":\"poppins_sm__1v-lR\",\"no-selected\":\"poppins_no-selected__j91F7\",\"heading_sm\":\"poppins_heading_sm__2HgrU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-typography-sm\":\"sfpro_ant-typography-sm__1q4Rx\",\"search-box\":\"sfpro_search-box__2iSVI\",\"ant-input-group-addon\":\"sfpro_ant-input-group-addon__3T4sK\",\"ant-input-search-button\":\"sfpro_ant-input-search-button__16Z5J\",\"small\":\"sfpro_small__2qozE\",\"inbox-messages\":\"sfpro_inbox-messages__1fT1s\",\"ant-typography\":\"sfpro_ant-typography__1qPFY\",\"sender\":\"sfpro_sender__27qZu\",\"ant-badge-count\":\"sfpro_ant-badge-count__2Djdq\",\"ant-select-dropdown\":\"sfpro_ant-select-dropdown__1QELd\",\"top-filter-pan\":\"sfpro_top-filter-pan__1cCfn\",\"selection-panel\":\"sfpro_selection-panel__2rmKI\",\"ant-select\":\"sfpro_ant-select__XmmM6\",\"ant-select-arrow\":\"sfpro_ant-select-arrow__217gW\",\"icon-row\":\"sfpro_icon-row__1kSWI\",\"icon\":\"sfpro_icon__9vV7w\",\"chat-section\":\"sfpro_chat-section__13qtI\",\"msg-history\":\"sfpro_msg-history__1xeQQ\",\"message_section\":\"sfpro_message_section__3BPzd\",\"ant-tag\":\"sfpro_ant-tag__3ud9z\",\"incoming-msg\":\"sfpro_incoming-msg__2Mk1t\",\"received-msg\":\"sfpro_received-msg__2HDCp\",\"sent-msg\":\"sfpro_sent-msg__1r5bM\",\"send-msg\":\"sfpro_send-msg__3XyMq\",\"send\":\"sfpro_send__3Rpql\",\"time-date\":\"sfpro_time-date__iW2bp\",\"outgoing-msg\":\"sfpro_outgoing-msg__2LyUx\",\"type-msg\":\"sfpro_type-msg__2LR1l\",\"ant-layout-content\":\"sfpro_ant-layout-content__2hXIz\",\"filter-wrapper\":\"sfpro_filter-wrapper__2IL8j\",\"ant-divider\":\"sfpro_ant-divider__x7B3t\",\"ant-divider-horizontal\":\"sfpro_ant-divider-horizontal__CQZ4O\",\"filter-type\":\"sfpro_filter-type__jOFuj\",\"flex-gap\":\"sfpro_flex-gap__3dM0n\",\"rgt-panel\":\"sfpro_rgt-panel__beY62\",\"added-notes\":\"sfpro_added-notes__svitM\",\"show-less\":\"sfpro_show-less__3WUk1\",\"note-wrapper\":\"sfpro_note-wrapper__6OuVu\",\"row-hgt\":\"sfpro_row-hgt__2u_c5\",\"icon-create\":\"sfpro_icon-create__7Rs-I\",\"icon-activity\":\"sfpro_icon-activity__23Z9k\",\"icon-assign\":\"sfpro_icon-assign__Sgz15\",\"selected\":\"sfpro_selected__3w86h\",\"note-user\":\"sfpro_note-user__2-zIQ\",\"ant-timeline-item-head\":\"sfpro_ant-timeline-item-head__2gbty\",\"ant-timeline-item-head-blue\":\"sfpro_ant-timeline-item-head-blue__1P8Qd\",\"ant-timeline-item-tail\":\"sfpro_ant-timeline-item-tail__1RC8Q\",\"assignees\":\"sfpro_assignees__3H5Wl\",\"msg-wrapper\":\"sfpro_msg-wrapper__3-fK2\",\"sm\":\"sfpro_sm__3DPpI\",\"no-selected\":\"sfpro_no-selected__1VJFF\",\"heading_sm\":\"sfpro_heading_sm__nrUbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-typography-sm\":\"sofia_ant-typography-sm__z10Vr\",\"search-box\":\"sofia_search-box__ddNLd\",\"ant-input-group-addon\":\"sofia_ant-input-group-addon__24ZhQ\",\"ant-input-search-button\":\"sofia_ant-input-search-button__288Fp\",\"small\":\"sofia_small__1zvH9\",\"inbox-messages\":\"sofia_inbox-messages__2pY4h\",\"ant-typography\":\"sofia_ant-typography__1hVor\",\"sender\":\"sofia_sender__2JvfS\",\"ant-badge-count\":\"sofia_ant-badge-count__l1MHZ\",\"ant-select-dropdown\":\"sofia_ant-select-dropdown__2EtYN\",\"top-filter-pan\":\"sofia_top-filter-pan__hjiB6\",\"selection-panel\":\"sofia_selection-panel__18N7T\",\"ant-select\":\"sofia_ant-select__3zR0D\",\"ant-select-arrow\":\"sofia_ant-select-arrow__1bQJZ\",\"icon-row\":\"sofia_icon-row__1VsLQ\",\"icon\":\"sofia_icon__3jrGA\",\"chat-section\":\"sofia_chat-section__3yAzi\",\"msg-history\":\"sofia_msg-history__3XSbV\",\"message_section\":\"sofia_message_section__16M21\",\"ant-tag\":\"sofia_ant-tag__2AQ__\",\"incoming-msg\":\"sofia_incoming-msg__fc9AZ\",\"received-msg\":\"sofia_received-msg__UqVAZ\",\"sent-msg\":\"sofia_sent-msg__1fWA2\",\"send-msg\":\"sofia_send-msg__2IQ3d\",\"send\":\"sofia_send__24Ph0\",\"time-date\":\"sofia_time-date__1g_RD\",\"outgoing-msg\":\"sofia_outgoing-msg__3nXi4\",\"type-msg\":\"sofia_type-msg__3iwwT\",\"ant-layout-content\":\"sofia_ant-layout-content__3pCVF\",\"filter-wrapper\":\"sofia_filter-wrapper__aeNmy\",\"ant-divider\":\"sofia_ant-divider__2Y8dT\",\"ant-divider-horizontal\":\"sofia_ant-divider-horizontal__1fcIs\",\"filter-type\":\"sofia_filter-type__3YQar\",\"flex-gap\":\"sofia_flex-gap__2Ji9s\",\"rgt-panel\":\"sofia_rgt-panel__15zAQ\",\"added-notes\":\"sofia_added-notes__5JsA5\",\"show-less\":\"sofia_show-less__121uE\",\"note-wrapper\":\"sofia_note-wrapper__1X3PX\",\"row-hgt\":\"sofia_row-hgt__3fu7i\",\"icon-create\":\"sofia_icon-create__25wwC\",\"icon-activity\":\"sofia_icon-activity__UsXU_\",\"icon-assign\":\"sofia_icon-assign__9BYs3\",\"selected\":\"sofia_selected__3k2wa\",\"note-user\":\"sofia_note-user__j3SJE\",\"ant-timeline-item-head\":\"sofia_ant-timeline-item-head__-6Zuq\",\"ant-timeline-item-head-blue\":\"sofia_ant-timeline-item-head-blue__3nNxN\",\"ant-timeline-item-tail\":\"sofia_ant-timeline-item-tail__1czml\",\"assignees\":\"sofia_assignees__2S8EW\",\"msg-wrapper\":\"sofia_msg-wrapper__k359K\",\"sm\":\"sofia_sm__cu1Vl\",\"no-selected\":\"sofia_no-selected__1idP3\",\"heading_sm\":\"sofia_heading_sm__1PDtl\"};","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/HotLine.8e399cf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/OpenLine.19ed48f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Polls.797dc4b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/ManageEmp.b979556a.svg\";","module.exports = __webpack_public_path__ + \"static/media/BroadcastMsg.b628c864.svg\";","module.exports = __webpack_public_path__ + \"static/media/Help.1b17639f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Info.a71a0872.svg\";","const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  let;\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      AppStorage.set(\"user\", JSON.stringify(response.data));\r\n      AppStorage.set(\r\n        \"pwd\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          pwd: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser } = this.props.userRole;\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    if (amCCUser) {\r\n      AppStorage.set(\"userType\", \"AM CC\");\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\"userType\", \"Org CC\");\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\"userType\", \"AM WEB\");\r\n    }\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{AppStorage.get(\"userType\")}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">Edit Profile</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  AM WEB\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  AM CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  Org CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  AM CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  AM WEB\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  Org CC\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>Change Password</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>Sign Out</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{AppStorage.get(\"userType\")}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const userType = AppStorage.get(\"userType\");\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    }\r\n    const password = props.pwd.includes('\"')\r\n      ? props.pwd.slice(1, -1)\r\n      : props.pwd;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log('INTERVAL');\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Annonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, pwd } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    pwd,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    console.log(\"this.state.collapsed\",this.state.collapsed)\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n              {React.createElement(\r\n            this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger d-lg-none d-block\",\r\n              onClick: this.toggle,\r\n            }\r\n\r\n          )}\r\n        <Sider className={this.state.collapsed ? \"d-none d-lg-block w-md-100 sider-width\" : \" d-lg-block w-md-100 sider-width\"} trigger={null} collapsible collapsed={this.state.collapsed}>\r\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"3\"]}>\r\n        <Menu.Item\r\n          key=\"1\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-hotlines\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          <Link to=\"/orgcc/hotlinedirectory\">Hotlines</Link>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-openlines\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          <Link to=\"/orgcc/openlinedirectory\"></Link>\r\n          Openlines\r\n        </Menu.Item>\r\n        {/* <Menu.Item\r\n          key=\"3\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-polls\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          Polls\r\n        </Menu.Item> */}\r\n        <Menu.Item\r\n          key=\"3\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-manage-emp\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          <Link to=\"/orgcc/manageemployees\">Manage Employees</Link>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"4\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-broadcast\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          Broadcast Messages\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"5\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-help\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          Help\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"6\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-info\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          Info\r\n        </Menu.Item>\r\n      </Menu>\r\n      <div className=\"btm-div\">\r\n        <a href=\"#\" className=\"px-2\">\r\n          Info\r\n        </a>\r\n        <a href=\"#\" className=\"px-2\">\r\n          Help\r\n        </a>\r\n      </div>\r\n    </Sider>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;","\r\nexport const hotline = require('./HotLine.svg')\r\nexport const openline = require('./OpenLine.svg')\r\nexport const polls = require('./Polls.svg')\r\nexport const manageemp = require('./ManageEmp.svg')\r\nexport const broadcastmsg = require('./BroadcastMsg.svg')\r\nexport const help = require('./Help.svg')\r\nexport const info = require('./Info.svg')","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { manageemp } from \"../../assets/icons/Icon\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item key=\"1\" icon={<img src={manageemp} />}>\r\n              <Link to=\"/amcc/manageorganizations\">Manage Organizations</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              Info\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Organization Name \",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Organization Id\",\r\n        dataIndex: \"identifier\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (identifier) => {\r\n          return {\r\n            children: identifier,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date \",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status_id\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (status_id) => {\r\n          return {\r\n            children: (\r\n              <div className=\"primary-tag-rounded tag\">\r\n                <span className=\"circle mr-1\"></span>\r\n                {status_id === 1 ? \"Active\" : \"InActive\"}\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n        // render: () => <div className=\"secondary-tag-rounded tag\">Inactive</div>,\r\n      },\r\n      {\r\n        title: \"Actions\",\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations.forEach((org) => {\r\n      org.start_date = org.start_date.replaceAll(\"-\", \" / \");\r\n      org.end_date = org.end_date.replaceAll(\"-\", \" / \");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].includes(searchKey);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Organizations </h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            disabled={true}\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value=\"Create Organization\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  key=\"manageOrg\"\r\n                  rowKey=\"identifier\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      next();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Organization Name\"\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Organization Id\"\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Status\" value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">Active</Option>\r\n                    <Option value=\"0\">Inactive</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Date\" value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg ? (\r\n          <Button onClick={this.showBothModals}>Delete</Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.org}?</p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.user.firstName}?</p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.user.firstName}?</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            <p>There should be at least one seeded user.</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              Edit\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              Edit\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <Button>Edit</Button>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Mobile\",\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status2\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (status2) => {\r\n          return {\r\n            children: (\r\n              <div className=\"primary-tag-rounded tag\">\r\n                <span className=\"circle mr-1\"></span>\r\n                {status2 === \"1\" ? \"Active\" : \"InActive\"}\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Row className=\"content-center pt-0\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() => this.props.showAddSeededUserForm()}\r\n            >\r\n              Add Seeded User\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n        <Grid\r\n          rowKey=\"unique_identifier\"\r\n          columns={columns}\r\n          data={this.state.data}\r\n        />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email &&\r\n      stepTwoOrganizationInfo.password\r\n    ) {\r\n      showError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email &&\r\n      stepTwoOrganizationInfo.password\r\n    ) {\r\n      showError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var re = /^\\+\\d{12}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showMobileValidationError(true);\r\n    } else {\r\n      showMobileValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"First Name\"\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Last Name\"\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Email Id\" value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid email address.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Date\" value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Status\" value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    placeholder=\"Status\"\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">Active</Option>\r\n                    <Option value=\"0\">Inactive</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.mobile}\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateMobile(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid mobile number like +919888888888\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                Add User\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                Update\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            Back\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            Next\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              Back\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">Organization Details</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Organization Name\" value={stepOneOrganizationInfo.organizationName}>\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Organization Id\" value={stepOneOrganizationInfo.organizationId}>\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Status\" value={stepOneOrganizationInfo.status1}>\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      placeholder=\"Status\"\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"0\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Select Date\" value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n\r\n        <Col\r\n          span={24}\r\n          className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n          <h6 className=\"py-3 mb-0\">Seeded Users Details </h6>\r\n          <div>\r\n            {\" \"}\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() => addSeededUserFromThirdStep()}\r\n            >\r\n              Add Seeded User\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n\r\n        {/* <div className=\"avatar-wrapper pt-2 pb-4\">\r\n          <Avatar>{stepTwoOrganizationInfo.userName?.charAt(0)}</Avatar>\r\n          <span className=\"md-name\">{stepTwoOrganizationInfo.userName}</span>\r\n        </div> */}\r\n\r\n        <Col span={24}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <AssignedUsers\r\n              seededUsers={seededUsers}\r\n              handleEditUser={handleEditUser}\r\n              handleDelete={handleDelete}\r\n              fromStepThree\r\n            />\r\n          </Row>\r\n        </Col>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n              Back\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n              Create and Invite\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Organization Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Seeded User Details\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Confirm Details\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    s2Date: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = {...stepTwoOrganization, userId: userID};\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        s2Date: \"\",\r\n        mobile: \"\",\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      s2Date: \"\",\r\n      mobile: \"\",\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n        password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.s2Date[0]\r\n          ? moment(value.s2Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.s2Date[1]\r\n          ? moment(value.s2Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>Organizations</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Organization</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Organization</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Manage Organizations</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create a new Org Id for your client's organization\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            Create Organization\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from '../utils/AppStorage';\r\n\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get('user'));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      return orgcc_user.user_data.organization_id;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, []);\r\n  return props.manageOrgData?.length > 0 ? (\r\n    <ShowAllOrganizations organizations={props.manageOrgData} />\r\n  ) : (\r\n    <CreateOrg />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              'data-title': 'First Name',\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              'data-title': 'Last Name',\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              'data-title': 'Mobile Number',\r\n            },\r\n          };\r\n        }\r\n      },\r\n      // { title: \"Access\", dataIndex: [\"Access\",\"am_web\"], key: \"am_web \", width: \"21%\" },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        key:\"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag=false;\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n                flag=true;\r\n              }\r\n              if(property==\"org_cc_user\"){\r\n                property = \"Org CC\";\r\n                flag=true;\r\n              }\r\n              if (property == \"app_user\") {\r\n                if(!flag){\r\n                  property = \"APP\";\r\n                }\r\n              }\r\n\r\n              if (test.length == 0) {\r\n                test += property;}\r\n              else if(property !== \"app_user\"){\r\n                if(test.includes(\"APP\")){\r\n                  test=property\r\n                }else{\r\n                  test += \", \" + property;\r\n                }\r\n              } \r\n              //test += property + \" \";\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              'data-title': 'Access',\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>,\r\n            props: {\r\n              'data-title': 'Status',\r\n            },\r\n          };\r\n      },\r\n        // render: () => <div className=\"secondary-tag-rounded tag\">Inactive</div>,\r\n      },\r\n      {\r\n        title: \"Actions\",\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover />,\r\n            props: {\r\n              'data-title': 'Actions',\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].includes(searchKey);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser/>\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n            <OrgSidebar amORGUser/>\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Manage Employees</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                          disabled={true}\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                        <Col span={24} lg={9} className=\"ml-0 ml-lg-4 mt-2 mt-lg-0\">\r\n                          <Select\r\n                            className=\"w-100 w-md-75\"\r\n                            defaultValue=\"Permissions\"\r\n                            disabled\r\n                          >\r\n                            <Option value=\"1\" defaultValue>\r\n                              1\r\n                            </Option>\r\n                            <Option value=\"2\">2</Option>\r\n                          </Select>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24} lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Buttons value=\"Add Employee\" />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"unique_identifier\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        See\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          Privacy Policy\r\n        </Button>\r\n        <Modal\r\n          title=\"Privacy Policy\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND\r\n              PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR\r\n              SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY\r\n              POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF\r\n              YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR\r\n              INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR\r\n              ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF\r\n              THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY\r\n              POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Forgot Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Enter your registered email address to request a password\r\n                  reset link.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    REQUEST PASSWORD RESET LINK\r\n                  </Button>\r\n                </Form.Item>\r\n\r\n                <div className=\"justify-content-center d-flex\">\r\n                <Button\r\n                          type=\"link\"\r\n                          className=\"link\"\r\n                        >\r\n                          Back to <b className=\"pl-1\">Sign In</b>\r\n                        </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Reset Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Set a new password for your account.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Password\">\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <FloatLabel label=\"Confirm Password\">\r\n                  <Form.Item\r\n                    name=\"confirmpassword\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please confirm your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    RESET PASSWORD\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                Login to manage AnonyMoose eco-system. This includes employees\r\n                eligible to use the app and/or components such as Hotlines,\r\n                Openlines, Polls and Surveys, Broadcast Messages and access to\r\n                different features of the \"Insights Dashboard\", through set of\r\n                assignable permissions.\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Sign In</h2>\r\n              </Row>\r\n\r\n              <Form\r\n              className=\"floating-label\"\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <FloatLabel label=\"Password\">\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <div className=\"forgot-pwd\">\r\n                  <a href=\"#\">Forgot Password</a>\r\n                </div>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    disabled={!isEnabled}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={() => {\r\n                      this.handleLogin();\r\n                    }}\r\n                  >\r\n                    SIGN IN\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass AMwebLogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_am_web_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        history.push(\"/amweb/hotlinemessages\");\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24} lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Annonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                Login to view and manage messages, analytics and reporting\r\n                for Hotlines and Openlines and results for polls and surveys\r\n                - for entities assigned to you\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Sign In</h2>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    \r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <FloatLabel label=\"Password\">\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <div className=\"forgot-pwd\">\r\n                  <a href=\"#\">Forgot Password</a>\r\n                </div>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    disabled={!isEnabled}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={() => {\r\n                      this.handleLogin();\r\n                    }}\r\n                  >\r\n                    SIGN IN\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(AMwebLogin);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass OrgLogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_org_cc_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        history.push(\"/orgcc/manageemployees\");\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/orgcc/manageemployees\" />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24} lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Annonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                Login to manage AnonyMoose eco-system. This includes employees\r\n                eligible to use the app and/or components such as Hotlines,\r\n                Openlines, Polls and Surveys, Broadcast Messages and access to\r\n                different features of the \"Insights Dashboard\", through set of\r\n                assignable permissions.\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Sign In</h2>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <Form.Item\r\n                  className={\"group-floating-label\"}\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your email!\",\r\n                      type: \"email\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    type=\"email\"\r\n                    className=\"input-control\"\r\n                    placeholder=\" \"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeUsername}\r\n                    suffix={\r\n                      <label className=\"floating-label\" htmlFor=\"name\">\r\n                        Email\r\n                      </label>\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  className={\"group-floating-label\"}\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"input-control\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    placeholder=\" \"\r\n                    suffix={\r\n                      <label className=\"floating-label\" htmlFor=\"name\">\r\n                        Password\r\n                      </label>\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n                <div className=\"forgot-pwd\">\r\n                  <a href=\"#\">Forgot Password</a>\r\n                </div>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    disabled={!isEnabled}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={() => {\r\n                      this.handleLogin();\r\n                    }}\r\n                  >\r\n                    SIGN IN\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(OrgLogin);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_amcc_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        history.push(\"/amcc/manageorganizations\");\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const isEnabled = this.canSubmit();\r\n    const { isLoggedIn, message } = this.props;\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/amcc/manageorganizations\" />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24} lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Annonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Sign In</h2>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <Form.Item\r\n                  className={\"group-floating-label\"}\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your email!\",\r\n                      type: \"email\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    type=\"Email\"\r\n                    className=\"input-control\"\r\n                    placeholder=\" \"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeUsername}\r\n                    suffix={\r\n                      <label className=\"floating-label\" htmlFor=\"name\">\r\n                        Email\r\n                      </label>\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  className={\"group-floating-label\"}\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"input-control\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    placeholder=\" \"\r\n                    suffix={\r\n                      <label className=\"floating-label\" htmlFor=\"name\">\r\n                        Password\r\n                      </label>\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n                <div className=\"forgot-pwd\">\r\n                  <a href=\"#\">Forgot Password</a>\r\n                </div>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    disabled={!isEnabled}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={() => {\r\n                      this.handleLogin();\r\n                    }}\r\n                  >\r\n                    SIGN IN\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nconst { Content } = Layout;\r\n\r\nconst ChangePassword = () => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const userType = AppStorage.get(\"userType\");\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const placement = \"bottomLeft\";\r\n    axios.patch(BASE_URL + \"changepassword/\", data, options).then((res) => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: \"Your Password has been changed successfully.\",\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        {contextHolder}\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org Control Center\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Change Password</h1>\r\n                  {/* <div className=\"d-block w-100 pl-1\">\r\n                    <small>\r\n                      Your password was last modified on{\" \"}\r\n                      <span className=\"font-weight-bold\">22/04/2020</span>{\" \"}\r\n                    </small>\r\n                  </div> */}\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Current Password\"\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:\r\n                                        \"Please enter your current password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"New Password\"\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:\r\n                                        \"Please enter your new password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Confirm Password\"\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: \"Please confirm your password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() { \r\n    return (\r\n      <> \r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          Add Icon\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title=\"Add Icon\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Add\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div className={this.state.ImageId === '1' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={1} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Sexual Harrasment\">\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div className={this.state.ImageId === '2' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={2} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Violence\">\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '3' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={3} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Racism\">\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '4' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={4} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Cyber Bullying\">\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '5' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={5} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Fight\">\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '6' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={6} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Discrimination\">\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '7' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={7} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Slap\">\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport {CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      showError(false);\r\n      setdisabledbtn(false);\r\n      next();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL+\"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          sethotlineErrorUpdated(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test='createHotlineStepOne' className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <Form.Item\r\n        className=\"required\"\r\n        name=\"directoryName\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter directory name\",\r\n          },\r\n        ]}\r\n      >\r\n        <TextArea\r\n          showCount\r\n          maxLength={80}\r\n          value={stepOneHotLineInfo.directoryName}\r\n          onChange={(e) => handleStepOneOnChange(e)}\r\n          onBlur={(e) => CheckHotlineName(e)}\r\n          id={\"directoryName\"}\r\n          className=\"input-control textarea-input\"\r\n          placeholder=\"Directory Name\"\r\n          htmlFor=\"directoryName\"\r\n        />\r\n        {hotlineErrorUpdated == \"status: false\" && (\r\n          <CheckCircleTwoTone className=\"successCheck\" twoToneColor=\"#52c41a\" />\r\n        )}\r\n        {hotlineErrorUpdated == \"status: true\" && (\r\n          <Alert\r\n            message=\"Sorry! This hotline already exists in the system. Please use a different name.\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item\r\n        className=\"required\"\r\n        name=\"description\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter description\",\r\n          },\r\n        ]}\r\n      >\r\n        {/* {hotlineForm.description.length<15 &&\r\n        <Alert message=\"Please enter more the 15 characters in the description below\" type=\"info\"  showIcon></Alert>\r\n        } */}\r\n        <>\r\n          <TextArea\r\n            className=\"input-control textarea-input\"\r\n            value={stepOneHotLineInfo.description}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <RangePicker\r\n          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n          name=\"sDate\"\r\n          value={stepOneHotLineInfo.sDate}\r\n          onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n          disabledDate={disabledDate}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select start date\",\r\n            },\r\n          ]}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        className=\"required\"\r\n        name=\"status\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please select status\",\r\n          },\r\n        ]}\r\n      >\r\n        <>\r\n          <Select\r\n            placeholder=\"Status\"\r\n            className=\"input-control w-100 w-lg-50\"\r\n            value={stepOneHotLineInfo.status}\r\n            htmlFor=\"status\"\r\n            onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n          >\r\n            <Option value=\"\" disabled>\r\n              Status\r\n            </Option>\r\n            <Option value=\"5\">Active</Option>\r\n            <Option value=\"4\">Inactive</Option>\r\n          </Select>\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext} data-test=\"stepOneNext\">\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button, Table } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        Assign\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText=\"Done\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <div>\r\n          Assign Permissions for <b>{stepOneHotLineValues.directoryName}</b>{\" \"}Hotline\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n<div>\r\n        <Row className=\"mt-2 mt-lg-5\">\r\n          <Col span={6}></Col>\r\n          <Col span={14} className=\"small text-center\">\r\n            Reply to Messages, Add Notes, Status & Urgency level\r\n          </Col>\r\n        </Row>\r\n        {selectedRow &&\r\n          selectedRow.map((item) => {\r\n            let per = permissions.find((p) => p.user_id === item.user_id);\r\n            return (\r\n              <Row className=\"mt-3 d-flex justify-content-center\">\r\n                <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                <Col span={10}>\r\n                  <Checkbox\r\n                    checked={per && per.can_respond === 1 ? true : false} disabled\r\n                    onChange={(e) => handleCheck(item)}\r\n                  ></Checkbox>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n          </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState({\r\n        employeeData: manageEmpData,\r\n      });\r\n    }\r\n  }\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n    \r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n          <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n              <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search placeholder=\"Search User\" disabled></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert\r\n            message=\"Please select user(s) and assign required permission(s) using Assign button.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.employeeData}\r\n          rowKey=\"unique_identifier\"\r\n        />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText\r\n}) => {\r\n  \r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test=\"createHotlineStepThree\" className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id={\"directoryName\"}\r\n            className=\"input-control textarea-input\"\r\n            placeholder=\"Directory Name\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n        {/* <DatePicker className=\"datepicker w-50\"\r\n          name=\"tDate\"\r\n          value={hotlineForm.tDate}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please select End Date date\",\r\n            },\r\n          ]}\r\n          //  onChange={(date, dateString) => handleDatePickerChange(date, dateString,'tDate')}\r\n          disabled /> */}\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                placeholder=\"Status\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">Active</Select.Option>\r\n                <Select.Option value=\"4\">Inactive</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                placeholder=\"Assigned to\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Add Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Assign Employee\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Create Directory\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst HotlineCreation = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: user.user_details.org_user_id,\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by: user.user_details.org_user_id,\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>Hotline Directory</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>Create Hotline Directory</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Create Hotline Directory Entries</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          stepOneHotLineInfo={stepOneHotLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          getIconText={getIconText}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = () => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  } \r\n  return (\r\n \r\n       <React.Fragment>\r\n      {!showResult === true ? <React.Fragment> <Row className=\"inner-header\">\r\n      <LoggedinHeader amORGUser/>\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n          <OrgSidebar amORGUser/>\r\n            <Content data-test=\"Directory\" className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Hotline Directory</h1>\r\n              </Row>\r\n              <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"c-vector-area\">\r\n                      <img\r\n                        src={CreateHotline}\r\n                        alt=\"Create Hotline\"\r\n                        className=\"pr-4\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"text-center pt-3\">\r\n                      Create Hotline entries and assign them to managers,\r\n                      <br />\r\n                      head of departments or leadership.\r\n                    </p>\r\n                    <Row className=\"d-flex justify-content-center\">\r\n                      <Divider className=\"mt-1\" />\r\n                    </Row>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex align-items-center justify-content-center\"\r\n                    >\r\n                       <Button data-test=\"createHotline\" onClick={showBtn} type=\"primary\">Create</Button>\r\n                      {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                    </Col>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n        </Row></React.Fragment> : <HotlineCreation />}\r\n\r\n</React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline(){\r\n    const {history}=this.props\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      }\r\n    };\r\n    axios.delete(BASE_URL+\"hotline/\" + this.props.hotlineId,options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Hotline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <p>Are you sure you want to delete this hotline?</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst content = (test)=>(\r\n  <div>\r\n    <ul>\r\n      <Link to={{pathname:'/orgcc/edithotline',state:test}}>\r\n      <li>\r\n      <a href=\"/orgcc/edithotline\">Edit</a> </li>\r\n        </Link>\r\n      <li>\r\n        <DeleteHotlineModal hotlineId={test.hotline_id} />\r\n      </li>\r\n    </ul>\r\n\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\n\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource(); \r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [ \r\n    { title: \"Name\", dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: \"Respond\",\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => ( \r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox value=\"reports\" checked={res} onChange={(e)=> handleCheck(record)} disabled></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return ( \r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n      setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        value={value}\r\n        options={searchData}\r\n        placeholder=\"Search Employee\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL+\"getHotlineAssignEmpl/\" +\r\n          this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => { \r\n    \r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL+\"hotlineAssignEmpl/\",\r\n        this.state.assignedEmp,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(el => el.user_id === record.user_id);\r\n    assignedHotLines[index] = {...assignedHotLines[index], can_respond: !record.can_respond};\r\n    this.setState({ assignedHotLines});\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex(el => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {...assignedEmp[aindex], can_respond: !record.can_respond};\r\n    this.setState({ assignedEmp});\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray = this.state.assignedEmp && this.state.assignedEmp.filter(function (element) {\r\n      return element.user_id !== value.user_id;\r\n    });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL+\"getHotlineAssignEmpl/\" + value.hotline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: user.user_details.org_user_id,\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Show</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Done\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <div>Employees with permissions to {this.state.hotLineName}</div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>\r\n              Reply to Messages, Add Notes, Status & Urgency level\r\n            </Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <GridPermission\r\n            data={this.state.assignedHotLines}\r\n            deleteRecord={this.deleteRecord}\r\n            handleCheck={this.handleCheck}\r\n          />\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>Hit enter to add</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      { title: \"Hotline Name\", dataIndex: \"name\", key: \"name\", width: \"22%\",\r\n      render: (name) => {\r\n        return {\r\n          children: name,\r\n          props: {\r\n            'data-title': 'Hotline Name',\r\n          },\r\n        };\r\n      }\r\n     },\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              'data-title': 'Start Date',\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              'data-title': 'End Date',\r\n            },\r\n          };\r\n        }\r\n      },\r\n      //{ title: \"Permissions\", dataIndex: \"\", key: \"\", width: \"20%\" },\r\n      {\r\n        title: \"Permissions\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return{\r\n          children:\r\n           <div>\r\n             <PermissionModal selectedRows={selectedRows} />\r\n           </div>,\r\n           props: {\r\n            'data-title': 'Permissions',\r\n           }\r\n        }\r\n      }\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) =>{\r\n          return{\r\n          children:\r\n          record.status_id === 5 ? (\r\n            <div className=\"primary-tag-rounded tag\">\r\n              <span className=\"circle mr-1\"></span>Active\r\n            </div>\r\n          ) : (\r\n            <div className=\"secondary-tag-rounded tag\">Inactive</div>\r\n          ),\r\n          props: {\r\n            'data-title': 'Status',\r\n           }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) =>\r\n        {\r\n          return{\r\n            children:<HotlinePopover data={record} />,\r\n            props:{\r\n              'data-title': 'Action',\r\n            }\r\n          }\r\n\r\n        }\r\n          \r\n        },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines.forEach((abc) => {\r\n      abc.start_date = moment(abc.start_date).utc().local().format(\"MM / DD / YYYY\")\r\n      // abc.start_date = abc.start_date.replaceAll(\"T00:00:00Z\", \"\");\r\n      abc.end_date = moment(abc.end_date).utc().local().format(\"MM / DD / YYYY\")\r\n     // abc.end_date = abc.end_date.replaceAll(\"T00:00:00Z\", \"\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].includes(searchKey);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser/>\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n            <OrgSidebar amORGUser/>\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Hotline Directory</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                          disabled={true}\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                       span={24} lg={6}\r\n                       className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create Hotline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"hotline_id\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, []);\r\n\r\n  return props.hotlinesdata.length > 0 ? (\r\n    <ShowAllHotlines hotlines={props.hotlinesdata} />\r\n  ) : (\r\n    <HotlineDirectory />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    console.log(\"this.state.collapsed\",this.state.collapsed)\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n              {React.createElement(\r\n            this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger d-lg-none d-block\",\r\n              onClick: this.toggle,\r\n            }\r\n\r\n          )}\r\n        <Sider className={!this.state.collapsed ? \"d-none d-lg-block w-md-100 sider-width\" : \" d-lg-block w-md-100 sider-width\"} trigger={null} collapsible collapsed={this.state.collapsed}>\r\n\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">Hotlines Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Hotline Reports\r\n            </Menu.Item> */}\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/OpenlineCreation\"> Openline Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Openline Reports\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Poll Results\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Broadcast Messages\r\n            </Menu.Item> */}\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Info\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { hotline } from \"../../assets/icons/Icon\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(BASE_URL + \"getUserallHotlines/\" + user.user_data.user_id, options)\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: \"Low\", value: 1 },\r\n    { label: \"Medium\", value: 2 },\r\n    { label: \"High\", value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: \"New\", value: 1 },\r\n    { label: \"Open\", value: 2 },\r\n    { label: \"Closed\", value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allCheckedOnes)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allCheckedOnes) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.loadFilteredConversations(\r\n        res.data,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    axios.get(baseUrl, options).then((res) => {\r\n      props.loadFilteredConversations(res.data, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>Filter</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Urgency level</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Status</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Hotline</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\n\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state={\r\n      visible: false, \r\n      noteText:\"\"\r\n    } \r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by: user.user_details.org_user_id,\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"addNotes/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({noteText:\"\"})\r\n          this.formRef.current.resetFields()\r\n          this.props.getNoteData(res.data.conversation_id);\r\n        }\r\n      });\r\n\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,noteText:\"\"\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n   handleChange = (e) => {\r\n    this.setState({  noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          Take a note..\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title=\"Take a Note\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Add\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n          <Form  className=\"input-md w-100\" name=\"validate-other\" ref={this.formRef}>\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder=\"Add note here...\"\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\"\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData:[],\r\n    conversationId:\"\"\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter} >\r\n        <span className=\"note-user\">{moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")} {item.first_name} {item.last_name}</span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n         {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     this.props.addedNote.map((item)=>(\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item) }\r\n        {this.state.expand && (\r\n          <a data-test=\"showLess\" className=\"d-flex justify-content-end\" onClick={this.typoClose}>\r\n            Show less\r\n          </a>\r\n        )}\r\n       </div>\r\n     ))\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddedNotes;","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Notes</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: \"Updated the Status to\" },\r\n  { id: 2, name: \"Updated the Urgency level to\" },\r\n  { id: 3, name: \"Added new Note\" },\r\n  { id: 4, name: \"View Hotline Converations\" },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Activity</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  // onScroll={handleScroll}\r\n                  // onScrollFrame={handleScrollFrame}\r\n                  // onScrollStart={handleScrollStart}\r\n                  // onScrollStop={handleScrollStop}\r\n                  // onUpdate={handleUpdate}\r\n                  // renderView={renderView}\r\n                  // renderTrackHorizontal={renderTrackHorizontal}\r\n                  // renderTrackVertical={renderTrackVertical}\r\n                  // renderThumbHorizontal={renderThumbHorizontal}\r\n                  // renderThumbVertical={renderThumbVertical}\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on).utc().local().format(\r\n                              \"MM:DD:YY • hh:mm A•\"\r\n                            )}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Assigned To</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\n\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n        document.getElementsByClassName(\"hotline_message\").length - 1\r\n      ];\r\n      if (lastMessage) lastMessage.scrollIntoView(false, { block: \"end\" });\r\n    }\r\n  }, [convoMessages]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: user.user_details.org_user_id,\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if (e.altKey && e.keyCode === 13) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: user.user_details.org_user_id,\r\n        hotline_id: conversation.hotline.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: user.user_details.org_user_id,\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (\r\n              res.data.status.status_id === 1 ||\r\n              res.data.status.status_id === 3\r\n            ) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if(isMobile){\r\n      sethideDiv(true)\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if(isMobile){\r\n      sethideDiv(true)\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if(isMobile){\r\n      sethideDiv(true)\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline.name.includes(\"</mark>\")) {\r\n      conversation.hotline.name = conversation.hotline.name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline.name = conversation.hotline.name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline.name = conversation.hotline.name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline.name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Urgency level</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Status</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ?( hideDiv ? \"w-75 d-none\": \"w-75\" )\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>Last Read</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg hotline_message mb-3\"\r\n                            : \"incoming-msg hotline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD::YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.user.first_name} ${msg.user.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Hotline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Typography, Badge, Tag } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport Messages from \"./Messages\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\n\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Paragraph } = Typography;\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst HotlineMessages = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(async () => {\r\n    getConversations();\r\n    connect();\r\n    unSetFilters();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var element = document.getElementsByClassName(\"inbox-messages\");\r\n    if (element && element[0]) {\r\n      element[0].scrollIntoView(false);\r\n    }\r\n  }, [initialConv]);\r\n\r\n  // CURRENTLY NOT IN USE.\r\n  /* useEffect(() => {\r\n     handleOverallCount();\r\n   }, [conversations, unreadCount]); */\r\n\r\n  useEffect(() => {\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    increaseOverallCountDuringFilters(newState, allConversations);\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    webSocket.current = new WebSocket(\r\n      \"ws://10.0.6.10:8000/ws/hotlineMessages/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      socketMethod(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const socketMethod = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (newConvo.accessed_users.includes(user.user_data.user_id)) {\r\n      setConversations((conversations) => {\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        var data = {\r\n          conversation_id: newConvo.conversation_id,\r\n          user_id: user.user_details.org_user_id,\r\n        };\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        // let hasMessagesWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline.name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n          /* let convoMessages = [];\r\n          const token = authHeader();\r\n          const options = {\r\n            headers: {\r\n              Authorization: token,\r\n              Accept: \"application/json, text/plain\",\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n          };\r\n          axios\r\n            .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n            .then(async (res) => {\r\n              convoMessages = res.data.map((value) => value.message);\r\n            });\r\n          hasMessagesWithSearchedWord = convoMessages.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          ); */\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((x) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !== user.user_data.user_id\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (x.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: x.responder_conversation_name,\r\n              };\r\n            }\r\n            if (x.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: x.conversation_id,\r\n              };\r\n            }\r\n            if (x.hotline.name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: x.hotline.name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_count: x.unread_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by === user.user_data.user_id\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (x.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: x.responder_conversation_name,\r\n              };\r\n            }\r\n            if (x.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: x.conversation_id,\r\n              };\r\n            }\r\n            if (x.hotline.name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: x.hotline.name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return x;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          increaseOverallCount(newConvo, conversationsToDisplay);\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(\r\n            newConvo.urgency_level.urgency_level_id.toString()\r\n          )\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // append the new incoming conversation at the top of the existing list of conversations.\r\n  const displayNewConvAtTop = (\r\n    updatedConversations,\r\n    newConvo,\r\n    updatedNewConvo\r\n  ) => {\r\n    let index = 0;\r\n    // create a replica of updatedConversations\r\n    const dummyArray = updatedConversations;\r\n    // return the index of the new incoming conversation from the list of all conversations.\r\n    updatedConversations.map((value) => {\r\n      if (\r\n        value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n      ) {\r\n        return (index = updatedConversations.indexOf(value));\r\n      }\r\n    });\r\n    // remove that new conversation from the dummy list temporarily.\r\n    dummyArray.splice(index, 1);\r\n    // push that removed incoming conversation on top of the list.\r\n    const finalConversations = [updatedNewConvo, ...dummyArray];\r\n    return finalConversations;\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n  const increaseOverallCount = (newConvo, conversationsToDisplay) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = conversationsToDisplay.filter(\r\n      (filter) =>\r\n        filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvo?.conversation_id &&\r\n        newConvo.created_by !== user.user_data.user_id\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = conversationsToDisplay.filter(\r\n      (ele) =>\r\n        ele?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n    );\r\n    for (var i = 0; i < newConvFromDiffUser.length; i++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[i]?.conversation_id\r\n            .toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0].unread_count === 0\r\n      ) {\r\n        setUnreadCount((unreadCount) => unreadCount + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n  const increaseOverallCountDuringFilters = (newState, allConversations) => {\r\n    if (\r\n      urgencyFilterData.length > 0 ||\r\n      statusFilterData.length > 0 ||\r\n      hotlineFilterData.length > 0 ||\r\n      searchString.length > 0\r\n    ) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      // return only that new incoming message which comes from a user other than logged in user.\r\n      const newConvFromDiffUser = allConversations?.filter(\r\n        (filter) =>\r\n          filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState?.conversation_id &&\r\n          newState.created_by !== user.user_data.user_id\r\n      );\r\n      // return the new incoming message irrespective of any user.\r\n      const incomingConversation = allConversations?.filter(\r\n        (ele) =>\r\n          ele?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id\r\n      );\r\n      for (var i = 0; i < newConvFromDiffUser.length; i++) {\r\n        if (\r\n          incomingConversation[0]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newConvFromDiffUser[i]?.conversation_id\r\n              ?.toString()\r\n              .replace(/(<([^>]+)>)/gi, \"\") &&\r\n          incomingConversation[0]?.unread_count === 0\r\n        ) {\r\n          setUnreadCount((unreadCount) => unreadCount + 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // remove filters when component loads.\r\n  const unSetFilters = () => {\r\n    AppStorage.remove(\"urgencyLevels\");\r\n    AppStorage.remove(\"status\");\r\n    AppStorage.remove(\"hotline\");\r\n    AppStorage.remove(\"searchBy\");\r\n  };\r\n\r\n  // return those conversations which have matched filters or search.\r\n  const filterSocket = (\r\n    totalFiltersApplied,\r\n    newConvo,\r\n    conversations,\r\n    conversationIds\r\n  ) => {\r\n    let totalConversations = [];\r\n    if (\r\n      (totalFiltersApplied.status?.includes(\r\n        newConvo.status.status_id.toString()\r\n      ) &&\r\n        totalFiltersApplied.urgency?.includes(\r\n          newConvo.urgency_level.urgency_level_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.hotline?.includes(\r\n          newConvo.hotline.hotline_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.searchBy?.length > 0 &&\r\n        newConvo.conversation_id\r\n          .toLowerCase()\r\n          .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n      newConvo.responder_conversation_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.hotline.name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.message\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n    ) {\r\n      let conversation_id = newConvo.conversation_id.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = newConvo.hotline.name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = newConvo.message.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      const updatedConversation = {\r\n        ...newConvo,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: newConvo.hotline.hotline_id,\r\n        },\r\n      };\r\n      if (\r\n        !conversationIds.includes(\r\n          updatedConversation.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n        )\r\n      ) {\r\n        totalConversations = [...conversations, updatedConversation];\r\n      } else {\r\n        totalConversations = conversations;\r\n      }\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n    return totalConversations;\r\n  };\r\n\r\n  // set state values of applied filters.\r\n  function setAppliedFilters(urgencyLevels, status, hotline) {\r\n    setUrgencyFilterData(urgencyLevels);\r\n    setStatusFilterData(status);\r\n    setHotlineFilterData(hotline);\r\n    AppStorage.set(\r\n      \"urgencyLevels\",\r\n      Object.values(urgencyLevels)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"status\",\r\n      Object.values(status)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(hotline)?.map((data) => data.value)\r\n    );\r\n  }\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    setAppliedFilters(selectedUrgency, selectedStatus, selectedHotline);\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          setLoader(false);\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((x) =>\r\n        x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_count: 0 }\r\n          : x\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level.urgency_level_id);\r\n    setStatus(conversation.status.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var i = 0; i < conversations.length - 1; i++) {\r\n      if (\r\n        conversations[i].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_count: conversations[i].unread_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_count &&\r\n      receivedConversation.unread_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  // CURRENTLY NOT IN USE.\r\n  // set an overall count of unread conversations depending on the filters and search applied.\r\n  /* const handleOverallCount = () => {\r\n    const unreadConversations = conversations.filter(\r\n      (value) => value.unread_count > 0\r\n    );\r\n    setUnreadCount(unreadConversations.length);\r\n  }; */\r\n\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: user.user_details.org_user_id,\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          getConversations();\r\n          setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: user.user_details.org_user_id,\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          getConversations();\r\n          setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  // highlight the text found during search.\r\n  const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.hotline.name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let hotlineName = item.hotline.name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          hotline: {\r\n            name: hotlineName,\r\n            hotline_id: item.hotline.hotline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    const statusFil = statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(urgencyFilterData.length > 0 && {\r\n        urgency_level_id: urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(hotlineFilterData.length > 0 && {\r\n        hotline_id: hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allCheckedOnes)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allCheckedOnes) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      setSearchString(str);\r\n      AppStorage.set(\"searchBy\", str);\r\n      let filteredData = [];\r\n      if (str.length > 0) {\r\n        filteredData = highlightText(res.data, str);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  Hotline Messages\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <h5>LOADING!</h5>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <div className=\"mid-content p-0\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className={\r\n                        showdiv\r\n                          ? \"message-section py-4 d-none\"\r\n                          : \"message-section py-4\"\r\n                      }\r\n                    >\r\n                      <Col\r\n                        span={24}\r\n                        className=\" d-flex justify-content-between px-3\"\r\n                      >\r\n                        <h6>\r\n                          Messages{\" \"}\r\n                          <Badge className=\"pl-1\" count={unreadCount} />\r\n                        </h6>\r\n\r\n                        <FilterPopover\r\n                          searchString={searchString}\r\n                          removeFilter={removeFilter}\r\n                          loadFilteredConversations={loadFilteredConversations}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col span={24} className=\"mt-4 px-3 d-block\">\r\n                        <Scrollbars\r\n                          autoHeight\r\n                          autoHeightMin={0}\r\n                          autoHeightMax={150}\r\n                          thumbMinSize={30}\r\n                          universal={true}\r\n                        >\r\n                          <>\r\n                            {urgencyFilterData.map((data, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  key={index}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyLevel\",\r\n                                      data.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                >\r\n                                  Urgency: <span>{data.label}</span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                            {hotlineFilterData.map((hotline, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyHotline\",\r\n                                      hotline.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                  key={index}\r\n                                >\r\n                                  Hotline: <span>{hotline.label} </span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                            {statusFilterData.map((status, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyStatus\",\r\n                                      status.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                  key={index}\r\n                                >\r\n                                  Status: <span>{status.label} </span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                          </>\r\n                        </Scrollbars>\r\n                      </Col>\r\n                      <Col span={24} className=\"search-box mt-3 px-3\">\r\n                        <Form form={form}>\r\n                          <Form.Item name=\"search\" id=\"search\">\r\n                            <Search\r\n                              name=\"search\"\r\n                              id=\"search\"\r\n                              placeholder=\"Search\"\r\n                              onChange={(e) => onSearch(e.target.value)}\r\n                              onSearch={onSearch}\r\n                              autoComplete=\"off\"\r\n                            />\r\n                          </Form.Item>\r\n                        </Form>\r\n                      </Col>\r\n                      <Scrollbars\r\n                        autoHeight\r\n                        autoHeightMin={0}\r\n                        autoHeightMax={450}\r\n                        thumbMinSize={30}\r\n                        universal={true}\r\n                      >\r\n                        <Col span={24} className=\"inbox-messages\">\r\n                          {conversations.length > 0 ? (\r\n                            conversations.map((item) => {\r\n                              return (\r\n                                <div\r\n                                  className={\r\n                                    conversation.conversation_id\r\n                                      ?.toString()\r\n                                      .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                                    item.conversation_id\r\n                                      ?.toString()\r\n                                      .replace(/(<([^>]+)>)/gi, \"\")\r\n                                      ? \"msg-wrapper active\"\r\n                                      : \"msg-wrapper\"\r\n                                  }\r\n                                  onClick={() => onConversationClick(item)}\r\n                                >\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <p\r\n                                      ellipsis\r\n                                      style={{ fontWeight: \"bold\" }}\r\n                                      className=\"w-75 pr-2 mb-1\"\r\n                                      dangerouslySetInnerHTML={createMarkup(\r\n                                        item.responder_conversation_name\r\n                                      )}\r\n                                    />\r\n                                    <span className=\"small\">\r\n                                      {\" \"}\r\n                                      {moment(item.created_on).isSame(\r\n                                        moment(),\r\n                                        \"day\"\r\n                                      )\r\n                                        ? moment(item.created_on)\r\n                                            .utc()\r\n                                            .local()\r\n                                            .format(\"hh:mm\")\r\n                                        : moment(item.created_on)\r\n                                            .utc()\r\n                                            .local()\r\n                                            .format(\"MM:DD:YY\")}\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <Paragraph\r\n                                      ellipsis\r\n                                      className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                                    >\r\n                                      <span\r\n                                        className=\"ellipsisText\"\r\n                                        dangerouslySetInnerHTML={createMarkup(\r\n                                          item.hotline.name\r\n                                        )}\r\n                                      />\r\n                                      &nbsp; |&nbsp;\r\n                                      <span\r\n                                        className=\"ellipsisText\"\r\n                                        dangerouslySetInnerHTML={createMarkup(\r\n                                          item.conversation_id\r\n                                        )}\r\n                                      />\r\n                                    </Paragraph>\r\n                                    <span className=\"small\">\r\n                                      {\" \"}\r\n                                      <Badge count={item.unread_count} />\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          ) : (\r\n                            <div className=\"msg-wrapper\">No messages found</div>\r\n                          )}\r\n                        </Col>\r\n                      </Scrollbars>\r\n                    </Col>\r\n                    {conversation ? (\r\n                      <Messages\r\n                        conversation={conversation}\r\n                        urgencyLevel={urgencyLevel}\r\n                        status={status}\r\n                        onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n                        onChangeStatus={onChangeStatus}\r\n                        searchString={searchString}\r\n                        newState={newState}\r\n                        socket={socket}\r\n                        setCounter={setCounter}\r\n                        data-test=\"Messages\"\r\n                        chatdiv={chatdiv}\r\n                      />\r\n                    ) : (\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                      >\r\n                        <Row className=\"justify-content-center my-3\">\r\n                          <img\r\n                            src={NoHotlines}\r\n                            alt=\"No Hotlines Selected\"\r\n                            style={{ opacity: \"0.8\" }}\r\n                          />\r\n                        </Row>\r\n                        <h5>No Hotline Selected</h5>\r\n                        <small>Select a hotline to view</small>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </div>\r\n              ) : (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <img\r\n                      src={CreateHotline}\r\n                      alt=\"No Hotlines Selected\"\r\n                      style={{ opacity: \"0.8\" }}\r\n                    />\r\n                  </Row>\r\n                  <h5>\r\n                    No conversations are initiated for the hotlines assigned to\r\n                    you\r\n                  </h5>\r\n                  {/* <small>Select a hotline to view</small> */}\r\n                </Col>\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from '../utils/AppStorage';\r\n\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n  const userType = AppStorage.get(\"userType\");\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n         {userType === 'AM WEB' ? <LoggedinHeader amWEBUser/> : userType === 'AM CC' ? <LoggedinHeader amCCUser/> : userType === 'Org Control Center' ? <LoggedinHeader amORGUser/> : null} \r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === 'AM WEB' ? (\r\n                <AmWebSidebar />\r\n              ) : userType === 'Org CC' ? (\r\n                <OrgSidebar />\r\n              ) : userType === 'AM CC' ? (\r\n                <AccSidebar />\r\n              ): null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">You don't have access rights! Please contact your administrator.</h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n\r\n  }\r\n};\r\n\r\nexport default PermissionDenied;","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Divider,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n            <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Organization Details</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">Organization Details </h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3\"\r\n                        >\r\n                          <span className=\"icon icon-pencil\" />\r\n                          <span className=\"pl-2 d-none d-block-md\">Edit Details</span>\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Woices</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Organization Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"organization name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Organization Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"organization name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <Row className=\"w-100\">\r\n                      <Col span={24} md={12}>\r\n                        <h6 className=\"py-3 mb-0\">Seeded Users Details </h6>\r\n                      </Col>\r\n                      <Col span={24} md={12} className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\">\r\n                          <Button className=\"mr-4\" type=\"secondary\">\r\n                            Add Seeded User\r\n                          </Button>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3\"\r\n                          >\r\n                            <span className=\"icon icon-pencil\" />\r\n                            <span className=\"pl-2 d-none d-block-md\">Edit Details</span>\r\n                          </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                    <Avatar>G</Avatar>\r\n                    <span className=\"md-name\">Gunjan Siddha</span>\r\n                  </div>\r\n                  <Col span={24}>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                      <Col span={24} md={8} className=\"gutter-row\">\r\n                        <FloatLabel label=\"User Name\">\r\n                          <Form.Item\r\n                            name=\"uname\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Please enter user name \",\r\n                              },\r\n                            ]}\r\n                            className=\"required\"\r\n                          >\r\n                            <Input className=\"input-control\" htmlFor=\"uname\" />\r\n                          </Form.Item>\r\n                        </FloatLabel>\r\n                      </Col>\r\n                      <Col span={24} md={8} className=\"gutter-row\">\r\n                        <FloatLabel label=\"User Id\">\r\n                          <Form.Item\r\n                            name=\"uid\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Please enter user id \",\r\n                              },\r\n                            ]}\r\n                            className=\"required\"\r\n                          >\r\n                            <Input className=\"input-control\" htmlFor=\"uid\" />\r\n                          </Form.Item>\r\n                        </FloatLabel>\r\n                      </Col>\r\n                      <Col span={24} md={8} className=\"gutter-row\">\r\n                        <FloatLabel label=\"Temporary Password\">\r\n                          <Form.Item\r\n                            name=\"temppassword\"\r\n                            className=\"pwd\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message:\r\n                                  \"Please enter your temporary password!\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input.Password\r\n                              className=\"input-control\"\r\n                              htmlFor=\"temppassword\"\r\n                              className=\"required\"\r\n                            />\r\n                          </Form.Item>\r\n                        </FloatLabel>\r\n                      </Col>\r\n                      <Col span={24} md={8} className=\"gutter-row\">\r\n                        <FloatLabel label=\"Email Id\">\r\n                          <Form.Item\r\n                            name=\"emailid\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Please enter email id\",\r\n                              },\r\n                            ]}\r\n                            className=\"required\"\r\n                          >\r\n                            <Input\r\n                              className=\"input-control\"\r\n                              htmlFor=\"emailid\"\r\n                            />\r\n                          </Form.Item>\r\n                        </FloatLabel>\r\n                      </Col>\r\n                      <Col span={24} md={8} className=\"gutter-row\">\r\n                        <FloatLabel label=\"Select Date\">\r\n                          <Form.Item\r\n                            className=\"input-control datepicker-wrapper\"\r\n                            name=\"date\"\r\n                          >\r\n                            <RangePicker\r\n                              className=\"new w-100\"\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: \"Please enter date\",\r\n                                },\r\n                              ]}\r\n                              className=\"required\"\r\n                            />\r\n                          </Form.Item>\r\n                        </FloatLabel>\r\n                      </Col>\r\n                      <Col span={24} md={8} className=\"gutter-row\">\r\n                        <FloatLabel label=\"Status\">\r\n                          <Form.Item\r\n                            name=\"status\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Please enter status\",\r\n                              },\r\n                            ]}\r\n                            className=\"required\"\r\n                          >\r\n                            <Input className=\"input-control\" htmlFor=\"status\" />\r\n                          </Form.Item>\r\n                        </FloatLabel>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>Reset password for this user</span>\r\n        </Button>\r\n        <Modal\r\n          title=\"Reset Password\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Reset and Invite\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                Reset password for{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label=\"New Password\" value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your new password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label=\"Confirm Password\" value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your confirmed password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if(!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, []);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var re = /^\\d{10}$/;\r\n    if (!re.test(e.target.value)) {\r\n      setMobileValidationError(true);\r\n    } else {\r\n      setMobileValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n    };\r\n    axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    });\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email_from: seededUserEmail,\r\n      email: seededUserDetails.email,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showError(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {});\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Organization</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">Edit Organization</h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3\"\r\n                          onClick={onDelete}\r\n                        >\r\n                          <span className=\"icon icon-delete\" />\r\n                          <span className=\"d-block-md\">Delete</span>\r\n                        </Button>\r\n                        {deleteClick ? (\r\n                          <DeleteModal\r\n                            org=\"this organization\"\r\n                            handleDelete={handleDeleteOrganization}\r\n                            deleteOrg\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">{organizationName}</span>\r\n                    </div>\r\n                    <Form className=\"input-md floating-label w-100\" form={form}>\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Name\"\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  htmlFor=\"name\"\r\n                                  autoComplete=\"off\"\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Id\"\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  htmlFor=\"identifier\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  autoComplete=\"off\"\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Status\"\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-50\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">Active</Option>\r\n                                    <Option value=\"0\">Inactive</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Date\" value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  onChange={(date) =>\r\n                                    handleOrganizationDatePickerChange(\r\n                                      date,\r\n                                      \"date1\"\r\n                                    )\r\n                                  }\r\n                                  disabledDate={disabledDate}\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            onClick={onOrgEditSubmit}\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                          <Button\r\n                            className=\"ml-4\"\r\n                            type=\"secondary\"\r\n                            onClick={cancelEditing}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <h6 className=\"py-3 mb-0\">Edit Seeded Users </h6>\r\n                  </Col>\r\n                  {seededUsers.length > 0 ? (\r\n                    <AssignedUsers\r\n                      seededUsers={seededUsers}\r\n                      handleEditUser={handleEditSeededUser}\r\n                      handleDelete={handleDeleteSeededUser}\r\n                      viaEdit\r\n                      seededUser\r\n                    />\r\n                  ) : (\r\n                    <Col span={24} lg={18}>\r\n                      <Row className=\"justify-content-center\">\r\n                        No Seeded User\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                  {editVisible ? (\r\n                    <Modal\r\n                      visible={editVisible}\r\n                      onOk={handleEditOk}\r\n                      onCancel={handleEditCancel}\r\n                      centered\r\n                      width={900}\r\n                      okButtonProps={{\r\n                        children: \"Custom OK\",\r\n                      }}\r\n                      cancelButtonProps={{\r\n                        children: \"Custom cancel\",\r\n                      }}\r\n                      okText=\"Update\"\r\n                      cancelText=\"Cancel\"\r\n                    >\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                      >\r\n                        <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                          <Avatar>{seededUserName.charAt(0)}</Avatar>\r\n                          <span className=\"md-name\">{seededUserName}</span>\r\n                        </div>\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message=\"Please fill the fields marked with asterisk(*)\"\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"First Name\"\r\n                                value={seededUserDetails.firstName}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"firstName\"\r\n                                  className=\"required\"\r\n                                >\r\n                                  <Input\r\n                                    id=\"firstName\"\r\n                                    className=\"input-control\"\r\n                                    defaultValue={seededUserDetails.firstName}\r\n                                    htmlFor=\"firstName\"\r\n                                    value={seededUserDetails.firstName}\r\n                                    onChange={(e) =>\r\n                                      handleSeededUserOnChange(e)\r\n                                    }\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Last Name\"\r\n                                value={seededUserDetails.lastName}\r\n                              >\r\n                                <Form.Item name=\"lastName\" className=\"required\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"lastName\"\r\n                                    htmlFor=\"lastName\"\r\n                                    className=\"required\"\r\n                                    defaultValue={seededUserDetails.lastName}\r\n                                    value={seededUserDetails.lastName}\r\n                                    onChange={(e) =>\r\n                                      handleSeededUserOnChange(e)\r\n                                    }\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Email Id\"\r\n                                value={seededUserDetails.email}\r\n                              >\r\n                                <Form.Item name=\"email\" className=\"required\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"email\"\r\n                                    htmlFor=\"email\"\r\n                                    className=\"required\"\r\n                                    defaultValue={seededUserDetails.email}\r\n                                    value={seededUserDetails.email}\r\n                                    onChange={(e) =>\r\n                                      handleSeededUserOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => validateEmailAddress(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {emailValidationError && (\r\n                                    <Alert\r\n                                      message=\"Please enter a valid email address.\"\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Date\" value=\"date2\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"new w-100\"\r\n                                    name=\"date2\"\r\n                                    className=\"required\"\r\n                                    value={seededUserDetails.date2}\r\n                                    onChange={(date) =>\r\n                                      handleSeededUserDatePickerChange(\r\n                                        date,\r\n                                        \"date2\"\r\n                                      )\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Mobile\"\r\n                                value={seededUserDetails.mobile}\r\n                              >\r\n                                <Form.Item name=\"mobile\" className=\"required\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"mobile\"\r\n                                    htmlFor=\"mobile\"\r\n                                    className=\"required\"\r\n                                    defaultValue={seededUserDetails.mobile}\r\n                                    value={seededUserDetails.mobile}\r\n                                    onChange={(e) =>\r\n                                      handleSeededUserOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => validateMobile(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {mobileValidationError && (\r\n                                    <Alert\r\n                                      message=\"Please enter a valid mobile number.\"\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Status\"\r\n                                value={seededUserDetails.status2}\r\n                              >\r\n                                <Form.Item className=\"required\" name=\"status2\">\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-50\"\r\n                                      value={seededUserDetails.status2}\r\n                                      htmlFor=\"status2\"\r\n                                      className=\"required\"\r\n                                      onSelect={(value) =>\r\n                                        handleSeededUserOnSelect(\r\n                                          value,\r\n                                          \"status2\"\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <Option value=\"1\">Active</Option>\r\n                                      <Option value=\"0\">Inactive</Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Form>\r\n                      <ResetPwdModal\r\n                        user={seededUserDetails.firstName}\r\n                        handleResetPasswordOk={handleResetPasswordOk}\r\n                        handleResetPasswordCancel={handleResetPasswordCancel}\r\n                      />\r\n                    </Modal>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert, Row, Layout } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = ({\r\n    props\r\n}) => {\r\n    const [hotLineData, sethotLineData] = useState({\r\n        end_date: \"\",help_text: \"\",\r\n        hotline_icon_id: \"\", hotline_id: \"\",\r\n        name: \"\",start_date: \"\",status_id: \"\"\r\n    });\r\n\r\n    const [iconHtml, seticonHtml] = useState('');\r\n    const [error, showError] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const [disabledbtn, setdisabledbtn] = useState(true);\r\n    const [form] = Form.useForm();\r\n    const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n    let location = useLocation();\r\n\r\n\r\n    const addIcon = (values, id) => {\r\n        sethotLineData({\r\n          ...hotLineData,\r\n          hotline_icon_id: id,\r\n        });\r\n        seticonHtml(values);\r\n    };\r\n\r\n    const getIconText = (id) => {\r\n        switch (id) {\r\n            case \"1\":\r\n                return \"Sexual Harassment\";\r\n            case \"2\":\r\n                return \"Violence\";\r\n            case \"3\":\r\n                return \"Racism\";\r\n            case \"4\":\r\n                return \"Cyber Bullying\";\r\n            case \"5\":\r\n                return \"Fight\";\r\n            case \"6\":\r\n                return \"Discrimination\";\r\n            case \"7\":\r\n                return \"Slap\";\r\n            default:\r\n                return \"\";\r\n        }\r\n   };\r\n\r\n   const setIcon=(id)=>{\r\n    switch (id) {\r\n        case \"1\":\r\n            return '<span className=\"icon icon-sexual-harassment-1 ant-tooltip-open\" />';\r\n        case \"2\":\r\n            return <span className=\"icon icon-violence ant-tooltip-open\" />;\r\n        case \"3\":\r\n            return <span className=\"icon icon-violence ant-tooltip-open\" />;\r\n        case \"4\":\r\n            return <span className=\"icon icon-violence ant-tooltip-open\" />;\r\n        case \"5\":\r\n            return <span className=\"icon icon-violence ant-tooltip-open\" />;\r\n        case \"6\":\r\n            return <span className=\"icon icon-violence ant-tooltip-open\" />;\r\n        case \"7\":\r\n            return <span className=\"icon icon-violence\" />;\r\n        default:\r\n            return \"\";\r\n    }\r\n   }\r\n\r\n\r\n    useEffect(() => {\r\n        CheckHotlineName();\r\n        const sDate = moment(location.state.end_date).format('YYYY-MM-DD');\r\n        const eDate = moment(location.state.start_date).format('YYYY-MM-DD');\r\n        let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")]\r\n        sethotLineData({\r\n            end_date: \"\",\r\n            help_text: location.state.help_text,\r\n            hotline_icon_id: location.state.hotline_icon_id,\r\n            hotline_id: location.state.hotline_id,\r\n            name: location.state.name,\r\n            start_date: dates,\r\n            status_id: location.state.status_id.toString()\r\n        })\r\n        const test=setIcon(location.state.hotline_icon_id.toString());\r\n        seticonHtml(test);\r\n    }, [])\r\n\r\n\r\n    const handleStepOneOnChange = (e) => {\r\n        sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n    };\r\n\r\n    const handleStepOneDatePickerChange = (date, name) => {\r\n        sethotLineData({ ...hotLineData, [name]: date });\r\n    };\r\n\r\n    const editHotline = (e) => {\r\n        e.preventDefault();\r\n        const user = JSON.parse(AppStorage.get(\"user\"));\r\n        const data = {\r\n            end_date: moment(hotLineData.start_date[0]).format('DD-MM-YYYY'),\r\n            help_text: hotLineData.help_text,\r\n            hotline_icon_id: hotLineData.hotline_icon_id,\r\n            hotline_id: hotLineData.hotline_id,\r\n            name: hotLineData.name,\r\n            start_date: moment(hotLineData.start_date[0]).format('DD-MM-YYYY'),\r\n            status_id: parseInt(hotLineData.status_id),\r\n            updated_by: user.user_details.org_user_id\r\n        };\r\n        saveHotLine(data);\r\n    };\r\n\r\n    const saveHotLine = (data) => {\r\n        const token = authHeader();\r\n        let hotLineId = hotLineData.hotline_id;\r\n        delete hotLineData.hotline_id;\r\n        const options = {\r\n            headers: {\r\n                Authorization: token,\r\n                Accept: \"application/json, text/plain\",\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n        };\r\n        axios\r\n            .put(BASE_URL + \"hotline/\" + hotLineId, data, options)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    history.push(\"/orgcc/hotlinedirectory\");\r\n\r\n                }\r\n            });\r\n    }\r\n\r\n    const disabledDate = (current) => {\r\n        return current && current < moment().startOf(\"day\");\r\n    };\r\n\r\n    const CheckHotlineName = (e) => {\r\n        const token = authHeader();\r\n        const options = {\r\n            headers: {\r\n                Authorization: token,\r\n                Accept: \"application/json, text/plain\",\r\n                \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n        };\r\n\r\n        axios.post(   BASE_URL + \"checkhotline/\",{ hotline_name: \"test3\" },options)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    sethotlineErrorUpdated(res.data[0]);\r\n                }\r\n            });\r\n    };\r\n\r\n    const { RangePicker } = DatePicker;\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"inner-header\">\r\n                <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n                <Layout>\r\n                    <Layout>\r\n                        <OrgSidebar amORGUser />\r\n                        <Content className=\"\">\r\n                            <Row className=\"py-3\">\r\n                                <h1>Edit Hotline</h1>\r\n                            </Row>\r\n                            <div className=\"mid-content mt-4\">\r\n                             <Form data-test='createHotlineStepOne' className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n                                    {error && (\r\n                                        <Form.Item>\r\n                                            <Alert\r\n                                                message=\"Please fill the fields marked with asterisk(*)\"\r\n                                                type=\"error\"\r\n                                                showIcon\r\n                                            ></Alert>\r\n                                        </Form.Item>\r\n                                    )}\r\n\r\n                                    <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"directoryName\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"Please enter directory name\",\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <TextArea\r\n                                            showCount\r\n                                            maxLength={80}\r\n                                            value={hotLineData.name}\r\n                                            onChange={(e) => handleStepOneOnChange(e)}\r\n                                            id={\"name\"}\r\n                                            className=\"input-control textarea-input\"\r\n                                            placeholder=\"Directory Name\"\r\n                                            htmlFor=\"directoryName\"\r\n                                        />\r\n                                        {hotlineErrorUpdated == \"status: false\" && (\r\n                                            <CheckCircleTwoTone className=\"successCheck\" twoToneColor=\"#52c41a\" />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"description\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"Please enter description\",\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <>\r\n                                            <TextArea\r\n                                                className=\"input-control textarea-input\"\r\n                                                value={hotLineData.help_text}\r\n                                                onChange={(e) => handleStepOneOnChange(e)}\r\n                                                id={\"help_text\"}\r\n                                                placeholder=\"Description\"\r\n                                                htmlFor=\"description\"\r\n                                            />\r\n                                        </>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item className=\"input-control datepicker-wrapper\">\r\n                                        <RangePicker\r\n                                            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                                            name=\"start_date\"\r\n                                            value={hotLineData.start_date}\r\n                                            onChange={(date) => handleStepOneDatePickerChange(date, \"start_date\")}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: \"Please select start date\",\r\n                                                },\r\n                                            ]}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"status\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"Please select status\",\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <>\r\n                                            <Select\r\n                                                placeholder=\"Status\"\r\n                                                className=\"input-control w-100 w-lg-50\"\r\n                                                value={hotLineData.status_id}\r\n                                                htmlFor=\"status\"\r\n                                                onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n                                            >\r\n                                                <Select.Option value=\"\" disabled>\r\n                                                    Status\r\n                                                </Select.Option>\r\n                                                <Select.Option value=\"5\">Active</Select.Option>\r\n                                                <Select.Option value=\"4\">Inactive</Select.Option>\r\n                                            </Select>\r\n                                        </>\r\n                                    </Form.Item>\r\n                                    <Form.Item className=\"\">\r\n                                        <Form.Item\r\n                                            className=\"upload-control\"\r\n                                            name=\"upload\"\r\n                                            valuePropName=\"fileList\"\r\n                                        >\r\n                                            <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n                                            {getIconText(hotLineData.hotline_icon_id.toString()) && (\r\n                                                <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                                                    <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                                                        <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                                            <span className=\"d-inline-flex align-items-center\">\r\n                                                                <a className=\"ant-upload-list-item-thumbnail\">\r\n                                                                    {ReactHtmlParser(iconHtml)}\r\n                                                                </a>\r\n\r\n                                                                <span\r\n                                                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                                                    title={getIconText(hotLineData.hotline_icon_id.toString())}\r\n                                                                >\r\n                                                                    {getIconText(hotLineData.hotline_icon_id.toString())}\r\n                                                                </span>\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </Form.Item>\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" onClick={editHotline} data-test=\"stepOneNext\">\r\n                                            Submit\r\n                                    </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default EditHotLine;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert, Upload } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport {CheckCircleTwoTone, UploadOutlined } from '@ant-design/icons';\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\n\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenHotlineStepOne = ({\r\n  next,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"file\", stepOneOpenLineInfo.file)\r\n    if (\r\n        stepOneOpenLineInfo.openelineName &&\r\n        stepOneOpenLineInfo.description &&\r\n        stepOneOpenLineInfo.file &&\r\n        stepOneOpenLineInfo.status &&\r\n        stepOneOpenLineInfo.sDate\r\n    ) {\r\n      showError(false);\r\n      setdisabledbtn(false);\r\n      next();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL+\"checkhotline/\",\r\n        { hotline_name: stepOneOpenLineInfo.openelineName},\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          sethotlineErrorUpdated(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test='createHotlineStepOne' className=\"input-md w-md-100 w-75 floating-label\" name=\"validate_other\" form={form}>\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      \r\n      <FloatLabel label=\"Openeline Name\">\r\n      <Form.Item\r\n        className=\"required\"\r\n        name=\"openelineName\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter directory name\",\r\n          },\r\n        ]}\r\n      >\r\n        <TextArea\r\n          showCount\r\n          maxLength={80}\r\n          value={stepOneOpenLineInfo.openelineName}\r\n          onChange={(e) => handleStepOneOnChange(e)}\r\n          onBlur={(e) => CheckHotlineName(e)}\r\n          id={\"openelineName\"}\r\n          className=\"input-control textarea-input\"\r\n          htmlFor=\"openelineName\"\r\n        />\r\n        {hotlineErrorUpdated == \"status: false\" && (\r\n          <CheckCircleTwoTone className=\"successCheck\" twoToneColor=\"#52c41a\" />\r\n        )}\r\n        {hotlineErrorUpdated == \"status: true\" && (\r\n          <Alert\r\n            message=\"Sorry! This hotline already exists in the system. Please use a different name.\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        )}\r\n      </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Description\">\r\n      <Form.Item\r\n        className=\"required\"\r\n        name=\"description\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter description\",\r\n          },\r\n        ]}\r\n      >\r\n        <>\r\n          <TextArea\r\n            className=\"input-control textarea-input\"\r\n            value={stepOneOpenLineInfo.description}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            id={\"description\"}\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label=\"Date\">\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <RangePicker\r\n          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n          name=\"sDate\"\r\n          value={stepOneOpenLineInfo.sDate}\r\n          onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n          disabledDate={disabledDate}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select start date\",\r\n            },\r\n          ]}\r\n        />\r\n      </Form.Item>\r\n    \r\n      </FloatLabel>\r\n      <FloatLabel label=\"Status\">\r\n      <Form.Item\r\n        className=\"required\"\r\n        name=\"status\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please select status\",\r\n          },\r\n        ]}\r\n      >\r\n        <>\r\n          <Select\r\n            placeholder=\"Status\"\r\n            className=\"input-control w-100 w-lg-50\"\r\n            value={stepOneOpenLineInfo.status}\r\n            htmlFor=\"status\"\r\n            onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n          >\r\n            <Option value=\"\" disabled>\r\n              \r\n            </Option>\r\n            <Option value=\"5\">Active</Option>\r\n            <Option value=\"4\">Inactive</Option>\r\n          </Select>\r\n        </>\r\n      </Form.Item>\r\n      </FloatLabel>\r\n      \r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n            <Upload\r\n             action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n             listType=\"picture\"\r\n             fileList={stepOneOpenLineInfo.file}\r\n             onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n            //  beforeUpload={(value)=>handleBeforeUpload(value)}\r\n          >\r\n                <Button icon={<UploadOutlined />}>Upload</Button>\r\n            </Upload>\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext} data-test=\"stepOneNext\">\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\n\r\nclass CreateOpenHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState({\r\n        employeeData: manageEmpData,\r\n      });\r\n    }\r\n  }\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n    \r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n          <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n              <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search placeholder=\"Search User\" disabled></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert\r\n            message=\"Please select user(s) and assign required permission(s) using Assign button.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.employeeData}\r\n          rowKey=\"unique_identifier\"\r\n        />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenHotlineStepTwo);\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Upload\r\n} from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  getIconText\r\n}) => {\r\n  \r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test=\"createHotlineStepThree\" className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            placeholder=\"Openline Name\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n        {/* <DatePicker className=\"datepicker w-50\"\r\n          name=\"tDate\"\r\n          value={hotlineForm.tDate}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please select End Date date\",\r\n            },\r\n          ]}\r\n          //  onChange={(date, dateString) => handleDatePickerChange(date, dateString,'tDate')}\r\n          disabled /> */}\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                placeholder=\"Status\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">Active</Select.Option>\r\n                <Select.Option value=\"4\">Inactive</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                placeholder=\"Assigned to\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n        <Upload\r\n             action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n             listType=\"picture\"\r\n             disabled\r\n             fileList={stepOneOpenLine.file}\r\n\r\n          >\r\n                {/* <Button icon={<UploadOutlined />}>Upload</Button> */}\r\n            </Upload>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb,message } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../openlineForm/CreateOpenHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../openlineForm/CreateOpenHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../openlineForm/CreateOpenHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Add Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Assign Employee\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Review Details\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst OpenlineCreation = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n  });\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload=(value) =>{\r\n    if (value.type !== 'image/png' &&  value.type !== 'image/jpg' && value.type !== 'image/svg') {\r\n        message.error(`${value.name} Supports only png,jpg,svg`);\r\n      }\r\n      if(value.type === 'image/png'){\r\n        return value.type === 'image/png';\r\n      }else if(value.type === 'image/jpg'){\r\n        value.type === 'image/jpg'\r\n      }else if(value.type === 'image/svg'){\r\n        value.type === 'image/svg'\r\n      }\r\n\r\n  }\r\n\r\n  const handleStepOneUpload = (value,name ) =>{     \r\n      let fileList=value.fileList;\r\n      console.log(\"fileList\",fileList[0])\r\n    \r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setStepOneOpenLine({...stepOneOpenLine,[name]:fileList})\r\n   \r\n  }\r\n\r\n  const handleReaderloaded=(readerEvt)=>{\r\n      let binaryString = readerEvt.target.result;\r\n      setStepOneOpenLine({...stepOneOpenLine,file:btoa(binaryString)})\r\n\r\n\r\n  }\r\n\r\n  const handleStepOnePreview = (value) =>{\r\n    console.log(\"valueee Preview\",value)\r\n\r\n\r\n}\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: user.user_details.org_user_id,\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneOpenLine.status,\r\n        hotline_icon_id: parseInt(stepOneOpenLine.hotlineIconId),\r\n        created_by: user.user_details.org_user_id,\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    console.log(\"data\", data);\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>Openline Directory</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>Create Openline Directory</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Create Openline Directory Entries</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          stepOneOpenLineInfo={stepOneOpenLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneUpload = {handleStepOneUpload}\r\n                          handleBeforeUpload={handleBeforeUpload}\r\n                          handleStepOnePreview = {handleStepOnePreview}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneOpenLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          getIconText={getIconText}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpnelineCreation from \"../../components/openlineCreation/OpnelineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = () => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  } \r\n  return (\r\n \r\n       <React.Fragment>\r\n      {!showResult === true ? <React.Fragment> <Row className=\"inner-header\">\r\n      <LoggedinHeader amORGUser/>\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n          <OrgSidebar amORGUser/>\r\n            <Content data-test=\"Directory\" className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Openline Directory</h1>\r\n              </Row>\r\n              <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"c-vector-area\">\r\n                      <img\r\n                        src={CreateHotline}\r\n                        alt=\"Create Hotline\"\r\n                        className=\"pr-4\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"text-center pt-3\">\r\n                      Create Hotline entries and assign them to managers,\r\n                      <br />\r\n                      head of departments or leadership.\r\n                    </p>\r\n                    <Row className=\"d-flex justify-content-center\">\r\n                      <Divider className=\"mt-1\" />\r\n                    </Row>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex align-items-center justify-content-center\"\r\n                    >\r\n                       <Button data-test=\"createHotline\" onClick={showBtn} type=\"primary\">Create</Button>\r\n                      {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                    </Col>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n        </Row></React.Fragment> : <OpnelineCreation />}\r\n\r\n</React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpnlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      { title: \"Openline Name\", dataIndex: \"name\", key: \"name\", width: \"22%\",\r\n      render: (name) => {\r\n        return {\r\n          children: name,\r\n          props: {\r\n            'data-title': 'Openline Name',\r\n          },\r\n        };\r\n      }\r\n     },\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              'data-title': 'Start Date',\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              'data-title': 'End Date',\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: \"Permissions\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return{\r\n          children:\r\n           <div>\r\n             <PermissionModal selectedRows={selectedRows} />\r\n           </div>,\r\n           props: {\r\n            'data-title': 'Permissions',\r\n           }\r\n        }\r\n      }\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) =>{\r\n          return{\r\n          children:\r\n          record.status_id === 5 ? (\r\n            <div className=\"primary-tag-rounded tag\">\r\n              <span className=\"circle mr-1\"></span>Active\r\n            </div>\r\n          ) : (\r\n            <div className=\"secondary-tag-rounded tag\">Inactive</div>\r\n          ),\r\n          props: {\r\n            'data-title': 'Status',\r\n           }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) =>\r\n        {\r\n          return{\r\n            children:<HotlinePopover data={record} />,\r\n            props:{\r\n              'data-title': 'Action',\r\n            }\r\n          }\r\n\r\n        }\r\n          \r\n        },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    hotlines.forEach((abc) => {\r\n      abc.start_date = moment(abc.start_date).utc().local().format(\"MM / DD / YYYY\")\r\n      // abc.start_date = abc.start_date.replaceAll(\"T00:00:00Z\", \"\");\r\n      abc.end_date = moment(abc.end_date).utc().local().format(\"MM / DD / YYYY\")\r\n     // abc.end_date = abc.end_date.replaceAll(\"T00:00:00Z\", \"\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].includes(searchKey);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser/>\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n            <OrgSidebar amORGUser/>\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Openline Directory</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                          disabled={true}\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                       span={24} lg={6}\r\n                       className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createopenline\">\r\n                        <Buttons value=\"Create Openline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"hotline_id\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ShowAllOpnlines;\r\n","import React, { useEffect } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpnlines from \"./ShowAllOpnlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\n\r\nconst OpenlineContainer = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, []);\r\n\r\n  return props.openlinesdata.length > 0 ? (\r\n    <ShowAllOpnlines openlines={props.openlinesdata} />\r\n  ) : (\r\n    <OpenlineDirectory />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { Component } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Typography\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from './poppins.module.scss';\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nconst { Paragraph } = Typography;\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\nconst { TextArea } = Input;\r\n\r\nfunction log(e) {\r\n  console.log(e);\r\n}\r\n\r\nfunction preventDefault(e) {\r\n  e.preventDefault();\r\n  console.log(\"Clicked! But prevent default.\");\r\n}\r\n\r\nclass Poppins extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"Poppins\">\r\n          <Layout>\r\n            <Layout>\r\n              <AmWebSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className={`mb-0 ${styles.heading_sm}`}>Hotline Messages</h1>\r\n                </Row>\r\n                <div className=\"mid-content p-0\">\r\n                  <Row>\r\n                    <Col\r\n                      sm={24}\r\n                      md={24}\r\n                      lg={6}\r\n                      xl={6}\r\n                      className={`py-4 ${styles.message_section}`}\r\n                    >\r\n                      <Col\r\n                        span={24}\r\n                        className=\" d-flex justify-content-between px-3\"\r\n                      >\r\n                        <h6>Messages</h6>\r\n                        <FilterPopover />\r\n                      </Col>\r\n\r\n                      <Col span={24} className=\"search-box mt-3 px-3\">\r\n                        <Search placeholder=\"Search\" onSearch={this.onSearch} />\r\n                      </Col>\r\n                      <Col span={24} className=\"mt-2 inbox-messages\">\r\n                        <div className=\"msg-wrapper\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                              I am not allowed to speak in meeting as senior\r\n                              people were involved\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 03:15</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1\"\r\n                            >\r\n                              Microagressions | MA67287365\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"msg-wrapper pointer\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                            Racial Microagression\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\">04 / 23</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1\"\r\n                            >\r\n                              Microagressions | MA67287316\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"msg-wrapper\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                            Anything goes after hours\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 04 / 22</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1 ant-typography-sm\"\r\n                            >\r\n                             Misconduct | MA67287334\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"msg-wrapper\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                            Indecent behavior\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 04 / 22</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1 ant-typography-sm\"\r\n                            >\r\n                              Sexual Harassment | MA6728735\r\n                            </Paragraph>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </Col>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={18}\r\n                      className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                    >\r\n                      <Row className=\"justify-content-center my-3\">\r\n                        <img\r\n                          src={NoHotlines}\r\n                          alt=\"No Hotlines Selected\"\r\n                          style={{ opacity: \"0.8\" }}\r\n                        />\r\n                      </Row>\r\n                      <h5>No Hotline Selected</h5>\r\n                      <small>Select a hotline to view</small>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Poppins;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Row, Col, Input, Typography } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./sfpro.module.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nconst { Paragraph } = Typography;\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\nconst { TextArea } = Input;\r\n\r\nfunction log(e) {\r\n  console.log(e);\r\n}\r\n\r\nfunction preventDefault(e) {\r\n  e.preventDefault();\r\n  console.log(\"Clicked! But prevent default.\");\r\n}\r\n\r\nclass SFPro extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AmWebSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className={`mb-0 ${styles.heading_sm}`}>Hotline Messages</h1>\r\n                </Row>\r\n                <div className=\"mid-content p-0\">\r\n                  <Row>\r\n                    <Col\r\n                      sm={24}\r\n                      md={24}\r\n                      lg={6}\r\n                      xl={6}\r\n                      className={`py-4 ${styles.message_section}`}\r\n                    >\r\n                      <Col\r\n                        span={24}\r\n                        className=\" d-flex justify-content-between px-3\"\r\n                      >\r\n                        <h6>Messages</h6>\r\n                        <FilterPopover />\r\n                      </Col>\r\n\r\n                      <Col span={24} className=\"search-box mt-3 px-3\">\r\n                        <Search placeholder=\"Search\" onSearch={this.onSearch} />\r\n                      </Col>\r\n                      <Col span={24} className=\"mt-2 inbox-messages\">\r\n                        <div className=\"msg-wrapper\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                              I am not allowed to speak in meeting as senior\r\n                              people were involved\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 03:15</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1\"\r\n                            >\r\n                              Microagressions | MA67287365\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"msg-wrapper pointer\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                              Racial Microagression\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\">04 / 23</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1\"\r\n                            >\r\n                              Microagressions | MA67287316\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"mb-2 p-3\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                              Anything goes after hours\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 04 / 22</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1 ant-typography-sm\"\r\n                            >\r\n                              Misconduct | MA67287334\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"msg-wrapper\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                              Indecent behavior\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 04 / 22</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1 ant-typography-sm\"\r\n                            >\r\n                              Sexual Harassment | MA6728735\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={18}\r\n                      className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                    >\r\n                      <Row className=\"justify-content-center my-3\">\r\n                        <img\r\n                          src={NoHotlines}\r\n                          alt=\"No Hotlines Selected\"\r\n                          style={{ opacity: \"0.8\" }}\r\n                        />\r\n                      </Row>\r\n                      <h5>No Hotline Selected</h5>\r\n                      <small>Select a hotline to view</small>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SFPro;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Typography\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from './sofia.module.scss'\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nconst { Paragraph } = Typography;\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\nconst { TextArea } = Input;\r\n\r\nfunction log(e) {\r\n  console.log(e);\r\n}\r\n\r\nfunction preventDefault(e) {\r\n  e.preventDefault();\r\n  console.log(\"Clicked! But prevent default.\");\r\n}\r\n\r\nclass Sofia extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AmWebSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className= {`mb-0 ${styles.heading_sm}`}>Hotline Messages</h1>\r\n                </Row>\r\n                <div className=\"mid-content p-0\">\r\n                  <Row>\r\n                    <Col\r\n                      sm={24}\r\n                      md={24}\r\n                      lg={6}\r\n                      xl={6}\r\n                      className={`py-4 ${styles.message_section}`}\r\n                    >\r\n                      <Col\r\n                        span={24}\r\n                        className=\" d-flex justify-content-between px-3\"\r\n                      >\r\n                        <h6>Messages</h6>\r\n                        <FilterPopover />\r\n                      </Col>\r\n\r\n                      <Col span={24} className=\"search-box mt-3 px-3\">\r\n                        <Search placeholder=\"Search\" onSearch={this.onSearch} />\r\n                      </Col>\r\n                      <Col span={24} className=\"mt-2 inbox-messages\">\r\n                        <div className=\"msg-wrapper\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                              I am not allowed to speak in meeting as senior\r\n                              people were involved\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 03:15</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1\"\r\n                            >\r\n                              Microagressions | MA67287365\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"msg-wrapper pointer\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                            Racial Microagression\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\">04 / 23</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1\"\r\n                            >\r\n                              Microagressions | MA67287316\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"msg-wrapper\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                            Anything goes after hours\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 04 / 22</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1 ant-typography-sm\"\r\n                            >\r\n                             Misconduct | MA67287334\r\n                            </Paragraph>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"msg-wrapper\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph ellipsis className=\"w-75 pr-2 mb-1\">\r\n                            Indecent behavior\r\n                            </Paragraph>\r\n\r\n                            <span className=\"small\"> 04 / 22</span>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Paragraph\r\n                              ellipsis\r\n                              className=\"font-weight-normal mb-1 ant-typography-sm\"\r\n                            >\r\n                              Sexual Harassment | MA6728735\r\n                            </Paragraph>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </Col>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={18}\r\n                      className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                    >\r\n                      <Row className=\"justify-content-center my-3\">\r\n                        <img\r\n                          src={NoHotlines}\r\n                          alt=\"No Hotlines Selected\"\r\n                          style={{ opacity: \"0.8\" }}\r\n                        />\r\n                      </Row>\r\n                      <h5>No Hotline Selected</h5>\r\n                      <small>Select a hotline to view</small>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sofia;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from \"./components/login/ForgotPassword\";\r\nimport ResetPassword from \"./components/login/ResetPassword\";\r\nimport Login from \"./components/login/Login\";\r\nimport AmWebLogin from \"./components/login/AmWebLogin\";\r\nimport OrgLogin from \"./components/login/OrgccLogin\";\r\nimport AmccLogin from \"./components/login/AmccLogin\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\n\r\n//fonts\r\nimport Poppins from \"./components/hotlineMessages/Poppins\";\r\nimport SFPro from \"./components/hotlineMessages/SFPro\";\r\nimport Sofia from \"./components/hotlineMessages/Sofia\";\r\nimport OpenlineCreation from \"./components/openlineCreation/OpnelineCreation\";\r\n\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc = commonForAllUsers.user_data.is_amcc_user;\r\n    isorgcc = commonForAllUsers.user_data.is_org_cc_user;\r\n    isamweb = commonForAllUsers.user_data.is_am_web_user;\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/amcc\" exact={true} component={AmccLogin} />\r\n        <Route path=\"/orgcc\" exact={true} component={OrgLogin} />\r\n        <Route path=\"/amweb\" exact={true} component={AmWebLogin} />\r\n        <Route path=\"/orgdetails\" component={OrgDetails} />\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route path=\"/resetpassword\" component={ResetPassword} />\r\n        <Route path=\"/changepassword\" component={ChangePassword} />\r\n        <Route path=\"/poppinsmob\" component={Poppins} />\r\n        <Route path=\"/sfpromob\" component={SFPro} />\r\n        <Route path=\"/sofiamob\" component={Sofia} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/orgcc\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/amweb\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/amweb/hotlinemessages\"\r\n              amweb\r\n              component={HotlineMessages}\r\n            />\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url === \"/login\" ||\r\n            url === \"/amcc\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              {\" \"}\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"pwd\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user, pwd: password.replaceAll('^\"+|\"+$', \"\") }\r\n  : { isLoggedIn: false, user: null, pwd: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        pwd: payload.pwd,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        pwd: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        pwd: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = [];\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = [];\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nfunction App() {\r\n  const timeOut = 3600000; // one hour\r\n\r\n  const onIdle = (e) => {\r\n    if(AppStorage.get('user')) {\r\n    AuthService.logout();\r\n    }\r\n  }\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        element={document}\r\n        onIdle={onIdle}\r\n        debounce={250}\r\n        timeout={timeOut}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n          <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";"],"sourceRoot":""}