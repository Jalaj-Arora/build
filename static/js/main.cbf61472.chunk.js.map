{"version":3,"sources":["assets/icons/dots-icon.svg","assets/images/amcc-vector.svg","assets/images/create-hotline.svg","components/managePolls/managePoll.module.scss","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/icons/pencil.svg","assets/images/work-chart.svg","assets/icons/send.svg","assets/images/no-hotlines.svg","assets/images/manage-polls.svg","assets/icons/HotLine.svg","assets/icons/OpenLine.svg","assets/icons/Polls.svg","assets/icons/ManageEmp.svg","assets/icons/BroadcastMsg.svg","assets/icons/Help.svg","assets/icons/Info.svg","components/manageEmp/manageEmp.module.scss","utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","components/manageOrg/AccSidebar.js","assets/icons/Icon.js","containers/ShowDetails.js","components/table/Table.js","components/button/Button.js","services/auth-header.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","components/form/CreateOrgStepOne.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/modal/PrivacyPolicyModal.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/login/Login.js","components/hotlineMessages/AmWebSidebar.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/modal/AssignHotlineModal.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/HotlineMessages.js","containers/PermissionDenied.js","components/modal/ResetPwdModal.js","components/form/EditSeededUsers.js","components/form/AddNewSeededUser.js","components/form/OrgDetails.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/manageEmp/AddEmp.js","components/manageEmp/UploadFiles.js","components/manageEmp/ImportFile.js","components/manageEmp/CreateManually.js","components/managePolls/ManagePolls.js","components/managePolls/UploadImage.js","components/managePolls/MultipleChoice.js","components/managePolls/CreatePoll.js","components/modal/DateTimeModal.js","components/managePolls/PreviewPoll.js","components/openlineForm/CreateOpenHotlineStepOne.js","components/openlineForm/CreateOpenHotlineStepTwo.js","components/openlineForm/CreateOpenHotlineStepThree.js","components/openlineCreation/OpnelineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/table/OpenlinePermission.js","components/autocomplete/SearchEmployee.js","components/modal/OpenlinePermissioModal.js","components/modal/DeleteOpenlineModal.js","components/table/OpenlinePopover.js","components/openlineDirectory/ShowAllOpnlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/openlineDirectory/EditOpenline.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/index.js","services/stores.js","App.js","index.js"],"names":["module","exports","getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","email","password","page","axios","post","response","data","JSON","stringify","AES","encrypt","toString","clear","window","location","reload","login","dispatch","AuthService","then","type","payload","user","pwd","Promise","resolve","error","message","reject","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","user_data","is_am_web_user","is_amcc_user","is_org_cc_user","is_app_user","is_idb_user","is_seeded_user","user_details","name","first_name","last_name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","userType","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","Header","Content","collapsed","toggle","setState","defaultKey","createElement","MenuUnfoldOutlined","MenuFoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","AccSidebar","ShowDetails","history","useHistory","path","record","organization_id","showModal","push","orgName","orgId","identifier","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","authHeader","CommonAuthHeader","parse","tokens","access","ShowAllOrganizations","statusClicked","via","endDate","end_date","replaceAll","date","finalDate","Date","start_date","status_id","Authorization","put","notification","config","open","description","statusOnClicked","onSearch","filterDt","filterIt","filterData","searchBy","organizations","forEach","org","nextProps","arr","searchKey","filter","obj","Object","keys","some","title","dataIndex","width","render","children","Pencil","placeholder","Button","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","orgIdCount","orgNameCount","Form","useForm","form","showError","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","autoComplete","maxLength","organizationId","validateStatus","status1","onSelect","Option","s1Date","disabledDate","current","moment","startOf","htmlType","preventDefault","DeleteModal","visible","show","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","userId","deleteOrg","handleCancel","delete","hotlineId","catch","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","lastName","mobile","status2","fromStepTwo","showAddSeededUserForm","addSeededUser","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleMobile","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","fNameCount","lNameCount","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","passwordValidationError","showPasswordValidationError","stepTwoPrev","s2Date","test","target","validateEmailAddress","country","userID","CreateOrgStepThree","loader","apiError","createNewOrganization","addSeededUserFromThirdStep","disabled","spinning","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","setLoader","setApiError","stepOneOrganization","setStepOneOrganization","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","setOrgNameCount","setOrgIDCount","setFNameCount","setLNameCount","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","format","mobile_number","organization","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","hotLineId","manageOrgData","manageOrg","setStatusClicked","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","res","flag","property","manageEmp","PrivacyPolicyModal","layout","wrapperCol","tailLayout","ForgotPassword","handleLogin","onChangeUsername","onChangePassword","loading","commonForAllUsers","isamcc","isorgcc","isamweb","canSubmit","Amccvector","onSubmit","ref","c","initialValues","remember","rules","required","ResetPassword","Login","isEnabled","AmWebSidebar","ChangePassword","currentPwd","newPwd","confirmPwd","setPwd","passwordChanged","setPasswordChanged","setError","handleOnChange","Password","validatePassword","getFieldValue","validator","_","dependencies","hasFeedback","old_password","new_password","confirm_password","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","iconText","setdisabledbtn","hotlineErrorUpdated","sethotlineErrorUpdated","directoryName","showCount","hotline_name","CheckHotlineName","replace","CheckCircleTwoTone","twoToneColor","sDate","status","valuePropName","iconHtml","hotlineIconId","ReactHtmlParser","AssignHotlineModal","handleCheck","selectedRow","stepOneHotLineValues","permissions","getCheckValues","setVisible","a","async","per","find","p","user_id","checked","can_respond","CreateHotlineStepTwo","employeeData","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","prevProps","rowSelection","selectedRowKeys","margin","TextArea","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setStepTwoHotLine","values","id1","reduce","accumulator","currentValue","can_view_reports","created_by","org_user_id","concat","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","deleteHandle","hotlineName","HotlinePopover","DeleteHotlineModal","hotline_id","GridPermission","deleteRecord","permissionData","setPermissionaData","changeDataSource","editable","text","onDelete","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","ShowAllHotlines","updated_by","hotlines","abc","utc","local","hotlinesdata","hotlinedata","getHotlines","setStatus","urgencyLevel","setUrgencyLevel","hotline","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","undefined","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalUrl","searchString","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","conversation_id","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","str","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","getHotlineMessages","document","getElementById","note","assigne","classList","lastMessage","getElementsByClassName","scrollIntoView","block","convID","onSendMessageClick","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","responder_conversation_name","RegExp","match","messageLength","unread_messages_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","textarea","querySelector","Send","HotlineMessages","conversations","setConversations","initialConv","setInitialConv","urgencyFilterData","setUrgencyFilterData","hotlineFilterData","setHotlineFilterData","statusFilterData","setStatusFilterData","setRemoveFilter","setConversation","setSearchString","setSocket","setNewState","unreadCount","setUnreadCount","allConversations","setAllConversations","showdiv","setShowDiv","setChatDiv","webSocket","useRef","getConversations","unSetFilters","allConversationIds","mergedConversations","convoID","increaseOverallCountDuringFilters","WebSocket","onopen","onmessage","newConvo","socketMethod","onclose","onerror","accessed_users","urgencyState","statusState","hotlineState","conversationIds","updatedNewConvo","conversationsToDisplay","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","totalFiltersApplied","urgency","filterSocket","toLowerCase","updatedConversations","increaseOverallCount","displayNewConvAtTop","dummyArray","splice","newConvFromDiffUser","incomingConversation","ele","totalConversations","itemMessage","updatedConversation","removeFilterLevel","allAppliedFilters","urlWithFilters","disabledCount","trim","statusFil","ugc","ht","filteredData","highlightText","LeftOutlined","tip","count","urgencyLevels","setAppliedFilters","search","closable","onClose","onConversationClick","fontWeight","receivedConversation","NoHotlines","opacity","PermissionDenied","justifyContent","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","EditSeededUser","handleEditOk","handleEditCancel","seededUserName","seededUserDetails","handleSeededUserOnChange","date2","handleSeededUserDatePickerChange","validateMobile","handleSeededUserOnSelect","AddNewSeededUser","handleAddSeededUser","handleAddSeededUserCancel","OrgDetails","modalError","showModalError","setEmailValidationError","setMobileValidationError","setSeededUserName","seededUserEmail","setSeededUserEmail","setSeededUserDetails","editVisible","setEditVisible","showAddSeededUser","setShowAddSeededUser","org_id","date1","organizationDetails","setOrganizationDetails","useNotification","api","contextHolder","orgID","computedMatch","appendedUsers","seeded_user","soft_delete","onSeededUserEditSubmit","info","editOrg","onFinish","handleOrganizationOnSelect","userName","orgDetails","EditSeededUsers","newSeededUser","EditOrg","setOrganizationName","deleteClick","setDeleteClick","orgStatus","setOrgStatus","handleOrganizationOnChange","handleOrganizationDatePickerChange","EditHotLine","hotLineData","sethotLineData","hotlineStatus","setHotlineStatus","seticonHtml","useLocation","eDate","dates","setIcon","saveHotLine","AddEmployee","styles","no_sidebar","xl","box_bordered","box_bordered_active","Dragger","Upload","multiple","action","file","fileList","success","UploadFiles","ImportFiles","CreateManually","ManagePoll","ManagePolls","UploadImage","listType","defaultFileList","MultiChoice","tags","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","tag","showInput","input","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","onPressEnter","isLongTag","tagElem","onDoubleClick","CreatePoll","sm_textarea","dateStrings","DatetimeModal","ranges","Today","endOf","showTime","PreviewPoll","poll_info","CreateOpenHotlineStepOne","stepOneOpenLineInfo","handleStepOneUpload","handleBeforeUpload","handleStepOnePreview","openelineName","openline_name","beforeUpload","UploadOutlined","CreateOpenHotlineStepTwo","stepTwoOpenLine","CreateOpenHotlineStepThree","stepOneOpenLine","OpenlineCreation","setStepOneOpenLine","setStepTwoOpenLine","reader","FileReader","onload","base64","result","readAsDataURL","originFileObj","create_openline","openline_image","OpenlineDirectory","OpnelineCreation","OpenlinePermission","SearchEmployee","OpenlinePermissioModal","assignedOpenLines","openlineId","openline_id","openline","DeleteOpenlineModal","OpenlinePopover","ShowAllOpnlines","openlines","openlinesdata","getOpenlines","EditOpenline","openLineData","setOpenLineData","openlineErrorUpdated","setopenlineErrorUpdated","updateOpenLine","openLineId","CheckOpenlineName","Routes","isAuthenticated","url","EditProfile","ImportFile","exact","amcc","OrganizationContainer","amweb","amorg","HotlineContainer","OpenlineContainer","decryptedPassword","localPwd","decrypt","enc","Utf8","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","onIdle","debounce","timeout","ReactDOM"],"mappings":"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","file":"static/js/main.cbf61472.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sm_textarea\":\"managePoll_sm_textarea__2gyc1\",\"poll_info\":\"managePoll_poll_info__35K0P\",\"circle_white\":\"managePoll_circle_white__1jSAt\",\"preview_que\":\"managePoll_preview_que__1Iqdf\",\"ant-radio-wrapper\":\"managePoll_ant-radio-wrapper__3vb0t\"};","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-polls.648b5bd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/HotLine.8e399cf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/OpenLine.19ed48f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Polls.797dc4b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/ManageEmp.b979556a.svg\";","module.exports = __webpack_public_path__ + \"static/media/BroadcastMsg.b628c864.svg\";","module.exports = __webpack_public_path__ + \"static/media/Help.1b17639f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Info.a71a0872.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_sidebar\":\"manageEmp_no_sidebar__2IV_7\",\"box_bordered\":\"manageEmp_box_bordered__1L9Kq\",\"icon\":\"manageEmp_icon__2NaGI\",\"box_bordered_active\":\"manageEmp_box_bordered_active__1hEvf\"};","const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  let;\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      AppStorage.set(\"user\", JSON.stringify(response.data));\r\n      AppStorage.set(\r\n        \"pwd\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          pwd: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser } = this.props.userRole;\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    if (amCCUser) {\r\n      AppStorage.set(\"userType\", \"AM CC\");\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\"userType\", \"Org CC\");\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\"userType\", \"AM WEB\");\r\n    }\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{AppStorage.get(\"userType\")}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">Edit Profile</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  AM WEB\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  AM CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  Org CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  AM CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  AM WEB\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  Org CC\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>Change Password</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>Sign Out</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{AppStorage.get(\"userType\")}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const userType = AppStorage.get(\"userType\");\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    }\r\n    const password = props.pwd.includes('\"')\r\n      ? props.pwd.slice(1, -1)\r\n      : props.pwd;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log('INTERVAL');\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Annonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, pwd } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    pwd,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    console.log(\"this.state.collapsed\", this.state.collapsed);\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const defaultKey = this.props.data?.location?.state;\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={defaultKey ? [defaultKey] : [\"3\"]}\r\n          >\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to={{ pathname: \"/orgcc/hotlinedirectory\", state: \"1\" }}>\r\n                Hotlines\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link\r\n                to={{ pathname: \"/orgcc/openlinedirectory\", state: \"2\" }}\r\n              ></Link>\r\n              Openlines\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n          key=\"3\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-polls\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          Polls\r\n        </Menu.Item> */}\r\n            <Menu.Item\r\n              key=\"3\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to={{ pathname: \"/orgcc/manageemployees\", state: \"3\" }}>\r\n                Manage Employees\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Broadcast Messages\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-help\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Help\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Info\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              Info\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { manageemp } from \"../../assets/icons/Icon\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/amcc/manageorganizations\">Manage Organizations</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          {/* <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              Info\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              Help\r\n            </a>\r\n          </div> */}\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","\r\nexport const hotline = require('./HotLine.svg')\r\nexport const openline = require('./OpenLine.svg')\r\nexport const polls = require('./Polls.svg')\r\n// export const iconManageOrg = require('./ManageOrg.svg')\r\nexport const manageemp = require('./ManageEmp.svg')\r\nexport const broadcastmsg = require('./BroadcastMsg.svg')\r\nexport const help = require('./Help.svg')\r\nexport const info = require('./Info.svg')","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ShowDetails = (props) => {\r\n  const history = useHistory();\r\n  const path = `/amcc/orgdetails/${props.record.organization_id}`;\r\n\r\n  const showModal = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.orgName ? (\r\n        <a onClick={showModal}>{props.record.name}</a>\r\n      ) : props.orgId ? (\r\n        <a onClick={showModal}>{props.record.identifier}</a>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport ShowDetails from \"../../containers/ShowDetails\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport moment from \"moment\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      searchBy: \"\",\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations.forEach((org) => {\r\n      org.start_date = org.start_date.replaceAll(\"-\", \" / \");\r\n      org.end_date = org.end_date.replaceAll(\"-\", \" / \");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.organizations !== nextProps.organizations)\r\n    this.setState({ data: nextProps.organizations }, () => {\r\n      this.onSearch(this.state.searchBy);\r\n    });\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"-\");\r\n    const date = endDate.split(\"-\")[0];\r\n    const month = endDate.split(\"-\")[1];\r\n    const year = endDate.split(\"-\")[2];\r\n    const finalDate = month + \"-\" + date + \"-\" + year;\r\n    if (new Date() < new Date(finalDate)) {\r\n      const data = {\r\n        name: record.name,\r\n        identifier: record.identifier,\r\n        organization_id: record.organization_id,\r\n        start_date: record.start_date.replaceAll(\" / \", \"-\"),\r\n        end_date: record.end_date.replaceAll(\" / \", \"-\"),\r\n        status_id: via === \"Active\" ? 2 : 1,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: `Status of ${record.name} has been changed successfully.`,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Organization Name \",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgName />,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Organization Id\",\r\n        dataIndex: \"\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgId />,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date \",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n        // render: () => <div className=\"secondary-tag-rounded tag\">Inactive</div>,\r\n      },\r\n      {\r\n        title: \"Actions\",\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Organizations </h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value=\"Create Organization\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  key=\"manageOrg\"\r\n                  rowKey=\"identifier\"\r\n                  columns={columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  orgIdCount,\r\n  orgNameCount,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      next();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Organization Name\"\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                />\r\n              </Form.Item>\r\n              {orgNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Organization Id\"\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={20}\r\n                />\r\n              </Form.Item>\r\n              {orgIdCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Status\" value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-100\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">Active</Option>\r\n                    <Option value=\"2\">Inactive</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Date\" value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.deleteOrg) this.props.handleCancel();\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg ? (\r\n          <Button onClick={this.showBothModals}>Delete</Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleOk}\r\n            centered\r\n            width={700}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Cancel\"\r\n            cancelText=\"Delete\"\r\n          >\r\n            <p>\r\n              You are about to Delete the Organization{\" \"}\r\n              <strong>{this.props.org}</strong>. Deleting Organization would\r\n              Delete all records associated with it. Are you sure you want to\r\n              Delete Organization <strong>{this.props.org}</strong>?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.user.firstName}?</p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.user.firstName}?</p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length === 1 ? (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            <p>There should be at least one seeded user.</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            <p>Are you sure you want to delete this?</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              Edit\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              Edit\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <Button>Edit</Button>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Mobile\",\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile.includes(\"+\") ? mobile : \"+\"+mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status2\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (status2) => {\r\n          return {\r\n            children:\r\n              status2 === 1 || status2 === \"1\" ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">Inactive</div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Row className=\"content-center pt-0\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() =>\r\n                this.props.fromStepTwo\r\n                  ? this.props.showAddSeededUserForm()\r\n                  : this.props.addSeededUser()\r\n              }\r\n            >\r\n              Add Seeded User\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n        <Grid\r\n          rowKey=\"unique_identifier\"\r\n          columns={columns}\r\n          data={this.state.data}\r\n        />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport moment from \"moment\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleMobile,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n  fNameCount,\r\n  lNameCount,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n      showPasswordValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    // var reIndian = /^\\+\\d{12}$/;\r\n    // var reInternational = /^\\+\\d{11}$/;\r\n    if (stepTwoOrganizationInfo.mobile.length > 10) {\r\n      showMobileValidationError(false);\r\n    } else {\r\n      showMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"First Name\"\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {fNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Last Name\"\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {lNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validatePassword(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n                {passwordValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid password.\r\n                    It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Email Id\" value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid email address.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Date\" value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Status\" value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    placeholder=\"Status\"\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">Active</Option>\r\n                    <Option value=\"2\">Inactive</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <PhoneInput\r\n                  country={\"in\"}\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={handleMobile}\r\n                  onBlur={validateMobile}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid mobile number.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                Add User\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                Update\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            Back\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            Next\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              Back\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  loader,\r\n  apiError,\r\n  handleOk,\r\n  handleCancel,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">Organization Details</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Modal\r\n            visible={apiError}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            centered\r\n            width={500}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            {\" \"}\r\n            <p>There is some difficulty while creating this organization.</p>{\" \"}\r\n          </Modal>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Organization Name\"\r\n                value={stepOneOrganizationInfo.organizationName}\r\n              >\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Organization Id\"\r\n                value={stepOneOrganizationInfo.organizationId}\r\n              >\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={stepOneOrganizationInfo.status1}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      placeholder=\"Status\"\r\n                      className=\"input-control w-100 w-lg-100\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                      disabled\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Select Date\" value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Col\r\n            span={24}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <h6 className=\"py-3 mb-0\">Seeded Users Details </h6>\r\n            <div>\r\n              {\" \"}\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => addSeededUserFromThirdStep()}\r\n              >\r\n                Add Seeded User\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n\r\n          {/* <div className=\"avatar-wrapper pt-2 pb-4\">\r\n          <Avatar>{stepTwoOrganizationInfo.userName?.charAt(0)}</Avatar>\r\n          <span className=\"md-name\">{stepTwoOrganizationInfo.userName}</span>\r\n        </div> */}\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <AssignedUsers\r\n                seededUsers={seededUsers}\r\n                handleEditUser={handleEditUser}\r\n                handleDelete={handleDelete}\r\n                fromStepThree\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Form.Item>\r\n            <div className=\"steps-action mt-5\">\r\n              <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n                Back\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n                Create and Invite\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Spin>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Organization Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Seeded User Details\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Confirm Details\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n   // password: \"\",\r\n    s2Date: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = { ...stepTwoOrganization, userId: userID };\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n      //  password: \"\",\r\n        s2Date: \"\",\r\n        mobile: \"\",\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n     // password: \"\",\r\n      s2Date: \"\",\r\n      mobile: \"\",\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    if (e.target.id === \"organizationId\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (\r\n      e.target.id === \"organizationName\" &&\r\n      e.target.value.length === 80\r\n    ) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    setLoader(true);\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n       // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.s2Date[0]\r\n          ? moment(value.s2Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.s2Date[1]\r\n          ? moment(value.s2Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"saveOrganization/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/amcc/manageorganizations\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error: \", error.message);\r\n        if (error.message.includes(\"500\")) {\r\n          setApiError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>Organizations</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Organization</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Organization</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            orgNameCount={orgNameCount}\r\n                            orgIdCount={orgIdCount}\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                            handleOk={handleOk}\r\n                            handleCancel={handleCancel}\r\n                            loader={loader}\r\n                            apiError={apiError}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Manage Organizations</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create a new Org Id for your client's organization\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            Create Organization\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from '../utils/AppStorage';\r\n\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get('user'));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      return orgcc_user.user_data.organization_id;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, [statusClicked]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return props.manageOrgData?.length > 0 ? (\r\n    <ShowAllOrganizations\r\n      organizations={props.manageOrgData}\r\n      statusOnClicked={statusOnClicked}\r\n    />\r\n  ) : (\r\n    <CreateOrg />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      // { title: \"Access\", dataIndex: [\"Access\",\"am_web\"], key: \"am_web \", width: \"21%\" },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        key: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag = false;\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n                flag = true;\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n                flag = true;\r\n              }\r\n              if (property == \"app_user\") {\r\n                if (!flag) {\r\n                  property = \"APP\";\r\n                }\r\n              }\r\n\r\n              if (test.length == 0) {\r\n                test += property;\r\n              } else if (property !== \"app_user\") {\r\n                if (test.includes(\"APP\")) {\r\n                  test = property;\r\n                } else {\r\n                  test += \", \" + property;\r\n                }\r\n              }\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: (\r\n              <div className=\"primary-tag-rounded tag\">\r\n                <span className=\"circle mr-1\"></span>Active\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n        // render: () => <div className=\"secondary-tag-rounded tag\">Inactive</div>,\r\n      },\r\n      {\r\n        title: \"Actions\",\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover />,\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Manage Employees</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          lg={9}\r\n                          className=\"ml-0 ml-lg-4 mt-2 mt-lg-0\"\r\n                        >\r\n                          <Select\r\n                            className=\"w-100 w-md-75\"\r\n                            defaultValue=\"Permissions\"\r\n                            disabled\r\n                          >\r\n                            <Option value=\"1\" defaultValue>\r\n                              1\r\n                            </Option>\r\n                            <Option value=\"2\">2</Option>\r\n                          </Select>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Buttons value=\"Add Employee\" />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"unique_identifier\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        See\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          Privacy Policy\r\n        </Button>\r\n        <Modal\r\n          title=\"Privacy Policy\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND\r\n              PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR\r\n              SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY\r\n              POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF\r\n              YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR\r\n              INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR\r\n              ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF\r\n              THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY\r\n              POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Forgot Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Enter your registered email address to request a password\r\n                  reset link.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    REQUEST PASSWORD RESET LINK\r\n                  </Button>\r\n                </Form.Item>\r\n\r\n                <div className=\"justify-content-center d-flex\">\r\n                <Button\r\n                          type=\"link\"\r\n                          className=\"link\"\r\n                        >\r\n                          Back to <b className=\"pl-1\">Sign In</b>\r\n                        </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Reset Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Set a new password for your account.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Password\">\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <FloatLabel label=\"Confirm Password\">\r\n                  <Form.Item\r\n                    name=\"confirmpassword\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please confirm your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    RESET PASSWORD\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                Login to manage AnonyMoose eco-system. This includes employees\r\n                eligible to use the app and/or components such as Hotlines,\r\n                Openlines, Polls and Surveys, Broadcast Messages and access to\r\n                different features of the \"Insights Dashboard\", through set of\r\n                assignable permissions.\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Sign In</h2>\r\n              </Row>\r\n\r\n              <Form\r\n                className=\"floating-label\"\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\" value={this.state.email}>\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <FloatLabel label=\"Password\" value={this.state.password}>\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <div className=\"forgot-pwd\">\r\n                  <a href=\"#\">Forgot Password</a>\r\n                </div>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    disabled={!isEnabled}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={() => {\r\n                      this.handleLogin();\r\n                    }}\r\n                  >\r\n                    SIGN IN\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">Hotlines Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Hotline Reports\r\n            </Menu.Item> */}\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">Openline Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Openline Reports\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Poll Results\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Broadcast Messages\r\n            </Menu.Item> */}\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Info\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, Modal, Alert } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport AmWebSidebar from \"../hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nconst { Content } = Layout;\r\n\r\nconst ChangePassword = () => {\r\n  const userType = AppStorage.get(\"userType\");\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n  const [passwordChanged, setPasswordChanged] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    showPasswordValidationError(false);\r\n  }, []);\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (pwd.newPwd === pwd.confirmPwd && !passwordValidationError) {\r\n      axios\r\n        .put(BASE_URL + \"changepassword/\", data, options)\r\n        .then(() => {\r\n          setError(false);\r\n          setPasswordChanged(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n            setError(true);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Change Password</h1>\r\n                  {/* <div className=\"d-block w-100 pl-1\">\r\n                    <small>\r\n                      Your password was last modified on{\" \"}\r\n                      <span className=\"font-weight-bold\">22/04/2020</span>{\" \"}\r\n                    </small>\r\n                  </div> */}\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Modal\r\n                    visible={passwordChanged}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    width={350}\r\n                    okButtonProps={{\r\n                      children: \"Custom OK\",\r\n                    }}\r\n                    cancelButtonProps={{ style: { display: \"none\" } }}\r\n                    okText=\"OK\"\r\n                  >\r\n                    <p>\r\n                      Your password has been changed successfully. Please login\r\n                      again with your new password.\r\n                    </p>\r\n                  </Modal>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Old Password is wrong.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <FloatLabel\r\n                                label=\"Current Password\"\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:\r\n                                        \"Please enter your current password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"New Password\"\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:\r\n                                        \"Please enter your new password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                    onBlur={(e) => validatePassword(e)}\r\n                                  />\r\n                                </Form.Item>\r\n                                {passwordValidationError && (\r\n                                  <Alert\r\n                                    message=\"Please enter a valid password.\r\n                                    It should be atleast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Confirm Password\"\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: \"Please confirm your password!\",\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                      validator(_, value) {\r\n                                        if (\r\n                                          !value ||\r\n                                          getFieldValue(\"newpassword\") === value\r\n                                        ) {\r\n                                          return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(\r\n                                          \"The two passwords that you entered do not match!\"\r\n                                        );\r\n                                      },\r\n                                    }),\r\n                                  ]}\r\n                                  dependencies={[\"newpassword\"]}\r\n                                  hasFeedback\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <> \r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          Add Icon\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title=\"Add Icon\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Add\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div className={this.state.ImageId === '1' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={1} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Sexual Harrasment\">\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div className={this.state.ImageId === '2' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={2} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Violence\">\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '3' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={3} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Racism\">\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '4' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={4} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Cyber Bullying\">\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '5' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={5} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Fight\">\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '6' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={6} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Discrimination\">\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '7' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={7} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Slap\">\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.directoryName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      showError(false);\r\n      setdisabledbtn(false);\r\n      next();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          sethotlineErrorUpdated(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <FloatLabel\r\n        label=\"Directory Name\"\r\n        value={stepOneHotLineInfo.directoryName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"directoryName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter directory name\",\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneHotLineInfo.directoryName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"directoryName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"directoryName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated === \"status: false\" &&\r\n            stepOneHotLineInfo.directoryName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneHotLineInfo.directoryName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message=\"Sorry! This hotline already exists in the system. Please use a different name.\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Description\" value={stepOneHotLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter description\",\r\n            },\r\n          ]}\r\n        >\r\n          {/* {hotlineForm.description.length<15 &&\r\n        <Alert message=\"Please enter more the 15 characters in the description below\" type=\"info\"  showIcon></Alert>\r\n        } */}\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneHotLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Date\" value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneHotLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Status\" value={stepOneHotLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select status\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneHotLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">Active</Option>\r\n              <Option value=\"4\">Inactive</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          {console.log(stepOneHotLineInfo.iconHtml)}\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button, Table } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        Assign\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText=\"Done\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <div>\r\n          Assign Permissions for <b>{stepOneHotLineValues.directoryName}</b>{\" \"}Hotline\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n<div>\r\n        <Row className=\"mt-2 mt-lg-5\">\r\n          <Col span={6}></Col>\r\n          <Col span={14} className=\"small text-center\">\r\n            Reply to Messages, Add Notes, Status & Urgency level\r\n          </Col>\r\n        </Row>\r\n        {selectedRow &&\r\n          selectedRow.map((item) => {\r\n            let per = permissions.find((p) => p.user_id === item.user_id);\r\n            return (\r\n              <Row className=\"mt-3 d-flex justify-content-center\">\r\n                <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                <Col span={10}>\r\n                  <Checkbox\r\n                    checked={per && per.can_respond === 1 ? true : false} disabled\r\n                    onChange={(e) => handleCheck(item)}\r\n                  ></Checkbox>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n          </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState({\r\n        employeeData: manageEmpData,\r\n      },()=>{\r\n        this.onSearch(\"\");\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n    \r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n          <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n              <Col span={24} lg={9} className=\"search-box\">\r\n\r\n                  <Search placeholder=\"Search User\" onSearch={this.onSearch}></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert\r\n            message=\"Please select user(s) and assign required permission(s) using Assign button.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.filterData}\r\n          rowKey=\"unique_identifier\"\r\n        />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText\r\n}) => {\r\n  \r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test=\"createHotlineStepThree\" className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id={\"directoryName\"}\r\n            className=\"input-control textarea-input\"\r\n            placeholder=\"Directory Name\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n        {/* <DatePicker className=\"datepicker w-50\"\r\n          name=\"tDate\"\r\n          value={hotlineForm.tDate}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please select End Date date\",\r\n            },\r\n          ]}\r\n          //  onChange={(date, dateString) => handleDatePickerChange(date, dateString,'tDate')}\r\n          disabled /> */}\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                placeholder=\"Status\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">Active</Select.Option>\r\n                <Select.Option value=\"4\">Inactive</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                placeholder=\"Assigned to\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Add Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Assign Employee\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Create Directory\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst HotlineCreation = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: user.user_details.org_user_id,\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by: user.user_details.org_user_id,\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>Hotline Directory</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>Create Hotline Directory</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Create Hotline Directory Entries</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          stepOneHotLineInfo={stepOneHotLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          getIconText={getIconText}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Hotline Directory</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create Hotline entries and assign them to managers,\r\n                          <br />\r\n                          head of departments or leadership.\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button>\r\n                          {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <HotlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        this.props.deleteHandle(this.props.hotlineName);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Hotline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <p>Are you sure you want to delete this hotline?</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/edithotline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/edithotline\">Edit</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteHotlineModal\r\n          hotlineId={test.hotline_id}\r\n          hotlineName={test.name}\r\n          deleteHandle={test.deleteHandle}\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\n\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource(); \r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [ \r\n    { title: \"Name\", dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: \"Respond\",\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => ( \r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox value=\"reports\" checked={res} onChange={(e)=> handleCheck(record)} disabled></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return ( \r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  //const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n     // setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        //value={value}\r\n        options={searchData}\r\n        placeholder=\"Search Employee\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL+\"getHotlineAssignEmpl/\" +\r\n          this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => { \r\n    \r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL+\"hotlineAssignEmpl/\",\r\n        this.state.assignedEmp,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(el => el.user_id === record.user_id);\r\n    assignedHotLines[index] = {...assignedHotLines[index], can_respond: !record.can_respond};\r\n    this.setState({ assignedHotLines});\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex(el => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {...assignedEmp[aindex], can_respond: !record.can_respond};\r\n    this.setState({ assignedEmp});\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray = this.state.assignedEmp && this.state.assignedEmp.filter(function (element) {\r\n      return element.user_id !== value.user_id;\r\n    });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL+\"getHotlineAssignEmpl/\" + value.hotline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: user.user_details.org_user_id,\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Show</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Done\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <div>Employees with permissions to {this.state.hotLineName}</div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>\r\n              Reply to Messages, Add Notes, Status & Urgency level\r\n            </Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <GridPermission\r\n            data={this.state.assignedHotLines}\r\n            deleteRecord={this.deleteRecord}\r\n            handleCheck={this.handleCheck}\r\n          />\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>Hit enter to add</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines.forEach((abc) => {\r\n      abc.start_date = moment(abc.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"DD / MM / YYYY\");\r\n      // abc.start_date = abc.start_date.replaceAll(\"T00:00:00Z\", \"\");\r\n      abc.end_date = moment(abc.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"DD / MM / YYYY\");\r\n      // abc.end_date = abc.end_date.replaceAll(\"T00:00:00Z\", \"\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.hotlines !== nextProps.hotlines) {\r\n      nextProps.hotlines.forEach((abc) => {\r\n        abc.start_date = moment(abc.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"DD / MM / YYYY\");\r\n        abc.end_date = moment(abc.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"DD / MM / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.hotlines }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteHandle = (name) => {\r\n    notification.config({\r\n      placement: \"bottomLeft\",\r\n    });\r\n    notification.open({\r\n      description: `${name} has been deleted successfully.`,\r\n    });\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"-\");\r\n    const date = endDate.split(\"-\")[0];\r\n    const month = endDate.split(\"-\")[1];\r\n    const year = endDate.split(\"-\")[2];\r\n    const finalDate = month + \"-\" + date + \"-\" + year;\r\n    if (new Date() < new Date(finalDate)) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        help_text: record.help_text,\r\n        hotline_icon_id: record.hotline_icon_id,\r\n        hotline_id: record.hotline_id,\r\n        name: record.name,\r\n        start_date: record.start_date.replaceAll(\" / \", \"-\"),\r\n        end_date: record.end_date.replaceAll(\" / \", \"-\"),\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n        updated_by: user.user_details.org_user_id,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"hotline/\" + data.hotline_id, data, options)\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description: `Status of ${record.name} has been changed successfully.`,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Hotline Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Hotline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      //{ title: \"Permissions\", dataIndex: \"\", key: \"\", width: \"20%\" },\r\n      {\r\n        title: \"Permissions\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <PermissionModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: (\r\n              <HotlinePopover data={record} deleteHandle={this.deleteHandle} />\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Hotline Directory</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create Hotline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"hotline_id\"\r\n                  columns={columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, [statusClicked]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return props.hotlinesdata.length > 0 ? (\r\n    <ShowAllHotlines\r\n      hotlines={props.hotlinesdata}\r\n      statusOnClicked={statusOnClicked}\r\n      data={props}\r\n    />\r\n  ) : (\r\n    <HotlineDirectory data={props} />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { hotline } from \"../../assets/icons/Icon\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(BASE_URL + \"getUserallHotlines/\" + user.user_data.user_id, options)\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: \"Low\", value: 1 },\r\n    { label: \"Medium\", value: 2 },\r\n    { label: \"High\", value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: \"New\", value: 1 },\r\n    { label: \"Open\", value: 2 },\r\n    { label: \"Closed\", value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allCheckedOnes)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allCheckedOnes) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.loadFilteredConversations(\r\n        res.data,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    axios.get(baseUrl, options).then((res) => {\r\n      props.loadFilteredConversations(res.data, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>Filter</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Urgency level</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Status</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Hotline</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\n\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state={\r\n      visible: false, \r\n      noteText:\"\"\r\n    } \r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by: user.user_details.org_user_id,\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"addNotes/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({noteText:\"\"})\r\n          this.formRef.current.resetFields()\r\n          this.props.getNoteData(res.data.conversation_id);\r\n        }\r\n      });\r\n\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,noteText:\"\"\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n   handleChange = (e) => {\r\n    this.setState({  noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          Take a note..\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title=\"Take a Note\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Add\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n          <Form  className=\"input-md w-100\" name=\"validate-other\" ref={this.formRef}>\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder=\"Add note here...\"\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\"\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData:[],\r\n    conversationId:\"\"\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter} >\r\n        <span className=\"note-user\">{moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")} {item.first_name} {item.last_name}</span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n         {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     this.props.addedNote.map((item)=>(\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item) }\r\n        {this.state.expand && (\r\n          <a data-test=\"showLess\" className=\"d-flex justify-content-end\" onClick={this.typoClose}>\r\n            Show less\r\n          </a>\r\n        )}\r\n       </div>\r\n     ))\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddedNotes;","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Notes</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: \"Updated the Status to\" },\r\n  { id: 2, name: \"Updated the Urgency level to\" },\r\n  { id: 3, name: \"Added new Note\" },\r\n  { id: 4, name: \"View Hotline Converations\" },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Activity</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  // onScroll={handleScroll}\r\n                  // onScrollFrame={handleScrollFrame}\r\n                  // onScrollStart={handleScrollStart}\r\n                  // onScrollStop={handleScrollStop}\r\n                  // onUpdate={handleUpdate}\r\n                  // renderView={renderView}\r\n                  // renderTrackHorizontal={renderTrackHorizontal}\r\n                  // renderTrackVertical={renderTrackVertical}\r\n                  // renderThumbHorizontal={renderThumbHorizontal}\r\n                  // renderThumbVertical={renderThumbVertical}\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on).utc().local().format(\r\n                              \"MM:DD:YY • hh:mm A•\"\r\n                            )}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Assigned To</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n        document.getElementsByClassName(\"hotline_message\").length - 1\r\n      ];\r\n      if (lastMessage) lastMessage.scrollIntoView(false, { block: \"end\" });\r\n    }\r\n  }, [convoMessages]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: user.user_details.org_user_id,\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if (e.altKey && e.keyCode === 13) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: user.user_details.org_user_id,\r\n        hotline_id: conversation.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: user.user_details.org_user_id,\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (\r\n              res.data.status_id === 1 ||\r\n              res.data.status_id === 3\r\n            ) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline_name.includes(\"</mark>\")) {\r\n      conversation.hotline_name = conversation.hotline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline_name = conversation.hotline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline_name = conversation.hotline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Urgency level</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Status</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>Last Read</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg hotline_message mb-3\"\r\n                            : \"incoming-msg hotline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            // className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD:YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.first_name} ${msg.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Hotline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength = {10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Typography,\r\n  Badge,\r\n  Tag,\r\n  Spin,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport Messages from \"./Messages\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\n\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Paragraph } = Typography;\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst HotlineMessages = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    unSetFilters();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   var element = document.getElementsByClassName(\"inbox-messages\");\r\n  //   if (element && element[0]) {\r\n  //     element[0].scrollIntoView(false);\r\n  //   }\r\n  // }, [initialConv]);\r\n\r\n  // CURRENTLY NOT IN USE.\r\n  /* useEffect(() => {\r\n     handleOverallCount();\r\n   }, [conversations, unreadCount]); */\r\n\r\n  useEffect(() => {\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    increaseOverallCountDuringFilters(newState, allConversations);\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    webSocket.current = new WebSocket(\r\n      \"ws://10.0.6.10:8000/ws/hotlineMessages/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      socketMethod(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const socketMethod = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (newConvo.accessed_users.includes(user.user_data.user_id)) {\r\n      setConversations((conversations) => {\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        var data = {\r\n          conversation_id: newConvo.conversation_id,\r\n          user_id: user.user_details.org_user_id,\r\n        };\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        // let hasMessagesWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n          /* let convoMessages = [];\r\n          const token = authHeader();\r\n          const options = {\r\n            headers: {\r\n              Authorization: token,\r\n              Accept: \"application/json, text/plain\",\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n          };\r\n          axios\r\n            .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n            .then(async (res) => {\r\n              convoMessages = res.data.map((value) => value.message);\r\n            });\r\n          hasMessagesWithSearchedWord = convoMessages.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          ); */\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((x) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !== user.user_data.user_id\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (x.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: x.responder_conversation_name,\r\n              };\r\n            }\r\n            if (x.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: x.conversation_id,\r\n              };\r\n            }\r\n            if (x.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: x.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: x.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by === user.user_data.user_id\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (x.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: x.responder_conversation_name,\r\n              };\r\n            }\r\n            if (x.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: x.conversation_id,\r\n              };\r\n            }\r\n            if (x.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: x.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return x;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          increaseOverallCount(newConvo, conversationsToDisplay);\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(\r\n            newConvo.urgency_level_id.toString()\r\n          )\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // append the new incoming conversation at the top of the existing list of conversations.\r\n  const displayNewConvAtTop = (\r\n    updatedConversations,\r\n    newConvo,\r\n    updatedNewConvo\r\n  ) => {\r\n    let index = 0;\r\n    // create a replica of updatedConversations\r\n    const dummyArray = updatedConversations;\r\n    // return the index of the new incoming conversation from the list of all conversations.\r\n    updatedConversations.map((value) => {\r\n      if (\r\n        value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n      ) {\r\n        return (index = updatedConversations.indexOf(value));\r\n      }\r\n    });\r\n    // remove that new conversation from the dummy list temporarily.\r\n    dummyArray.splice(index, 1);\r\n    // push that removed incoming conversation on top of the list.\r\n    const finalConversations = [updatedNewConvo, ...dummyArray];\r\n    return finalConversations;\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n  const increaseOverallCount = (newConvo, conversationsToDisplay) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = conversationsToDisplay.filter(\r\n      (filter) =>\r\n        filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvo?.conversation_id &&\r\n        newConvo.created_by !== user.user_data.user_id\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = conversationsToDisplay.filter(\r\n      (ele) =>\r\n        ele?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n    );\r\n    for (var i = 0; i < newConvFromDiffUser.length; i++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[i]?.conversation_id\r\n            .toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0].unread_messages_count === 0\r\n      ) {\r\n        setUnreadCount((unreadCount) => unreadCount + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n  const increaseOverallCountDuringFilters = (newState, allConversations) => {\r\n    if (\r\n      urgencyFilterData.length > 0 ||\r\n      statusFilterData.length > 0 ||\r\n      hotlineFilterData.length > 0 ||\r\n      searchString.length > 0\r\n    ) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      // return only that new incoming message which comes from a user other than logged in user.\r\n      const newConvFromDiffUser = allConversations?.filter(\r\n        (filter) =>\r\n          filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState?.conversation_id &&\r\n          newState.created_by !== user.user_data.user_id\r\n      );\r\n      // return the new incoming message irrespective of any user.\r\n      const incomingConversation = allConversations?.filter(\r\n        (ele) =>\r\n          ele?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id\r\n      );\r\n      for (var i = 0; i < newConvFromDiffUser.length; i++) {\r\n        if (\r\n          incomingConversation[0]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newConvFromDiffUser[i]?.conversation_id\r\n              ?.toString()\r\n              .replace(/(<([^>]+)>)/gi, \"\") &&\r\n          incomingConversation[0]?.unread_messages_count === 0\r\n        ) {\r\n          setUnreadCount((unreadCount) => unreadCount + 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // remove filters when component loads.\r\n  const unSetFilters = () => {\r\n    AppStorage.remove(\"urgencyLevels\");\r\n    AppStorage.remove(\"status\");\r\n    AppStorage.remove(\"hotline\");\r\n    AppStorage.remove(\"searchBy\");\r\n  };\r\n\r\n  // return those conversations which have matched filters or search.\r\n  const filterSocket = (\r\n    totalFiltersApplied,\r\n    newConvo,\r\n    conversations,\r\n    conversationIds\r\n  ) => {\r\n    let totalConversations = [];\r\n    if (\r\n      (totalFiltersApplied.status?.includes(\r\n        newConvo.status_id.toString()\r\n      ) &&\r\n        totalFiltersApplied.urgency?.includes(\r\n          newConvo.urgency_level_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.hotline?.includes(\r\n          newConvo.hotline_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.searchBy?.length > 0 &&\r\n        newConvo.conversation_id\r\n          .toLowerCase()\r\n          .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n      newConvo.responder_conversation_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.hotline_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.message\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n    ) {\r\n      let conversation_id = newConvo.conversation_id.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = newConvo.hotline_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = newConvo.message.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      const updatedConversation = {\r\n        ...newConvo,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: newConvo.hotline_id,\r\n        },\r\n      };\r\n      if (\r\n        !conversationIds.includes(\r\n          updatedConversation.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n        )\r\n      ) {\r\n        totalConversations = [...conversations, updatedConversation];\r\n      } else {\r\n        totalConversations = conversations;\r\n      }\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n    return totalConversations;\r\n  };\r\n\r\n  // set state values of applied filters.\r\n  function setAppliedFilters(urgencyLevels, status, hotline) {\r\n    setUrgencyFilterData(urgencyLevels);\r\n    setStatusFilterData(status);\r\n    setHotlineFilterData(hotline);\r\n    AppStorage.set(\r\n      \"urgencyLevels\",\r\n      Object.values(urgencyLevels)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"status\",\r\n      Object.values(status)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(hotline)?.map((data) => data.value)\r\n    );\r\n  }\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    setAppliedFilters(selectedUrgency, selectedStatus, selectedHotline);\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          setLoader(false);\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((x) =>\r\n        x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : x\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var i = 0; i < conversations.length - 1; i++) {\r\n      if (\r\n        conversations[i].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[i].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  // CURRENTLY NOT IN USE.\r\n  // set an overall count of unread conversations depending on the filters and search applied.\r\n  /* const handleOverallCount = () => {\r\n    const unreadConversations = conversations.filter(\r\n      (value) => value.unread_count > 0\r\n    );\r\n    setUnreadCount(unreadConversations.length);\r\n  }; */\r\n\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: user.user_details.org_user_id,\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          getConversations();\r\n          setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: user.user_details.org_user_id,\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          getConversations();\r\n          setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  // highlight the text found during search.\r\n  const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.hotline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let hotlineName = item.hotline_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          hotline: {\r\n            name: hotlineName,\r\n            hotline_id: item.hotline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    const statusFil = statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(urgencyFilterData.length > 0 && {\r\n        urgency_level_id: urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(hotlineFilterData.length > 0 && {\r\n        hotline_id: hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allCheckedOnes)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allCheckedOnes) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      setSearchString(str);\r\n      AppStorage.set(\"searchBy\", str);\r\n      let filteredData = [];\r\n      if (str.length > 0) {\r\n        filteredData = highlightText(res.data, str);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  Hotline Messages\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <Spin\r\n                      size=\"large\"\r\n                      tip=\"Loading...\"\r\n                      spinning={loader}\r\n                    ></Spin>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <div className=\"mid-content p-0\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className={\r\n                        showdiv\r\n                          ? \"message-section py-4 d-none\"\r\n                          : \"message-section py-4\"\r\n                      }\r\n                    >\r\n                      <Col\r\n                        span={24}\r\n                        className=\" d-flex justify-content-between px-3\"\r\n                      >\r\n                        <h6>\r\n                          Conversations{\" \"}\r\n                          <Badge className=\"pl-1\" count={unreadCount} />\r\n                        </h6>\r\n\r\n                        <FilterPopover\r\n                          searchString={searchString}\r\n                          removeFilter={removeFilter}\r\n                          loadFilteredConversations={loadFilteredConversations}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col span={24} className=\"mt-4 px-3 d-block\">\r\n                        <Scrollbars\r\n                          autoHeight\r\n                          autoHeightMin={0}\r\n                          autoHeightMax={150}\r\n                          thumbMinSize={30}\r\n                          universal={true}\r\n                        >\r\n                          <>\r\n                            {urgencyFilterData.map((data, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  key={index}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyLevel\",\r\n                                      data.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                >\r\n                                  Urgency: <span>{data.label}</span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                            {hotlineFilterData.map((hotline, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyHotline\",\r\n                                      hotline.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                  key={index}\r\n                                >\r\n                                  Hotline: <span>{hotline.label} </span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                            {statusFilterData.map((status, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyStatus\",\r\n                                      status.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                  key={index}\r\n                                >\r\n                                  Status: <span>{status.label} </span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                          </>\r\n                        </Scrollbars>\r\n                      </Col>\r\n                      <Col span={24} className=\"search-box mt-3 px-3\">\r\n                        <Form form={form}>\r\n                          <Form.Item name=\"search\" id=\"search\">\r\n                            <Search\r\n                              name=\"search\"\r\n                              id=\"search\"\r\n                              placeholder=\"Search\"\r\n                              onChange={(e) => onSearch(e.target.value)}\r\n                              onSearch={onSearch}\r\n                              autoComplete=\"off\"\r\n                            />\r\n                          </Form.Item>\r\n                        </Form>\r\n                      </Col>\r\n                      <Scrollbars\r\n                        autoHeight\r\n                        autoHeightMin={0}\r\n                        autoHeightMax={450}\r\n                        thumbMinSize={30}\r\n                        universal={true}\r\n                      >\r\n                        <Col span={24} className=\"inbox-messages\">\r\n                          {conversations.length > 0 ? (\r\n                            conversations.map((item, key) => {\r\n                              return (\r\n                                <div\r\n                                  key={key}\r\n                                  className={\r\n                                    conversation.conversation_id\r\n                                      ?.toString()\r\n                                      .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                                    item.conversation_id\r\n                                      ?.toString()\r\n                                      .replace(/(<([^>]+)>)/gi, \"\")\r\n                                      ? \"msg-wrapper active\"\r\n                                      : \"msg-wrapper\"\r\n                                  }\r\n                                  onClick={() => onConversationClick(item)}\r\n                                >\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <p\r\n                                      ellipsis=\"true\"\r\n                                      style={{ fontWeight: \"bold\" }}\r\n                                      className=\"w-75 pr-2 mb-1\"\r\n                                      dangerouslySetInnerHTML={createMarkup(\r\n                                        item.responder_conversation_name\r\n                                      )}\r\n                                    />\r\n                                    <span className=\"small\">\r\n                                      {\" \"}\r\n                                      {moment(item.created_on).isSame(\r\n                                        moment(),\r\n                                        \"day\"\r\n                                      )\r\n                                        ? moment(item.created_on)\r\n                                            .utc()\r\n                                            .local()\r\n                                            .format(\"hh:mm\")\r\n                                        : moment(item.created_on)\r\n                                            .utc()\r\n                                            .local()\r\n                                            .format(\"MM:DD:YY\")}\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <Paragraph\r\n                                      ellipsis\r\n                                      className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                                    >\r\n                                      <span\r\n                                        className=\"ellipsisText\"\r\n                                        dangerouslySetInnerHTML={createMarkup(\r\n                                          item.hotline_name\r\n                                        )}\r\n                                      />\r\n                                      &nbsp; |&nbsp;\r\n                                      <span\r\n                                        className=\"ellipsisText\"\r\n                                        dangerouslySetInnerHTML={createMarkup(\r\n                                          item.conversation_id\r\n                                        )}\r\n                                      />\r\n                                    </Paragraph>\r\n                                    <span className=\"small\">\r\n                                      {\" \"}\r\n                                      <Badge count={item.unread_messages_count} />\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          ) : (\r\n                            <div className=\"msg-wrapper\">No messages found</div>\r\n                          )}\r\n                        </Col>\r\n                      </Scrollbars>\r\n                    </Col>\r\n                    {conversation ? (\r\n                      <Messages\r\n                        conversation={conversation}\r\n                        urgencyLevel={urgencyLevel}\r\n                        status={status}\r\n                        onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n                        onChangeStatus={onChangeStatus}\r\n                        searchString={searchString}\r\n                        newState={newState}\r\n                        socket={socket}\r\n                        setCounter={setCounter}\r\n                        data-test=\"Messages\"\r\n                        chatdiv={chatdiv}\r\n                      />\r\n                    ) : (\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                      >\r\n                        <Row className=\"justify-content-center my-3\">\r\n                          <img\r\n                            src={NoHotlines}\r\n                            alt=\"No Conversation Selected\"\r\n                            style={{ opacity: \"0.8\" }}\r\n                          />\r\n                        </Row>\r\n                        <h5>No Conversation Selected</h5>\r\n                        <small>Select a hotline to view</small>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </div>\r\n              ) : (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <img\r\n                      src={CreateHotline}\r\n                      alt=\"No Hotlines Selected\"\r\n                      style={{ opacity: \"0.8\" }}\r\n                    />\r\n                  </Row>\r\n                  <h5>\r\n                    No conversations are initiated for the hotlines assigned to\r\n                    you\r\n                  </h5>\r\n                  {/* <small>Select a hotline to view</small> */}\r\n                </Col>\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n    const userType = AppStorage.get(\"userType\");\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">\r\n                    You don't have access rights! Please contact your\r\n                    administrator.\r\n                  </h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionDenied;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>Reset password for this user</span>\r\n        </Button>\r\n        <Modal\r\n          title=\"Reset Password\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Reset and Invite\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                Reset password for{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label=\"New Password\" value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your new password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label=\"Confirm Password\" value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your confirmed password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst EditSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleEditOk}\r\n      onCancel={props.handleEditCancel}\r\n      centered\r\n      width={900}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText=\"Update\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n        <div>Edit Seeded User</div>\r\n        <br />\r\n        <div className=\"avatar-wrapper pt-2 pb-4\">\r\n          <Avatar>{props.seededUserName.charAt(0)}</Avatar>\r\n          <span className=\"md-name\">{props.seededUserName}</span>\r\n        </div>\r\n        {props.error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"First Name\"\r\n                value={props.seededUserDetails.firstName}\r\n              >\r\n                <Form.Item name=\"firstName\" className=\"required\">\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    className=\"input-control\"\r\n                    defaultValue={props.seededUserDetails.firstName}\r\n                    htmlFor=\"firstName\"\r\n                    value={props.seededUserDetails.firstName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.fNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Last Name\"\r\n                value={props.seededUserDetails.lastName}\r\n              >\r\n                <Form.Item name=\"lastName\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"lastName\"\r\n                    htmlFor=\"lastName\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.lastName}\r\n                    value={props.seededUserDetails.lastName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.lNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Email Id\"\r\n                value={props.seededUserDetails.email}\r\n              >\r\n                <Form.Item name=\"email\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"email\"\r\n                    htmlFor=\"email\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.email}\r\n                    value={props.seededUserDetails.email}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateEmailAddress(e)}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                  {props.emailValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid email address.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Date\" value=\"date2\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"new w-100\"\r\n                    name=\"date2\"\r\n                    className=\"required\"\r\n                    value={props.seededUserDetails.date2}\r\n                    onChange={(date) =>\r\n                      props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                    }\r\n                    disabledDate={props.disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Mobile\" value={props.seededUserDetails.mobile}>\r\n                <Form.Item name=\"mobile\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"mobile\"\r\n                    htmlFor=\"mobile\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.mobile}\r\n                    value={props.seededUserDetails.mobile}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateMobile(e)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.mobileValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid mobile number.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={props.seededUserDetails.status2}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status2\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={props.seededUserDetails.status2}\r\n                      htmlFor=\"status2\"\r\n                      className=\"required\"\r\n                      onSelect={(value) =>\r\n                        props.handleSeededUserOnSelect(value, \"status2\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Form>\r\n      <ResetPwdModal\r\n        user={props.seededUserDetails.firstName}\r\n        handleResetPasswordOk={props.handleResetPasswordOk}\r\n        handleResetPasswordCancel={props.handleResetPasswordCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSeededUser;\r\n","import React from \"react\";\r\nimport { Row, Col, Input, Form, Select, Modal, Alert, DatePicker } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleAddSeededUser}\r\n      onCancel={props.handleAddSeededUserCancel}\r\n      centered\r\n      width={1200}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText=\"Add\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n        {props.error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <div>Add New Seeded User</div>\r\n          <br />\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"First Name\"\r\n                value={props.seededUserDetails.firstName}\r\n              >\r\n                <Form.Item name=\"firstName\" className=\"required\">\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    className=\"input-control\"\r\n                    defaultValue={props.seededUserDetails.firstName}\r\n                    htmlFor=\"firstName\"\r\n                    value={props.seededUserDetails.firstName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.fNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Last Name\"\r\n                value={props.seededUserDetails.lastName}\r\n              >\r\n                <Form.Item name=\"lastName\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"lastName\"\r\n                    htmlFor=\"lastName\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.lastName}\r\n                    value={props.seededUserDetails.lastName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.lNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            {/* <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Temporary Password\"\r\n                value={props.seededUserDetails.password}\r\n              >\r\n                <Form.Item name=\"password\" className=\"pwd required\">\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"password\"\r\n                    className=\"required\"\r\n                    id=\"password\"\r\n                    defaultValue={props.seededUserDetails.password}\r\n                    value={props.seededUserDetails.password}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validatePassword(e)}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {props.passwordValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid password.\r\n                      It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col> */}\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Email Id\"\r\n                value={props.seededUserDetails.email}\r\n              >\r\n                <Form.Item name=\"email\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"email\"\r\n                    htmlFor=\"email\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.email}\r\n                    value={props.seededUserDetails.email}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateEmailAddress(e)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.emailValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid email address.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Date\" value=\"date2\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"new w-100\"\r\n                    name=\"date2\"\r\n                    className=\"required\"\r\n                    value={props.seededUserDetails.date2}\r\n                    onChange={(date) =>\r\n                      props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                    }\r\n                    disabledDate={props.disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n              <FloatLabel label=\"Mobile\" value={props.seededUserDetails.mobile}>\r\n                <Form.Item name=\"mobile\" className=\"required\">\r\n                  <PhoneInput\r\n                    country={\"in\"}\r\n                    id=\"mobile\"\r\n                    htmlFor=\"mobile\"\r\n                    value={props.seededUserDetails.mobile}\r\n                    onChange={props.handleMobile}\r\n                    onBlur={props.validateMobile}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.mobileValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid mobile number.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={props.seededUserDetails.status2}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status2\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={props.seededUserDetails.status2}\r\n                      htmlFor=\"status2\"\r\n                      className=\"required\"\r\n                      onSelect={(value) =>\r\n                        props.handleSeededUserOnSelect(value, \"status2\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewSeededUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrgDetails = (props) => {\r\n  const history = useHistory();\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n   // password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, []);\r\n\r\n  const onFinish = (values) => {};\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const editOrg = () => {\r\n    const path = `/amcc/editorg/${orgID}`;\r\n    history.push(path, \"viaOrgDetails\");\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    if (seededUserDetails.mobile.length > 10) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `Details for ${seededUserName} have been changed successfully.`,\r\n        placement,\r\n      });\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n     // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n     // password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: `${seededUserDetails.firstName} has been added successfully.`,\r\n            placement,\r\n          });\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `${userName} has been deleted successfully.`,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Organization Details</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">Organization Details </h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3\"\r\n                          onClick={() => editOrg()}\r\n                        >\r\n                          <span className=\"icon icon-pencil\" />\r\n                          <span className=\"pl-2 d-none d-block-md\">\r\n                            Edit Details\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationDetails.name.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">\r\n                        {organizationDetails.name}\r\n                      </span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      onFinish={onFinish}\r\n                      form={form}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Name\"\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  htmlFor=\"organization name\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Id\"\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"identifier\"\r\n                                  name=\"identifier\"\r\n                                  htmlFor=\"organization name\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Status\"\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status1\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-100\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                    disabled\r\n                                  >\r\n                                    <Option value=\"1\">Active</Option>\r\n                                    <Option value=\"2\">Inactive</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\" value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <Row className=\"w-100\">\r\n                      <Col span={24} md={12}>\r\n                        <h6 className=\"py-3 mb-0\">Seeded Users Details </h6>\r\n                      </Col>\r\n                      <Col\r\n                        span={24}\r\n                        md={12}\r\n                        className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                      >\r\n                        <Button\r\n                          className=\"mr-4\"\r\n                          type=\"secondary\"\r\n                          onClick={() => addSeededUser()}\r\n                        >\r\n                          Add Seeded User\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                      {seededUsers.length > 0 ? (\r\n                        <AssignedUsers\r\n                          seededUsers={seededUsers}\r\n                          handleEditUser={handleEditSeededUser}\r\n                          handleDelete={handleDeleteSeededUser}\r\n                          addSeededUser={addSeededUser}\r\n                          viaEdit\r\n                          orgDetails\r\n                          seededUser\r\n                        />\r\n                      ) : (\r\n                        <Col span={24} lg={18}>\r\n                          <Row className=\"justify-content-center\">\r\n                            No Seeded User\r\n                          </Row>\r\n                        </Col>\r\n                      )}\r\n                      {editVisible ? (\r\n                        <EditSeededUsers\r\n                          error={modalError}\r\n                          handleEditOk={handleEditOk}\r\n                          handleEditCancel={handleEditCancel}\r\n                          seededUsers={seededUsers}\r\n                          fNameCount={fNameCount}\r\n                          lNameCount={lNameCount}\r\n                          seededUserName={seededUserName}\r\n                          seededUserDetails={seededUserDetails}\r\n                          disabledDate={disabledDate}\r\n                          handleSeededUserOnChange={handleSeededUserOnChange}\r\n                          handleSeededUserDatePickerChange={\r\n                            handleSeededUserDatePickerChange\r\n                          }\r\n                          handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                          validateEmailAddress={validateEmailAddress}\r\n                          emailValidationError={emailValidationError}\r\n                          validateMobile={validateMobile}\r\n                          mobileValidationError={mobileValidationError}\r\n                          handleResetPasswordOk={handleResetPasswordOk}\r\n                          handleResetPasswordCancel={handleResetPasswordCancel}\r\n                        />\r\n                      ) : showAddSeededUser ? (\r\n                        <AddNewSeededUser\r\n                          error={modalError}\r\n                          handleAddSeededUser={handleAddSeededUser}\r\n                          handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                          seededUsers={seededUsers}\r\n                          fNameCount={fNameCount}\r\n                          lNameCount={lNameCount}\r\n                          seededUserDetails={seededUserDetails}\r\n                          disabledDate={disabledDate}\r\n                          handleSeededUserOnChange={handleSeededUserOnChange}\r\n                          handleSeededUserDatePickerChange={\r\n                            handleSeededUserDatePickerChange\r\n                          }\r\n                          handleMobile={handleMobile}\r\n                          handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                          validateEmailAddress={validateEmailAddress}\r\n                          emailValidationError={emailValidationError}\r\n                          validateMobile={validateMobile}\r\n                          mobileValidationError={mobileValidationError}\r\n                          validatePassword={validatePassword}\r\n                          passwordValidationError={passwordValidationError}\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrgDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  notification,\r\n} from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n  //  password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [orgStatus, setOrgStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      setOrgStatus(data.organization.status_id.toString());\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, []);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleOrganizationOnChange = (e) => {\r\n    if (e.target.id === \"identifier\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (e.target.id === \"name\" && e.target.value.length === 80) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setOrganizationDetails({\r\n      ...organizationDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    if (seededUserDetails.mobile.length > 10) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteClick(false);\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      name: organizationDetails.name,\r\n      identifier: organizationDetails.identifier,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(organizationDetails.status),\r\n    };\r\n    const endDate = moment(organizationDetails.date1[1]).format(\"MM-DD-YYYY\");\r\n    if (organizationDetails.status !== orgStatus) {\r\n      if (new Date() < new Date(endDate)) {\r\n        if (organizationDetails.name && organizationDetails.identifier) {\r\n          showError(false);\r\n          axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description:\r\n                \"Organization details have been changed successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/amcc/manageorganizations\";\r\n          });\r\n        } else {\r\n          showError(true);\r\n        }\r\n      } else {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description:\r\n            \"Status can't be changed as the end date has been passed.\",\r\n          placement,\r\n        });\r\n      }\r\n    } else {\r\n      if (organizationDetails.name && organizationDetails.identifier) {\r\n        showError(false);\r\n        axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: \"Organization details have been changed successfully.\",\r\n            placement,\r\n          });\r\n          window.location = \"/amcc/manageorganizations\";\r\n        });\r\n      } else {\r\n        showError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `Details for ${seededUserName} have been changed successfully.`,\r\n        placement,\r\n      });\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    if (props.location.state) {\r\n      const path = `/amcc/orgdetails/${orgID}`;\r\n      history.push(path);\r\n    } else {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n     // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n    //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: `${seededUserDetails.firstName} has been added successfully.`,\r\n            placement,\r\n          });\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `${userName} has been deleted successfully.`,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Organization</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">Edit Organization</h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3 deleteOrg\"\r\n                          onClick={onDelete}\r\n                        >\r\n                          <span className=\"icon icon-delete\" />\r\n                          <span className=\"d-none d-md-inline-flex deleteOrg\">\r\n                            Delete\r\n                          </span>\r\n                        </Button>\r\n                        {deleteClick ? (\r\n                          <DeleteModal\r\n                            org={organizationName}\r\n                            handleDelete={handleDeleteOrganization}\r\n                            handleCancel={handleCancelDelete}\r\n                            deleteOrg\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">{organizationName}</span>\r\n                    </div>\r\n                    <Form className=\"input-md floating-label w-100\" form={form}>\r\n                      {error && (\r\n                        <Form.Item>\r\n                          <Alert\r\n                            message=\"Please fill the fields marked with asterisk(*)\"\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        </Form.Item>\r\n                      )}\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Name\"\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  onChange={(e) =>\r\n                                    handleOrganizationOnChange(e)\r\n                                  }\r\n                                  htmlFor=\"name\"\r\n                                  autoComplete=\"off\"\r\n                                  maxLength={80}\r\n                                />\r\n                              </Form.Item>\r\n                              {orgNameCount && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Max Characters limit reached.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Id\"\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  htmlFor=\"identifier\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  onChange={(e) =>\r\n                                    handleOrganizationOnChange(e)\r\n                                  }\r\n                                  autoComplete=\"off\"\r\n                                  maxLength={20}\r\n                                />\r\n                              </Form.Item>\r\n                              {orgIdCount && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Max Characters limit reached.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Status\"\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"status\"\r\n                              >\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-100\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">Active</Option>\r\n                                    <Option value=\"2\">Inactive</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Date\" value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  onChange={(date) =>\r\n                                    handleOrganizationDatePickerChange(\r\n                                      date,\r\n                                      \"date1\"\r\n                                    )\r\n                                  }\r\n                                  disabledDate={disabledDate}\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            onClick={onOrgEditSubmit}\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                          <Button\r\n                            className=\"ml-4\"\r\n                            type=\"secondary\"\r\n                            onClick={cancelEditing}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    md={12}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <h6 className=\"py-3 mb-0\">Edit Seeded Users </h6>\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    md={12}\r\n                    className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                  >\r\n                    <Button\r\n                      className=\"mr-4\"\r\n                      type=\"secondary\"\r\n                      onClick={() => addSeededUser()}\r\n                    >\r\n                      Add Seeded User\r\n                    </Button>\r\n                  </Col>\r\n                  {seededUsers.length > 0 ? (\r\n                    <AssignedUsers\r\n                      seededUsers={seededUsers}\r\n                      handleEditUser={handleEditSeededUser}\r\n                      handleDelete={handleDeleteSeededUser}\r\n                      addSeededUser={addSeededUser}\r\n                      viaEdit\r\n                      seededUser\r\n                    />\r\n                  ) : (\r\n                    <Col span={24} lg={18}>\r\n                      <Row className=\"justify-content-center\">\r\n                        No Seeded User\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                  {editVisible ? (\r\n                    <EditSeededUsers\r\n                      error={modalError}\r\n                      handleEditOk={handleEditOk}\r\n                      handleEditCancel={handleEditCancel}\r\n                      seededUsers={seededUsers}\r\n                      seededUserName={seededUserName}\r\n                      fNameCount={fNameCount}\r\n                      lNameCount={lNameCount}\r\n                      seededUserDetails={seededUserDetails}\r\n                      disabledDate={disabledDate}\r\n                      handleSeededUserOnChange={handleSeededUserOnChange}\r\n                      handleSeededUserDatePickerChange={\r\n                        handleSeededUserDatePickerChange\r\n                      }\r\n                      handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                      validateEmailAddress={validateEmailAddress}\r\n                      emailValidationError={emailValidationError}\r\n                      validateMobile={validateMobile}\r\n                      mobileValidationError={mobileValidationError}\r\n                      handleResetPasswordOk={handleResetPasswordOk}\r\n                      handleResetPasswordCancel={handleResetPasswordCancel}\r\n                    />\r\n                  ) : showAddSeededUser ? (\r\n                    <AddNewSeededUser\r\n                      error={modalError}\r\n                      handleAddSeededUser={handleAddSeededUser}\r\n                      handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                      seededUsers={seededUsers}\r\n                      fNameCount={fNameCount}\r\n                      lNameCount={lNameCount}\r\n                      seededUserDetails={seededUserDetails}\r\n                      disabledDate={disabledDate}\r\n                      handleSeededUserOnChange={handleSeededUserOnChange}\r\n                      handleSeededUserDatePickerChange={\r\n                        handleSeededUserDatePickerChange\r\n                      }\r\n                      handleMobile={handleMobile}\r\n                      handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                      validateEmailAddress={validateEmailAddress}\r\n                      emailValidationError={emailValidationError}\r\n                      validatePassword={validatePassword}\r\n                      passwordValidationError={passwordValidationError}\r\n                      validateMobile={validateMobile}\r\n                      mobileValidationError={mobileValidationError}\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  notification,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = ({ props }) => {\r\n  const [hotLineData, sethotLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    hotline_icon_id: \"\",\r\n    hotline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [hotlineStatus, setHotlineStatus] = useState(\"\");\r\n  const [iconHtml, seticonHtml] = useState(\"\");\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [error, showError] = useState(false);\r\n\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n\r\n  const addIcon = (values, id) => {\r\n    sethotLineData({\r\n      ...hotLineData,\r\n      hotline_icon_id: id,\r\n    });\r\n    seticonHtml(values);\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setIcon = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return '<span class=\"icon icon-sexual-harassment-1 ant-tooltip-open\"></span>';\r\n      case \"2\":\r\n        return '<span class=\"icon icon-violence ant-tooltip-open\"></span>';\r\n      case \"3\":\r\n        return '<span class=\"icon icon-racism ant-tooltip-open\"></span>';\r\n      case \"4\":\r\n        return '<span class=\"icon icon-cyber-bullying ant-tooltip-open\"></span>';\r\n      case \"5\":\r\n        return '<span class=\"icon icon-fight ant-tooltip-open\"></span>';\r\n      case \"6\":\r\n        return '<span class=\"icon icon-discrimination ant-tooltip-open\"></span>';\r\n      case \"7\":\r\n        return '<span class=\"icon icon-slap ant-tooltip-open\"></span>';\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date, \"DD / MM / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const eDate = moment(location.state.end_date, \"DD / MM / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    sethotLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      hotline_icon_id: location.state.hotline_icon_id,\r\n      hotline_id: location.state.hotline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    setHotlineStatus(location.state.status_id.toString());\r\n    const test = setIcon(location.state.hotline_icon_id.toString());\r\n    seticonHtml(test);\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: value });\r\n  };\r\n\r\n  const editHotline = (e) => {\r\n    if (\r\n      hotLineData.name &&\r\n      hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      hotLineData.help_text &&\r\n      hotLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      hotLineData.status_id &&\r\n      hotLineData.hotline_icon_id &&\r\n      hotLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const endDate = moment(hotLineData.start_date[1]).format(\"MM-DD-YYYY\");\r\n      const data = {\r\n        end_date: moment(hotLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: hotLineData.help_text,\r\n        hotline_icon_id: hotLineData.hotline_icon_id,\r\n        hotline_id: hotLineData.hotline_id,\r\n        name: hotLineData.name,\r\n        start_date: moment(hotLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(hotLineData.status_id),\r\n        updated_by: user.user_details.org_user_id,\r\n      };\r\n      if (hotlineStatus !== hotLineData.status_id) {\r\n        if (new Date() < new Date(endDate)) {\r\n          saveHotLine(data);\r\n        } else {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              \"Status can't be changed as the end date has been passed.\",\r\n            placement,\r\n          });\r\n        }\r\n      } else {\r\n        saveHotLine(data);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  const saveHotLine = (data) => {\r\n    const token = authHeader();\r\n    let hotLineId = hotLineData.hotline_id;\r\n    delete hotLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"hotline/\" + hotLineId, data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: \"Hotline details have been changed successfully.\",\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkhotline/\",\r\n          { hotline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            sethotlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      sethotlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>Edit Hotline</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Form\r\n                  data-test=\"createHotlineStepOne\"\r\n                  className=\"input-md w-md-100 w-75 floating-label\"\r\n                  name=\"validate_other\"\r\n                  form={form}\r\n                >\r\n                  {error && (\r\n                    <Form.Item>\r\n                      <Alert\r\n                        message=\"Please fill the fields marked with asterisk(*)\"\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n\r\n                  <FloatLabel label=\"Directory Name\" value={hotLineData.name}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"directoryName\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter directory name\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <TextArea\r\n                        showCount\r\n                        maxLength={80}\r\n                        value={hotLineData.name}\r\n                        onChange={(e) => handleStepOneOnChange(e)}\r\n                        onBlur={(e) => CheckHotlineName(e)}\r\n                        id={\"name\"}\r\n                        className=\"input-control textarea-input\"\r\n                        htmlFor=\"directoryName\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                      {hotlineErrorUpdated == \"status: false\" &&\r\n                        hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n                          .length > 0 &&\r\n                        hotLineData.name.length > 0 && (\r\n                          <CheckCircleTwoTone\r\n                            className=\"successCheck\"\r\n                            twoToneColor=\"#52c41a\"\r\n                          />\r\n                        )}\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n\r\n                  <FloatLabel label=\"Description\" value={hotLineData.help_text}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"description\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter description\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <TextArea\r\n                          className=\"input-control textarea-input\"\r\n                          value={hotLineData.help_text}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          id={\"help_text\"}\r\n                          htmlFor=\"description\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label=\"Date\" value=\"start_date\">\r\n                    <Form.Item className=\"input-control datepicker-wrapper\">\r\n                      <RangePicker\r\n                        className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                        name=\"start_date\"\r\n                        disabledDate={disabledDate}\r\n                        value={hotLineData.start_date}\r\n                        onChange={(date) =>\r\n                          handleStepOneDatePickerChange(date, \"start_date\")\r\n                        }\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please select start date\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label=\"Status\" value={hotLineData.status_id}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"status\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select status\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <Select\r\n                          className=\"input-control w-100 w-lg-50\"\r\n                          value={hotLineData.status_id}\r\n                          htmlFor=\"status\"\r\n                          onSelect={(value) =>\r\n                            handleStepOneOnSelect(value, \"status_id\")\r\n                          }\r\n                        >\r\n                          <Select.Option value=\"5\">Active</Select.Option>\r\n                          <Select.Option value=\"4\">Inactive</Select.Option>\r\n                        </Select>\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <Form.Item className=\"\">\r\n                    <Form.Item\r\n                      className=\"upload-control\"\r\n                      name=\"upload\"\r\n                      valuePropName=\"fileList\"\r\n                    >\r\n                      <AddIcoModal\r\n                        data-test=\"addIconComponent\"\r\n                        addIcon={addIcon}\r\n                      />\r\n                      {getIconText(hotLineData.hotline_icon_id.toString()) && (\r\n                        <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                          <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                            <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                              <span className=\"d-inline-flex align-items-center\">\r\n                                <a className=\"ant-upload-list-item-thumbnail\">\r\n                                  {ReactHtmlParser(iconHtml)}\r\n                                </a>\r\n\r\n                                <span\r\n                                  className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                  title={getIconText(\r\n                                    hotLineData.hotline_icon_id.toString()\r\n                                  )}\r\n                                >\r\n                                  {getIconText(\r\n                                    hotLineData.hotline_icon_id.toString()\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n                  <div className=\"steps-action mt-5\">\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={editHotline}\r\n                      data-test=\"stepOneNext\"\r\n                      style={{ margin: \"0 8px\" }}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={cancelHotline}\r\n                      data-test=\"stepOneNext\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditHotLine;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\n\r\nconst AddEmployee = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Add Employee</h1>\r\n                  <div className=\"d-block w-100 pl-3 pl-lg-0 pt-1\">\r\n                    <small>\r\n                      Please create all employees for your organization who are\r\n                      eligible to use the app. You can either integrate with\r\n                      existing system, import through CSV or add each employee\r\n                      manually.\r\n                    </small>\r\n                  </div>\r\n                </Row>\r\n                <div className=\"mid-content mt-0 mt-md-4 no-bg px-3 px-md-0\">\r\n                  <Row>\r\n                    <Col span={24} className=\"mt-5\">\r\n                      <Row className=\"d-flex justify-content-center\" gutter={{ xs: 8, sm: 32, md: 32, lg: 100 }}>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered} ${styles.box_bordered_active}`}>\r\n                            <span className={`icon-integrate ${styles.icon}`}></span>\r\n                            <div className=\"font-weight-bold text-center\">Integrate with existing system</div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered}`}>\r\n                          <span className={`icon-csv ${styles.icon}`}></span>\r\n                          <div className=\"font-weight-bold text-center\">Import through CSV</div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered}`}>\r\n                          <span className={`icon-add-user ${styles.icon}`}></span>\r\n                          <div className=\"font-weight-bold text-center\">Create manually</div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Upload, message } from 'antd';\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\nconst UploadFiles = () => {\r\n  return (\r\n    <Dragger {...props}>\r\n    <p className=\"ant-upload-drag-icon\">\r\n    <span className=\"icon icon-upload\" />\r\n    </p>\r\n    <p className=\"ant-upload-text\">Drop files to upload or Browse</p>\r\n  </Dragger>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Breadcrumb, Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport UploadFiles from \"./UploadFiles\";\r\n\r\nconst ImportFiles = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/addemployee\">\r\n                      <Breadcrumb.Item>Add Employee</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Import CSV file</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Import CSV file </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Col span={20} className=\"mt-3 dragdrop\">\r\n                      <UploadFiles />\r\n                    </Col>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"justify-content-center d-flex mt-5\"\r\n                    >\r\n                      <Button type=\"link\" className=\"link pl-0\">\r\n                        <span className=\"icon icon-download-icon\" />\r\n                        Download Sample File\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mt-3 btn-row\">\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"mr-4 mb-4\"\r\n                      type=\"secondary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button type=\"primary\" className=\"md\">\r\n                      Upload\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImportFiles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\n\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport \"../form/form.scss\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst CreateManually = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n              <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/addemployee\">\r\n                      <Breadcrumb.Item>Add Employee</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Manually</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Manually</h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                  <Form className=\"input-md floating-label w-100\" name=\"\">\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"First Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"fname\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your first name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"fname\"\r\n                                  htmlFor=\"fname\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Last Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"lname\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your last name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"lname\"\r\n                                  htmlFor=\"lname\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"emailid\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your email id\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  type=\"email\"\r\n                                  className=\"input-control\"\r\n                                  id=\"emailid\"\r\n                                  htmlFor=\"emailid\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                            <FloatLabel label=\"Mobile Number\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"mobile\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your mobile number\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <PhoneInput country={\"us\"} />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Employee id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"empid\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your employee id\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"empid\"\r\n                                  htmlFor=\"empid\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Department\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"department\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your department\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">dept1</Option>\r\n                                  <Option value=\"0\">dept2</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">1</Option>\r\n                                  <Option value=\"0\">2</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item\r\n                                className=\"input-control datepicker-wrapper required\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select start and end date\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <RangePicker className=\"w-100 \" name=\"s1Date\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Make Super User\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select user type\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">Make Super User</Option>\r\n                                  <Option value=\"0\">Make User</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F1\">\r\n                              <Form.Item name=\"f1\">\r\n                                <Input className=\"input-control\" htmlFor=\"f1\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F2\">\r\n                              <Form.Item name=\"f2\">\r\n                                <Input className=\"input-control\" htmlFor=\"f3\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F3\">\r\n                              <Form.Item name=\"f3\">\r\n                                <Input className=\"input-control\" htmlFor=\"f3\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F4\">\r\n                              <Form.Item name=\"f4\">\r\n                                <Input className=\"input-control\" htmlFor=\"f4\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F5\">\r\n                              <Form.Item name=\"f5\">\r\n                                <Input className=\"input-control\" htmlFor=\"f5\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateManually;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./managePoll.module.scss\";\r\nimport ManagePolls from \"../../assets/images/manage-polls.svg\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ManagePoll = () => {\r\n  return (\r\n    <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser />\r\n                <Content data-test=\"Polls\" className=\"\">\r\n\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Manage Polls</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={ManagePolls}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                        Create polls and publish them for all employees from here \r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            type=\"primary\"\r\n                          >\r\n                            Create Poll\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagePoll;\r\n","import React from \"react\";\r\nimport { Upload, message, Button } from \"antd\";\r\n\r\nconst fileList = [];\r\n\r\nconst UploadImage = () => {\r\n  return (\r\n    <>\r\n      <Upload\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        listType=\"picture\"\r\n        defaultFileList={[...fileList]}\r\n        className=\"upload-list-inline\"\r\n      >\r\n        <Button type=\"link\" className=\"link pl-0\">\r\n          <span className=\"icon icon-doc\"></span> Document\r\n        </Button>\r\n      </Upload>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from 'react';\r\nimport { Tag, Input, Tooltip, Col, Button } from 'antd';\r\n\r\nclass MultiChoice extends Component {\r\n  state = {\r\n    tags: [],\r\n   \r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    console.log(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    console.log(tags);\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        <Col span={12} className=\"mb-4\">\r\n        {!inputVisible && (\r\n          <Tag onClick={this.showInput} className=\"mt-3\">\r\n                    <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          Add Option\r\n        </Button>\r\n          </Tag>\r\n        )}\r\n        </Col>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiChoice","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n}\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst CreatePoll = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser />\r\n              <Content>\r\n              <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/managepolls\">\r\n                      <Breadcrumb.Item>Manage Poll</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Poll</h1>\r\n                </Row>\r\n                <div className=\"mid-content\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                      >\r\n                        <Col span={24}>\r\n                          <Row>\r\n                            <Col span={24} md={18} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Poll Title\">\r\n                                <TextArea\r\n                                  showCount\r\n                                  maxLength={80}\r\n                                  htmlFor=\"polltitle\"\r\n                                  className={`required ${styles.sm_textarea}`}\r\n                                />\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={18} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Help Text\">\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"help text\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"helptext\"\r\n                                    htmlFor=\"helptext\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} className=\"gutter-row mt-3\">\r\n                              <h6>Upload</h6>\r\n                              <Form.Item\r\n                                name=\"help text\"\r\n                                className=\"upload-list\"\r\n                              >\r\n                                <UploadImage />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Col span={24} className=\"gutter-row\">\r\n                          <Row className=\"align-items-center d-flex\">\r\n                            <Col span={24} md={8} lg={8} xl={6}>\r\n                              <Form.Item\r\n                                name=\"showresult\"\r\n                                label=\"Show result to users \"\r\n                                className=\"mb-0\"\r\n                              >\r\n                                <Switch onChange={onChange} />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={24} lg={6}>\r\n                              <FloatLabel label=\"Display final results as\">\r\n                                <Form.Item\r\n                                  className=\"required mb-0\"\r\n                                  name=\"result\"\r\n                                >\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"result\"\r\n                                      className=\"required\"\r\n                                    >\r\n                                      <Option value=\"1\">Pie Chart</Option>\r\n                                      <Option value=\"3\">\r\n                                        Horizontal Bar Chart\r\n                                      </Option>\r\n                                      <Option value=\"4\">\r\n                                        Vertical Bar Chart\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                      >\r\n                        <Col span={24}>\r\n                          <Row className=\"d-block\">\r\n                            <Col span={24} md={18} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Question\">\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"question\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"question\"\r\n                                    htmlFor=\"question\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={6} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Question Type\">\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"questiontype\"\r\n                                >\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"\"\r\n                                      htmlFor=\"questiontype\"\r\n                                      className=\"required\"\r\n                                    >\r\n                                      <Option value=\"1\">Single Choice</Option>\r\n                                      <Option value=\"2\">Multiple Choice</Option>\r\n                                      <Option value=\"3\">Star Rating</Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} className=\"mt-4\">\r\n                              {/* <ReactStars {...starsRating} classNames=\"mt-3\" /> */}\r\n                              {/* <Radio>Single Choice</Radio> */}\r\n                              <div className=\"d-flex flex-column flex-gap chk-opt w-25 w-md-100\">\r\n                                <span className=\"opts\">\r\n                                  <Checkbox onChange={onChange}>\r\n                                    Option 1\r\n                                  </Checkbox>\r\n                                  <span className=\"icon icon-close font-12\"></span>\r\n                                </span>\r\n                                \r\n                              </div>\r\n\r\n                              <Row>\r\n                                <Col span={24} md={6} className=\"add-opt\">\r\n                                  <MultiChoice />\r\n                                </Col>\r\n                              </Row>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <div className=\"mt-5\">\r\n                          <Button type=\"primary\" className=\"md mr-4\">\r\n                            Preview\r\n                          </Button>\r\n                          <Button\r\n                            type=\"secondary\"\r\n                            type=\"secondary\"\r\n                            htmlType=\"submit\"\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input, DatePicker } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction onChange(dates, dateStrings) {\r\n  console.log(\"From: \", dates[0], \", to: \", dates[1]);\r\n  console.log(\"From: \", dateStrings[0], \", to: \", dateStrings[1]);\r\n}\r\n\r\nclass DatetimeModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          Publish\r\n        </Button>\r\n        <Modal\r\n          title=\"Publish Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Publish\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md font-weight-md6\">\r\n                Select Date and Time to <span className=\"pr-1\">publish the Impact of Microaggressions</span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label=\"Select date and time\" value=\"\">\r\n                <Form.Item\r\n                  name=\"date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <RangePicker\r\n                    ranges={{\r\n                      Today: [moment(), moment()],\r\n                      \"This Month\": [\r\n                        moment().startOf(\"month\"),\r\n                        moment().endOf(\"month\"),\r\n                      ],\r\n                    }}\r\n                    showTime\r\n                    format=\"YYYY/MM/DD HH:mm:ss\"\r\n                    onChange={onChange}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Tooltip,\r\n  Input,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DatetimeModal from \"../modal/DateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n}\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst PreviewPoll = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser />\r\n              <Content>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/managepolls\">\r\n                      <Breadcrumb.Item>Manage Poll</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <NavLink to=\"/createpoll\">\r\n                      <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Preview Poll</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3 justify-content-between\">\r\n                  <h1 className=\"mb-0\">Preview Poll</h1>\r\n\r\n                  <Col\r\n                    span={24}\r\n                    lg={18}\r\n                    className=\"d-flex align-items-center justify-content-end\"\r\n                  >\r\n                    <Button type=\"primary\" className=\"md mr-4\">\r\n                      Back to Edit\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Col span={24} className={`mb-3 px-3 ${styles.poll_info}`}>\r\n                  <h6>\r\n                    Impact of Microagressions\r\n                    <Tooltip\r\n                      placement=\"top\"\r\n                      title=\"Info related to Impact of Microagressions\"\r\n                    >\r\n                      <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                    </Tooltip>\r\n                  </h6>\r\n                </Col>\r\n                <div className=\"mid-content\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <p className=\"font-weight-md6\">\r\n                        How much do you think this behavior impacts your ability\r\n                        to contribute at work?\r\n                      </p>\r\n                      <Row className=\"preview-que\">\r\n                        {/* <ReactStars {...starsRating} /> */}\r\n                        {/* <Radio>Your choice here</Radio> */}\r\n                        <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                          <Checkbox onChange={onChange}>Option 1</Checkbox>\r\n                          <Checkbox onChange={onChange}>Option 2</Checkbox>\r\n                          <Checkbox onChange={onChange}>Option 3</Checkbox>\r\n                        </div>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"mt-5 px-3\">\r\n                  <DatetimeModal />\r\n                  <Button type=\"secondary\" type=\"secondary\" htmlType=\"submit\">\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PreviewPoll;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert, Upload } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone, UploadOutlined } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenHotlineStepOne = ({\r\n  next,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOpenLineInfo.openelineName &&\r\n      stepOneOpenLineInfo.openelineName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.description &&\r\n      stepOneOpenLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.file &&\r\n      stepOneOpenLineInfo.file.length > 0 &&\r\n      stepOneOpenLineInfo.status &&\r\n      stepOneOpenLineInfo.sDate\r\n    ) {\r\n      showError(false);\r\n      setdisabledbtn(false);\r\n      next();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOpenline/\",\r\n        { openline_name: stepOneOpenLineInfo.openelineName },\r\n\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          sethotlineErrorUpdated(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <FloatLabel\r\n        label=\"Openeline Name\"\r\n        value={stepOneOpenLineInfo.openelineName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"openelineName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter directory name\",\r\n            },\r\n          ]}\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneOpenLineInfo.openelineName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"openelineName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"openelineName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated == \"status: false\" &&\r\n            stepOneOpenLineInfo.openelineName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneOpenLineInfo.openelineName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message=\"Sorry! This openline already exists in the system. Please use a different name.\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Description\" value={stepOneOpenLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter description\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneOpenLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label=\"Date\" value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneOpenLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Status\" value={stepOneOpenLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select status\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneOpenLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">Active</Option>\r\n              <Option value=\"4\">Inactive</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control required\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture\"\r\n            fileList={stepOneOpenLineInfo.file}\r\n            beforeUpload={(value) => handleBeforeUpload(value)}\r\n            onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n          </Upload>\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\n\r\nclass CreateOpenHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState({\r\n        employeeData: manageEmpData,\r\n      }, ()=>{\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n    \r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n          <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n              <Col span={24} lg={9} className=\"search-box\">\r\n\r\n                  <Search placeholder=\"Search User\" onSearch={this.onSearch} ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert\r\n            message=\"Please select user(s) and assign required permission(s) using Assign button.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.filterData}\r\n          rowKey=\"unique_identifier\"\r\n        />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenHotlineStepTwo);\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Upload\r\n} from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  getIconText\r\n}) => {\r\n  \r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test=\"createHotlineStepThree\" className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            placeholder=\"Openline Name\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n        {/* <DatePicker className=\"datepicker w-50\"\r\n          name=\"tDate\"\r\n          value={hotlineForm.tDate}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please select End Date date\",\r\n            },\r\n          ]}\r\n          //  onChange={(date, dateString) => handleDatePickerChange(date, dateString,'tDate')}\r\n          disabled /> */}\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                placeholder=\"Status\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">Active</Select.Option>\r\n                <Select.Option value=\"4\">Inactive</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                placeholder=\"Assigned to\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n        <Upload\r\n             action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n             listType=\"picture\"\r\n             disabled\r\n             fileList={stepOneOpenLine.file}\r\n\r\n          >\r\n                {/* <Button icon={<UploadOutlined />}>Upload</Button> */}\r\n            </Upload>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb,message } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../openlineForm/CreateOpenHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../openlineForm/CreateOpenHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../openlineForm/CreateOpenHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Add Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Assign Employee\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Review Details\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst OpenlineCreation = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n  });\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload=(value) =>{\r\n    // if (value.type !== 'image/png' || value.type !== 'image/jpg' || value.type !== 'image/svg') {\r\n    //     message.error(`The file that you attemped to upload ${value.name} is not supported`);\r\n    //     return false;\r\n    // }\r\n      // if(value.type === 'image/png'){\r\n      //   return value.type === 'image/png';\r\n      // }else if(value.type === 'image/jpg'){\r\n      //   value.type === 'image/jpg'\r\n      // }else if(value.type === 'image/svg'){\r\n      //   value.type === 'image/svg'\r\n      // }\r\n\r\n  }\r\n\r\n  const handleStepOneUpload = (value,name ) =>{ \r\n     let fileList=value.fileList.slice(-1);\r\n    \r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setStepOneOpenLine({...stepOneOpenLine,[name]:fileList})\r\n    \r\n  }\r\n\r\n  const handleReaderloaded=(readerEvt)=>{\r\n      let binaryString = readerEvt.target.result;\r\n      setStepOneOpenLine({...stepOneOpenLine,file:btoa(binaryString)})\r\n\r\n\r\n  }\r\n\r\n  const handleStepOnePreview = (value) =>{\r\n\r\n\r\n}\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: user.user_details.org_user_id,\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_openline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        openline_image:stepOneOpenLine.file[0].base64,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\", \r\n        created_by: user.user_details.org_user_id,\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>Openline Directory</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>Create Openline Directory</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Create Openline Directory Entries</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          stepOneOpenLineInfo={stepOneOpenLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneUpload = {handleStepOneUpload}\r\n                          handleBeforeUpload={handleBeforeUpload}\r\n                          handleStepOnePreview = {handleStepOnePreview}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneOpenLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          getIconText={getIconText}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpnelineCreation from \"../../components/openlineCreation/OpnelineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Openline Directory</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create Hotline entries and assign them to managers,\r\n                          <br />\r\n                          head of departments or leadership.\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button>\r\n                          {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <OpnelineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\n\r\n\r\nconst OpenlinePermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource(); \r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [ \r\n    { \r\n        title: \"Name\",\r\n         dataIndex: \"first_name\",\r\n          key: \"first_name\", \r\n          width: \"30%\",\r\n          render: (record,response) => {\r\n            return {\r\n              children: response.user.first_name,\r\n              props: {\r\n                'data-title': 'Name',\r\n              },\r\n            };\r\n          }\r\n         \r\n    },\r\n    {\r\n      title: \"Respond\",\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => ( \r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox value=\"reports\" checked={res} onChange={(e)=> handleCheck(record)} disabled></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return ( \r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlinePermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\n\r\nconst SearchEmployee = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this openline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        options={searchData}\r\n        placeholder=\"Search Employee\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchEmployee;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport OpenlinePermission from \"../table/OpenlinePermission\";\r\nimport SearchEmployee from \"../autocomplete/SearchEmployee\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nclass OpenlinePermissioModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedOpenLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      openlineId: this.props.selectedRows.openline_id,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL+\"getOpenlineAssignEmpl/\" +\r\n          this.props.selectedRows.openline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n            assignedOpenLines: res.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => { \r\n    \r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL+\"openlineAssignEmpl/\",\r\n        this.state.assignedEmp,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedOpenLines = [...this.state.assignedOpenLines];\r\n    let index = assignedOpenLines.findIndex(el => el.user_id === record.user_id);\r\n    assignedOpenLines[index] = {...assignedOpenLines[index], can_respond: !record.can_respond};\r\n    this.setState({ assignedOpenLines});\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex(el => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {...assignedEmp[aindex], can_respond: !record.can_respond};\r\n    this.setState({ assignedEmp});\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user.user_id,\r\n    };\r\n    const newArray = this.state.assignedEmp && this.state.assignedEmp.filter(function (element) {\r\n      return element.user_id !== value.user.user_id;\r\n    });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL+\"getOpenlineAssignEmpl/\" + value.openline.openline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedOpenLines, assignedEmp } = this.state;\r\n    const x = {\r\n     user:{\r\n         user_id: parseInt(options.user_id),\r\n         first_name: options.value\r\n     },\r\n     openline:{\r\n        openline_id: this.state.openlineId,\r\n      },\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n    };\r\n    const y = {\r\n      openline_id: this.state.openlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: user.user_details.org_user_id,\r\n    };\r\n\r\n    this.setState({\r\n      assignedOpenLines: [...assignedOpenLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Show</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Done\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <div>Employees with permissions to {this.state.hotLineName}</div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>\r\n              Reply to Messages, Add Notes, Status & Urgency level\r\n            </Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <OpenlinePermission\r\n            data={this.state.assignedOpenLines}\r\n            deleteRecord={this.deleteRecord}\r\n            handleCheck={this.handleCheck}\r\n          />\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchEmployee\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedOpenLines}\r\n              />\r\n              <small>Hit enter to add</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlinePermissioModal);\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass DeleteOpenlineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"openline/\" + this.props.openlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/openlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Openline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <p>Are you sure you want to delete this Openline?</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteOpenlineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteOpenlineModal from \"../../components/modal/DeleteOpenlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/editopenline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/editopenline\">Edit</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteOpenlineModal openlineId={test.openline_id} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OpenlinePermissioModal from \"./../modal/OpenlinePermissioModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport OpenlinePopover from \"../table/OpenlinePopover\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpnlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: \"Openline Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Openline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Permissions\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <OpenlinePermissioModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">Inactive</div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <OpenlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    openlines.forEach((openline) => {\r\n      openline.start_date = moment(openline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      // abc.start_date = abc.start_date.replaceAll(\"T00:00:00Z\", \"\");\r\n      openline.end_date = moment(openline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      // abc.end_date = abc.end_date.replaceAll(\"T00:00:00Z\", \"\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Openline Directory</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createopenline\">\r\n                        <Buttons value=\"Create Openline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"hotline_id\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOpnlines;\r\n","import React, { useEffect } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpnlines from \"./ShowAllOpnlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst OpenlineContainer = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, []);\r\n\r\n  return props.openlinesdata.length > 0 ? (\r\n    <ShowAllOpnlines openlines={props.openlinesdata} data={props} />\r\n  ) : (\r\n    <OpenlineDirectory data={props} />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Upload,\r\n} from \"antd\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone, UploadOutlined } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditOpenline = ({ props }) => {\r\n  const [openLineData, setOpenLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    openline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    openline_image: \"\",\r\n    status_id: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [openlineErrorUpdated, setopenlineErrorUpdated] = useState(\"\");\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date).format(\"YYYY-MM-DD\");\r\n    const eDate = moment(location.state.end_date).format(\"YYYY-MM-DD\");\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    setOpenLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      openline_id: location.state.openline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setOpenLineData({ ...openLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: value });\r\n  };\r\n\r\n  const editOpenline = (e) => {\r\n    if (\r\n      openLineData.name &&\r\n      openLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      openLineData.help_text &&\r\n      openLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      openLineData.openline_image &&\r\n      openLineData.status_id &&\r\n      openLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: openLineData.help_text,\r\n        openline_id: openLineData.openline_id,\r\n        openline_image: openLineData.openline_image[0].base64,\r\n        name: openLineData.name,\r\n        start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(openLineData.status_id),\r\n        updated_by: user.user_details.org_user_id,\r\n        created_by: user.user_details.org_user_id,\r\n      };\r\n      updateOpenLine(data);\r\n    } else {\r\n      showError(false);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/openlinedirectory\";\r\n  };\r\n\r\n  const updateOpenLine = (data) => {\r\n    const token = authHeader();\r\n    let openLineId = openLineData.openline_id;\r\n    delete openLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"openline/\" + openLineId, data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          window.location = \"/orgcc/openlinedirectory\";\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setOpenLineData({ ...openLineData, [name]: fileList });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckOpenlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOpenline/\",\r\n          { openline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setopenlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setopenlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>Edit Openline</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Form\r\n                  data-test=\"createHotlineStepOne\"\r\n                  className=\"input-md w-md-100 w-75 floating-label\"\r\n                  name=\"validate_other\"\r\n                  form={form}\r\n                >\r\n                  {error && (\r\n                    <Form.Item>\r\n                      <Alert\r\n                        message=\"Please fill the fields marked with asterisk(*)\"\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                  <FloatLabel label=\"Directory Name\" value={openLineData.name}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"directoryName\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter directory name\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <TextArea\r\n                        showCount\r\n                        maxLength={80}\r\n                        value={openLineData.name}\r\n                        onChange={(e) => handleStepOneOnChange(e)}\r\n                        onBlur={(e) => CheckOpenlineName(e)}\r\n                        id={\"name\"}\r\n                        className=\"input-control textarea-input\"\r\n                        htmlFor=\"directoryName\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                      {openlineErrorUpdated == \"status: false\" &&\r\n                        openLineData.name\r\n                          .replace(/^\\s*/, \"\")\r\n                          .replace(/\\s*$/, \"\").length > 0 &&\r\n                        openLineData.name.length > 0 && (\r\n                          <CheckCircleTwoTone\r\n                            className=\"successCheck\"\r\n                            twoToneColor=\"#52c41a\"\r\n                          />\r\n                        )}\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel\r\n                    label=\"Description\"\r\n                    value={openLineData.help_text}\r\n                  >\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"description\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter description\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <TextArea\r\n                          className=\"input-control textarea-input\"\r\n                          value={openLineData.help_text}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          id={\"help_text\"}\r\n                          htmlFor=\"description\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label=\"Date\" value=\"start_date\">\r\n                    <Form.Item className=\"input-control datepicker-wrapper\">\r\n                      <RangePicker\r\n                        className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                        name=\"start_date\"\r\n                        value={openLineData.start_date}\r\n                        disabledDate={disabledDate}\r\n                        onChange={(date) =>\r\n                          handleStepOneDatePickerChange(date, \"start_date\")\r\n                        }\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please select start date\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label=\"Status\" value={openLineData.status_id}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"status\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select status\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <Select\r\n                          placeholder=\"Status\"\r\n                          className=\"input-control w-100 w-lg-50\"\r\n                          value={openLineData.status_id}\r\n                          htmlFor=\"status\"\r\n                          onSelect={(value) =>\r\n                            handleStepOneOnSelect(value, \"status_id\")\r\n                          }\r\n                        >\r\n                          <Select.Option value=\"5\">Active</Select.Option>\r\n                          <Select.Option value=\"4\">Inactive</Select.Option>\r\n                        </Select>\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <Form.Item className=\"\">\r\n                    <Form.Item\r\n                      className=\"upload-control\"\r\n                      name=\"upload\"\r\n                      valuePropName=\"fileList\"\r\n                    >\r\n                      <Upload\r\n                        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                        listType=\"picture\"\r\n                        fileList={openLineData.openline_image}\r\n                        onChange={(value) =>\r\n                          handleStepOneUpload(value, \"openline_image\")\r\n                        }\r\n                      >\r\n                        <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                      </Upload>\r\n\r\n                      {getIconText(openLineData.openline_id) && (\r\n                        <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                          <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                            <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                              <span className=\"d-inline-flex align-items-center\">\r\n                                <a className=\"ant-upload-list-item-thumbnail\">\r\n                                  {ReactHtmlParser(openLineData.iconHtml)}\r\n                                </a>\r\n\r\n                                <span\r\n                                  className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                  title={getIconText(openLineData.openline_id)}\r\n                                >\r\n                                  {getIconText(openLineData.openline_id)}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n                  <div className=\"steps-action mt-5\">\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={editOpenline}\r\n                      data-test=\"stepOneNext\"\r\n                      style={{ margin: \"0 8px\" }}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={cancelHotline}\r\n                      data-test=\"stepOneNext\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditOpenline;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from \"./components/login/ForgotPassword\";\r\nimport ResetPassword from \"./components/login/ResetPassword\";\r\nimport Login from \"./components/login/Login\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport AddEmployee from \"./components/manageEmp/AddEmp\";\r\nimport ImportFile from \"./components/manageEmp/ImportFile\";\r\nimport CreateManually from \"./components/manageEmp/CreateManually\";\r\nimport ManagePolls from \"./components/managePolls/ManagePolls\";\r\nimport CreatePoll from \"./components/managePolls/CreatePoll\";\r\nimport PreviewPoll from \"./components/managePolls/PreviewPoll\";\r\n\r\n\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\n//fonts\r\nimport OpenlineCreation from \"./components/openlineCreation/OpnelineCreation\";\r\nimport EditOpenline from \"./components/openlineDirectory/EditOpenline\";\r\n\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc = commonForAllUsers.user_data.is_amcc_user;\r\n    isorgcc = commonForAllUsers.user_data.is_org_cc_user;\r\n    isamweb = commonForAllUsers.user_data.is_am_web_user;\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <Route path=\"/addemployee\" component={AddEmployee} />\r\n        <Route path=\"/importfile\" component={ImportFile} />\r\n        <Route path=\"/createmanually\" component={CreateManually} />\r\n        <Route path=\"/managepolls\" component={ManagePolls} />\r\n        <Route path=\"/createpoll\" component={CreatePoll} />\r\n        <Route path=\"/previewpoll\" component={PreviewPoll} />\r\n        <ProtectedRoute path=\"/changepassword\" component={ChangePassword} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route path=\"/resetpassword\" component={ResetPassword} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/edithotline\" ||\r\n          url === \"/orgcc/editopenline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editopenline\"\r\n              amorg\r\n              component={EditOpenline}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/amweb/openlinemessages\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/hotlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/openlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n            </Switch>\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url === \"/\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url.includes(\"/amcc/orgdetails\") ||\r\n            url === \"/login\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/orgdetails/:id\"\r\n                amcc\r\n                component={OrgDetails}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"pwd\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user, pwd: password.replaceAll('^\"+|\"+$', \"\") }\r\n  : { isLoggedIn: false, user: null, pwd: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        pwd: payload.pwd,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        pwd: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        pwd: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = [];\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = [];\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nfunction App() {\r\n  const timeOut = 3600000; // one hour\r\n\r\n  const onIdle = (e) => {\r\n    if(AppStorage.get('user')) {\r\n    AuthService.logout();\r\n    }\r\n  }\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        element={document}\r\n        onIdle={onIdle}\r\n        debounce={250}\r\n        timeout={timeOut}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n          <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}