{"version":3,"sources":["assets/icons/dots-icon.svg","assets/images/amcc-vector.svg","assets/images/create-hotline.svg","assets/icons/send.svg","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/icons/pencil.svg","assets/images/work-chart.svg","assets/images/no-hotlines.svg","assets/images/no-openlines.svg","assets/images/create-openline.svg","assets/images/manage-polls.svg","assets/icons/HotLine.svg","assets/icons/OpenLine.svg","assets/icons/Polls.svg","assets/icons/ManageEmp.svg","assets/icons/BroadcastMsg.svg","assets/icons/Help.svg","assets/icons/Info.svg","components/managePolls/managePoll.module.scss","utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","components/manageOrg/AccSidebar.js","assets/icons/Icon.js","containers/ShowDetails.js","components/table/Table.js","components/button/Button.js","services/auth-header.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","components/form/CreateOrgStepOne.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/modal/PrivacyPolicyModal.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/login/Login.js","components/hotlineMessages/AmWebSidebar.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/modal/AssignHotlineModal.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","utils/momentUtil.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","utils/HighlightTextHotline.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/SearchHotlineMessages.js","components/hotlineMessages/HotlineMessagesLeftSection.js","components/hotlineMessages/NoHotlineMessages.js","components/hotlineMessages/Spinner.js","components/hotlineMessages/HotlineMessages.js","components/openlineMessages/AmWebSidebar.js","utils/HighlightTextOpenline.js","components/openlineMessages/FilterPopover.js","components/openlineMessages/AddedNotes.js","components/openlineMessages/Note.js","components/openlineMessages/Activity.js","components/openlineMessages/Assigned.js","components/openlineMessages/Messages.js","components/openlineMessages/SearchOpenlineMessages.js","components/openlineMessages/OpenlineMessagesLeftSection.js","components/openlineMessages/NoOpenlineMessages.js","components/openlineMessages/OpenlineMessages.js","containers/PermissionDenied.js","components/modal/ResetPwdModal.js","components/form/EditSeededUsers.js","components/form/AddNewSeededUser.js","components/form/OrgDetails.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/manageEmp/AddEmp.js","components/manageEmp/UploadFiles.js","components/manageEmp/ImportFile.js","components/manageEmp/CreateManually.js","components/managePolls/UploadImage.js","components/managePolls/MultipleChoice.js","components/modal/DateTimeModal.js","components/managePolls/PreviewPoll.js","components/managePolls/CreatePoll.js","components/managePolls/ManagePolls.js","components/modal/ExtendEndDate.js","components/table/PollPopover.js","components/managePolls/ShowAllPolls.js","components/table/CreatePollPopover.js","actions/poll.js","components/managePolls/PollsContainer.js","components/managePolls/PollResponse.js","components/modal/EditDateTimeModal.js","components/managePolls/EditPreviewPoll.js","components/managePolls/EditPoll.js","components/managePolls/ExistingPolls.js","components/openlineForm/CreateOpenHotlineStepOne.js","components/openlineForm/CreateOpenHotlineStepTwo.js","components/openlineForm/CreateOpenHotlineStepThree.js","components/openlineCreation/OpnelineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/table/OpenlinePermission.js","components/autocomplete/SearchEmployee.js","components/modal/OpenlinePermissioModal.js","components/modal/DeleteOpenlineModal.js","components/table/OpenlinePopover.js","components/openlineDirectory/ShowAllOpenlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/openlineDirectory/EditOpenline.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/poll.js","reducers/index.js","services/stores.js","App.js","index.js","components/manageEmp/manageEmp.module.scss"],"names":["module","exports","getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","email","password","page","axios","post","response","data","userFName","AES","encrypt","user_details","first_name","toString","userLName","last_name","departmentId","department_id","orgUserId","org_user_id","endDate","end_date","startDate","start_date","userEmail","user_data","userMobile","mobile_number","orgId","organization_id","userId","user_id","amweb","is_am_web_user","amcc","is_amcc_user","amorgcc","is_org_cc_user","amidb","is_idb_user","amseeded","is_seeded_user","amapp","is_app_user","userData","JSON","stringify","clear","window","location","reload","login","dispatch","AuthService","then","type","payload","user","current","Promise","resolve","error","message","reject","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","userType","decrypt","enc","Utf8","name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","Header","Content","collapsed","toggle","setState","defaultKey","createElement","MenuUnfoldOutlined","MenuFoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","AccSidebar","ShowDetails","history","useHistory","path","record","showModal","push","orgName","identifier","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","authHeader","CommonAuthHeader","parse","tokens","access","ShowAllOrganizations","statusClicked","via","replaceAll","Date","status_id","Authorization","put","notification","config","open","description","statusOnClicked","onSearch","filterDt","filterIt","filterData","searchBy","organizations","forEach","org","nextProps","arr","searchKey","filter","obj","Object","keys","some","title","dataIndex","width","render","children","Pencil","placeholder","Button","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","orgIdCount","orgNameCount","setOrgNameAlreadyExists","orgNameAlreadyExists","Form","useForm","form","showError","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","organization_name","res","CheckOrganizationName","autoComplete","maxLength","replace","CheckCircleTwoTone","twoToneColor","organizationId","validateStatus","status1","onSelect","Option","s1Date","date","disabledDate","moment","startOf","htmlType","preventDefault","DeleteModal","visible","show","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","deleteOrg","handleCancel","delete","hotlineId","catch","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","lastName","mobile","date2","format","orgID","status2","fromStepTwo","showAddSeededUserForm","addSeededUser","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleMobile","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","fNameCount","lNameCount","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","passwordValidationError","showPasswordValidationError","stepTwoPrev","s2Date","test","target","validateEmailAddress","country","userID","CreateOrgStepThree","loader","apiError","createNewOrganization","addSeededUserFromThirdStep","disabled","spinning","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","setLoader","setApiError","stepOneOrganization","setStepOneOrganization","setorgNameExists","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","setOrgNameCount","setOrgIDCount","setFNameCount","setLNameCount","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","organization","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","hotLineId","manageOrgData","manageOrg","setStatusClicked","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","flag","property","manageEmp","PrivacyPolicyModal","layout","wrapperCol","tailLayout","ForgotPassword","handleLogin","onChangeUsername","onChangePassword","loading","isamcc","isorgcc","isamweb","isAuthenticated","commonForAllUsers","canSubmit","Amccvector","onSubmit","ref","c","initialValues","remember","rules","required","ResetPassword","Login","isEnabled","AmWebSidebar","ChangePassword","currentPwd","newPwd","confirmPwd","pwd","setPwd","passwordChanged","setPasswordChanged","setError","handleOnChange","Password","validatePassword","getFieldValue","validator","_","dependencies","hasFeedback","old_password","new_password","confirm_password","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","setNameValidHandle","hotlineErrorUpdated","iconText","setdisabledbtn","directoryName","showCount","hotline_name","CheckHotlineName","sDate","status","valuePropName","hotlineIconId","ReactHtmlParser","iconHtml","AssignHotlineModal","handleCheck","selectedRow","stepOneHotLineValues","permissions","getCheckValues","setVisible","a","async","per","find","p","checked","can_respond","CreateHotlineStepTwo","employeeData","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","prevProps","rowSelection","selectedRowKeys","margin","TextArea","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setHotlineErrorUpdated","setStepTwoHotLine","values","id1","reduce","accumulator","currentValue","can_view_reports","created_by","concat","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","HotlinePopover","DeleteHotlineModal","hotline_id","hotlineName","GridPermission","deleteRecord","permissionData","setPermissionaData","changeDataSource","editable","text","onDelete","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","formatAsYYYYMMDDHHmmss","formatAsHHmmss","formatAsMMMDDYYYY","formatAsHHmm","formatAsYYYYMMDD","formatAsDDMMYYYY","ShowAllHotlines","updated_by","hotlines","hotline","utc","local","hotlinesdata","hotlinedata","getHotlines","highlightText","str","conversation_id","toLowerCase","responder_conversation_name","RegExp","match","itemMessage","setStatus","urgencyLevel","setUrgencyLevel","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","undefined","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalInput","finalUrl","searchString","filteredData","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","convMsg","setConvMsg","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","setSearchBy","getHotlineMessages","document","getElementById","note","assigne","classList","count","highlightedMessage","getElementsByTagName","scrollIntoView","block","lastMessage","getElementsByClassName","messagevalue","convID","onSendMessageClick","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","messageLength","unread_messages_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","textarea","querySelector","Send","SearchHotlineMessages","useRef","trim","statusFil","statusFilterData","urgencyFilterData","ugc","hotlineFilterData","ht","setSearchString","setConversations","HoltineMessagesLeftSection","showdiv","unreadCount","closable","onClose","removeFilterLevel","conversations","onConversationClick","fontWeight","dataForReceiveAPI","getConversations","NoHotlines","opacity","NoHotlineMessages","Spinner","tip","HotlineMessages","initialConv","setInitialConv","setUrgencyFilterData","setHotlineFilterData","setStatusFilterData","setRemoveFilter","setConversation","setSocket","setNewState","setUnreadCount","allConversations","setAllConversations","setShowDiv","setChatDiv","webSocket","newInitiatedConv","unSetFilters","allConversationIds","mergedConversations","convoID","increaseOverallCountDuringFilters","WebSocket","onopen","onmessage","newConvo","sendSocketMessage","lastWord","words","urgency","onclose","onerror","accessed_users","selectedConv","urgencyState","statusState","hotlineState","conversationIds","updatedNewConvo","conversationsToDisplay","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","totalFiltersApplied","filterSocket","updatedConversations","increaseOverallCount","displayNewConvAtTop","dummyArray","splice","newConvFromDiffUser","incomingConversation","updatedAllConversations","totalConversations","updatedConversation","allAppliedFilters","urlWithFilters","disabledCount","LeftOutlined","receivedConversation","urgencyLevels","setAppliedFilters","search","openline_name","openlineName","openline","openline_id","setOpenline","openlinesData","setOpenlinesData","oldOpenline","setOldOpenline","selectedOldOpenline","setSelectedOldOpenline","selectedOpenline","setSelectedOpenline","removeOpenline","rmOpen","openlineOptions","openlineId","listOfAssignedUsers","getOpenlineMessages","SearchOpenlineMessages","openlineFilterData","OpenlineMessagesLeftSection","NoOpenlines","NoOpenlineMessages","CreateOpenline","OpenlineMessages","setOpenlineFilterData","openlineState","openlineFilter","PermissionDenied","justifyContent","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","EditSeededUser","handleEditOk","handleEditCancel","seededUserName","seededUserDetails","handleSeededUserOnChange","handleSeededUserDatePickerChange","validateMobile","handleSeededUserOnSelect","AddNewSeededUser","handleAddSeededUser","handleAddSeededUserCancel","OrgDetails","modalError","showModalError","setEmailValidationError","setMobileValidationError","setSeededUserName","seededUserEmail","setSeededUserEmail","setSeededUserDetails","editVisible","setEditVisible","showAddSeededUser","setShowAddSeededUser","org_id","date1","organizationDetails","setOrganizationDetails","useNotification","api","contextHolder","computedMatch","appendedUsers","seeded_user","soft_delete","finalUsers","onSeededUserEditSubmit","info","editOrg","onFinish","handleOrganizationOnSelect","userName","orgDetails","EditSeededUsers","newSeededUser","EditOrg","setOrganizationName","deleteClick","setDeleteClick","orgStatus","setOrgStatus","handleOrganizationOnChange","handleOrganizationDatePickerChange","EditHotLine","hotLineData","sethotLineData","hotlineStatus","setHotlineStatus","seticonHtml","sethotlineErrorUpdated","useLocation","eDate","dates","setIcon","saveHotLine","AddEmployee","styles","no_sidebar","xl","box_bordered","box_bordered_active","Dragger","Upload","multiple","action","file","fileList","success","UploadFiles","ImportFiles","CreateManually","UploadImage","handleStepOneUpload","handleBeforeUpload","handleOnRemove","handlePollImagePreview","poll","listType","beforeUpload","onRemove","onPreview","accept","previewVisible","previewTitle","previewImage","MultiChoice","tags","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","tag","setSingleChoiceResponse","showInput","input","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","tagsOption","pollResponse","onPressEnter","isLongTag","tagElem","edit_tag","onDoubleClick","add_tag","DatetimeModal","onPublish","disabledStartDate","disabledEndDate","pollData","pollStartDate","range","end","result","disabledDateTime","now","disabledHours","hour","disabledMinutes","minutes","disabledSeconds","seconds","onChangeStartDate","handlePollStartDatePickerChange","onChangeEndDate","handlePollEndDatePickerChange","onChangeStartTime","time","handlePollStartTimePickerChange","onChangeEndTime","handlePollEndTimePickerChange","pollName","utils","DateFnsUtils","container","justify","pollStartTime","KeyboardButtonProps","pollEndDate","pollEndTime","starsRating","isHalf","activeColor","newValue","PreviewPoll","setPollsDate","backtoEdit","isImage","attachmentName","poll_info","pollHelpText","pollQuestion","pollQuestionType","pollRatingResponse","PaperClipOutlined","pollDocument","base64","download","originFileObj","DateTimeModal","optionsData","option_text","create_poll","image","show_result_to_users","poll_result_chart_type","pollChartType","image_name","poll_question_type","question","momentUtil","start_time","end_time","document_name","CreatePoll","pollImageValidation","setPoll","pollError","setpollError","previewPoll","setPreviewPoll","chartError","showChartError","uploadError","showuploadError","setIsImage","setAttachmentName","onCreateChange","handlePollOnSelect","checkChartType","checkDoucmentType","fileType","getBase64","reader","FileReader","readAsDataURL","onload","isPollNameDuplicate","sm_textarea","xlsxfileExt","pptxfileExt","docfileExt","csvfileExt","isValidDoc","isDocument","isLt5M","isLt10M","preview","url","substring","lastIndexOf","classNames","ManagePoll","createPoll","setCreatePoll","ManagePolls","ExtendEndDate","poll_id","pollsData","extendPollDate","OpenlinePopover","ShowAllPolls","sdate","smonth","syear","finalStartDate","currentDate","startTime","startTimeWithDate","polls","PollPopover","getPollAsync","getPolls","pollsdata","PollResponse","endTime","edate","emonth","eyear","EditPreviewPoll","editPoll","EditDateTimeModal","EditPoll","pollOptionText","pollId","pollID","uid","finalOptions","assign","poll_option_id","isMoment","update_poll","callback","outputFormat","canvas","ctx","getContext","img","Image","crossOrigin","height","drawImage","dataURL","toDataURL","call","convertImgToBase64","base64Img","ExistingPolls","CreateOpenHotlineStepOne","imageError","stepOneOpenLineInfo","handleStepOnePreview","openelineName","CreateOpenHotlineStepTwo","stepTwoOpenLine","CreateOpenHotlineStepThree","stepOneOpenLine","OpenlineCreation","setImageError","imagename","setStepOneOpenLine","setStepTwoOpenLine","filename","create_openline","openline_image","openline_image_name","OpenlineDirectory","OpnelineCreation","OpenlinePermission","SearchEmployee","OpenlinePermissioModal","assignedOpenLines","DeleteOpenlineModal","ShowAllOpenlines","openlines","openlinesdata","getOpenlines","EditOpenline","ImgfileList","openLineData","setOpenLineData","openlineErrorUpdated","setopenlineErrorUpdated","updateOpenLine","openLineId","toImgDataURL","xhr","XMLHttpRequest","responseType","fr","CheckOpenlineName","Routes","EditProfile","ImportFile","exact","amorg","HotlineContainer","OpenlineContainer","PollsContainer","OrganizationContainer","decryptedPassword","localPwd","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","idleTimer","idleModal","showIdleModal","logoutModal","showLogoutModal","timedOut","setTimedOut","onIdle","reset","onAction","onActive","debounce","timeout","ReactDOM"],"mappings":"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","file":"static/js/main.996b7ac5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-openlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-openline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-polls.648b5bd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/HotLine.8e399cf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/OpenLine.19ed48f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Polls.797dc4b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/ManageEmp.b979556a.svg\";","module.exports = __webpack_public_path__ + \"static/media/BroadcastMsg.b628c864.svg\";","module.exports = __webpack_public_path__ + \"static/media/Help.1b17639f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Info.a71a0872.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sm_textarea\":\"managePoll_sm_textarea__2gyc1\",\"poll_info\":\"managePoll_poll_info__35K0P\",\"circle_white\":\"managePoll_circle_white__1jSAt\",\"select_md\":\"managePoll_select_md__30Qzr\",\"ant-select-dropdown\":\"managePoll_ant-select-dropdown__38nnC\",\"edit_tag\":\"managePoll_edit_tag__zHGBk\",\"add_tag\":\"managePoll_add_tag__2VJTM\",\"ant-tag\":\"managePoll_ant-tag__3TI5u\"};","const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";\r\nexport const WEBSOCKET_HOTLINE_URL = \"ws://10.0.6.10:8000/ws/hotlineMessages/\";\r\nexport const WEBSOCKET_OPENLINE_URL = \"ws://10.0.6.10:8000/ws/openlineMessages/\";","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      const data = response.data;\r\n      const userFName = CryptoJS.AES.encrypt(\r\n        data.user_details?.first_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userLName = CryptoJS.AES.encrypt(\r\n        data.user_details?.last_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const departmentId = CryptoJS.AES.encrypt(\r\n        data.user_details?.department_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgUserId = CryptoJS.AES.encrypt(\r\n        data.user_details?.org_user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const endDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.end_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const startDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.start_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userEmail = CryptoJS.AES.encrypt(\r\n        data.user_data?.email,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userMobile = CryptoJS.AES.encrypt(\r\n        data.user_data?.mobile_number,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgId = CryptoJS.AES.encrypt(\r\n        data.user_data?.organization_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userId = CryptoJS.AES.encrypt(\r\n        data.user_data?.user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amweb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_am_web_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_amcc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amorgcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_org_cc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amidb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_idb_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amseeded = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_seeded_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amapp = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_app_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userData = {\r\n        ...data,\r\n        user_data: {\r\n          ...data.user_data,\r\n          email: userEmail,\r\n          mobile_number: userMobile,\r\n          organization_id: orgId,\r\n          user_id: userId,\r\n          is_am_web_user: amweb,\r\n          is_amcc_user: amcc,\r\n          is_app_user: amapp,\r\n          is_org_cc_user: amorgcc,\r\n          is_idb_user: amidb,\r\n          is_seeded_user: amseeded,\r\n        },\r\n        user_details: {\r\n          ...data.user_details,\r\n          first_name: userFName,\r\n          last_name: userLName,\r\n          department_id: departmentId,\r\n          org_user_id: orgUserId,\r\n          end_date: endDate,\r\n          start_date: startDate,\r\n        },\r\n      };\r\n      AppStorage.set(\"user\", JSON.stringify(userData));\r\n      AppStorage.set(\r\n        \"current\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          current: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\nexport const POLL_SUCCESS = \"POLL_SUCCESS\";\r\nexport const POLL_FAIL = \"POLL_FAIL\";\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser } = this.props.userRole;\r\n    if (amCCUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"Org CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM WEB\", \"anonymoose\").toString()\r\n      );\r\n    }\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{userType}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">Edit Profile</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  AM WEB\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  AM CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  Org CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  AM CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  AM WEB\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  Org CC\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>Change Password</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>Sign Out</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{userType}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    }\r\n    const password = props.current.includes('\"')\r\n      ? props.current.slice(1, -1)\r\n      : props.current;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log('INTERVAL');\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Anonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, current } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    current,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"employees\")) {\r\n        defaultKey = \"4\";\r\n      } else if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      } else if (this.props.data.location.pathname.includes(\"poll\")) {\r\n        defaultKey = \"3\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/hotlinedirectory\">Hotlines</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/openlinedirectory\">Openlines</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/pollsdirectory\"> Polls</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/manageemployees\">Manage Employees</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Broadcast Messages\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-help\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Help\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Info\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              Info\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { manageemp } from \"../../assets/icons/Icon\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/amcc/manageorganizations\">Manage Organizations</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          {/* <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              Info\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              Help\r\n            </a>\r\n          </div> */}\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","\r\nexport const hotline = require('./HotLine.svg')\r\nexport const openline = require('./OpenLine.svg')\r\nexport const polls = require('./Polls.svg')\r\n// export const iconManageOrg = require('./ManageOrg.svg')\r\nexport const manageemp = require('./ManageEmp.svg')\r\nexport const broadcastmsg = require('./BroadcastMsg.svg')\r\nexport const help = require('./Help.svg')\r\nexport const info = require('./Info.svg')","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ShowDetails = (props) => {\r\n  const history = useHistory();\r\n  const path = `/amcc/orgdetails/${props.record.organization_id}`;\r\n\r\n  const showModal = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.orgName ? (\r\n        <a onClick={showModal}>{props.record.name}</a>\r\n      ) : props.orgId ? (\r\n        <a onClick={showModal}>{props.record.identifier}</a>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport ShowDetails from \"../../containers/ShowDetails\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport moment from \"moment\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      searchBy: \"\",\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations.forEach((org) => {\r\n      org.start_date = org.start_date.replaceAll(\"-\", \" / \");\r\n      org.end_date = org.end_date.replaceAll(\"-\", \" / \");\r\n      // org.start_date = moment(org.start_date)\r\n      //   .utc()\r\n      //   .local()\r\n      //   .format(\"MM / DD / YYYY\");\r\n      // org.end_date = moment(org.end_date)\r\n      //   .utc()\r\n      //   .local()\r\n      //   .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.organizations !== nextProps.organizations) {\r\n      nextProps.organizations.forEach((org) => {\r\n        org.start_date = org.start_date.replaceAll(\"-\", \" / \");\r\n        org.end_date = org.end_date.replaceAll(\"-\", \" / \");\r\n        // org.start_date = moment(org.start_date)\r\n        //   .utc()\r\n        //   .local()\r\n        //   .format(\"MM / DD / YYYY\");\r\n        // org.end_date = moment(org.end_date)\r\n        //   .utc()\r\n        //   .local()\r\n        //   .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.organizations }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        name: record.name,\r\n        identifier: record.identifier,\r\n        organization_id: record.organization_id,\r\n        start_date: record.start_date.replaceAll(\" / \", \"-\"),\r\n        end_date: endDate.replaceAll(\"/\", \"-\"),\r\n        // start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n        //   \"DD-MM-YYYY\"\r\n        // ),\r\n        // end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 2 : 1,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: `Status of ${record.name} has been changed successfully.`,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Organization Name \",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgName />,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Organization Id\",\r\n        dataIndex: \"\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgId />,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date \",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n        // render: () => <div className=\"secondary-tag-rounded tag\">Inactive</div>,\r\n      },\r\n      {\r\n        title: \"Actions\",\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Organizations </h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value=\"Create Organization\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  key=\"manageOrg\"\r\n                  rowKey=\"identifier\"\r\n                  columns={columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  orgIdCount,\r\n  orgNameCount,\r\n  setOrgNameAlreadyExists,\r\n  orgNameAlreadyExists\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganization/\",\r\n        { organization_name: stepOneOrganizationInfo.organizationName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgNameAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      if (orgNameAlreadyExists === \"status: false\") {\r\n        showError(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Organization Name\"\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationName(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                />\r\n                {orgNameAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationName\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationName.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgNameAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message=\"Sorry! This organization already exists in the system. Please use a different name.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Organization Id\"\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={20}\r\n                />\r\n              </Form.Item>\r\n              {orgIdCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Status\" value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-100\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">Active</Option>\r\n                    <Option value=\"2\">Inactive</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Date\" value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.deleteOrg) this.props.handleCancel();\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg ? (\r\n          <Button onClick={this.showBothModals}>Delete</Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleOk}\r\n            centered\r\n            width={700}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Cancel\"\r\n            cancelText=\"Delete\"\r\n          >\r\n            <p>\r\n              You are about to Delete the Organization{\" \"}\r\n              <strong>{this.props.org}</strong>. Deleting Organization would\r\n              Delete all records associated with it. Are you sure you want to\r\n              Delete Organization <strong>{this.props.org}</strong>?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.user.firstName}?</p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.user.firstName}?</p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length === 1 ? (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            <p>There should be at least one seeded user.</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            <p>Are you sure you want to delete this?</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              Edit\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              Edit\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <Button>Edit</Button>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button, notification } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const data = {\r\n      first_name: record.firstName,\r\n      last_name: record.lastName,\r\n      email: record.email,\r\n      mobile_number: record.mobile,\r\n      status_id: via === \"Active\" ? 2 : 1,\r\n      start_date: record.date2[0]\r\n        ? moment(record.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: record.date2[1]\r\n        ? moment(record.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: this.props.orgID,\r\n    };\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.firstName} has been changed successfully.`,\r\n      });\r\n      this.props.statusOnClicked();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Mobile\",\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile.includes(\"+\") ? mobile : \"+\" + mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n            record.status2 === 1 || record.status2 === \"1\" ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Row className=\"content-center pt-0\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() =>\r\n                this.props.fromStepTwo\r\n                  ? this.props.showAddSeededUserForm()\r\n                  : this.props.addSeededUser()\r\n              }\r\n            >\r\n              Add Seeded User\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n        <Grid\r\n          rowKey=\"unique_identifier\"\r\n          columns={columns}\r\n          data={this.state.data}\r\n        />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport moment from \"moment\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleMobile,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n  fNameCount,\r\n  lNameCount,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n      showPasswordValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    // var reIndian = /^\\+\\d{12}$/;\r\n    // var reInternational = /^\\+\\d{11}$/;\r\n    if (stepTwoOrganizationInfo.mobile.length > 10) {\r\n      showMobileValidationError(false);\r\n    } else {\r\n      showMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"First Name\"\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {fNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Last Name\"\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {lNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validatePassword(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n                {passwordValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid password.\r\n                    It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Email Id\" value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid email address.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Date\" value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Status\" value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    placeholder=\"Status\"\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">Active</Option>\r\n                    <Option value=\"2\">Inactive</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <PhoneInput\r\n                  country={\"in\"}\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={handleMobile}\r\n                  onBlur={validateMobile}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid mobile number.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                Add User\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                Update\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            Back\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            Next\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              Back\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  loader,\r\n  apiError,\r\n  handleOk,\r\n  handleCancel,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">Organization Details</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Modal\r\n            visible={apiError}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            centered\r\n            width={500}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            {\" \"}\r\n            <p>There is some difficulty while creating this organization.</p>{\" \"}\r\n          </Modal>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Organization Name\"\r\n                value={stepOneOrganizationInfo.organizationName}\r\n              >\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Organization Id\"\r\n                value={stepOneOrganizationInfo.organizationId}\r\n              >\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={stepOneOrganizationInfo.status1}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      placeholder=\"Status\"\r\n                      className=\"input-control w-100 w-lg-100\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                      disabled\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Select Date\" value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Col\r\n            span={24}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <h6 className=\"py-3 mb-0\">Seeded Users Details </h6>\r\n            <div>\r\n              {\" \"}\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => addSeededUserFromThirdStep()}\r\n              >\r\n                Add Seeded User\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n\r\n          {/* <div className=\"avatar-wrapper pt-2 pb-4\">\r\n          <Avatar>{stepTwoOrganizationInfo.userName?.charAt(0)}</Avatar>\r\n          <span className=\"md-name\">{stepTwoOrganizationInfo.userName}</span>\r\n        </div> */}\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <AssignedUsers\r\n                seededUsers={seededUsers}\r\n                handleEditUser={handleEditUser}\r\n                handleDelete={handleDelete}\r\n                fromStepThree\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Form.Item>\r\n            <div className=\"steps-action mt-5\">\r\n              <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n                Back\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n                Create and Invite\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Spin>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Organization Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Seeded User Details\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Confirm Details\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [orgNameAlreadyExists, setorgNameExists]=useState(\"\");\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n   // password: \"\",\r\n    s2Date: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = { ...stepTwoOrganization, userId: userID };\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n      //  password: \"\",\r\n        s2Date: \"\",\r\n        mobile: \"\",\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n     // password: \"\",\r\n      s2Date: \"\",\r\n      mobile: \"\",\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const setOrgNameAlreadyExists = (value)=>{\r\n    setorgNameExists(value);\r\n  }\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    if (e.target.id === \"organizationId\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (\r\n      e.target.id === \"organizationName\" &&\r\n      e.target.value.length === 80\r\n    ) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    setLoader(true);\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n       // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.s2Date[0]\r\n          ? moment(value.s2Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.s2Date[1]\r\n          ? moment(value.s2Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"saveOrganization/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/amcc/manageorganizations\";\r\n      })\r\n      .catch((error) => {\r\n        if (error.message.includes(\"500\")) {\r\n          setApiError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>Organizations</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Organization</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Organization</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            orgNameCount={orgNameCount}\r\n                            orgIdCount={orgIdCount}\r\n                            setOrgNameAlreadyExists={setOrgNameAlreadyExists}\r\n                            orgNameAlreadyExists={orgNameAlreadyExists}\r\n\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                            handleOk={handleOk}\r\n                            handleCancel={handleCancel}\r\n                            loader={loader}\r\n                            apiError={apiError}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Manage Organizations</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create a new Org Id for your client's organization\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            Create Organization\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      const orgId = CryptoJS.AES.decrypt(\r\n        orgcc_user.user_data.organization_id,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8);\r\n      return parseInt(orgId);\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n  getPolls(){\r\n    return axios.get(BASE_URL + \"poll/\", options);\r\n\r\n  }\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, [statusClicked]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return props.manageOrgData?.length > 0 ? (\r\n    <ShowAllOrganizations\r\n      organizations={props.manageOrgData}\r\n      statusOnClicked={statusOnClicked}\r\n    />\r\n  ) : (\r\n    <CreateOrg />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      // { title: \"Access\", dataIndex: [\"Access\",\"am_web\"], key: \"am_web \", width: \"21%\" },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        key: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag = false;\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n                flag = true;\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n                flag = true;\r\n              }\r\n              if (property == \"app_user\") {\r\n                if (!flag) {\r\n                  property = \"APP\";\r\n                }\r\n              }\r\n\r\n              if (test.length == 0) {\r\n                test += property;\r\n              } else if (property !== \"app_user\") {\r\n                if (test.includes(\"APP\")) {\r\n                  test = property;\r\n                } else {\r\n                  test += \", \" + property;\r\n                }\r\n              }\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: (\r\n              <div className=\"primary-tag-rounded tag\">\r\n                <span className=\"circle mr-1\"></span>Active\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n        // render: () => <div className=\"secondary-tag-rounded tag\">Inactive</div>,\r\n      },\r\n      {\r\n        title: \"Actions\",\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover />,\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Manage Employees</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          lg={9}\r\n                          className=\"ml-0 ml-lg-4 mt-2 mt-lg-0\"\r\n                        >\r\n                          <Select\r\n                            className=\"w-100 w-md-75\"\r\n                            defaultValue=\"Permissions\"\r\n                            disabled\r\n                          >\r\n                            <Option value=\"1\" defaultValue>\r\n                              1\r\n                            </Option>\r\n                            <Option value=\"2\">2</Option>\r\n                          </Select>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Buttons value=\"Add Employee\" />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"unique_identifier\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        See\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          Privacy Policy\r\n        </Button>\r\n        <Modal\r\n          title=\"Privacy Policy\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND\r\n              PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR\r\n              SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY\r\n              POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF\r\n              YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR\r\n              INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR\r\n              ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF\r\n              THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY\r\n              POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Anonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Forgot Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Enter your registered email address to request a password\r\n                  reset link.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    REQUEST PASSWORD RESET LINK\r\n                  </Button>\r\n                </Form.Item>\r\n\r\n                <div className=\"justify-content-center d-flex\">\r\n                <Button\r\n                          type=\"link\"\r\n                          className=\"link\"\r\n                        >\r\n                          Back to <b className=\"pl-1\">Sign In</b>\r\n                        </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Anonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Reset Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Set a new password for your account.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Password\">\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <FloatLabel label=\"Confirm Password\">\r\n                  <Form.Item\r\n                    name=\"confirmpassword\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please confirm your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    RESET PASSWORD\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n  //  const checkSoftDelete = JSON.parse(AppStorage.get(\"user\"));\r\n  //  console.log(\"checkSoftDelete\",checkSoftDelete)\r\n\r\n  //  if(checkSoftDelete.user_data.soft_delete){\r\n     const isEnabled = this.canSubmit();\r\n     if (isLoggedIn) {\r\n       if (isorgcc) {\r\n         return <Redirect to=\"/orgcc/manageemployees\" />;\r\n       } else if (isamweb) {\r\n         return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n       } else if (isamcc) {\r\n         return <Redirect to=\"/amcc/manageorganizations\" />;\r\n       }\r\n     }\r\n  //  }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Anonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                Login to manage AnonyMoose eco-system. This includes employees\r\n                eligible to use the app and/or components such as Hotlines,\r\n                Openlines, Polls and Surveys, Broadcast Messages and access to\r\n                different features of the \"Insights Dashboard\", through set of\r\n                assignable permissions.\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Sign In</h2>\r\n              </Row>\r\n\r\n              <Form\r\n                className=\"floating-label\"\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\" value={this.state.email}>\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <FloatLabel label=\"Password\" value={this.state.password}>\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <div className=\"forgot-pwd\">\r\n                  <a href=\"#\">Forgot Password</a>\r\n                </div>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    disabled={!isEnabled}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={() => {\r\n                      this.handleLogin();\r\n                    }}\r\n                  >\r\n                    SIGN IN\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">Hotlines Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Hotline Reports\r\n            </Menu.Item> */}\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">Openline Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Openline Reports\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Poll Results\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Broadcast Messages\r\n            </Menu.Item> */}\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Info\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, Modal, Alert } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport AmWebSidebar from \"../hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst ChangePassword = (props) => {\r\n  const type = AppStorage.get(\"userType\");\r\n  const userType = type\r\n    ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n    : \"\";\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n  const [passwordChanged, setPasswordChanged] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    showPasswordValidationError(false);\r\n  }, []);\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (pwd.newPwd === pwd.confirmPwd && !passwordValidationError) {\r\n      axios\r\n        .put(BASE_URL + \"changepassword/\", data, options)\r\n        .then(() => {\r\n          setError(false);\r\n          setPasswordChanged(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n            setError(true);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Change Password</h1>\r\n                  {/* <div className=\"d-block w-100 pl-1\">\r\n                    <small>\r\n                      Your password was last modified on{\" \"}\r\n                      <span className=\"font-weight-bold\">22/04/2020</span>{\" \"}\r\n                    </small>\r\n                  </div> */}\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Modal\r\n                    visible={passwordChanged}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    width={350}\r\n                    okButtonProps={{\r\n                      children: \"Custom OK\",\r\n                    }}\r\n                    cancelButtonProps={{ style: { display: \"none\" } }}\r\n                    okText=\"OK\"\r\n                  >\r\n                    <p>\r\n                      Your password has been changed successfully. Please login\r\n                      again with your new password.\r\n                    </p>\r\n                  </Modal>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Old Password is wrong.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <FloatLabel\r\n                                label=\"Current Password\"\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:\r\n                                        \"Please enter your current password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"New Password\"\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:\r\n                                        \"Please enter your new password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                    onBlur={(e) => validatePassword(e)}\r\n                                  />\r\n                                </Form.Item>\r\n                                {passwordValidationError && (\r\n                                  <Alert\r\n                                    message=\"Please enter a valid password.\r\n                                    It should be atleast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Confirm Password\"\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: \"Please confirm your password!\",\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                      validator(_, value) {\r\n                                        if (\r\n                                          !value ||\r\n                                          getFieldValue(\"newpassword\") === value\r\n                                        ) {\r\n                                          return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(\r\n                                          \"The two passwords that you entered do not match!\"\r\n                                        );\r\n                                      },\r\n                                    }),\r\n                                  ]}\r\n                                  dependencies={[\"newpassword\"]}\r\n                                  hasFeedback\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <> \r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          Add Icon\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title=\"Add Icon\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Add\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div className={this.state.ImageId === '1' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={1} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Sexual Harrasment\">\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div className={this.state.ImageId === '2' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={2} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Violence\">\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '3' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={3} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Racism\">\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '4' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={4} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Cyber Bullying\">\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '5' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={5} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Fight\">\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '6' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={6} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Discrimination\">\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '7' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={7} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Slap\">\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.directoryName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      if (hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0], \"hotlineErrorUpdated\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <FloatLabel\r\n        label=\"Directory Name\"\r\n        value={stepOneHotLineInfo.directoryName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"directoryName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter directory name\",\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneHotLineInfo.directoryName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"directoryName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"directoryName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated === \"status: false\" &&\r\n            stepOneHotLineInfo.directoryName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneHotLineInfo.directoryName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message=\"Sorry! This hotline already exists in the system. Please use a different name.\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Description\" value={stepOneHotLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter description\",\r\n            },\r\n          ]}\r\n        >\r\n          {/* {hotlineForm.description.length<15 &&\r\n        <Alert message=\"Please enter more the 15 characters in the description below\" type=\"info\"  showIcon></Alert>\r\n        } */}\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneHotLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Date\" value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneHotLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Status\" value={stepOneHotLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select status\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneHotLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">Active</Option>\r\n              <Option value=\"4\">Inactive</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button, Table } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        Assign\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText=\"Done\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <div>\r\n          Assign Permissions for <b>{stepOneHotLineValues.directoryName}</b>{\" \"}Hotline\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n<div>\r\n        <Row className=\"mt-2 mt-lg-5\">\r\n          <Col span={6}></Col>\r\n          <Col span={14} className=\"small text-center\">\r\n            Reply to Messages, Add Notes, Status & Urgency level\r\n          </Col>\r\n        </Row>\r\n        {selectedRow &&\r\n          selectedRow.map((item) => {\r\n            let per = permissions.find((p) => p.user_id === item.user_id);\r\n            return (\r\n              <Row className=\"mt-3 d-flex justify-content-center\">\r\n                <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                <Col span={10}>\r\n                  <Checkbox\r\n                    checked={per && per.can_respond === 1 ? true : false} disabled\r\n                    onChange={(e) => handleCheck(item)}\r\n                  ></Checkbox>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n          </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState({\r\n        employeeData: manageEmpData,\r\n      },()=>{\r\n        this.onSearch(\"\");\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n    \r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n          <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n              <Col span={24} lg={9} className=\"search-box\">\r\n\r\n                  <Search placeholder=\"Search User\" onSearch={this.onSearch}></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert\r\n            message=\"Please select user(s) and assign required permission(s) using Assign button.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.filterData}\r\n          rowKey=\"unique_identifier\"\r\n        />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText\r\n}) => {\r\n  \r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test=\"createHotlineStepThree\" className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id={\"directoryName\"}\r\n            className=\"input-control textarea-input\"\r\n            placeholder=\"Directory Name\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n        {/* <DatePicker className=\"datepicker w-50\"\r\n          name=\"tDate\"\r\n          value={hotlineForm.tDate}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please select End Date date\",\r\n            },\r\n          ]}\r\n          //  onChange={(date, dateString) => handleDatePickerChange(date, dateString,'tDate')}\r\n          disabled /> */}\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                placeholder=\"Status\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">Active</Select.Option>\r\n                <Select.Option value=\"4\">Inactive</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                placeholder=\"Assigned to\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Add Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Assign Employee\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Create Directory\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n\r\n  });\r\n\r\n  const [hotlineErrorUpdated,setHotlineErrorUpdated] = useState(\"\");\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const setNameValidHandle = (value, name) => {\r\n    setHotlineErrorUpdated(value)\r\n  }\r\n\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by:  parseInt(\r\n          CryptoJS.AES.decrypt(user.user_details.org_user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by:  parseInt(\r\n          CryptoJS.AES.decrypt(user.user_details.org_user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        ),\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>Hotline Directory</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>Create Hotline Directory</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Create Hotline Directory Entries</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          stepOneHotLineInfo={stepOneHotLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          setNameValidHandle={setNameValidHandle}\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          hotlineErrorUpdated={hotlineErrorUpdated}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          getIconText={getIconText}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Hotline Directory</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create Hotline entries and assign them to managers,\r\n                          <br />\r\n                          head of departments or leadership.\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button>\r\n                          {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <HotlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Hotline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <p>Are you sure you want to delete this hotline?</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/edithotline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/edithotline\">Edit</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteHotlineModal\r\n          hotlineId={test.hotline_id}\r\n          hotlineName={test.name}\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\n\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource(); \r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [ \r\n    { title: \"Name\", dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: \"Respond\",\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => ( \r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox value=\"reports\" checked={res} onChange={(e)=> handleCheck(record)} disabled></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return ( \r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  //const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n     // setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        //value={value}\r\n        options={searchData}\r\n        placeholder=\"Search Employee\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getHotlineAssignEmpl/\" + this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedHotLines[index] = {\r\n      ...assignedHotLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedHotLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"getHotlineAssignEmpl/\" + value.hotline_id, options)\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Show</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Done\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <div>Employees with permissions to {this.state.hotLineName}</div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>\r\n              Reply to Messages, Add Notes, Status & Urgency level\r\n            </Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <GridPermission\r\n            data={this.state.assignedHotLines}\r\n            deleteRecord={this.deleteRecord}\r\n            handleCheck={this.handleCheck}\r\n          />\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>Hit enter to add</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import moment from 'moment-timezone';\r\n//#region Formats\r\n\r\nconst formatAsYYYYMMDDHHmmss = date => moment(date, \"MM/DD/YYYY\").format('YYYY-MM-DD[T]HH:mm:ss');\r\nconst formatAsHHmmss = date => moment(date).format('HH:mm:ss');\r\nconst formatAsMMMDDYYYY = date => moment(date).format('MM-DD-YYYY');\r\nconst formatAsHHmm = date => moment(date).format('HH:mm');\r\nconst formatAsYYYYMMDD = date => moment(date).format('YYYY-MM-DD');\r\nconst formatAsDDMMYYYY = date => moment(date).format('DD-MM-YYYY');\r\n\r\n\r\nconst format = date => moment(date).format();\r\nexport default{\r\n    formatAsYYYYMMDDHHmmss,\r\n    formatAsHHmmss,\r\n    formatAsMMMDDYYYY,\r\n    formatAsHHmm,\r\n    formatAsYYYYMMDD,\r\n    formatAsDDMMYYYY,\r\n    format\r\n};","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines?.forEach((hotline) => {\r\n      hotline.start_date = moment(hotline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      hotline.end_date = moment(hotline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.hotlines !== nextProps.hotlines) {\r\n      nextProps.hotlines?.forEach((hotline) => {\r\n        hotline.start_date = moment(hotline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        hotline.end_date = moment(hotline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.hotlines }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        help_text: record.help_text,\r\n        hotline_icon_id: record.hotline_icon_id,\r\n        hotline_id: record.hotline_id,\r\n        name: record.name,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"hotline/\" + data.hotline_id, data, options)\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description: `Status of ${record.name} has been changed successfully.`,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Hotline Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Hotline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      //{ title: \"Permissions\", dataIndex: \"\", key: \"\", width: \"20%\" },\r\n      {\r\n        title: \"Permissions\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <PermissionModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <HotlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Spin spinning={this.props.loader} size=\"large\">\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={this.props.data} />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1>Hotline Directory</h1>\r\n                  </Row>\r\n                  <Col span={24}>\r\n                    <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"search-row mt-2 mt-lg-0\"\r\n                      >\r\n                        <Row>\r\n                          <Col span={24} lg={9} className=\"search-box\">\r\n                            <Search\r\n                              placeholder=\"Search\"\r\n                              onSearch={this.onSearch}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col\r\n                        span={24}\r\n                        lg={6}\r\n                        className=\"d-flex align-items-center justify-content-end\"\r\n                      >\r\n                        <Link to=\"/orgcc/createhotline\">\r\n                          <Buttons value=\"Create Hotline\" />\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </Spin>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.hotlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.hotlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.hotlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.hotlinesdata !== null &&\r\n    props.hotlinesdata.length === 0 ? (\r\n    <HotlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllHotlines\r\n      hotlines={props.hotlinesdata}\r\n      statusOnClicked={statusOnClicked}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","export const highlightText = (data, str) => {\r\n  let highlightedObject = {};\r\n  highlightedObject = data\r\n    .filter(\r\n      (item) =>\r\n        item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.responder_conversation_name\r\n          .toLowerCase()\r\n          .includes(str.toLowerCase()) ||\r\n        item.hotline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.message.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n    .map((item) => {\r\n      let conversation_id = item.conversation_id.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = item.responder_conversation_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = item.hotline_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = item.message.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      return {\r\n        ...item,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: item.hotline_id,\r\n        },\r\n      };\r\n    });\r\n  return highlightedObject;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserallHotlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: \"Low\", value: 1 },\r\n    { label: \"Medium\", value: 2 },\r\n    { label: \"High\", value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: \"New\", value: 1 },\r\n    { label: \"Open\", value: 2 },\r\n    { label: \"Closed\", value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>Filter</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Urgency level</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Status</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Hotline</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state={\r\n      visible: false, \r\n      noteText:\"\"\r\n    } \r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by:  parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"addNotes/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({noteText:\"\"})\r\n          this.formRef.current.resetFields()\r\n          this.props.getNoteData(res.data.conversation_id);\r\n        }\r\n      });\r\n\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,noteText:\"\"\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n   handleChange = (e) => {\r\n    this.setState({  noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          Take a note..\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title=\"Take a Note\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Add\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n          <Form  className=\"input-md w-100\" name=\"validate-other\" ref={this.formRef}>\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder=\"Add note here...\"\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\"\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData:[],\r\n    conversationId:\"\"\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter} >\r\n        <span className=\"note-user\">{moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")} {item.first_name} {item.last_name}</span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n         {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     this.props.addedNote.map((item)=>(\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item) }\r\n        {this.state.expand && (\r\n          <a data-test=\"showLess\" className=\"d-flex justify-content-end\" onClick={this.typoClose}>\r\n            Show less\r\n          </a>\r\n        )}\r\n       </div>\r\n     ))\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddedNotes;","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Notes</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: \"Updated the Status to\" },\r\n  { id: 2, name: \"Updated the Urgency level to\" },\r\n  { id: 3, name: \"Added new Note\" },\r\n  { id: 4, name: \"View Hotline Converations\" },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Activity</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  // onScroll={handleScroll}\r\n                  // onScrollFrame={handleScrollFrame}\r\n                  // onScrollStart={handleScrollStart}\r\n                  // onScrollStop={handleScrollStop}\r\n                  // onUpdate={handleUpdate}\r\n                  // renderView={renderView}\r\n                  // renderTrackHorizontal={renderTrackHorizontal}\r\n                  // renderTrackVertical={renderTrackVertical}\r\n                  // renderThumbHorizontal={renderThumbHorizontal}\r\n                  // renderThumbVertical={renderThumbVertical}\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on).utc().local().format(\r\n                              \"MM:DD:YY • hh:mm A•\"\r\n                            )}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Assigned To</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n          document.getElementsByClassName(\"hotline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if (e.altKey && e.keyCode === 13) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message.length > 0) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        hotline_id: conversation.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline_name.includes(\"</mark>\")) {\r\n      conversation.hotline_name = conversation.hotline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline_name = conversation.hotline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline_name = conversation.hotline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Urgency level</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Status</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>Last Read</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ? (\r\n                        <Divider plain>Urgency Level Changed</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\"Status has been changed to\") ? (\r\n                        <Divider plain>Status Changed</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ||\r\n                      msg.message.includes(\r\n                        \"Status has been changed to\"\r\n                      ) ? null : (\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"outgoing-msg hotline_message mb-3\"\r\n                              : \"incoming-msg hotline_message mb-2\"\r\n                          }\r\n                        >\r\n                          <div\r\n                            className={\r\n                              msg.is_responder_message\r\n                                ? \"sent-msg\"\r\n                                : \"received-msg\"\r\n                            }\r\n                          >\r\n                            <p\r\n                              ellipsis\r\n                              // className=\"w-75 pr-2 mb-1\"\r\n                              dangerouslySetInnerHTML={createMarkup(\r\n                                msg.message\r\n                              )}\r\n                            />\r\n\r\n                            <span className=\"time-date\">\r\n                              {\" \"}\r\n                              {moment(msg.created_on).isSame(moment(), \"day\")\r\n                                ? moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"hh:mm A\")\r\n                                : moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"MM:DD:YY | hh:mm A \")}\r\n                              {msg.is_responder_message &&\r\n                                ` | ${msg.first_name} ${msg.last_name}`}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    name={conversation.conversation_id}\r\n                    placeholder=\"Replying as Hotline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchHotlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.hotlineFilterData.length > 0 && {\r\n        hotline_id: props.hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder=\"Search\"\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchHotlineMessages from \"./SearchHotlineMessages\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HoltineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Urgency Level has been changed to ${\r\n        event === 1 ? \"Low\" : event === 2 ? \"Medium\" : \"High\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Status has been changed to ${\r\n        event === 1 ? \"New\" : event === 2 ? \"Open\" : \"Closed\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              Conversations <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      Urgency: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.hotlineFilterData.map((hotline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyHotline\", hotline.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      Hotline: <span>{hotline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      Status: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchHotlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  hotlineFilterData={props.hotlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.hotline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">No messages found</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoHotlines}\r\n                alt=\"No Hotlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>No Conversation Selected</h5>\r\n            <small>Select a Conversation to view</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoltineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nconst NoHotlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateHotline}\r\n        alt=\"No Hotlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>No conversations are initiated for the hotlines assigned to you</h5>\r\n    {/* <small>Select a hotline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoHotlineMessages;\r\n","import React from \"react\";\r\nimport{Row, Col, Spin} from \"antd\";\r\n\r\nconst Spinner = (loader) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <Spin size=\"large\" tip=\"Loading...\" spinning={loader}></Spin>\r\n    </Row>\r\n  </Col>\r\n);\r\n\r\nexport default Spinner;\r\n","import { LeftOutlined } from \"@ant-design/icons\";\r\nimport { Form, Layout, Row } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL, WEBSOCKET_HOTLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport \"./hotlineMessages.scss\";\r\nimport HoltineMessagesLeftSection from \"./HotlineMessagesLeftSection\";\r\nimport NoHotlineMessages from \"./NoHotlineMessages\";\r\nimport Spinner from \"./Spinner\";\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    unSetFilters();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    increaseOverallCountDuringFilters(newState, mergedConversations);\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_HOTLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n      if (newConvo.message.includes(\"Urgency Level has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const urgency =\r\n          lastWord.trim() === \"Low\" ? 1 : lastWord.trim() === \"Medium\" ? 2 : 3;\r\n        setUrgencyLevel(urgency);\r\n      } else if (newConvo.message.includes(\"Status has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const status =\r\n          lastWord.trim() === \"New\" ? 1 : lastWord.trim() === \"Open\" ? 2 : 3;\r\n        setStatus(status);\r\n      }\r\n    };\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          increaseOverallCount(newConvo, conversationsToDisplay, selectedConv);\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // append the new incoming conversation at the top of the existing list of conversations.\r\n  const displayNewConvAtTop = (\r\n    updatedConversations,\r\n    newConvo,\r\n    updatedNewConvo\r\n  ) => {\r\n    let index = 0;\r\n    // create a replica of updatedConversations\r\n    const dummyArray = updatedConversations;\r\n    // return the index of the new incoming conversation from the list of all conversations.\r\n    updatedConversations.map((value) => {\r\n      if (\r\n        value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n      ) {\r\n        return (index = updatedConversations.indexOf(value));\r\n      }\r\n    });\r\n    // remove that new conversation from the dummy list temporarily.\r\n    dummyArray.splice(index, 1);\r\n    // push that removed incoming conversation on top of the list.\r\n    const finalConversations = [updatedNewConvo, ...dummyArray];\r\n    return finalConversations;\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n  const increaseOverallCount = (\r\n    newConvo,\r\n    conversationsToDisplay,\r\n    selectedConv\r\n  ) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = conversationsToDisplay.filter(\r\n      (filter) =>\r\n        filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvo?.conversation_id &&\r\n        newConvo.created_by !==\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ) &&\r\n        newConvo.conversation_id !== selectedConv\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = conversationsToDisplay.filter(\r\n      (item) =>\r\n        item?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n    );\r\n    for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[item]?.conversation_id\r\n            .toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0].unread_messages_count === 0\r\n      ) {\r\n        setUnreadCount((unreadCount) => unreadCount + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n  const increaseOverallCountDuringFilters = (newState, allConversations) => {\r\n    if (\r\n      urgencyFilterData.length > 0 ||\r\n      statusFilterData.length > 0 ||\r\n      hotlineFilterData.length > 0 ||\r\n      searchString.length > 0\r\n    ) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      // return only that new incoming message which comes from a user other than logged in user.\r\n      const newConvFromDiffUser = allConversations?.filter(\r\n        (filter) =>\r\n          filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState?.conversation_id &&\r\n          newState.created_by !==\r\n            parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_data.user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ) &&\r\n          newState?.conversation_id !== conversation.conversation_id\r\n      );\r\n      // return the new incoming message irrespective of any user.\r\n      const incomingConversation = allConversations?.filter(\r\n        (item) =>\r\n          item?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id\r\n      );\r\n      for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n        if (\r\n          incomingConversation[0]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newConvFromDiffUser[item]?.conversation_id\r\n              ?.toString()\r\n              .replace(/(<([^>]+)>)/gi, \"\") &&\r\n          incomingConversation[0]?.unread_messages_count === 0\r\n        ) {\r\n          if (!newInitiatedConv.current) {\r\n            setUnreadCount((unreadCount) => unreadCount + 1);\r\n          }\r\n          const updatedAllConversations = allConversations.map((item) =>\r\n            item.conversation_id === newState?.conversation_id\r\n              ? {\r\n                  ...item,\r\n                  unread_messages_count: item.unread_messages_count + 1,\r\n                }\r\n              : item\r\n          );\r\n          setAllConversations(updatedAllConversations);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // remove filters when component loads.\r\n  const unSetFilters = () => {\r\n    AppStorage.remove(\"urgencyLevels\");\r\n    AppStorage.remove(\"status\");\r\n    AppStorage.remove(\"hotline\");\r\n    AppStorage.remove(\"searchBy\");\r\n    AppStorage.remove(\"ConvID\");\r\n  };\r\n\r\n  // return those conversations which have matched filters or search.\r\n  const filterSocket = (\r\n    totalFiltersApplied,\r\n    newConvo,\r\n    conversations,\r\n    conversationIds\r\n  ) => {\r\n    let totalConversations = [];\r\n    if (\r\n      (totalFiltersApplied.status?.includes(newConvo.status_id.toString()) &&\r\n        totalFiltersApplied.urgency?.includes(\r\n          newConvo.urgency_level_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.hotline?.includes(newConvo.hotline_id.toString()) &&\r\n        totalFiltersApplied.searchBy?.length > 0 &&\r\n        newConvo.conversation_id\r\n          .toLowerCase()\r\n          .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n      newConvo.responder_conversation_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.hotline_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.message\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n    ) {\r\n      let conversation_id = newConvo.conversation_id.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = newConvo.hotline_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = newConvo.message.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      const updatedConversation = {\r\n        ...newConvo,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: newConvo.hotline_id,\r\n        },\r\n      };\r\n      if (\r\n        !conversationIds.includes(\r\n          updatedConversation.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n        )\r\n      ) {\r\n        totalConversations = [...conversations, updatedConversation];\r\n      } else {\r\n        totalConversations = conversations;\r\n      }\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n    return totalConversations;\r\n  };\r\n\r\n  // set state values of applied filters.\r\n  function setAppliedFilters(urgencyLevels, status, hotline) {\r\n    setUrgencyFilterData(urgencyLevels);\r\n    setStatusFilterData(status);\r\n    setHotlineFilterData(hotline);\r\n    AppStorage.set(\r\n      \"urgencyLevels\",\r\n      Object.values(urgencyLevels)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"status\",\r\n      Object.values(status)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(hotline)?.map((data) => data.value)\r\n    );\r\n  }\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    setAppliedFilters(selectedUrgency, selectedStatus, selectedHotline);\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   hotline_id:\r\n    //     allAppliedFilters.hotline_id && allAppliedFilters.hotline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  Hotline Messages\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Spinner loader={loader} />\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <HoltineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoHotlines={NoHotlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  hotlineFilterData={hotlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoHotlineMessages CreateHotline={CreateHotline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">Hotline Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Openline Reports\r\n            </Menu.Item> */}\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">Openline Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Openline Reports\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Poll Results\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Broadcast Messages\r\n            </Menu.Item> */}\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Info\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","export const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.openline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let openlineName = item.openline_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          openline: {\r\n            name: openlineName,\r\n            openline_id: item.openline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [openline, setOpenline] = useState([]);\r\n  const [openlinesData, setOpenlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldOpenline, setOldOpenline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldOpenline, setSelectedOldOpenline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedOpenline, setSelectedOpenline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserAllOpenlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.openline.name,\r\n            value: value.openline.openline_id,\r\n          })\r\n        );\r\n        setOpenlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, openline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyOpenline\") {\r\n      const removeOpenline = selectedOpenline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmOpen = openline.filter((ur) => ur !== props.removeFilter.value);\r\n      setOpenline(rmOpen);\r\n      setSelectedOpenline(removeOpenline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: \"Low\", value: 1 },\r\n    { label: \"Medium\", value: 2 },\r\n    { label: \"High\", value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: \"New\", value: 1 },\r\n    { label: \"Open\", value: 2 },\r\n    { label: \"Closed\", value: 3 },\r\n  ];\r\n  const openlineOptions = openlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setOpenline(oldOpenline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedOpenline(selectedOldOpenline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(openline.length > 0 && { openline_id: openline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldOpenline(openline);\r\n    setSelectedOldOpenline(selectedOpenline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n    openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedOpenline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleOpenline(checkedValues) {\r\n    let selected = selectedOpenline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(openlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedOpenline(selected);\r\n    setOpenline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedOpenline([]);\r\n      setOpenline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>Filter</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Urgency level</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Status</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Openline</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"openline\"\r\n                    options={openlineOptions}\r\n                    value={openline}\r\n                    onChange={handleOpenline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\"\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData:[],\r\n    conversationId:\"\"\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter} >\r\n        <span className=\"note-user\">{moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")} {item.first_name} {item.last_name}</span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n         {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     this.props.addedNote.map((item)=>(\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item) }\r\n        {this.state.expand && (\r\n          <a data-test=\"showLess\" className=\"d-flex justify-content-end\" onClick={this.typoClose}>\r\n            Show less\r\n          </a>\r\n        )}\r\n       </div>\r\n     ))\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddedNotes;","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Notes</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst audit_log = [\r\n  { id: 5, name: \"Updated the Status to\" },\r\n  { id: 6, name: \"Updated the Urgency level to\" },\r\n  { id: 7, name: \"Added new Note\" },\r\n  { id: 8, name: \"View Openline Converations\" },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getOpenlineConversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Activity</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  // onScroll={handleScroll}\r\n                  // onScrollFrame={handleScrollFrame}\r\n                  // onScrollStart={handleScrollStart}\r\n                  // onScrollStop={handleScrollStop}\r\n                  // onUpdate={handleUpdate}\r\n                  // renderView={renderView}\r\n                  // renderTrackHorizontal={renderTrackHorizontal}\r\n                  // renderTrackVertical={renderTrackVertical}\r\n                  // renderThumbHorizontal={renderThumbHorizontal}\r\n                  // renderThumbVertical={renderThumbVertical}\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on).utc().local().format(\r\n                              \"MM:DD:YY • hh:mm A•\"\r\n                            )}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.openline_id);\r\n  }\r\n\r\n  getAssigne(openlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getOpenlineAssignEmpl/\" + openlineId, options)\r\n      .then((res) => {\r\n        let listOfAssignedUsers = [];\r\n        res.data.map((value) => {\r\n          const user = value.user.first_name + \" \" + value.user.last_name;\r\n          listOfAssignedUsers.push({ \"Assigned User_name\": user });\r\n          return listOfAssignedUsers;\r\n        });\r\n        this.setState({ assigneEmp: listOfAssignedUsers });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Assigned To</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./openlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getOpenlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"openline_message\")[\r\n          document.getElementsByClassName(\"openline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getOpenlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if (e.altKey && e.keyCode === 13) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        openline_id: conversation.openline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveOpenlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.openline_name.includes(\"</mark>\")) {\r\n      conversation.openline_name = conversation.openline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.openline_name = conversation.openline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.openline_name = conversation.openline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.openline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Urgency level</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Status</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>Last Read</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg openline_message mb-3\"\r\n                            : \"incoming-msg openline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            // className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD:YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.first_name} ${msg.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Openline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                openline_id={conversation.openline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchOpenlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.openlineFilterData.length > 0 && {\r\n        openline_id: props.openlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder=\"Search\"\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchOpenlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchOpenlineMessages from \"./SearchOpenlineMessages\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              Conversations <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      Urgency: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.openlineFilterData.map((openline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyOpenline\", openline.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      Openline: <span>{openline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      Status: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchOpenlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  openlineFilterData={props.openlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.openline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">No messages found</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoOpenlines}\r\n                alt=\"No Openlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>No Conversation Selected</h5>\r\n            <small>Select a Conversation to view</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nconst NoOpenlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateOpenline}\r\n        alt=\"No Openlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>No conversations are initiated for the openlines assigned to you</h5>\r\n    {/* <small>Select a openline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoOpenlineMessages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Layout, Row, Col, Form, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./openlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport NoOpenlines from \"../../assets/images/no-openlines.svg\";\r\nimport { BASE_URL, WEBSOCKET_OPENLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport CreateOpenline from \"../../assets/images/create-openline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport OpenlineMessagesLeftSection from \"./OpenlineMessagesLeftSection\";\r\nimport NoOpenlineMessages from \"./NoOpenlineMessages\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [openlineFilterData, setOpenlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    unSetFilters();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    increaseOverallCountDuringFilters(newState, mergedConversations);\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_OPENLINE_URL +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_data.organization_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ) +\r\n      \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const openlineState =\r\n          AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let openlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          openline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (openlineState !== null && openlineState?.length > 0) {\r\n          openlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            openline: openlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        if (urgencyFilter || statusFilter || openlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.openline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          increaseOverallCount(newConvo, conversationsToDisplay, selectedConv);\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          openlineFilter &&\r\n          !openlineState.includes(newConvo.openline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // append the new incoming conversation at the top of the existing list of conversations.\r\n  const displayNewConvAtTop = (\r\n    updatedConversations,\r\n    newConvo,\r\n    updatedNewConvo\r\n  ) => {\r\n    let index = 0;\r\n    // create a replica of updatedConversations\r\n    const dummyArray = updatedConversations;\r\n    // return the index of the new incoming conversation from the list of all conversations.\r\n    updatedConversations.map((value) => {\r\n      if (\r\n        value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n      ) {\r\n        return (index = updatedConversations.indexOf(value));\r\n      }\r\n    });\r\n    // remove that new conversation from the dummy list temporarily.\r\n    dummyArray.splice(index, 1);\r\n    // push that removed incoming conversation on top of the list.\r\n    const finalConversations = [updatedNewConvo, ...dummyArray];\r\n    return finalConversations;\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n  const increaseOverallCount = (\r\n    newConvo,\r\n    conversationsToDisplay,\r\n    selectedConv\r\n  ) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = conversationsToDisplay.filter(\r\n      (filter) =>\r\n        filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvo?.conversation_id &&\r\n        newConvo.created_by !==\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ) &&\r\n        newConvo.conversation_id !== selectedConv\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = conversationsToDisplay.filter(\r\n      (item) =>\r\n        item?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n    );\r\n    for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[item]?.conversation_id\r\n            .toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0].unread_messages_count === 0\r\n      ) {\r\n        setUnreadCount((unreadCount) => unreadCount + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n  const increaseOverallCountDuringFilters = (newState, allConversations) => {\r\n    if (\r\n      urgencyFilterData.length > 0 ||\r\n      statusFilterData.length > 0 ||\r\n      openlineFilterData.length > 0 ||\r\n      searchString.length > 0\r\n    ) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      // return only that new incoming message which comes from a user other than logged in user.\r\n      const newConvFromDiffUser = allConversations?.filter(\r\n        (filter) =>\r\n          filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState?.conversation_id &&\r\n          newState.created_by !==\r\n            parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_data.user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ) &&\r\n          newState?.conversation_id !== conversation.conversation_id\r\n      );\r\n      // return the new incoming message irrespective of any user.\r\n      const incomingConversation = allConversations?.filter(\r\n        (item) =>\r\n          item?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id\r\n      );\r\n      for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n        if (\r\n          incomingConversation[0]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newConvFromDiffUser[item]?.conversation_id\r\n              ?.toString()\r\n              .replace(/(<([^>]+)>)/gi, \"\") &&\r\n          incomingConversation[0]?.unread_messages_count === 0\r\n        ) {\r\n          if (!newInitiatedConv.current) {\r\n            setUnreadCount((unreadCount) => unreadCount + 1);\r\n          }\r\n          const updatedAllConversations = allConversations.map((item) =>\r\n            item.conversation_id === newState?.conversation_id\r\n              ? {\r\n                  ...item,\r\n                  unread_messages_count: item.unread_messages_count + 1,\r\n                }\r\n              : item\r\n          );\r\n          setAllConversations(updatedAllConversations);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // remove filters when component loads.\r\n  const unSetFilters = () => {\r\n    AppStorage.remove(\"urgencyLevels\");\r\n    AppStorage.remove(\"status\");\r\n    AppStorage.remove(\"openline\");\r\n    AppStorage.remove(\"searchBy\");\r\n    AppStorage.remove(\"ConvID\");\r\n  };\r\n\r\n  // return those conversations which have matched filters or search.\r\n  const filterSocket = (\r\n    totalFiltersApplied,\r\n    newConvo,\r\n    conversations,\r\n    conversationIds\r\n  ) => {\r\n    let totalConversations = [];\r\n    if (\r\n      (totalFiltersApplied.status?.includes(newConvo.status_id.toString()) &&\r\n        totalFiltersApplied.urgency?.includes(\r\n          newConvo.urgency_level_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.openline?.includes(\r\n          newConvo.openline_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.searchBy?.length > 0 &&\r\n        newConvo.conversation_id\r\n          .toLowerCase()\r\n          .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n      newConvo.responder_conversation_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.openline_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.message\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n    ) {\r\n      let conversation_id = newConvo.conversation_id.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let openlineName = newConvo.openline_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = newConvo.message.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      const updatedConversation = {\r\n        ...newConvo,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        openline: {\r\n          name: openlineName,\r\n          openline_id: newConvo.openline_id,\r\n        },\r\n      };\r\n      if (\r\n        !conversationIds.includes(\r\n          updatedConversation.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n        )\r\n      ) {\r\n        totalConversations = [...conversations, updatedConversation];\r\n      } else {\r\n        totalConversations = conversations;\r\n      }\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n    return totalConversations;\r\n  };\r\n\r\n  // set state values of applied filters.\r\n  function setAppliedFilters(urgencyLevels, status, openline) {\r\n    setUrgencyFilterData(urgencyLevels);\r\n    setStatusFilterData(status);\r\n    setOpenlineFilterData(openline);\r\n    AppStorage.set(\r\n      \"urgencyLevels\",\r\n      Object.values(urgencyLevels)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"status\",\r\n      Object.values(status)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"openline\",\r\n      Object.values(openline)?.map((data) => data.value)\r\n    );\r\n  }\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedOpenline\r\n  ) => {\r\n    setAppliedFilters(selectedUrgency, selectedStatus, selectedOpenline);\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const openlineState =\r\n      AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(openlineState &&\r\n        openlineState.length > 0 && { openline_id: openlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   openline_id:\r\n    //     allAppliedFilters.openline_id && allAppliedFilters.openline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      openlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"openlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  Openline Messages\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <Spin\r\n                      size=\"large\"\r\n                      tip=\"Loading...\"\r\n                      spinning={loader}\r\n                    ></Spin>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <OpenlineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoOpenlines={NoOpenlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  openlineFilterData={openlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoOpenlineMessages CreateOpenline={CreateOpenline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={this.props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={this.props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">\r\n                    You don't have access rights! Please contact your\r\n                    administrator.\r\n                  </h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionDenied;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>Reset password for this user</span>\r\n        </Button>\r\n        <Modal\r\n          title=\"Reset Password\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Reset and Invite\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                Reset password for{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label=\"New Password\" value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your new password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label=\"Confirm Password\" value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your confirmed password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst EditSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleEditOk}\r\n      onCancel={props.handleEditCancel}\r\n      centered\r\n      width={900}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText=\"Update\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n        <div>Edit Seeded User</div>\r\n        <br />\r\n        <div className=\"avatar-wrapper pt-2 pb-4\">\r\n          <Avatar>{props.seededUserName.charAt(0)}</Avatar>\r\n          <span className=\"md-name\">{props.seededUserName}</span>\r\n        </div>\r\n        {props.error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"First Name\"\r\n                value={props.seededUserDetails.firstName}\r\n              >\r\n                <Form.Item name=\"firstName\" className=\"required\">\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    className=\"input-control\"\r\n                    defaultValue={props.seededUserDetails.firstName}\r\n                    htmlFor=\"firstName\"\r\n                    value={props.seededUserDetails.firstName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.fNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Last Name\"\r\n                value={props.seededUserDetails.lastName}\r\n              >\r\n                <Form.Item name=\"lastName\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"lastName\"\r\n                    htmlFor=\"lastName\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.lastName}\r\n                    value={props.seededUserDetails.lastName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.lNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Email Id\"\r\n                value={props.seededUserDetails.email}\r\n              >\r\n                <Form.Item name=\"email\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"email\"\r\n                    htmlFor=\"email\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.email}\r\n                    value={props.seededUserDetails.email}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateEmailAddress(e)}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                  {props.emailValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid email address.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Date\" value=\"date2\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"new w-100\"\r\n                    name=\"date2\"\r\n                    className=\"required\"\r\n                    value={props.seededUserDetails.date2}\r\n                    onChange={(date) =>\r\n                      props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                    }\r\n                    disabledDate={props.disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n              <FloatLabel label=\"Mobile\" value={props.seededUserDetails.mobile}>\r\n                <Form.Item name=\"mobile\" className=\"required\">\r\n                  <PhoneInput\r\n                    country={\"in\"}\r\n                    id=\"mobile\"\r\n                    htmlFor=\"mobile\"\r\n                    defaultValue={props.seededUserDetails.mobile}\r\n                    value={props.seededUserDetails.mobile}\r\n                    onChange={props.handleMobile}\r\n                    onBlur={(e) => props.validateMobile(e)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.mobileValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid mobile number.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={props.seededUserDetails.status2}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status2\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={props.seededUserDetails.status2}\r\n                      htmlFor=\"status2\"\r\n                      className=\"required\"\r\n                      onSelect={(value) =>\r\n                        props.handleSeededUserOnSelect(value, \"status2\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Form>\r\n      <ResetPwdModal\r\n        user={props.seededUserDetails.firstName}\r\n        handleResetPasswordOk={props.handleResetPasswordOk}\r\n        handleResetPasswordCancel={props.handleResetPasswordCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSeededUser;\r\n","import React from \"react\";\r\nimport { Row, Col, Input, Form, Select, Modal, Alert, DatePicker } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleAddSeededUser}\r\n      onCancel={props.handleAddSeededUserCancel}\r\n      centered\r\n      width={1200}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText=\"Add\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n        {props.error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <div>Add New Seeded User</div>\r\n          <br />\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"First Name\"\r\n                value={props.seededUserDetails.firstName}\r\n              >\r\n                <Form.Item name=\"firstName\" className=\"required\">\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    className=\"input-control\"\r\n                    defaultValue={props.seededUserDetails.firstName}\r\n                    htmlFor=\"firstName\"\r\n                    value={props.seededUserDetails.firstName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.fNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Last Name\"\r\n                value={props.seededUserDetails.lastName}\r\n              >\r\n                <Form.Item name=\"lastName\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"lastName\"\r\n                    htmlFor=\"lastName\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.lastName}\r\n                    value={props.seededUserDetails.lastName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.lNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            {/* <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Temporary Password\"\r\n                value={props.seededUserDetails.password}\r\n              >\r\n                <Form.Item name=\"password\" className=\"pwd required\">\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"password\"\r\n                    className=\"required\"\r\n                    id=\"password\"\r\n                    defaultValue={props.seededUserDetails.password}\r\n                    value={props.seededUserDetails.password}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validatePassword(e)}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {props.passwordValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid password.\r\n                      It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col> */}\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Email Id\"\r\n                value={props.seededUserDetails.email}\r\n              >\r\n                <Form.Item name=\"email\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"email\"\r\n                    htmlFor=\"email\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.email}\r\n                    value={props.seededUserDetails.email}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateEmailAddress(e)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.emailValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid email address.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Date\" value=\"date2\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"new w-100\"\r\n                    name=\"date2\"\r\n                    className=\"required\"\r\n                    value={props.seededUserDetails.date2}\r\n                    onChange={(date) =>\r\n                      props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                    }\r\n                    disabledDate={props.disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n              <FloatLabel label=\"Mobile\" value={props.seededUserDetails.mobile}>\r\n                <Form.Item name=\"mobile\" className=\"required\">\r\n                  <PhoneInput\r\n                    country={\"in\"}\r\n                    id=\"mobile\"\r\n                    htmlFor=\"mobile\"\r\n                    value={props.seededUserDetails.mobile}\r\n                    onChange={props.handleMobile}\r\n                    onBlur={props.validateMobile}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.mobileValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid mobile number.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={props.seededUserDetails.status2}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status2\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={props.seededUserDetails.status2}\r\n                      htmlFor=\"status2\"\r\n                      className=\"required\"\r\n                      onSelect={(value) =>\r\n                        props.handleSeededUserOnSelect(value, \"status2\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewSeededUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrgDetails = (props) => {\r\n  const history = useHistory();\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onFinish = (values) => {};\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            date2: [\r\n              moment(value.date2[0], \"YYYY-MM-DD\"),\r\n              moment(value.date2[1], \"YYYY-MM-DD\"),\r\n            ],\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const editOrg = () => {\r\n    const path = `/amcc/editorg/${orgID}`;\r\n    history.push(path, \"viaOrgDetails\");\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `Details for ${seededUserName} have been changed successfully.`,\r\n        placement,\r\n      });\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      // password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: `${seededUserDetails.firstName} has been added successfully.`,\r\n            placement,\r\n          });\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `${userName} has been deleted successfully.`,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Organization Details</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">Organization Details </h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3\"\r\n                          onClick={() => editOrg()}\r\n                        >\r\n                          <span className=\"icon icon-pencil\" />\r\n                          <span className=\"pl-2 d-none d-block-md\">\r\n                            Edit Details\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationDetails.name.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">\r\n                        {organizationDetails.name}\r\n                      </span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      onFinish={onFinish}\r\n                      form={form}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Name\"\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  htmlFor=\"organization name\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Id\"\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"identifier\"\r\n                                  name=\"identifier\"\r\n                                  htmlFor=\"organization name\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Status\"\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status1\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-100\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                    disabled\r\n                                  >\r\n                                    <Option value=\"1\">Active</Option>\r\n                                    <Option value=\"2\">Inactive</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\" value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <Row className=\"w-100\">\r\n                      <Col span={24} md={12}>\r\n                        <h6 className=\"py-3 mb-0\">Seeded Users Details </h6>\r\n                      </Col>\r\n                      <Col\r\n                        span={24}\r\n                        md={12}\r\n                        className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                      >\r\n                        <Button\r\n                          className=\"mr-4\"\r\n                          type=\"secondary\"\r\n                          onClick={() => addSeededUser()}\r\n                        >\r\n                          Add Seeded User\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                      {seededUsers.length > 0 ? (\r\n                        <AssignedUsers\r\n                          seededUsers={seededUsers}\r\n                          orgID={parseInt(orgID)}\r\n                          statusOnClicked={statusOnClicked}\r\n                          handleEditUser={handleEditSeededUser}\r\n                          handleDelete={handleDeleteSeededUser}\r\n                          addSeededUser={addSeededUser}\r\n                          viaEdit\r\n                          orgDetails\r\n                          seededUser\r\n                        />\r\n                      ) : (\r\n                        <Col span={24} lg={18}>\r\n                          <Row className=\"justify-content-center\">\r\n                            No Seeded User\r\n                          </Row>\r\n                        </Col>\r\n                      )}\r\n                      {editVisible ? (\r\n                        <EditSeededUsers\r\n                          error={modalError}\r\n                          handleEditOk={handleEditOk}\r\n                          handleEditCancel={handleEditCancel}\r\n                          seededUsers={seededUsers}\r\n                          fNameCount={fNameCount}\r\n                          lNameCount={lNameCount}\r\n                          seededUserName={seededUserName}\r\n                          seededUserDetails={seededUserDetails}\r\n                          disabledDate={disabledDate}\r\n                          handleSeededUserOnChange={handleSeededUserOnChange}\r\n                          handleSeededUserDatePickerChange={\r\n                            handleSeededUserDatePickerChange\r\n                          }\r\n                          handleMobile={handleMobile}\r\n                          handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                          validateEmailAddress={validateEmailAddress}\r\n                          emailValidationError={emailValidationError}\r\n                          validateMobile={validateMobile}\r\n                          mobileValidationError={mobileValidationError}\r\n                          handleResetPasswordOk={handleResetPasswordOk}\r\n                          handleResetPasswordCancel={handleResetPasswordCancel}\r\n                        />\r\n                      ) : showAddSeededUser ? (\r\n                        <AddNewSeededUser\r\n                          error={modalError}\r\n                          handleAddSeededUser={handleAddSeededUser}\r\n                          handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                          seededUsers={seededUsers}\r\n                          fNameCount={fNameCount}\r\n                          lNameCount={lNameCount}\r\n                          seededUserDetails={seededUserDetails}\r\n                          disabledDate={disabledDate}\r\n                          handleSeededUserOnChange={handleSeededUserOnChange}\r\n                          handleSeededUserDatePickerChange={\r\n                            handleSeededUserDatePickerChange\r\n                          }\r\n                          handleMobile={handleMobile}\r\n                          handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                          validateEmailAddress={validateEmailAddress}\r\n                          emailValidationError={emailValidationError}\r\n                          validateMobile={validateMobile}\r\n                          mobileValidationError={mobileValidationError}\r\n                          validatePassword={validatePassword}\r\n                          passwordValidationError={passwordValidationError}\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrgDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [orgNameAlreadyExists, setOrgNameAlreadyExists] = useState(\"\");\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    //  password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [orgStatus, setOrgStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      setOrgStatus(data.organization.status_id.toString());\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationName) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganization/\",\r\n          { organization_name: organizationDetails.name },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgNameAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgNameAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            date2: [\r\n              moment(value.date2[0], \"YYYY-MM-DD\"),\r\n              moment(value.date2[1], \"YYYY-MM-DD\"),\r\n            ],\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleOrganizationOnChange = (e) => {\r\n    if (e.target.id === \"identifier\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (e.target.id === \"name\" && e.target.value.length === 80) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setOrganizationDetails({\r\n      ...organizationDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteClick(false);\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      name: organizationDetails.name,\r\n      identifier: organizationDetails.identifier,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(organizationDetails.status),\r\n    };\r\n    const endDate = moment(organizationDetails.date1[1]).format(\"MM-DD-YYYY\");\r\n    if (organizationDetails.status !== orgStatus) {\r\n      if (new Date() < new Date(endDate)) {\r\n        if (organizationDetails.name && organizationDetails.identifier) {\r\n          if (\r\n            orgNameAlreadyExists === \"status: false\" ||\r\n            organizationDetails.name === organizationName\r\n          ) {\r\n            showError(false);\r\n            axios\r\n              .put(BASE_URL + \"saveOrganization/\", data, options)\r\n              .then(() => {\r\n                // const placement = \"bottomLeft\";\r\n                // api.info({\r\n                //   description:\r\n                //     \"Organization details have been changed successfully.\",\r\n                //   placement,\r\n                // });\r\n                window.location = \"/amcc/manageorganizations\";\r\n              });\r\n          }\r\n        } else {\r\n          showError(true);\r\n        }\r\n      } else {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description:\r\n            \"Status can't be changed as the end date has been passed.\",\r\n          placement,\r\n        });\r\n      }\r\n    } else {\r\n      if (organizationDetails.name && organizationDetails.identifier) {\r\n        showError(false);\r\n        axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n          // const placement = \"bottomLeft\";\r\n          // api.info({\r\n          //   description: \"Organization details have been changed successfully.\",\r\n          //   placement,\r\n          // });\r\n          window.location = \"/amcc/manageorganizations\";\r\n        });\r\n      } else {\r\n        showError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `Details for ${seededUserName} have been changed successfully.`,\r\n        placement,\r\n      });\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    if (props.location.state) {\r\n      const path = `/amcc/orgdetails/${orgID}`;\r\n      history.push(path);\r\n    } else {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: `${seededUserDetails.firstName} has been added successfully.`,\r\n            placement,\r\n          });\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `${userName} has been deleted successfully.`,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Organization</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">Edit Organization</h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3 deleteOrg\"\r\n                          onClick={onDelete}\r\n                        >\r\n                          <span className=\"icon icon-delete\" />\r\n                          <span className=\"d-none d-md-inline-flex deleteOrg\">\r\n                            Delete\r\n                          </span>\r\n                        </Button>\r\n                        {deleteClick ? (\r\n                          <DeleteModal\r\n                            org={organizationName}\r\n                            handleDelete={handleDeleteOrganization}\r\n                            handleCancel={handleCancelDelete}\r\n                            deleteOrg\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">{organizationName}</span>\r\n                    </div>\r\n                    <Form className=\"input-md floating-label w-100\" form={form}>\r\n                      {error && (\r\n                        <Form.Item>\r\n                          <Alert\r\n                            message=\"Please fill the fields marked with asterisk(*)\"\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        </Form.Item>\r\n                      )}\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Name\"\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  onChange={(e) =>\r\n                                    handleOrganizationOnChange(e)\r\n                                  }\r\n                                  onBlur={(e) => CheckOrganizationName(e)}\r\n                                  htmlFor=\"name\"\r\n                                  autoComplete=\"off\"\r\n                                  maxLength={80}\r\n                                />\r\n                                {orgNameAlreadyExists === \"status: false\" &&\r\n                                  organizationDetails.name\r\n                                    .replace(/^\\s*/, \"\")\r\n                                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                                  organizationDetails.name.length > 0 && (\r\n                                    <CheckCircleTwoTone\r\n                                      className=\"successCheck\"\r\n                                      twoToneColor=\"#52c41a\"\r\n                                    />\r\n                                  )}\r\n                                {orgNameAlreadyExists == \"status: true\" && (\r\n                                  <Alert\r\n                                    message=\"Sorry! This organization already exists in the system. Please use a different name.\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </Form.Item>\r\n                              {orgNameCount && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Max Characters limit reached.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Id\"\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  htmlFor=\"identifier\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  onChange={(e) =>\r\n                                    handleOrganizationOnChange(e)\r\n                                  }\r\n                                  autoComplete=\"off\"\r\n                                  maxLength={20}\r\n                                />\r\n                              </Form.Item>\r\n                              {orgIdCount && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Max Characters limit reached.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Status\"\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"status\"\r\n                              >\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-100\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">Active</Option>\r\n                                    <Option value=\"2\">Inactive</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Date\" value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  onChange={(date) =>\r\n                                    handleOrganizationDatePickerChange(\r\n                                      date,\r\n                                      \"date1\"\r\n                                    )\r\n                                  }\r\n                                  disabledDate={disabledDate}\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            onClick={onOrgEditSubmit}\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                          <Button\r\n                            className=\"ml-4\"\r\n                            type=\"secondary\"\r\n                            onClick={cancelEditing}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    md={12}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <h6 className=\"py-3 mb-0\">Edit Seeded Users </h6>\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    md={12}\r\n                    className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                  >\r\n                    <Button\r\n                      className=\"mr-4\"\r\n                      type=\"secondary\"\r\n                      onClick={() => addSeededUser()}\r\n                    >\r\n                      Add Seeded User\r\n                    </Button>\r\n                  </Col>\r\n                  {seededUsers.length > 0 ? (\r\n                    <AssignedUsers\r\n                      seededUsers={seededUsers}\r\n                      statusOnClicked={statusOnClicked}\r\n                      orgID={parseInt(orgID)}\r\n                      handleEditUser={handleEditSeededUser}\r\n                      handleDelete={handleDeleteSeededUser}\r\n                      addSeededUser={addSeededUser}\r\n                      viaEdit\r\n                      seededUser\r\n                    />\r\n                  ) : (\r\n                    <Col span={24} lg={18}>\r\n                      <Row className=\"justify-content-center\">\r\n                        No Seeded User\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                  {editVisible ? (\r\n                    <EditSeededUsers\r\n                      error={modalError}\r\n                      handleEditOk={handleEditOk}\r\n                      handleEditCancel={handleEditCancel}\r\n                      seededUsers={seededUsers}\r\n                      seededUserName={seededUserName}\r\n                      fNameCount={fNameCount}\r\n                      lNameCount={lNameCount}\r\n                      seededUserDetails={seededUserDetails}\r\n                      disabledDate={disabledDate}\r\n                      handleSeededUserOnChange={handleSeededUserOnChange}\r\n                      handleSeededUserDatePickerChange={\r\n                        handleSeededUserDatePickerChange\r\n                      }\r\n                      handleMobile={handleMobile}\r\n                      handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                      validateEmailAddress={validateEmailAddress}\r\n                      emailValidationError={emailValidationError}\r\n                      validateMobile={validateMobile}\r\n                      mobileValidationError={mobileValidationError}\r\n                      handleResetPasswordOk={handleResetPasswordOk}\r\n                      handleResetPasswordCancel={handleResetPasswordCancel}\r\n                    />\r\n                  ) : showAddSeededUser ? (\r\n                    <AddNewSeededUser\r\n                      error={modalError}\r\n                      handleAddSeededUser={handleAddSeededUser}\r\n                      handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                      seededUsers={seededUsers}\r\n                      fNameCount={fNameCount}\r\n                      lNameCount={lNameCount}\r\n                      seededUserDetails={seededUserDetails}\r\n                      disabledDate={disabledDate}\r\n                      handleSeededUserOnChange={handleSeededUserOnChange}\r\n                      handleSeededUserDatePickerChange={\r\n                        handleSeededUserDatePickerChange\r\n                      }\r\n                      handleMobile={handleMobile}\r\n                      handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                      validateEmailAddress={validateEmailAddress}\r\n                      emailValidationError={emailValidationError}\r\n                      validatePassword={validatePassword}\r\n                      passwordValidationError={passwordValidationError}\r\n                      validateMobile={validateMobile}\r\n                      mobileValidationError={mobileValidationError}\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  notification,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = (props) => {\r\n  const [hotLineData, sethotLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    hotline_icon_id: \"\",\r\n    hotline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [hotlineStatus, setHotlineStatus] = useState(\"\");\r\n  const [iconHtml, seticonHtml] = useState(\"\");\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [error, showError] = useState(false);\r\n\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n\r\n  const addIcon = (values, id) => {\r\n    sethotLineData({\r\n      ...hotLineData,\r\n      hotline_icon_id: id,\r\n    });\r\n    seticonHtml(values);\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setIcon = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return '<span class=\"icon icon-sexual-harassment-1 ant-tooltip-open\"></span>';\r\n      case \"2\":\r\n        return '<span class=\"icon icon-violence ant-tooltip-open\"></span>';\r\n      case \"3\":\r\n        return '<span class=\"icon icon-racism ant-tooltip-open\"></span>';\r\n      case \"4\":\r\n        return '<span class=\"icon icon-cyber-bullying ant-tooltip-open\"></span>';\r\n      case \"5\":\r\n        return '<span class=\"icon icon-fight ant-tooltip-open\"></span>';\r\n      case \"6\":\r\n        return '<span class=\"icon icon-discrimination ant-tooltip-open\"></span>';\r\n      case \"7\":\r\n        return '<span class=\"icon icon-slap ant-tooltip-open\"></span>';\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const eDate = moment(location.state.end_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    sethotLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      hotline_icon_id: location.state.hotline_icon_id,\r\n      hotline_id: location.state.hotline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    setHotlineStatus(location.state.status_id.toString());\r\n    const test = setIcon(location.state.hotline_icon_id.toString());\r\n    seticonHtml(test);\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: value });\r\n  };\r\n\r\n  const editHotline = (e) => {\r\n    if (\r\n      hotLineData.name &&\r\n      hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      hotLineData.help_text &&\r\n      hotLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      hotLineData.status_id &&\r\n      hotLineData.hotline_icon_id &&\r\n      hotLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const endDate = moment(hotLineData.start_date[1]).format(\"MM-DD-YYYY\");\r\n      const data = {\r\n        end_date: moment(hotLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: hotLineData.help_text,\r\n        hotline_icon_id: hotLineData.hotline_icon_id,\r\n        hotline_id: hotLineData.hotline_id,\r\n        name: hotLineData.name,\r\n        start_date: moment(hotLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(hotLineData.status_id),\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      if (\r\n        hotlineErrorUpdated == \"status: false\" ||\r\n        hotLineData.name === location.state.name\r\n      ) {\r\n        if (hotlineStatus !== hotLineData.status_id) {\r\n          if (new Date() < new Date(endDate)) {\r\n            saveHotLine(data);\r\n          } else {\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description:\r\n                \"Status can't be changed as the end date has been passed.\",\r\n              placement,\r\n            });\r\n          }\r\n        } else {\r\n          saveHotLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  const saveHotLine = (data) => {\r\n    const token = authHeader();\r\n    let hotLineId = hotLineData.hotline_id;\r\n    delete hotLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"hotline/\" + hotLineId, data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: \"Hotline details have been changed successfully.\",\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkhotline/\",\r\n          { hotline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            sethotlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      sethotlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>Edit Hotline</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Form\r\n                  data-test=\"createHotlineStepOne\"\r\n                  className=\"input-md w-md-100 w-75 floating-label\"\r\n                  name=\"validate_other\"\r\n                  form={form}\r\n                >\r\n                  {error && (\r\n                    <Form.Item>\r\n                      <Alert\r\n                        message=\"Please fill the fields marked with asterisk(*)\"\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n\r\n                  <FloatLabel label=\"Directory Name\" value={hotLineData.name}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter directory name\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <TextArea\r\n                        showCount\r\n                        maxLength={80}\r\n                        value={hotLineData.name}\r\n                        onChange={(e) => handleStepOneOnChange(e)}\r\n                        onBlur={(e) => CheckHotlineName(e)}\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        className=\"input-control textarea-input\"\r\n                        htmlFor=\"name\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                      {hotlineErrorUpdated == \"status: false\" &&\r\n                        hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n                          .length > 0 &&\r\n                        hotLineData.name.length > 0 && (\r\n                          <CheckCircleTwoTone\r\n                            className=\"successCheck\"\r\n                            twoToneColor=\"#52c41a\"\r\n                          />\r\n                        )}\r\n                      {hotlineErrorUpdated == \"status: true\" && (\r\n                        <Alert\r\n                          message=\"Sorry! This hotline already exists in the system. Please use a different name.\"\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n\r\n                  <FloatLabel label=\"Description\" value={hotLineData.help_text}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"help_text\"\r\n                      id=\"help_text\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter description\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <TextArea\r\n                          className=\"input-control textarea-input\"\r\n                          value={hotLineData.help_text}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          id=\"help_text\"\r\n                          name=\"help_text\"\r\n                          htmlFor=\"help_text\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label=\"Date\" value=\"start_date\">\r\n                    <Form.Item className=\"input-control datepicker-wrapper\">\r\n                      <RangePicker\r\n                        className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                        name=\"start_date\"\r\n                        disabledDate={disabledDate}\r\n                        value={hotLineData.start_date}\r\n                        onChange={(date) =>\r\n                          handleStepOneDatePickerChange(date, \"start_date\")\r\n                        }\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please select start date\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label=\"Status\" value={hotLineData.status_id}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"status\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select status\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <Select\r\n                          className=\"input-control w-100 w-lg-50\"\r\n                          value={hotLineData.status_id}\r\n                          htmlFor=\"status\"\r\n                          onSelect={(value) =>\r\n                            handleStepOneOnSelect(value, \"status_id\")\r\n                          }\r\n                        >\r\n                          <Select.Option value=\"5\">Active</Select.Option>\r\n                          <Select.Option value=\"4\">Inactive</Select.Option>\r\n                        </Select>\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <Form.Item className=\"\">\r\n                    <Form.Item\r\n                      className=\"upload-control\"\r\n                      name=\"upload\"\r\n                      valuePropName=\"fileList\"\r\n                    >\r\n                      <AddIcoModal\r\n                        data-test=\"addIconComponent\"\r\n                        addIcon={addIcon}\r\n                      />\r\n                      {getIconText(hotLineData.hotline_icon_id.toString()) && (\r\n                        <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                          <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                            <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                              <span className=\"d-inline-flex align-items-center\">\r\n                                <a className=\"ant-upload-list-item-thumbnail\">\r\n                                  {ReactHtmlParser(iconHtml)}\r\n                                </a>\r\n\r\n                                <span\r\n                                  className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                  title={getIconText(\r\n                                    hotLineData.hotline_icon_id.toString()\r\n                                  )}\r\n                                >\r\n                                  {getIconText(\r\n                                    hotLineData.hotline_icon_id.toString()\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n                  <div className=\"steps-action mt-5\">\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={editHotline}\r\n                      data-test=\"stepOneNext\"\r\n                      style={{ margin: \"0 8px\" }}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={cancelHotline}\r\n                      data-test=\"stepOneNext\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditHotLine;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\n\r\nconst AddEmployee = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Add Employee</h1>\r\n                  <div className=\"d-block w-100 pl-3 pl-lg-0 pt-1\">\r\n                    <small>\r\n                      Please create all employees for your organization who are\r\n                      eligible to use the app. You can either integrate with\r\n                      existing system, import through CSV or add each employee\r\n                      manually.\r\n                    </small>\r\n                  </div>\r\n                </Row>\r\n                <div className=\"mid-content mt-0 mt-md-4 no-bg px-3 px-md-0\">\r\n                  <Row>\r\n                    <Col span={24} className=\"mt-5\">\r\n                      <Row className=\"d-flex justify-content-center\" gutter={{ xs: 8, sm: 32, md: 32, lg: 100 }}>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered} ${styles.box_bordered_active}`}>\r\n                            <span className={`icon-integrate ${styles.icon}`}></span>\r\n                            <div className=\"font-weight-bold text-center\">Integrate with existing system</div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered}`}>\r\n                          <span className={`icon-csv ${styles.icon}`}></span>\r\n                          <div className=\"font-weight-bold text-center\">Import through CSV</div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered}`}>\r\n                          <span className={`icon-add-user ${styles.icon}`}></span>\r\n                          <div className=\"font-weight-bold text-center\">Create manually</div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Upload, message } from 'antd';\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\nconst UploadFiles = () => {\r\n  return (\r\n    <Dragger {...props}>\r\n    <p className=\"ant-upload-drag-icon\">\r\n    <span className=\"icon icon-upload\" />\r\n    </p>\r\n    <p className=\"ant-upload-text\">Drop files to upload or Browse</p>\r\n  </Dragger>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Breadcrumb, Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport UploadFiles from \"./UploadFiles\";\r\n\r\nconst ImportFiles = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/addemployee\">\r\n                      <Breadcrumb.Item>Add Employee</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Import CSV file</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Import CSV file </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Col span={20} className=\"mt-3 dragdrop\">\r\n                      <UploadFiles />\r\n                    </Col>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"justify-content-center d-flex mt-5\"\r\n                    >\r\n                      <Button type=\"link\" className=\"link pl-0\">\r\n                        <span className=\"icon icon-download-icon\" />\r\n                        Download Sample File\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mt-3 btn-row\">\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"mr-4 mb-4\"\r\n                      type=\"secondary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button type=\"primary\" className=\"md\">\r\n                      Upload\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImportFiles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\n\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport \"../form/form.scss\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst CreateManually = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n              <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/addemployee\">\r\n                      <Breadcrumb.Item>Add Employee</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Manually</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Manually</h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                  <Form className=\"input-md floating-label w-100\" name=\"\">\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"First Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"fname\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your first name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"fname\"\r\n                                  htmlFor=\"fname\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Last Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"lname\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your last name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"lname\"\r\n                                  htmlFor=\"lname\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"emailid\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your email id\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  type=\"email\"\r\n                                  className=\"input-control\"\r\n                                  id=\"emailid\"\r\n                                  htmlFor=\"emailid\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                            <FloatLabel label=\"Mobile Number\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"mobile\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your mobile number\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <PhoneInput country={\"us\"} />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Employee id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"empid\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your employee id\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"empid\"\r\n                                  htmlFor=\"empid\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Department\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"department\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your department\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">dept1</Option>\r\n                                  <Option value=\"0\">dept2</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">1</Option>\r\n                                  <Option value=\"0\">2</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item\r\n                                className=\"input-control datepicker-wrapper required\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select start and end date\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <RangePicker className=\"w-100 \" name=\"s1Date\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Make Super User\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select user type\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">Make Super User</Option>\r\n                                  <Option value=\"0\">Make User</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F1\">\r\n                              <Form.Item name=\"f1\">\r\n                                <Input className=\"input-control\" htmlFor=\"f1\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F2\">\r\n                              <Form.Item name=\"f2\">\r\n                                <Input className=\"input-control\" htmlFor=\"f3\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F3\">\r\n                              <Form.Item name=\"f3\">\r\n                                <Input className=\"input-control\" htmlFor=\"f3\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F4\">\r\n                              <Form.Item name=\"f4\">\r\n                                <Input className=\"input-control\" htmlFor=\"f4\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F5\">\r\n                              <Form.Item name=\"f5\">\r\n                                <Input className=\"input-control\" htmlFor=\"f5\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateManually;\r\n","import React from \"react\";\r\nimport { Upload, message, Button ,Modal} from \"antd\";\r\n\r\nconst fileList = [];\r\n\r\nconst UploadImage = ({ file, handleStepOneUpload, handleBeforeUpload, handleOnRemove, handlePollImagePreview,handleCancel, poll }) => {\r\n  return (\r\n    <>\r\n      <Upload\r\n        listType=\"picture\"\r\n        fileList={file}\r\n        onChange={(value) => handleStepOneUpload(value, \"pollDocument\")}\r\n        beforeUpload={(value) => handleBeforeUpload(value, \"pollDocument\")}\r\n        onRemove={(value) => handleOnRemove(value, \"pollImageValidation\")}\r\n        onPreview={(value) => handlePollImagePreview(value)}\r\n        className=\"upload-list-inline c-upload\"\r\n        accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n      >\r\n        <Button type=\"link\" className=\"link pl-0\">\r\n          <span className=\"icon icon-upload pr-2\"></span> Document Or Image\r\n        </Button>\r\n      </Upload>\r\n      <Modal\r\n        className=\"modal-openline\"\r\n        visible={poll.previewVisible}\r\n        title={poll.previewTitle}\r\n        centered\r\n        onOk={(value) => handleCancel(value)}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{ style: { display: 'none' } }}\r\n        okText=\"Close\"\r\n      >\r\n        <img alt=\"example\" style={{ width: '100%' }} src={poll.previewImage} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nimport { Tag, Input, Tooltip, Col, Button, Radio } from \"antd\";\r\nimport styles from \"./managePoll.module.scss\";\r\n\r\nclass MultiChoice extends Component {\r\n  state = {\r\n    tags: [],\r\n\r\n    inputVisible: false,\r\n    inputValue: \"\",\r\n    editInputIndex: -1,\r\n    editInputValue: \"\",\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter((tag) => tag !== removedTag);\r\n    this.props.setSingleChoiceResponse(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const tagsOption = this.props.pollResponse;\r\n    this.setState({ tags: tagsOption });\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: \"\",\r\n    });\r\n    this.props.setSingleChoiceResponse(tags);\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tags,\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n            className={`${styles.edit_tag}`}\r\n              key={tag}\r\n              closable={!this.props.disabled}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={(e) => {\r\n                  // if (index ) {\r\n                  this.setState(\r\n                    { editInputIndex: index, editInputValue: tag },\r\n                    () => {\r\n                      this.editInput.focus();\r\n                    }\r\n                  );\r\n                  e.preventDefault();\r\n                  // }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        <Col span={12} className=\"mb-4\">\r\n          \r\n            <Tag onClick={this.showInput} className={`${styles.add_tag}`}>\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0\"\r\n                onClick={this.showModal}\r\n                disabled={this.props.disabled}\r\n              >\r\n                <span className=\"icon icon-add-filled\" />\r\n                Add Option\r\n              </Button>\r\n            </Tag>\r\n        \r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiChoice;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nlet startDate = \"\";\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.onPublish();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return current && current < moment(this.props.pollData.pollStartDate);\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  disabledDateTime = (current, type) => {\r\n    if (type === \"start\") {\r\n      startDate = current;\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    } else if (type === \"end\") {\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      } else if (moment(current).isSame(moment(startDate))) {\r\n        var now = moment(startDate);\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          Schedule\r\n        </Button>\r\n        <Modal\r\n          title=\"Publish Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Publish\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                Select Date and Time to publish the\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label=\"Select Start Date\" value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollStartDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label=\"Select Start Time\"\r\n                        value={this.props.pollData.pollStartTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label=\"Select End Date\" value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollEndDate}\r\n                    disabledDate={this.disabledEndDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                </Form.Item>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\">\r\n                    <KeyboardTimePicker\r\n                      margin=\"normal\"\r\n                      id=\"time-picker2\"\r\n                      label=\"Select End Time\"\r\n                      value={this.props.pollData.pollEndTime}\r\n                      onChange={(time) => this.onChangeEndTime(time)}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change time\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Input,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  notification,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DateTimeModal from \"../modal/DateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n}\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst PreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  isImage,\r\n  data,\r\n  attachmentName,\r\n}) => {\r\n  const [schedulePoll, setSchedulePoll] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const history = useHistory();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const openDocument = (e) => {};\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    setLoader(true);\r\n    const optionsData = [];\r\n    let data = {};\r\n    poll.pollResponse.map((value) => {\r\n      optionsData.push({ option_text: value });\r\n    });\r\n    if (isImage) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          image:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          image_name: attachmentName,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          document:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          document_name: attachmentName,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    }\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"poll/\", data, options)\r\n      .then(() => {\r\n        const placement = \"bottomLeft\";\r\n        setLoader(false);\r\n        api.info({\r\n          description: `Poll has been created successfully.`,\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>Manage Polls</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      {/* <NavLink to=\"/orgcc/createpoll\">\r\n                        <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>Preview Poll</Breadcrumb.Item> */}\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">Preview Poll</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    <Col\r\n                      span={24}\r\n                      className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                    >\r\n                      <h6>\r\n                        {poll.pollName}\r\n                        <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                          <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                        </Tooltip>\r\n                      </h6>\r\n                    </Col>\r\n\r\n                    <div className=\"mid-content\">\r\n                      <Row>\r\n                        <Col span={24}>\r\n                          <p className=\"font-weight-md6\">{poll.pollQuestion}</p>\r\n                          <Row className=\"preview-que\" disabled={true}>\r\n                            <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                              {poll.pollQuestionType === \"1\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Radio>{value}</Radio>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"2\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Checkbox>{value}</Checkbox>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"3\" ? (\r\n                                <ReactStars\r\n                                  {...starsRating}\r\n                                  value={poll.pollRatingResponse}\r\n                                  disabled={true}\r\n                                />\r\n                              ) : null}\r\n                            </div>\r\n                          </Row>\r\n                          <Row className=\"mt-2\">\r\n                            <div class=\"ant-upload-list-item\">\r\n                              <div class=\"ant-upload-list-item-info\">\r\n                                <span class=\"ant-upload-span\">\r\n                                  <div class=\"ant-upload-text-icon\">\r\n                                    <PaperClipOutlined />\r\n                                  </div>\r\n                                  <span\r\n                                    class=\"ant-upload-list-item-name\"\r\n                                    title=\"add-user-doc\"\r\n                                  >\r\n                                    {poll.pollDocument &&\r\n                                    poll.pollDocument[0] ? (\r\n                                      <a\r\n                                        href={poll.pollDocument[0].base64}\r\n                                        download={\r\n                                          poll.pollDocument[0].originFileObj\r\n                                            .name\r\n                                        }\r\n                                      >\r\n                                        {\r\n                                          poll.pollDocument[0].originFileObj\r\n                                            .name\r\n                                        }\r\n                                      </a>\r\n                                    ) : null}\r\n                                  </span>\r\n                                  <span class=\"ant-upload-list-item-card-actions\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"ant-btn\"\r\n                                    ></button>\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </Row>\r\n                          {/* <Row className=\"mt-2\">\r\n                      <Upload\r\n                      action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                      fileList={poll.pollDocument}\r\n                      onPreview={onPreview}\r\n                      onRemov={false}\r\n                      >\r\n                      </Upload>\r\n                      </Row> */}\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 px-3\">\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        type=\"secondary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"mr-4\"\r\n                        onClick={onBackCreatePoll}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <DateTimeModal\r\n                        pollData={poll}\r\n                        handlePollStartDatePickerChange={\r\n                          handlePollStartDatePickerChange\r\n                        }\r\n                        handlePollEndDatePickerChange={\r\n                          handlePollEndDatePickerChange\r\n                        }\r\n                        handlePollStartTimePickerChange={\r\n                          handlePollStartTimePickerChange\r\n                        }\r\n                        handlePollEndTimePickerChange={\r\n                          handlePollEndTimePickerChange\r\n                        }\r\n                        onPublish={onPublish}\r\n                      />\r\n                    </div>\r\n                  </Spin>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewPoll;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Breadcrumb,\r\n  Alert,\r\n  message,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport PreviewPoll from \"./PreviewPoll\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst CreatePoll = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    attachmentName: \"\",\r\n    pollStartTime: new Date(),\r\n    pollEndTime: new Date(),\r\n    pollResponse: [],\r\n    pollImageValidation: true,\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n  });\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n      0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult) {\r\n        if (!poll.pollChartType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (value.file.status === \"removed\") {\r\n      showuploadError(true);\r\n    }\r\n    let fileList = value.fileList.slice(-1);\r\n    checkDoucmentType(value.file.type);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\"\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setAttachmentName(value.file.name);\r\n    setPoll({ ...poll, [name]: fileList });\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePollImagePreview = async file => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPoll({...poll, previewImage : file.url || file.preview, previewVisible: true, \r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n\r\n    })\r\n  };\r\n\r\n  const handleCancel = (value) =>  setPoll({...poll, previewVisible: false });\r\n\r\n  const getBase64=(file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setPoll({ ...poll, pollImageValidation: true });\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    let xlsxfileExt = file.name.includes(\".xls\");\r\n    let pptxfileExt = file.name.includes(\".pptx\");\r\n    let docfileExt = file.name.includes(\".doc\");\r\n    let csvfileExt = file.name.includes(\".csv\");\r\n\r\n    const isValidDoc =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\" ||\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    if (!isValidDoc) {\r\n      showuploadError(false);\r\n      message.error(`${file.name} is not a supported format file type.`);\r\n    } else {\r\n      showuploadError(true);\r\n    }\r\n    const isImage =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\";\r\n    const isDocument =\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    const isLt10M = file.size / 1024 / 1024 < 10;\r\n    if (isImage) {\r\n      if (!isLt5M && isImage) {\r\n        showuploadError(false);\r\n        message.error(\"Image must smaller than 5MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n\r\n    if (isDocument) {\r\n      if (!isLt10M && isDocument) {\r\n        showuploadError(false);\r\n        message.error(\"Document must smaller than 10MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n    return (isValidDoc && isLt5M) || isLt10M;\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setpollError(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!previewPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>Manage Polls</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Create Poll</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                          form={form}\r\n                        >\r\n                          {error && (\r\n                            <Form.Item>\r\n                              <Alert\r\n                                message=\"Please fill the fields marked with asterisk(*) or upload vaild image or document\"\r\n                                type=\"error\"\r\n                                showIcon\r\n                              ></Alert>\r\n                            </Form.Item>\r\n                          )}\r\n                          <Col span={24}>\r\n                            <Row>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label=\"Poll Title\"\r\n                                  value={poll.pollName}\r\n                                >\r\n                                  <TextArea\r\n                                    showCount\r\n                                    maxLength={50}\r\n                                    htmlFor=\"polltitle\"\r\n                                    value={poll.pollName}\r\n                                    id=\"pollName\"\r\n                                    onChange={(e) => onCreateChange(e)}\r\n                                    onBlur={(e) => isPollNameDuplicate(e)}\r\n                                    autoComplete=\"off\"\r\n                                    className={`required ${styles.sm_textarea}`}\r\n                                  />\r\n\r\n                                  {pollError === \"status: false\" &&\r\n                                    poll.pollName\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    poll.pollName.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {pollError == \"status: true\" && (\r\n                                    <Alert\r\n                                      message=\"Sorry! This Poll title already exists in the system. Please use a different name.\"\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label=\"Description\"\r\n                                  value={poll.pollHelpText}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollHelpText\"\r\n                                    id=\"pollHelpText\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"helptext\"\r\n                                      id=\"pollHelpText\"\r\n                                      name=\"pollHelpText\"\r\n                                      value={poll.pollHelpText}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row mt-3\">\r\n                                <h6>Upload</h6>\r\n                                <Form.Item\r\n                                  name=\"upload\"\r\n                                  className=\"upload-list\"\r\n                                >\r\n                                  <UploadImage\r\n                                    file={poll.pollDocument}\r\n                                    handleStepOneUpload={handleStepOneUpload}\r\n                                    handleBeforeUpload={handleBeforeUpload}\r\n                                    handleOnRemove={handleOnRemove}\r\n                                    handlePollImagePreview={handlePollImagePreview}\r\n                                    handleCancel={handleCancel}\r\n                                    poll={poll}\r\n                                  />\r\n\r\n                                  \r\n                                </Form.Item>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                          <Col span={24} className=\"gutter-row\">\r\n                            <Row>\r\n                              <Col\r\n                                span={24}\r\n                                md={8}\r\n                                lg={8}\r\n                                xl={6}\r\n                                className=\"mb-3 t-2 mb-y-0\"\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"showresult\"\r\n                                  label=\"Show result to users \"\r\n                                  className=\"mb-0\"\r\n                                >\r\n                                  <Switch\r\n                                    id=\"showResult\"\r\n                                    checked={poll.showResult}\r\n                                    onChange={(checked, e) =>\r\n                                      onChange(checked, e)\r\n                                    }\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                              {poll.showResult ? (\r\n                                <Col span={24} md={10} lg={8}>\r\n                                  <FloatLabel\r\n                                    label=\"Display final results as\"\r\n                                    value={poll.pollChartType}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required mb-0\"\r\n                                      name=\"result\"\r\n                                    >\r\n                                      <>\r\n                                        <Select\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"result\"\r\n                                          className=\"required\"\r\n                                          value={poll.pollChartType}\r\n                                          onSelect={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollChartType\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <Select.Option value=\"1\">\r\n                                            Pie Chart\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"3\">\r\n                                            Bar Chart\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"4\">\r\n                                            Star Format\r\n                                          </Select.Option>\r\n                                        </Select>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                  {chartError && (\r\n                                    <Form.Item>\r\n                                      <Alert\r\n                                        message=\"Please select the Chart type as Star\"\r\n                                        type=\"error\"\r\n                                        showIcon\r\n                                      ></Alert>\r\n                                    </Form.Item>\r\n                                  )}\r\n                                </Col>\r\n                              ) : (\r\n                                  <Col></Col>\r\n                                )}\r\n                            </Row>\r\n                          </Col>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"mid-content mt-4\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                        >\r\n                          <Col span={24}>\r\n                            <Row className=\"d-block\">\r\n                              <Col span={24} md={6} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label=\"Question Type\"\r\n                                  value={poll.pollQuestionType}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"questiontype\"\r\n                                  >\r\n                                    <>\r\n                                      <Select\r\n                                        className=\"\"\r\n                                        htmlFor=\"questiontype\"\r\n                                        className=\"required\"\r\n                                        id=\"pollQuestionType\"\r\n                                        value={poll.pollQuestionType}\r\n                                        onSelect={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollQuestionType\"\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <Select.Option\r\n                                          value=\"1\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType === \"4\"\r\n                                          }\r\n                                        >\r\n                                          Single Choice\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"2\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType === \"4\"\r\n                                          }\r\n                                        >\r\n                                          Multiple Choice\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"3\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType !== \"4\"\r\n                                          }\r\n                                        >\r\n                                          Star Rating\r\n                                        </Select.Option>\r\n                                      </Select>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label=\"Question\"\r\n                                  value={poll.pollQuestion}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollQuestion\"\r\n                                    id=\"pollQuestion\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"pollQuestion\"\r\n                                      id=\"pollQuestion\"\r\n                                      name=\"pollQuestion\"\r\n                                      defaultValue={poll.pollQuestion}\r\n                                      value={poll.pollQuestion}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={8} lg={6} className=\"mt-4\">\r\n                                {poll.pollQuestionType === \"3\" ? (\r\n                                  <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                ) : poll.pollQuestionType === \"1\" ? (\r\n                                  <div>\r\n                                    <MultiChoice\r\n                                      setSingleChoiceResponse={\r\n                                        setSingleChoiceResponse\r\n                                      }\r\n                                      pollResponse={poll.pollResponse}\r\n                                    />\r\n                                  </div>\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  <MultiChoice\r\n                                    pollResponse={poll.pollResponse}\r\n                                    setSingleChoiceResponse={\r\n                                      setSingleChoiceResponse\r\n                                    }\r\n                                  />\r\n                                ) : null}\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              className=\"md mr-4\"\r\n                              onClick={onPreview}\r\n                            >\r\n                              Preview\r\n                            </Button>\r\n                            <Button\r\n                              type=\"secondary\"\r\n                              type=\"secondary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onCancel}\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </div>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n          <PreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            isImage={isImage}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n          />\r\n        )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./managePoll.module.scss\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ManagePolls from \"../../assets/images/manage-polls.svg\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport CreatePoll from \"../managePolls/CreatePoll\";\r\n\r\nconst { Content } = Layout;\r\nconst ManagePoll = (props) => {\r\n  const [createPoll, setCreatePoll] = useState(false);\r\n  const ShowCreatePoll = () => {\r\n    setCreatePoll(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!createPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Polls\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Manage Polls</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={ManagePolls}\r\n                            alt=\"Create Polls\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create polls and publish them for all employees from\r\n                          here\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={ShowCreatePoll}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create Poll\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <Redirect to=\"/orgcc/createpoll\" />\r\n        // <CreatePoll data={props.data} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Form, Col, DatePicker } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nlet startDate = \"\";\r\n\r\nclass ExtendEndDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      pollEndDate: \"\",\r\n      pollEndTime: new Date(),\r\n    };\r\n    this.range = this.range.bind(this);\r\n    this.disabledDateTime = this.disabledDateTime.bind(this);\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   console.log(\r\n  //    '***********'\r\n  //   );\r\n  //   // const s_date = moment(\r\n  //   //   this.props.pollsData.start_date + \" \" + this.props.pollsData.start_time\r\n  //   // );\r\n  //   // const sDate = moment(s_date)\r\n  //   //   .utcOffset(\"+05:30\")\r\n  //   //   .format(\"YYYY/MM/DD HH:mm:ss\");\r\n  //   // const eDate = moment(\r\n  //   //   this.props.pollsData.end_date + \" \" + this.props.pollsData.end_time\r\n  //   // )\r\n  //   //   .utcOffset(\"+05:30\")\r\n  //   //   .format(\"YYYY/MM/DD HH:mm:ss\");\r\n  //   // this.setState({ pollStartDate: moment(this.props.pollsData.start_date),\r\n  //   //   pollEndDate: this.props.pollsData.end_date,\r\n  //   //   pollStartTime: this.props.pollsData.start_time,\r\n  //   //   pollEndTime: this.props.pollsData.end_time,\r\n  //   //  });\r\n  // }\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    let obj = {\r\n      poll_id: this.props.pollsData.poll_id,\r\n      pollName: this.props.pollsData.title,\r\n    };\r\n    this.props.extendPollDate(obj, this.state);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    window.location = \"/orgcc/pollsdirectory\";\r\n  };\r\n\r\n  onChangeEndDate(date) {\r\n    this.setState({\r\n      pollEndDate: date,\r\n    });\r\n  }\r\n\r\n  onChangeEndTime(time) {\r\n    this.setState({\r\n      pollEndTime: time,\r\n    });\r\n  }\r\n\r\n  disabledDate(current) {\r\n    return current && current < moment().startOf(\"day\");\r\n  }\r\n\r\n  range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  disabledDateTime(current, type) {\r\n    if (type === \"start\") {\r\n      startDate = current;\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    } else if (type === \"end\") {\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      } else if (moment(current).isSame(moment(startDate))) {\r\n        var now = moment(startDate);\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Extend End Date</a>\r\n        <Modal\r\n          title=\"Extend End Date\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Extend Date\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md font-weight-md6\">\r\n                Select Date and Time to{\" \"}\r\n                <span className=\"pr-1\"> extend the</span>\r\n                {this.props.pollsData.title} Poll\r\n              </div>\r\n\r\n              <FloatLabel label=\"Select End Date\" value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.state.pollEndDate}\r\n                    disabledDate={this.disabledDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label=\"Select End Time\"\r\n                        value={this.state.pollEndTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExtendEndDate;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport ExtendEndDate from \"../../components/modal/ExtendEndDate\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst content = (data, extendPollDate) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: `/orgcc/editpoll/${data.poll_id}`, state: data }}>\r\n        <li>\r\n          <a href={`/orgcc/editpoll/${data.poll_id}`}>\r\n            {data.status_id === 4 ? \"View\" : \"Edit\"}\r\n          </a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      {data.show_result_to_users && data.status_id === 4 ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">Show Intrim Result</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 1 || data.status_id === 2 || data.status_id === 3 ? (\r\n        <li>\r\n          <ExtendEndDate extendPollDate={extendPollDate} pollsData={data} />\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data, this.props.extendPollDate)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined, PaperClipOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport PollPopover from \"../table/PollPopover\";\r\nimport CreatePollPopover from \"../table/CreatePollPopover\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { polls } = this.props;\r\n    polls?.forEach((poll) => {\r\n      poll.start_date = moment(poll.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM/DD/YYYY\");\r\n      poll.end_date = moment(poll.end_date).utc().local().format(\"MM/DD/YYYY\");\r\n    });\r\n    this.setState({ data: polls }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.polls !== nextProps.polls) {\r\n      nextProps.polls?.forEach((poll) => {\r\n        poll.start_date = moment(poll.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n        poll.end_date = moment(poll.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.polls }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  extendPollDate = (value, date) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      end_date: momentUtil.formatAsDDMMYYYY(date.pollEndDate),\r\n      end_time: momentUtil.formatAsHHmmss(date.pollEndTime),\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"extendEndDate/\" + value.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: `${value.pollName} date has been extended successfully.`,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      });\r\n  };\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  statusClicked = (record, via) => {\r\n    let data = {};\r\n    if (via.length === 0) {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.title} can't be changed as this poll is completed.`,\r\n      });\r\n    } else if (via === \"Scheduled\" || via === \"Active\") {\r\n      data = {\r\n        status_id: 2,\r\n      };\r\n    } else if (via === \"inActive\") {\r\n      const startDate = record.start_date;\r\n      const sdate = startDate.split(\"/\")[0];\r\n      const smonth = startDate.split(\"/\")[1];\r\n      const syear = startDate.split(\"/\")[2];\r\n      const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n      const currentDate = new Date();\r\n      if (finalStartDate > currentDate) {\r\n        data = {\r\n          status_id: 3,\r\n        };\r\n      } else if (finalStartDate < currentDate) {\r\n        data = {\r\n          status_id: 1,\r\n        };\r\n      } else if (finalStartDate === currentDate) {\r\n        const startTime = record.start_time;\r\n        const SFullDate = smonth + \"-\" + sdate + \"-\" + syear;\r\n        const startTimeWithDate = new Date(SFullDate + startTime);\r\n        if (startTimeWithDate > new Date()) {\r\n          data = {\r\n            status_id: 3,\r\n          };\r\n        } else if (startTimeWithDate <= new Date()) {\r\n          data = {\r\n            status_id: 1,\r\n          };\r\n        }\r\n      }\r\n    }\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"changePollStatus/\" + record.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: `Status of ${record.title} has been changed successfully.`,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { polls, loader } = this.props;\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.image || record.document ? <PaperClipOutlined /> : null,\r\n            props: {\r\n              \"data-title\": \"\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name, record) => {\r\n          return {\r\n            children: (\r\n              <Link\r\n                to={{\r\n                  pathname: `/orgcc/editpoll/${record.poll_id}`,\r\n                  state: record,\r\n                }}\r\n              >\r\n                <li>\r\n                  <a href={`/orgcc/editpoll/${record.poll_id}`}>{name}</a>{\" \"}\r\n                </li>\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.start_date + \" \" + record.start_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.end_date + \" \" + record.end_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 2 ? (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"inActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ) : record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Active\r\n                </div>\r\n              ) : record.status_id === 3 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Scheduled\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Scheduled\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Completed\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: (\r\n              <PollPopover extendPollDate={this.extendPollDate} data={record} />\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={this.props.data} />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1>Manage Polls</h1>\r\n                  </Row>\r\n                  <Col span={24}>\r\n                    <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"search-row mt-2 mt-lg-0\"\r\n                      >\r\n                        <Row>\r\n                          <Col span={24} lg={9} className=\"search-box\">\r\n                            <Search\r\n                              placeholder=\"Search\"\r\n                              onSearch={this.onSearch}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col\r\n                        span={24}\r\n                        lg={6}\r\n                        className=\"d-flex align-items-center justify-content-end\"\r\n                      >\r\n                        {/* <CreatePollPopover polls={polls} /> */}\r\n                        <Link to=\"/orgcc/createpoll\">\r\n                          <Buttons value=\"Create Polls\" />\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Grid\r\n                    rowKey=\"poll_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </Spin>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllPolls;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        <a href=\"/orgcc/createpoll\">Create New</a>{\" \"}\r\n      </li>\r\n\r\n      {/* <li>\r\n        <a href=\"/orgcc/existingpolls\">Choose from existing</a>{\" \"}\r\n      </li> */}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass CreatePollPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n           <Button type=\"primary\">Create Poll</Button>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePollPopover;\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    POLL_SUCCESS,\r\n    POLL_FAIL,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getPollAsync=()=>(dispatch)=>{\r\n        return UserService.getPolls().then((data)=>{\r\n            dispatch({\r\n                type:POLL_SUCCESS,\r\n                payload:{pollsdata:data.data},\r\n                \r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:POLL_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport ManagePolls from \"./ManagePolls\";\r\nimport ShowAllPolls from \"./ShowAllPolls\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\n\r\nconst PollsContainer = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getPollAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.pollsdata === null) {\r\n      setLoader(true);\r\n    } else if (props.pollsdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.pollsdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader && props.pollsdata !== null && props.pollsdata.length === 0 ? (\r\n    <ManagePolls data={props} />\r\n  ) : (\r\n    <ShowAllPolls\r\n      polls={props.pollsdata}\r\n      data={props}\r\n      loader={loader}\r\n      statusOnClicked={statusOnClicked}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollsContainer);\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Button, Input, Breadcrumb } from \"antd\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nconst starsRating = {\r\n  size: 30,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 3,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst PollResponse = (props) => {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>Polls</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Poll Results</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3 justify-content-between\">\r\n                  <h1 className=\"mb-0\">{location.state.title}</h1>\r\n                  <Col\r\n                    span={24}\r\n                    md={24}\r\n                    lg={12}\r\n                    xl={15}\r\n                    className=\"d-flex align-items-center justify-content-start justify-content-lg-end px-3 px-lg-0 my-4 my-lg-0\"\r\n                  >\r\n                    {/* <span className=\"pr-3\">Total audience : 2300</span> */}\r\n                    {/* <Button type=\"primary\" className=\"md\">\r\n                      Download\r\n                    </Button> */}\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex align-items-center justify-content-end\"\r\n                  ></Col>\r\n                </Row>\r\n                <div className=\"\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <p className=\"font-weight-md6\">\r\n                        {location.state.question}\r\n                      </p>\r\n                      {/* <span className=\"font-weight-md6 pt-3 d-flex\">\r\n                        1846 Responses\r\n                      </span> */}\r\n                      \r\n                      <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        {/* <div className=\"c-vector-area\">\r\n                          <img\r\n                           // src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div> */}\r\n                        <h1 className=\"text-center pt-3\">\r\n                          Results for this poll are not available at this moment\r\n                          \r\n                        </h1>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          {/* <Divider className=\"mt-1\" /> */}\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          {/* <Button\r\n                            data-test=\"createHotline\"\r\n                           // onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button> */}\r\n                          {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                      <Row className=\"preview-que mt-3\">\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center font-weight-md6\"\r\n                        >\r\n                          {/* <span>\r\n                            <ReactStars {...starsRating} />\r\n                          </span> */}\r\n                          {/* <span className=\"pl-5\">30%</span> */}\r\n                        </Col>\r\n                        \r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center font-weight-md6\"\r\n                        >\r\n                          {/* <span>\r\n                            <ReactStars {...starsRating} />\r\n                          </span>\r\n                          <span className=\"pl-5\">20%</span> */}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PollResponse;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.props.pollData.pollStartDate ||\r\n      !this.props.pollData.pollEndDate\r\n    ) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    this.setState({ startTime: time });\r\n    this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    this.setState({ endTime: time });\r\n    this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {this.props.viaEdit ? \"Reschedule\" : \"Schedule\"}\r\n        </Button>\r\n        <Modal\r\n          title=\"Publish Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={\r\n            this.props.pollData.status_id === 4\r\n              ? {\r\n                  style: { display: \"none\" },\r\n                }\r\n              : {\r\n                  children: \"Custom OK\",\r\n                }\r\n          }\r\n          cancelButtonProps={\r\n            this.props.pollData.status_id === 4\r\n              ? {\r\n                  className: \"ant-btn-primary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n              : {\r\n                  className: \"ant-btn-secondary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n          }\r\n          okText=\"Publish\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Please fill the Dates\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                Select Date and Time to publish the\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label=\"Select Start Date\" value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.startDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                    disabled={this.props.pollData.status_id === 4}\r\n                  />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label=\"Select Start Time\"\r\n                        value={this.state.startTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label=\"Select End Date\" value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  {this.state.endDate !== \"\" ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <DatePicker\r\n                        defaultValue={this.state.endDate}\r\n                        disabledDate={this.disabledEndDate}\r\n                        onChange={(date) => this.onChangeEndDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"eDate\"\r\n                        className=\"required\"\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <DatePicker\r\n                      defaultValue={this.state.endDate}\r\n                      disabledDate={this.disabledEndDate}\r\n                      onChange={(date) => this.onChangeEndDate(date)}\r\n                      className=\"w-100\"\r\n                      name=\"eDate\"\r\n                      className=\"required\"\r\n                      disabled={this.props.pollData.status_id === 4}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\">\r\n                    <KeyboardTimePicker\r\n                      margin=\"normal\"\r\n                      id=\"time-picker2\"\r\n                      label=\"Select End Time\"\r\n                      value={this.state.endTime}\r\n                      onChange={(time) => this.onChangeEndTime(time)}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change time\",\r\n                      }}\r\n                      disabled={this.props.pollData.status_id === 4}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport EditDateTimeModal from \"../modal/EditDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditPreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  editPoll,\r\n  showError,\r\n  error,\r\n  data,\r\n  loader,\r\n  attachmentName,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    editPoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>Manage Polls</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      {/* <NavLink to=\"/orgcc/createpoll\">\r\n                        <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>Preview Poll</Breadcrumb.Item> */}\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">Preview Poll</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n                  <React.Fragment>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <div className=\"mid-content\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            <p className=\"font-weight-md6\">\r\n                              {poll.pollQuestion}\r\n                            </p>\r\n                            <Row className=\"preview-que\" disabled={true}>\r\n                              <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                                {poll.pollQuestionType === \"1\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Radio>{value}</Radio>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Checkbox>{value}</Checkbox>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"3\" ? (\r\n                                  <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    disabled={true}\r\n                                  />\r\n                                ) : null}\r\n                              </div>\r\n                            </Row>\r\n                            <Row className=\"mt-2\">\r\n                              <div class=\"ant-upload-list-item\">\r\n                                <div class=\"ant-upload-list-item-info\">\r\n                                  <span class=\"ant-upload-span\">\r\n                                    <div class=\"ant-upload-text-icon\">\r\n                                      <PaperClipOutlined />\r\n                                    </div>\r\n                                    <span\r\n                                      class=\"ant-upload-list-item-name\"\r\n                                      title=\"add-user-doc\"\r\n                                    >\r\n                                      {poll.pollDocument ? (\r\n                                        <a\r\n                                          href={poll.pollDocument}\r\n                                          download={poll.pollDocument}\r\n                                        >\r\n                                          {attachmentName}\r\n                                        </a>\r\n                                      ) : null}\r\n                                    </span>\r\n                                    <span class=\"ant-upload-list-item-card-actions\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"ant-btn\"\r\n                                      ></button>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mt-5 px-3\">\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          type=\"secondary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"mr-4\"\r\n                          onClick={onBackCreatePoll}\r\n                        >\r\n                          Back\r\n                        </Button>\r\n                        <EditDateTimeModal\r\n                          pollData={poll}\r\n                          handlePollStartDatePickerChange={\r\n                            handlePollStartDatePickerChange\r\n                          }\r\n                          handlePollEndDatePickerChange={\r\n                            handlePollEndDatePickerChange\r\n                          }\r\n                          handlePollStartTimePickerChange={\r\n                            handlePollStartTimePickerChange\r\n                          }\r\n                          handlePollEndTimePickerChange={\r\n                            handlePollEndTimePickerChange\r\n                          }\r\n                          onPublish={onPublish}\r\n                          showError={showError}\r\n                          error={error}\r\n                          viaEdit\r\n                        />\r\n                      </div>\r\n                    </Spin>\r\n                  </React.Fragment>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Upload,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport EditPreviewPoll from \"./EditPreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst EditPoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: [],\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n      const data = res.data;\r\n      setPoll({\r\n        ...poll,\r\n        pollId: data.poll_id,\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollDocument: [\r\n          {\r\n            uid: \"1\",\r\n            name:\r\n              data.image_name !== null\r\n                ? data.image_name\r\n                : data.document_name !== null\r\n                ? data.document_name\r\n                : \"\",\r\n            status: \"done\",\r\n            url: data.image ? data.image : data.document,\r\n          },\r\n        ],\r\n        showResult: data.show_result_to_users,\r\n        pollChartType: data.poll_result_chart_type.toString(),\r\n        pollQuestion: data.question,\r\n        pollQuestionType: data.poll_question_type.toString(),\r\n        pollRatingResponse: \"\",\r\n        pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n        pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n        pollStartTime: data.start_time,\r\n        pollEndTime: data.end_time,\r\n        status_id: data.status_id,\r\n        pollResponse: data.option_text.map((value) => value.option_text),\r\n        pollOptionText: data.option_text,\r\n      });\r\n      setAttachmentName(\r\n        data.image_name !== null\r\n          ? data.image_name\r\n          : data.document_name !== null\r\n          ? data.document_name\r\n          : \"\"\r\n      );\r\n      const isImage =\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpeg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"png\");\r\n      if (isImage) {\r\n        setIsImage(true);\r\n      } else {\r\n        setIsImage(false);\r\n      }\r\n      form.setFieldsValue({\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollQuestion: data.question,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion &&\r\n      poll.pollResponse.length > 0\r\n    ) {\r\n      if (poll.showResult) {\r\n        if (poll.pollChartType === \"2\") {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const editPoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n    let data = {};\r\n    function convertImgToBase64(url, callback, outputFormat) {\r\n      var canvas = document.createElement(\"CANVAS\");\r\n      var ctx = canvas.getContext(\"2d\");\r\n      var img = new Image();\r\n      img.crossOrigin = \"Anonymous\";\r\n      img.onload = function () {\r\n        canvas.height = img.height;\r\n        canvas.width = img.width;\r\n        ctx.drawImage(img, 0, 0);\r\n        var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n        callback.call(this, dataURL);\r\n        // Clean up\r\n        canvas = null;\r\n      };\r\n      img.src = url;\r\n    }\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollEndDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (\r\n      poll.pollDocument?.length === 0 ||\r\n      poll.pollDocument[0].url?.length === 0\r\n    ) {\r\n      data = {\r\n        update_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n        .then(() => {\r\n          setLoader(false);\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: \"Poll details have been changed successfully.\",\r\n            placement,\r\n          });\r\n          window.location = \"/orgcc/pollsdirectory\";\r\n        });\r\n    } else {\r\n      if (poll.pollDocument[0]?.url) {\r\n        convertImgToBase64(poll.pollDocument[0]?.url, function (base64Img) {\r\n          if (isImage) {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                image: base64Img,\r\n                image_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n          } else {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                document: base64Img,\r\n                document_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n          }\r\n          axios\r\n            .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n            .then(() => {\r\n              setLoader(false);\r\n              const placement = \"bottomLeft\";\r\n              api.info({\r\n                description: \"Poll details have been changed successfully.\",\r\n                placement,\r\n              });\r\n              window.location = \"/orgcc/pollsdirectory\";\r\n            });\r\n        });\r\n      } else {\r\n        if (isImage) {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              image: poll.pollDocument.base64,\r\n              image_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        } else {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              document: poll.pollDocument.base64,\r\n              document_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        }\r\n        axios\r\n          .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n          .then(() => {\r\n            setLoader(false);\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: \"Poll details have been changed successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/orgcc/pollsdirectory\";\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    } else {\r\n      if (value.file.status === \"removed\") {\r\n        showuploadError(true);\r\n      }\r\n      let fileList = value.fileList.slice(-1);\r\n      checkDoucmentType(value.file.type);\r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setAttachmentName(value.file.name);\r\n      setPoll({ ...poll, [name]: fileList });\r\n    }\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (e.target.value !== location.state.title) {\r\n      axios\r\n        .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setpollError(res.data[0]);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      initialValues={{\r\n                        remember: true,\r\n                      }}\r\n                      form={form}\r\n                    >\r\n                      <Row className=\"py-3\">\r\n                        <h1 className=\"mb-0\">\r\n                          {poll.status_id === 4 ? \"View Poll\" : \"Edit Poll\"}\r\n                        </h1>\r\n                      </Row>\r\n\r\n                      <div className=\"mid-content\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            {error && (\r\n                              <Form.Item>\r\n                                <Alert\r\n                                  message=\"Please fill the fields marked with asterisk(*)\"\r\n                                  type=\"error\"\r\n                                  showIcon\r\n                                ></Alert>\r\n                              </Form.Item>\r\n                            )}\r\n                            <Col span={24}>\r\n                              <Row>\r\n                                <Col span={24} md={18} className=\"gutter-row\">\r\n                                  <FloatLabel\r\n                                    label=\"Poll Title\"\r\n                                    value={poll.pollName}\r\n                                  >\r\n                                    <TextArea\r\n                                      showCount\r\n                                      maxLength={50}\r\n                                      htmlFor=\"polltitle\"\r\n                                      value={poll.pollName}\r\n                                      id=\"pollName\"\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                      onBlur={(e) => isPollNameDuplicate(e)}\r\n                                      autoComplete=\"off\"\r\n                                      disabled={poll.status_id === 4}\r\n                                      className={`required ${styles.sm_textarea}`}\r\n                                    />\r\n\r\n                                    {pollError === \"status: false\" &&\r\n                                      poll.pollName\r\n                                        .replace(/^\\s*/, \"\")\r\n                                        .replace(/\\s*$/, \"\").length > 0 &&\r\n                                      poll.pollName.length > 0 && (\r\n                                        <CheckCircleTwoTone\r\n                                          className=\"successCheck\"\r\n                                          twoToneColor=\"#52c41a\"\r\n                                        />\r\n                                      )}\r\n                                    {pollError == \"status: true\" && (\r\n                                      <Alert\r\n                                        message=\"Sorry! This Poll title already exists in the system. Please use a different name.\"\r\n                                        type=\"error\"\r\n                                        showIcon\r\n                                      ></Alert>\r\n                                    )}\r\n                                  </FloatLabel>\r\n                                </Col>\r\n                                <Col span={24} md={18} className=\"gutter-row\">\r\n                                  <FloatLabel\r\n                                    label=\"Description\"\r\n                                    value={poll.pollHelpText}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required\"\r\n                                      name=\"pollHelpText\"\r\n                                      id=\"pollHelpText\"\r\n                                      validateStatus=\"success\"\r\n                                    >\r\n                                      <Input\r\n                                        className=\"input-control\"\r\n                                        htmlFor=\"helptext\"\r\n                                        id=\"pollHelpText\"\r\n                                        name=\"pollHelpText\"\r\n                                        value={poll.pollHelpText}\r\n                                        disabled={poll.status_id === 4}\r\n                                        autoComplete=\"off\"\r\n                                        maxLength={500}\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                </Col>\r\n                                <Col span={24} className=\"gutter-row mt-3\">\r\n                                  {poll.pollDocument?.length === 0 && (\r\n                                    <h6>Upload</h6>\r\n                                  )}\r\n                                  <Form.Item\r\n                                    name=\"upload\"\r\n                                    className=\"upload-list\"\r\n                                    valuePropName=\"fileList\"\r\n                                  >\r\n                                    <>\r\n                                      <Upload\r\n                                        listType=\"picture\"\r\n                                        fileList={poll.pollDocument}\r\n                                        onChange={(value) =>\r\n                                          handleStepOneUpload(\r\n                                            value,\r\n                                            \"pollDocument\"\r\n                                          )\r\n                                        }\r\n                                        beforeUpload={(value) =>\r\n                                          handleBeforeUpload(\r\n                                            value,\r\n                                            \"pollDocument\"\r\n                                          )\r\n                                        }\r\n                                        onRemove={() => handleOnRemove()}\r\n                                        className=\"upload-list-inline c-upload\"\r\n                                        accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n                                      >\r\n                                        {poll.pollDocument.length === 0 ? (\r\n                                          <Button\r\n                                            type=\"link\"\r\n                                            className=\"link pl-0\"\r\n                                          >\r\n                                            <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                                            Document Or Image\r\n                                          </Button>\r\n                                        ) : null}\r\n                                      </Upload>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </Col>\r\n                              </Row>\r\n                            </Col>\r\n                            <Col span={24} className=\"gutter-row\">\r\n                              <Row className=\"align-items-center d-flex\">\r\n                                <Col span={24} md={8} lg={8} xl={6}>\r\n                                  <Form.Item\r\n                                    name=\"showresult\"\r\n                                    label=\"Show result to users \"\r\n                                    className=\"mb-0\"\r\n                                  >\r\n                                    <Switch\r\n                                      id=\"showResult\"\r\n                                      checked={poll.showResult}\r\n                                      disabled={poll.status_id === 4}\r\n                                      onChange={(checked, e) =>\r\n                                        onChange(checked, e)\r\n                                      }\r\n                                    />\r\n                                  </Form.Item>\r\n                                </Col>\r\n                                {poll.showResult ? (\r\n                                  <Col span={24} lg={6}>\r\n                                    <FloatLabel\r\n                                      label=\"Display final results as\"\r\n                                      value={poll.pollChartType}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required mb-0\"\r\n                                        name=\"result\"\r\n                                      >\r\n                                        <>\r\n                                          <Select\r\n                                            className=\"input-control\"\r\n                                            htmlFor=\"result\"\r\n                                            className=\"required\"\r\n                                            disabled={poll.status_id === 4}\r\n                                            value={\r\n                                              poll.pollChartType === \"2\"\r\n                                                ? \"\"\r\n                                                : poll.pollChartType\r\n                                            }\r\n                                            onSelect={(value) =>\r\n                                              handlePollOnSelect(\r\n                                                value,\r\n                                                \"pollChartType\"\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <Select.Option value=\"1\">\r\n                                              Pie Chart\r\n                                            </Select.Option>\r\n                                            <Select.Option value=\"3\">\r\n                                              Bar Chart\r\n                                            </Select.Option>\r\n                                            <Select.Option value=\"4\">\r\n                                              Star Format\r\n                                            </Select.Option>\r\n                                          </Select>\r\n                                        </>\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                    {chartError && (\r\n                                      <Form.Item>\r\n                                        <Alert\r\n                                          message=\"Please select the chat type as star\"\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      </Form.Item>\r\n                                    )}\r\n                                  </Col>\r\n                                ) : (\r\n                                  <Col></Col>\r\n                                )}\r\n                              </Row>\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mid-content mt-4\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            <Col span={24}>\r\n                              <Row className=\"d-block\">\r\n                                <Col span={24} md={6} className=\"gutter-row\">\r\n                                  <FloatLabel\r\n                                    label=\"Question Type\"\r\n                                    value={poll.pollQuestionType}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required\"\r\n                                      name=\"questiontype\"\r\n                                    >\r\n                                      <>\r\n                                        <Select\r\n                                          className=\"\"\r\n                                          htmlFor=\"questiontype\"\r\n                                          className=\"required\"\r\n                                          id=\"pollQuestionType\"\r\n                                          disabled={poll.status_id === 4}\r\n                                          value={poll.pollQuestionType}\r\n                                          onSelect={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollQuestionType\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <Select.Option value=\"1\">\r\n                                            Single Choice\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"2\">\r\n                                            Multiple Choice\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"3\">\r\n                                            Star Rating\r\n                                            {poll.status_id === 4}\r\n                                          </Select.Option>\r\n                                        </Select>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                </Col>\r\n                                <Col span={24} md={18} className=\"gutter-row\">\r\n                                  <FloatLabel\r\n                                    label=\"Question\"\r\n                                    value={poll.pollQuestion}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required edit-input\"\r\n                                      name=\"pollQuestion\"\r\n                                      id=\"pollQuestion\"\r\n                                    >\r\n                                      <Input\r\n                                        className=\"input-control edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                        htmlFor=\"pollQuestion\"\r\n                                        className=\"required\"\r\n                                        disabled={poll.status_id === 4}\r\n                                        defaultValue={poll.pollQuestion}\r\n                                        value={poll.pollQuestion}\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        autoComplete=\"off\"\r\n                                        maxLength={500}\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                </Col>\r\n                                <Col span={24} className=\"mt-4\">\r\n                                  {poll.pollQuestionType === \"3\" ? (\r\n                                    <ReactStars\r\n                                      {...starsRating}\r\n                                      value={poll.pollRatingResponse}\r\n                                      name=\"pollRatingResponse\"\r\n                                      disabled={poll.status_id === 4}\r\n                                      onChange={(value) =>\r\n                                        handlePollOnSelect(\r\n                                          value,\r\n                                          \"pollRatingResponse\"\r\n                                        )\r\n                                      }\r\n                                      classNames=\"mt-3\"\r\n                                    />\r\n                                  ) : poll.pollQuestionType === \"1\" ? (\r\n                                    <div>\r\n                                      <MultiChoice\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                        pollResponse={poll.pollResponse}\r\n                                        disabled={poll.status_id === 4}\r\n                                      />\r\n                                    </div>\r\n                                  ) : poll.pollQuestionType === \"2\" ? (\r\n                                    <MultiChoice\r\n                                      pollResponse={poll.pollResponse}\r\n                                      setSingleChoiceResponse={\r\n                                        setSingleChoiceResponse\r\n                                      }\r\n                                      disabled={poll.status_id === 4}\r\n                                    />\r\n                                  ) : null}\r\n                                </Col>\r\n                              </Row>\r\n                            </Col>\r\n\r\n                            <div className=\"mt-5\">\r\n                              <Button\r\n                                type=\"primary\"\r\n                                className=\"md mr-4\"\r\n                                onClick={onPreview}\r\n                              >\r\n                                Preview\r\n                              </Button>\r\n                              <Button\r\n                                type=\"secondary\"\r\n                                type=\"secondary\"\r\n                                htmlType=\"submit\"\r\n                                onClick={onCancel}\r\n                              >\r\n                                Cancel\r\n                              </Button>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Form>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <EditPreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            editPoll={editPoll}\r\n            showError={showError}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n            error={error}\r\n            loader={loader}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPoll;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Input, Divider, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nclass ExistingPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getPollAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { pollsdata } = this.props;\r\n\r\n    if (prevProps.pollsdata !== pollsdata) {\r\n      this.setState(\r\n        {\r\n          data: pollsdata,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>Manage Polls</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <NavLink to=\"/createpoll\">\r\n                      <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>OOTB Polls</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1>Out Of The Box (OOTB) Polls</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <div className=\"mid-content\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                  {/* <Row>\r\n                    <Col span={24}>\r\n                      <h6 className=\"mb-4\">Poll Name</h6>\r\n                      <Row className=\"my-2\">\r\n                      <Link to=\"/\">Impact of Microaggression</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                      <Row className=\"my-2\">\r\n                        <Link to=\"/\">Microaggressions – do we have it?</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                    </Col>\r\n                  </Row> */}\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExistingPolls);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Upload,\r\n  Modal,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone, UploadOutlined } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenHotlineStepOne = ({\r\n  next,\r\n  imageError,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOpenLineInfo.openelineName &&\r\n      stepOneOpenLineInfo.openelineName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.description &&\r\n      stepOneOpenLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.file &&\r\n      stepOneOpenLineInfo.file.length > 0 &&\r\n      stepOneOpenLineInfo.status &&\r\n      stepOneOpenLineInfo.sDate\r\n    ) {\r\n      if (!imageError && hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOpenline/\",\r\n        { openline_name: stepOneOpenLineInfo.openelineName },\r\n\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <FloatLabel\r\n        label=\"Openeline Name\"\r\n        value={stepOneOpenLineInfo.openelineName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"openelineName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter directory name\",\r\n            },\r\n          ]}\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneOpenLineInfo.openelineName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"openelineName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"openelineName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated == \"status: false\" &&\r\n            stepOneOpenLineInfo.openelineName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneOpenLineInfo.openelineName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message=\"Sorry! This openline already exists in the system. Please use a different name.\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Description\" value={stepOneOpenLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter description\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneOpenLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label=\"Date\" value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneOpenLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Status\" value={stepOneOpenLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select status\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneOpenLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">Active</Option>\r\n              <Option value=\"4\">Inactive</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control required\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <Upload\r\n            action=\"\"\r\n            listType=\"picture\"\r\n            fileList={stepOneOpenLineInfo.file}\r\n            beforeUpload={(value) => handleBeforeUpload(value)}\r\n            onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n          >\r\n            {stepOneOpenLineInfo.file.length === 0 && (\r\n              <Button type=\"link\" className=\"link pl-0\">\r\n                <span className=\"icon icon-upload pr-2\"></span> Upload Image\r\n              </Button>\r\n            )}\r\n          </Upload>\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLineInfo.previewVisible}\r\n            title={stepOneOpenLineInfo.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"Close\"\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLineInfo.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      {imageError && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please upload an image.\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\n\r\nclass CreateOpenHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState({\r\n        employeeData: manageEmpData,\r\n      }, ()=>{\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n    \r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n          <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n              <Col span={24} lg={9} className=\"search-box\">\r\n\r\n                  <Search placeholder=\"Search User\" onSearch={this.onSearch} ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert\r\n            message=\"Please select user(s) and assign required permission(s) using Assign button.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.filterData}\r\n          rowKey=\"unique_identifier\"\r\n        />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenHotlineStepTwo);\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Upload,\r\n  Modal\r\n} from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  getIconText,\r\n  handleStepOnePreview,\r\n  handleCancel\r\n}) => {\r\n  \r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test=\"createHotlineStepThree\" className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            placeholder=\"Openline Name\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n        {/* <DatePicker className=\"datepicker w-50\"\r\n          name=\"tDate\"\r\n          value={hotlineForm.tDate}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please select End Date date\",\r\n            },\r\n          ]}\r\n          //  onChange={(date, dateString) => handleDatePickerChange(date, dateString,'tDate')}\r\n          disabled /> */}\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                placeholder=\"Status\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">Active</Select.Option>\r\n                <Select.Option value=\"4\">Inactive</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                placeholder=\"Assigned to\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n        <Upload\r\n             action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n             listType=\"picture\"\r\n             disabled\r\n             fileList={stepOneOpenLine.file}\r\n             onPreview={(value)=>handleStepOnePreview(value)}\r\n          >\r\n                {/* <Button icon={<UploadOutlined />}>Upload</Button> */}\r\n            </Upload>\r\n\r\n            <Modal\r\n             className=\"modal-openline\"\r\n             visible={stepOneOpenLine.previewVisible}\r\n             title={stepOneOpenLine.previewTitle}\r\n             centered\r\n             onOk={(value)=>handleCancel(value)}\r\n             okButtonProps={{\r\n              children: \"Custom OK\",\r\n             }}\r\n             cancelButtonProps={{ style: { display: 'none' } }}\r\n             okText=\"Close\"\r\n           >\r\n            <img alt=\"example\" style={{ width: '100%' }} src={stepOneOpenLine.previewImage} />\r\n          </Modal>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, message } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../openlineForm/CreateOpenHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../openlineForm/CreateOpenHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../openlineForm/CreateOpenHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Add Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Assign Employee\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Review Details\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    imagename:'',\r\n  });\r\n  const [hotlineErrorUpdated,setHotlineErrorUpdated] = useState(\"\");\r\n\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload = (value) => {\r\n    if (!value.type.includes(\"image\")) {\r\n      setImageError(true);\r\n      message.error(\r\n        `The file that you attemped to upload ${value.name} is not supported`\r\n      );\r\n      return false;\r\n    } else {\r\n      setImageError(false);\r\n    }\r\n    return value.type;\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename=value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\"\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: fileList, imagename: filename });\r\n\r\n  };\r\n\r\n  const handleReaderloaded = (readerEvt) => {\r\n    let binaryString = readerEvt.target.result;\r\n    setStepOneOpenLine({ ...stepOneOpenLine, file: btoa(binaryString) });\r\n  };\r\n\r\n  const handleStepOnePreview = async file => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setStepOneOpenLine({...stepOneOpenLine, previewImage : file.url || file.preview, previewVisible: true, \r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n\r\n    })\r\n  };\r\n\r\n  const handleCancel = (value) =>  setStepOneOpenLine({...stepOneOpenLine, previewVisible: false });\r\n  const setNameValidHandle = (value) => {\r\n    setHotlineErrorUpdated(value)\r\n  }\r\n\r\n\r\n  const getBase64=(file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by:  parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_openline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        openline_image: stepOneOpenLine.file[0].base64,\r\n        openline_image_name:stepOneOpenLine.imagename,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        created_by:  parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>Openline Directory</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>Create Openline Directory</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Create Openline Directory Entries</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          imageError={imageError}\r\n                          stepOneOpenLineInfo={stepOneOpenLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneUpload={handleStepOneUpload}\r\n                          handleBeforeUpload={handleBeforeUpload}\r\n                          handleStepOnePreview={handleStepOnePreview}\r\n                          handleCancel={handleCancel}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          setNameValidHandle={setNameValidHandle}\r\n                          hotlineErrorUpdated={hotlineErrorUpdated}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneOpenLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          getIconText={getIconText}\r\n                          handleStepOnePreview={handleStepOnePreview}\r\n                          handleCancel={handleCancel}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpnelineCreation from \"../../components/openlineCreation/OpnelineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Openline Directory</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create Hotline entries and assign them to managers,\r\n                          <br />\r\n                          head of departments or leadership.\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button>\r\n                          {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <OpnelineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\n\r\n\r\nconst OpenlinePermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource(); \r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [ \r\n    { \r\n        title: \"Name\",\r\n         dataIndex: \"first_name\",\r\n          key: \"first_name\", \r\n          width: \"30%\",\r\n          render: (record,response) => {\r\n            return {\r\n              children: response.user.first_name,\r\n              props: {\r\n                'data-title': 'Name',\r\n              },\r\n            };\r\n          }\r\n         \r\n    },\r\n    {\r\n      title: \"Respond\",\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => ( \r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox value=\"reports\" checked={res} onChange={(e)=> handleCheck(record)} disabled></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return ( \r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlinePermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\n\r\nconst SearchEmployee = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this openline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        options={searchData}\r\n        placeholder=\"Search Employee\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchEmployee;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport OpenlinePermission from \"../table/OpenlinePermission\";\r\nimport SearchEmployee from \"../autocomplete/SearchEmployee\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass OpenlinePermissioModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedOpenLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      openlineId: this.props.selectedRows.openline_id,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL+\"getOpenlineAssignEmpl/\" +\r\n          this.props.selectedRows.openline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n            assignedOpenLines: res.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => { \r\n    \r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL+\"openlineAssignEmpl/\",\r\n        this.state.assignedEmp,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedOpenLines = [...this.state.assignedOpenLines];\r\n    let index = assignedOpenLines.findIndex(el => el.user_id === record.user_id);\r\n    assignedOpenLines[index] = {...assignedOpenLines[index], can_respond: !record.can_respond};\r\n    this.setState({ assignedOpenLines});\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex(el => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {...assignedEmp[aindex], can_respond: !record.can_respond};\r\n    this.setState({ assignedEmp});\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user.user_id,\r\n    };\r\n    const newArray = this.state.assignedEmp && this.state.assignedEmp.filter(function (element) {\r\n      return element.user_id !== value.user.user_id;\r\n    });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL+\"getOpenlineAssignEmpl/\" + value.openline.openline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedOpenLines, assignedEmp } = this.state;\r\n    const x = {\r\n     user:{\r\n         user_id: parseInt(options.user_id),\r\n         first_name: options.value\r\n     },\r\n     openline:{\r\n        openline_id: this.state.openlineId,\r\n      },\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n    };\r\n    const y = {\r\n      openline_id: this.state.openlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedOpenLines: [...assignedOpenLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Show</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Done\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <div>Employees with permissions to {this.state.hotLineName}</div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>\r\n              Reply to Messages, Add Notes, Status & Urgency level\r\n            </Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <OpenlinePermission\r\n            data={this.state.assignedOpenLines}\r\n            deleteRecord={this.deleteRecord}\r\n            handleCheck={this.handleCheck}\r\n          />\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchEmployee\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedOpenLines}\r\n              />\r\n              <small>Hit enter to add</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlinePermissioModal);\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass DeleteOpenlineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"openline/\" + this.props.openlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/openlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Openline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <p>Are you sure you want to delete this Openline?</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteOpenlineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteOpenlineModal from \"../../components/modal/DeleteOpenlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/editopenline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/editopenline\">Edit</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteOpenlineModal openlineId={test.openline_id} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OpenlinePermissioModal from \"../modal/OpenlinePermissioModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport OpenlinePopover from \"../table/OpenlinePopover\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpenlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    openlines?.forEach((openline) => {\r\n      openline.start_date = moment(openline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      openline.end_date = moment(openline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.openlines !== nextProps.openlines) {\r\n      nextProps.openlines?.forEach((openline) => {\r\n        openline.start_date = moment(openline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        openline.end_date = moment(openline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.openlines }, () => {\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(\r\n          BASE_URL + \"changeOpenlineStatus/\" + record.openline_id + \"/\",\r\n          data,\r\n          options\r\n        )\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description: `Status of ${record.name} has been changed successfully.`,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Openline Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Openline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Permissions\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <OpenlinePermissioModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <OpenlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Spin spinning={this.props.loader} size=\"large\">\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={this.props.data} />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1>Openline Directory</h1>\r\n                  </Row>\r\n                  <Col span={24}>\r\n                    <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"search-row mt-2 mt-lg-0\"\r\n                      >\r\n                        <Row>\r\n                          <Col span={24} lg={9} className=\"search-box\">\r\n                            <Search\r\n                              placeholder=\"Search\"\r\n                              onSearch={this.onSearch}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col\r\n                        span={24}\r\n                        lg={6}\r\n                        className=\"d-flex align-items-center justify-content-end\"\r\n                      >\r\n                        <Link to=\"/orgcc/createopenline\">\r\n                          <Buttons value=\"Create Openline\" />\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Grid\r\n                    rowKey=\"openline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </Spin>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOpenlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpenlines from \"./ShowAllOpenlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\n\r\nconst OpenlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.openlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.openlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.openlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.openlinesdata !== null &&\r\n    props.openlinesdata.length === 0 ? (\r\n    <OpenlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllOpenlines\r\n      statusOnClicked={statusOnClicked}\r\n      openlines={props.openlinesdata}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone, UploadOutlined } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditOpenline = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [openLineData, setOpenLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    openline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    openline_image: \"\",\r\n    openline_image_name: \"\",\r\n    status_id: \"\",\r\n    iconHtml: \"\",\r\n    ImgfileList: [],\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [openlineErrorUpdated, setopenlineErrorUpdated] = useState(\"\");\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date).format(\"YYYY-MM-DD\");\r\n    const eDate = moment(location.state.end_date).format(\"YYYY-MM-DD\");\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n\r\n    setOpenLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      openline_id: location.state.openline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      openline_image: location.state.openline_image,\r\n      openline_image_name: location.state.openline_image_name,\r\n      status_id: location.state.status_id.toString(),\r\n      ImgfileList: [\r\n        {\r\n          uid: \"1\",\r\n          name: location.state.openline_image_name,\r\n          status: \"done\",\r\n          url: location.state.openline_image,\r\n        },\r\n      ],\r\n    });\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setOpenLineData({ ...openLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: value });\r\n  };\r\n\r\n  const editOpenline = (e) => {\r\n    if (\r\n      openLineData.name &&\r\n      openLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      openLineData.help_text &&\r\n      openLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      openLineData.openline_image.length > 0 &&\r\n      openLineData.status_id &&\r\n      openLineData.start_date\r\n    ) {\r\n      setLoader(true);\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      function convertImgToBase64(url, callback, outputFormat) {\r\n        var canvas = document.createElement(\"CANVAS\");\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var img = new Image();\r\n        img.crossOrigin = \"Anonymous\";\r\n        img.onload = function () {\r\n          canvas.height = img.height;\r\n          canvas.width = img.width;\r\n          ctx.drawImage(img, 0, 0);\r\n          var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n          callback.call(this, dataURL);\r\n          // Clean up\r\n          canvas = null;\r\n        };\r\n        img.src = url;\r\n      }\r\n      var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n      let data = {};\r\n      if (openLineData.ImgfileList[0].uid === \"1\") {\r\n        convertImgToBase64(openLineData.openline_image, function (base64Img) {\r\n          data = {\r\n            end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n            help_text: openLineData.help_text,\r\n            openline_id: openLineData.openline_id,\r\n            openline_image: base64Img,\r\n            name: openLineData.name,\r\n            openline_image_name: openLineData.openline_image_name,\r\n            start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n            status_id: parseInt(openLineData.status_id),\r\n            updated_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n            created_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n          };\r\n\r\n          if (\r\n            openlineErrorUpdated == \"status: false\" ||\r\n            openLineData.name === location.state.name\r\n          ) {\r\n            updateOpenLine(data);\r\n          }\r\n        });\r\n      } else {\r\n        data = {\r\n          end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n          help_text: openLineData.help_text,\r\n          openline_id: openLineData.openline_id,\r\n          openline_image: openLineData.ImgfileList[0].base64,\r\n          name: openLineData.name,\r\n          openline_image_name: openLineData.openline_image_name,\r\n          start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n          status_id: parseInt(openLineData.status_id),\r\n          updated_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        };\r\n        if (\r\n          openlineErrorUpdated == \"status: false\" ||\r\n          openLineData.name === location.state.name\r\n        ) {\r\n          updateOpenLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/openlinedirectory\";\r\n  };\r\n\r\n  const updateOpenLine = (data) => {\r\n    const token = authHeader();\r\n    let openLineId = openLineData.openline_id;\r\n    delete openLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"openline/\" + openLineId + \"/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoader(false);\r\n          window.location = \"/orgcc/openlinedirectory\";\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    // setOpenLineData({ ...openLineData, [name]: fileList });\r\n    setOpenLineData({\r\n      ...openLineData,\r\n      ImgfileList: fileList,\r\n      openline_image: fileList,\r\n      openline_image_name: filename,\r\n    });\r\n\r\n    if (value.file.status === \"removed\") {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        ImgfileList: [],\r\n        openline_image: \"\",\r\n        openline_image_name: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n      await toImgDataURL( file.url, function (dataURL) {\r\n        setOpenLineData({\r\n          ...openLineData,\r\n          previewImage: dataURL,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setOpenLineData({ ...openLineData, fileList: [] });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setOpenLineData({ ...openLineData, previewVisible: false });\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckOpenlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOpenline/\",\r\n          { openline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setopenlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setopenlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>Edit Openline</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message=\"Please fill the fields marked with asterisk(*)\"\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n                    <FloatLabel\r\n                      label=\"Directory Name\"\r\n                      value={openLineData.name}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please enter directory name\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={openLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckOpenlineName(e)}\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {openlineErrorUpdated == \"status: false\" &&\r\n                          openLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          openLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {openlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message=\"Sorry! This openline already exists in the system. Please use a different name.\"\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel\r\n                      label=\"Description\"\r\n                      value={openLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please enter description\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={openLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            name=\"help_text\"\r\n                            id=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label=\"Date\" value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          value={openLineData.start_date}\r\n                          disabledDate={disabledDate}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Please select start date\",\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label=\"Status\" value={openLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            placeholder=\"Status\"\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={openLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">Active</Select.Option>\r\n                            <Select.Option value=\"4\">Inactive</Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <Upload\r\n                          listType=\"picture\"\r\n                          fileList={openLineData.ImgfileList}\r\n                          onChange={(value) =>\r\n                            handleStepOneUpload(value, \"openline_image\")\r\n                          }\r\n                          onPreview={(value) => handleStepOnePreview(value)}\r\n                          handleOnRemove={handleOnRemove}\r\n                        >\r\n                          {openLineData.openline_image.length === 0 && (\r\n                            <Button type=\"link\" className=\"link pl-0\">\r\n                              <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                              Upload Image\r\n                            </Button>\r\n                          )}\r\n                        </Upload>\r\n\r\n                        <Modal\r\n                          visible={openLineData.previewVisible}\r\n                          title={openLineData.previewTitle}\r\n                          centered\r\n                          onOk={(value) => handleCancel(value)}\r\n                          okButtonProps={{\r\n                            children: \"Custom OK\",\r\n                          }}\r\n                          cancelButtonProps={{ style: { display: \"none\" } }}\r\n                          okText=\"Close\"\r\n                        >\r\n                          <img\r\n                            alt=\"example\"\r\n                            style={{ width: \"100%\" }}\r\n                            src={openLineData.previewImage}\r\n                          />\r\n                        </Modal>\r\n\r\n                        {getIconText(openLineData.openline_id) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(openLineData.iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      openLineData.openline_id\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(openLineData.openline_id)}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editOpenline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditOpenline;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from\"./components/login/ForgotPassword\";\r\nimport  ResetPassword from\"./components/login/ResetPassword\";\r\nimport Login from\"./components/login/Login\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport OpenlineMessages from \"./components/openlineMessages/OpenlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport AddEmployee from \"./components/manageEmp/AddEmp\";\r\nimport ImportFile from \"./components/manageEmp/ImportFile\";\r\nimport CreateManually from \"./components/manageEmp/CreateManually\";\r\nimport ManagePolls from \"./components/managePolls/ManagePolls\";\r\nimport CreatePoll from \"./components/managePolls/CreatePoll\";\r\nimport PreviewPoll from \"./components/managePolls/PreviewPoll\";\r\nimport PollsContainer from \"./components/managePolls/PollsContainer\";\r\n\r\nimport PollResponse from \"./components/managePolls/PollResponse\";\r\nimport EditPoll from \"./components/managePolls/EditPoll\";\r\nimport ExistingPolls from \"./components/managePolls/ExistingPolls\";\r\n\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\nimport OpenlineCreation from \"./components/openlineCreation/OpnelineCreation\";\r\nimport EditOpenline from \"./components/openlineDirectory/EditOpenline\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_amcc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isorgcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_org_cc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isamweb =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_am_web_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <Route path=\"/addemployee\" component={AddEmployee} />\r\n        <Route path=\"/importfile\" component={ImportFile} />\r\n        <Route path=\"/createmanually\" component={CreateManually} />\r\n        <ProtectedRoute path=\"/changepassword\" component={ChangePassword} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route path=\"/resetpassword\" component={ResetPassword} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/edithotline\" ||\r\n          url === \"/orgcc/editopenline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/orgcc/pollsdirectory\" ||\r\n          url === \"/orgcc/createpoll\" ||\r\n          url.includes(\"/orgcc/editpoll\") ||\r\n          url === \"/orgcc/previewpoll\" ||\r\n          url === \"/orgcc/pollresponse\" ||\r\n          url === \"/orgcc/existingpolls\" ||\r\n          url === \"/\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editopenline\"\r\n              amorg\r\n              component={EditOpenline}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollsdirectory\"\r\n              amorg\r\n              component={PollsContainer}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/previewpoll\"\r\n              amorg\r\n              component={PreviewPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createpoll\"\r\n              amorg\r\n              component={CreatePoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollresponse\"\r\n              amorg\r\n              component={PollResponse}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editpoll/:id\"\r\n              amorg\r\n              component={EditPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/existingpolls\"\r\n              amorg\r\n              component={ExistingPolls}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/amweb/openlinemessages\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/hotlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/openlinemessages\"\r\n                amweb\r\n                component={OpenlineMessages}\r\n              />\r\n            </Switch>\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url === \"/\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url.includes(\"/amcc/orgdetails\") ||\r\n            url === \"/login\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/orgdetails/:id\"\r\n                amcc\r\n                component={OrgDetails}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"current\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst userFName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.first_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userLName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.last_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userEmail = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.email, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userMobile = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.mobile_number, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst amweb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_am_web_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_amcc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amorgcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_org_cc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amidb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_idb_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amseeded = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_seeded_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amapp = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_app_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst userData = {\r\n  ...user,\r\n  user_data: {\r\n    ...user?.user_data,\r\n    email: userEmail,\r\n    mobile_number: userMobile,\r\n    is_am_web_user: amweb,\r\n    is_amcc_user: amcc,\r\n    is_app_user: amapp,\r\n    is_org_cc_user: amorgcc,\r\n    is_idb_user: amidb,\r\n    is_seeded_user: amseeded,\r\n  },\r\n  user_details: {\r\n    ...user?.user_details,\r\n    first_name: userFName,\r\n    last_name: userLName,\r\n  },\r\n};\r\n\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\nconst initialState = user\r\n  ? {\r\n      isLoggedIn: true,\r\n      user: userData,\r\n      current: password.replaceAll('^\"+|\"+$', \"\"),\r\n    }\r\n  : { isLoggedIn: false, user: null, current: null };\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        current: payload.current,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = null;\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import {\r\n    POLL_FAIL,\r\n    POLL_SUCCESS \r\n } from \"../actions/types\";\r\n   \r\n  const deafaultState = {};\r\n  deafaultState.pollsdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case POLL_SUCCESS:\r\n        return {\r\n          ...state,\r\n          pollsdata: payload.pollsdata,\r\n        };\r\n      case POLL_FAIL:\r\n        return {\r\n          ...state,\r\n          pollsdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\nimport poll from \"./poll\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline,\r\n  poll\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { Modal } from \"antd\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nfunction App() {\r\n  const timeOutIdle = 1200000; // 20 minutes\r\n  const timeOutLogout = 60000; // a minute\r\n  var idleTimer = null;\r\n  const [idleModal, showIdleModal] = useState(false);\r\n  const [logoutModal, showLogoutModal] = useState(false);\r\n  const [timedOut, setTimedOut] = useState(false);\r\n\r\n  const onIdle = (e) => {\r\n    if (AppStorage.get(\"user\")) {\r\n      const isTimedOut = timedOut;\r\n      if (isTimedOut) {\r\n        showIdleModal(false);\r\n        showLogoutModal(true);\r\n      } else {\r\n        showIdleModal(true);\r\n        idleTimer.reset();\r\n        setTimedOut(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIdleOk = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleIdleCancel = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleLogoutOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleLogoutCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const onActive = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  const onAction = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        ref={(ref) => {\r\n          idleTimer = ref;\r\n        }}\r\n        element={document}\r\n        onIdle={onIdle}\r\n        onAction={onAction}\r\n        onActive={onActive}\r\n        debounce={250}\r\n        timeout={!timedOut ? timeOutIdle : timeOutLogout}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n            <Modal\r\n              visible={idleModal}\r\n              onOk={handleIdleOk}\r\n              onCancel={handleIdleCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText=\"Ok\"\r\n            >\r\n              <p>\r\n                You are about to log out. Click Ok to keep yourself logged in.\r\n              </p>\r\n            </Modal>\r\n            <Modal\r\n              visible={logoutModal}\r\n              onOk={handleLogoutOk}\r\n              onCancel={handleLogoutCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText=\"Ok\"\r\n            >\r\n              <p>You are logged out. Click Ok to log in again.</p>\r\n            </Modal>\r\n            <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_sidebar\":\"manageEmp_no_sidebar__2IV_7\",\"box_bordered\":\"manageEmp_box_bordered__1L9Kq\",\"icon\":\"manageEmp_icon__2NaGI\",\"box_bordered_active\":\"manageEmp_box_bordered_active__1hEvf\"};"],"sourceRoot":""}