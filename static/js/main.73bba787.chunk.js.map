{"version":3,"sources":["assets/images/emoji.svg","assets/images/steps.svg","components/manageEmp/manageEmp.module.scss","assets/icons/dots-icon.svg","assets/images/amcc-vector.svg","assets/images/create-hotline.svg","assets/icons/send.svg","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/icons/pencil.svg","assets/images/work-chart.svg","assets/images/no-hotlines.svg","assets/images/no-openlines.svg","assets/images/create-openline.svg","assets/images/manage-polls.svg","components/managePolls/managePoll.module.scss","utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","values.js","headings.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","components/manageOrg/AccSidebar.js","containers/ShowDetails.js","components/table/Table.js","components/button/Button.js","services/auth-header.js","labels.js","messages.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","errors.js","components/form/CreateOrgStepOne.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/modal/PrivacyPolicyModal.js","components/login/Login.js","components/hotlineMessages/AmWebSidebar.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","components/modal/AssignHotlineModal.js","utils/HighlightTextHotline.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/SearchHotlineMessages.js","components/hotlineMessages/HotlineMessagesLeftSection.js","components/hotlineMessages/NoHotlineMessages.js","components/hotlineMessages/Spinner.js","utils/MessagesUtil.js","components/hotlineMessages/HotlineMessages.js","components/openlineMessages/AmWebSidebar.js","utils/HighlightTextOpenline.js","components/openlineMessages/FilterPopover.js","components/openlineMessages/AddedNotes.js","components/openlineMessages/Note.js","components/openlineMessages/Activity.js","components/openlineMessages/Assigned.js","components/openlineMessages/Messages.js","components/openlineMessages/SearchOpenlineMessages.js","components/openlineMessages/OpenlineMessagesLeftSection.js","components/openlineMessages/NoOpenlineMessages.js","components/openlineMessages/OpenlineMessages.js","containers/PermissionDenied.js","components/modal/ResetPwdModal.js","components/form/EditSeededUsers.js","components/form/AddNewSeededUser.js","components/form/OrgDetails.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/manageEmp/AddEmployee.js","components/manageEmp/UploadFiles.js","components/manageEmp/ImportFile.js","components/manageEmp/CreateManually.js","components/managePolls/UploadImage.js","components/managePolls/MultipleChoice.js","components/modal/DateTimeModal.js","utils/momentUtil.js","components/managePolls/PreviewPoll.js","components/managePolls/CreatePoll.js","components/modal/ExtendEndDate.js","components/managePolls/ManagePolls.js","components/modal/DeletePollModal.js","components/table/PollPopover.js","components/managePolls/ShowAllPolls.js","components/table/CreatePollPopover.js","utils/defaultpoll.js","actions/poll.js","components/managePolls/PollsContainer.js","components/managePolls/PollResponse.js","components/modal/EditDateTimeModal.js","components/managePolls/EditPreviewPoll.js","components/managePolls/EditPoll.js","components/managePolls/ExistingPolls.js","components/modal/DuplicateDateTimeModal.js","components/managePolls/DuplicatePreviewPoll.js","components/managePolls/DuplicatePoll.js","components/openlineForm/CreateOpenlineStepOne.js","components/openlineForm/CreateOpenlineStepTwo.js","components/openlineForm/CreateOpenlineStepThree.js","components/openlineCreation/OpenlineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/table/OpenlinePermission.js","components/autocomplete/SearchEmployee.js","components/modal/OpenlinePermissioModal.js","components/modal/DeleteOpenlineModal.js","components/table/OpenlinePopover.js","components/openlineDirectory/ShowAllOpenlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/openlineDirectory/EditOpenline.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/poll.js","reducers/index.js","services/stores.js","App.js","index.js","assets/images/thermometer.svg","assets/images/Thumb.svg"],"names":["module","exports","getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","email","password","page","axios","post","response","data","userFName","AES","encrypt","user_details","first_name","toString","userLName","last_name","departmentId","department_id","orgUserId","org_user_id","endDate","end_date","startDate","start_date","userEmail","user_data","userMobile","mobile_number","orgId","organization_id","userId","user_id","amweb","is_am_web_user","amcc","is_amcc_user","amorgcc","is_org_cc_user","amidb","is_idb_user","amseeded","is_seeded_user","amapp","is_app_user","userData","JSON","stringify","clear","window","location","reload","login","dispatch","AuthService","then","type","payload","user","current","Promise","resolve","error","message","reject","STATUS_ACTIVE","STATUS_INACTIVE","OK_TEXT_MODAL","NEXT","BACK","CANCEL","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","userType","decrypt","enc","Utf8","name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","collapsed","toggle","setState","defaultKey","createElement","MenuFoldOutlined","MenuUnfoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","AccSidebar","ShowDetails","history","useHistory","path","record","showModal","push","orgName","identifier","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","authHeader","CommonAuthHeader","parse","tokens","access","FIRST_NAME","LAST_NAME","DATE","MOBILE","STATUS","ACCESS","ACTIONS","DELETE_CONFIRM","LOGIN_PART1","LOGIN_PART2","EXTEND_END_DATE_TEXT_PART3","ASSIGN_HOTLINE_TEXT_PART2","STATUS_CHANGED_NOTIFICATION_PART1","STATUS_CHANGED_NOTIFICATION_PART2","STATUS_CHANGED_NOTIFICATION_PART3","STATUS_CHANGED_NOTIFICATION_PART4","ABOUT_TO_LOGOUT_TEXT","LOGGED_OUT_TEXT","Content","ShowAllOrganizations","statusClicked","via","replaceAll","Date","moment","format","status_id","Authorization","put","notification","config","open","description","statusOnClicked","onSearch","filterDt","filterIt","filterData","searchBy","organizations","forEach","org","utc","local","nextProps","arr","searchKey","filter","obj","Object","keys","some","title","dataIndex","width","render","children","Pencil","placeholder","Button","spinning","loader","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","REQUIRED_MESSAGE","MAX_CHAR_LIMIT","VALID_EMAIL","VALID_MOBILE","PASSWORD_RULES","HOTLINE_ALREADY_EXISTS","SELECT_DATE","STATUS_NOT_CHANGED","PAST_TIME","OPENLINE_ALREADY_EXISTS","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","orgIdCount","orgNameCount","setOrgNameAlreadyExists","setOrgIDAlreadyExists","orgIDAlreadyExists","orgNameAlreadyExists","Form","useForm","form","showError","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","organization_name","res","CheckOrganizationName","autoComplete","maxLength","replace","CheckCircleTwoTone","twoToneColor","organizationId","validateStatus","orgID","CheckOrganizationID","status1","onSelect","Option","s1Date","date","disabledDate","startOf","htmlType","preventDefault","DeleteModal","visible","show","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","deleteOrg","handleCancel","delete","hotlineId","catch","manageEmp","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","lastName","mobile","date2","status2","fromStepTwo","showAddSeededUserForm","addSeededUser","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleMobile","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","fNameCount","lNameCount","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","passwordValidationError","showPasswordValidationError","stepTwoPrev","s2Date","test","target","validateEmailAddress","country","userID","CreateOrgStepThree","apiError","createNewOrganization","addSeededUserFromThirdStep","disabled","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","setLoader","setApiError","stepOneOrganization","setStepOneOrganization","setOrgNameExists","setOrgIDExists","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","setOrgNameCount","setOrgIDCount","setFNameCount","setLNameCount","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","organization","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","filterStatus","search","undefined","hotLineId","manageOrgData","manageOrg","setStatusClicked","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","flag","property","status","layout","wrapperCol","tailLayout","ForgotPassword","onChangeUsername","sendEmail","emailSent","incorrectEMail","Amccvector","ref","c","initialValues","remember","ResetPassword","onChangePassword","onChangeConfirmPassword","confirm_password","resetPassword","uidb64","URLSearchParams","resetDone","resetFailed","validatePassword","rules","required","Password","getFieldValue","validator","_","dependencies","hasFeedback","PrivacyPolicyModal","Login","handleLogin","loading","isamcc","isorgcc","isamweb","isAuthenticated","commonForAllUsers","isEnabled","canSubmit","onSubmit","AmWebSidebar","ChangePassword","currentPwd","newPwd","confirmPwd","pwd","setPwd","passwordChanged","setPasswordChanged","setError","userName","setUserName","handleOnChange","old_password","new_password","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","setNameValidHandle","hotlineErrorUpdated","iconText","setdisabledbtn","directoryName","ENTER_DIRECTORY_NAME","showCount","hotline_name","CheckHotlineName","ENTER_DESCRIPTION","sDate","valuePropName","hotlineIconId","ReactHtmlParser","iconHtml","CreateHotlineStepTwo","employeeData","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","prevProps","rowSelection","selectedRowKeys","Mobile_Number","margin","TextArea","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setHotlineErrorUpdated","setStepTwoHotLine","values","permissions","per","id1","reduce","accumulator","currentValue","can_respond","can_view_reports","created_by","concat","a","async","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","HotlinePopover","DeleteHotlineModal","hotline_id","hotlineName","GridPermission","deleteRecord","handleCheck","permissionData","setPermissionaData","changeDataSource","editable","checked","text","onDelete","locale","emptyText","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","ShowAllHotlines","updated_by","hotlines","hotline","hotlinesdata","hotlinedata","getHotlines","AssignHotlineModal","selectedRow","stepOneHotLineValues","getCheckValues","setVisible","ASSIGN_HOTLINE_TEXT_PART1","find","p","highlightText","str","conversation_id","toLowerCase","responder_conversation_name","RegExp","match","itemMessage","setStatus","urgencyLevel","setUrgencyLevel","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalInput","finalUrl","searchString","filteredData","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","convMsg","setConvMsg","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","setSearchBy","getHotlineMessages","document","getElementById","note","assigne","classList","count","highlightedMessage","getElementsByTagName","scrollIntoView","block","lastMessage","getElementsByClassName","messagevalue","convID","onSendMessageClick","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","messageLength","unread_messages_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","ctrlKey","textarea","querySelector","shiftKey","Send","SearchHotlineMessages","useRef","trim","statusFil","statusFilterData","urgencyFilterData","ugc","hotlineFilterData","ht","setSearchString","setConversations","HoltineMessagesLeftSection","showdiv","unreadCount","closable","onClose","removeFilterLevel","conversations","onConversationClick","fontWeight","dataForReceiveAPI","getConversations","NoHotlines","opacity","NoHotlineMessages","Spinner","tip","displayNewConvAtTop","updatedConversations","newConvo","updatedNewConvo","dummyArray","splice","increaseOverallCount","conversationsToDisplay","selectedConv","setUnreadCount","newConvFromDiffUser","incomingConversation","increaseOverallCountDuringFilters","allConversations","lineFilterData","newInitiatedConv","setAllConversations","unSetFilters","filterSocket","totalFiltersApplied","conversationIds","hotlineOrOpenlineFilter","openline","hotlineOrOpenlineConvoId","openline_id","hotlineOrOpenlineConvoName","openline_name","totalConversations","urgency","lineName","updatedConversation","setAppliedFilters","urgencyLevels","line","setUrgencyFilterData","setStatusFilterData","setLineFilterData","HotlineMessages","initialConv","setInitialConv","setHotlineFilterData","setRemoveFilter","setConversation","setSocket","setNewState","setShowDiv","setChatDiv","showBack","setshowBack","webSocket","allConversationIds","mergedConversations","convoID","WebSocket","onopen","onmessage","sendSocketMessage","lastWord","words","onclose","onerror","accessed_users","urgencyState","statusState","hotlineState","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","allAppliedFilters","urlWithFilters","disabledCount","LeftOutlined","receivedConversation","Header","openlineName","setOpenline","openlinesData","setOpenlinesData","oldOpenline","setOldOpenline","selectedOldOpenline","setSelectedOldOpenline","selectedOpenline","setSelectedOpenline","removeOpenline","rmOpen","openlineOptions","openlineId","listOfAssignedUsers","getOpenlineMessages","SearchOpenlineMessages","openlineFilterData","OpenlineMessagesLeftSection","NoOpenlines","NoOpenlineMessages","CreateOpenline","OpenlineMessages","setOpenlineFilterData","openlineState","openlineFilter","PermissionDenied","justifyContent","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","ENTER_NEW_PASSWORD","CONFIRM_YOUR_PASSWORD","EditSeededUser","handleEditOk","handleEditCancel","seededUserName","seededUserDetails","handleSeededUserOnChange","handleSeededUserDatePickerChange","validateMobile","handleSeededUserOnSelect","AddNewSeededUser","handleAddSeededUser","handleAddSeededUserCancel","OrgDetails","modalError","showModalError","setEmailValidationError","setMobileValidationError","setSeededUserName","seededUserEmail","setSeededUserEmail","setSeededUserDetails","editVisible","setEditVisible","showAddSeededUser","setShowAddSeededUser","org_id","date1","organizationDetails","setOrganizationDetails","useNotification","api","contextHolder","computedMatch","appendedUsers","seeded_user","soft_delete","finalUsers","onSeededUserEditSubmit","info","editOrg","onFinish","handleOrganizationOnSelect","orgDetails","EditSeededUsers","newSeededUser","EditOrg","setOrganizationName","organizationIdentifier","setOrganizationIdentifier","deleteClick","setDeleteClick","orgStatus","setOrgStatus","handleOrganizationOnChange","handleOrganizationDatePickerChange","userNam","EditHotLine","hotLineData","sethotLineData","hotlineStatus","setHotlineStatus","seticonHtml","sethotlineErrorUpdated","useLocation","eDate","dates","setIcon","saveHotLine","AddEmployee","styles","no_sidebar","xl","box_bordered","Dragger","Upload","UploadFiles","accept","fileList","file","ImportFiles","uploadMessage","SetUploadMessage","uploaderror","Setuploaderror","setFile","reader","FileReader","onload","base64","result","readAsDataURL","originFileObj","formData","FormData","append","CreateManually","empId","department","role","userDetails","setUserDetails","handleUserOnChange","handleUserOnSelect","handleUserDatePickerChange","is_super_user","UploadImage","handleStepOneUpload","handleBeforeUpload","handleOnRemove","handlePollImagePreview","poll","listType","beforeUpload","onRemove","onPreview","previewVisible","previewTitle","previewImage","MultiChoice","tags","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","tag","setSingleChoiceResponse","showInput","input","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","tagsOption","pollResponse","onPressEnter","isLongTag","tagElem","edit_tag","onDoubleClick","add_tag","DatetimeModal","onPublish","disabledStartDate","disabledEndDate","pollData","pollStartDate","range","end","onChangeStartDate","handlePollStartDatePickerChange","onChangeEndDate","handlePollEndDatePickerChange","onChangeStartTime","time","startTimeError","handlePollStartTimePickerChange","onChangeEndTime","endTimeError","handlePollEndTimePickerChange","pollName","utils","DateFnsUtils","container","justify","pollStartTime","KeyboardButtonProps","pollEndDate","pollEndTime","formatAsYYYYMMDDHHmmss","formatAsHHmmss","formatAsMMMDDYYYY","formatAsHHmm","formatAsYYYYMMDD","formatAsDDMMYYYY","starsRating","isHalf","activeColor","newValue","PreviewPoll","setPollsDate","backtoEdit","isImage","attachmentName","poll_info","pollHelpText","pollQuestion","pollQuestionType","pollRatingType","pollRatingResponse","handlePollOnSelect","classNames","Smiley","Thermometer","Thumb","PaperClipOutlined","pollDocument","download","DateTimeModal","optionsData","option_text","create_poll","image","show_result_to_users","poll_result_chart_type","pollChartType","image_name","poll_question_type","question","poll_question_rating_type","momentUtil","start_time","end_time","document_name","emptyIcon","fullIcon","CreatePoll","pollImageValidation","setPoll","pollError","setpollError","previewPoll","setPreviewPoll","chartError","showChartError","uploadError","showuploadError","setIsImage","setAttachmentName","onCreateChange","checkChartType","checkDoucmentType","fileType","getBase64","isPollNameDuplicate","sm_textarea","xlsxfileExt","pptxfileExt","docfileExt","csvfileExt","isValidDoc","isDocument","isLt5M","isLt10M","preview","url","substring","lastIndexOf","ExtendEndDate","poll_id","pollsData","extendPollDate","disabledDateTime","now","disabledHours","hour","disabledMinutes","minutes","disabledSeconds","seconds","DeletePollModal","deletePoll","pollId","OpenlinePopover","ShowAllPolls","setSearchValue","handlePollStatusOnSelect","setFilterOptions","sdate","smonth","syear","finalStartDate","currentDate","startTime","startTimeWithDate","finalPolls","polls","isValid","PollPopover","getDefaultPoll","is_out_of_the_box","update_on","getPollAsync","getPolls","pollsdata","setFilter","setSearch","setChecked","pollObject","mergePoll","PollResponse","endTime","edate","emonth","eyear","EditPreviewPoll","editPoll","EditDateTimeModal","EditPoll","pollOptionText","pollID","uid","convertImgToBase64","callback","outputFormat","canvas","ctx","getContext","img","Image","crossOrigin","height","drawImage","dataURL","toDataURL","call","finalOptions","assign","poll_option_id","isMoment","update_poll","base64Img","POLL_ALREADY_EXISTS","ExistingPolls","DuplicateDateTimeModal","dateError","finalEndDate","DuplicatePreviewPoll","CreateDuplicatePoll","DuplicatePoll","setDefaultPollDetails","setPollDetails","isPollNameUnique","CreateOpenlineStepOne","imageError","stepOneOpenLineInfo","handleStepOnePreview","openelineName","CreateOpenlineStepTwo","stepTwoOpenLine","CreateOpenlineStepThree","stepOneOpenLine","action","OpenlineCreation","setImageError","imagename","setStepOneOpenLine","setStepTwoOpenLine","filename","create_openline","openline_image","openline_image_name","OpenlineDirectory","OpenlinePermission","SearchEmployee","OpenlinePermissioModal","assignedOpenLines","DeleteOpenlineModal","ShowAllOpenlines","openlines","openlinesdata","getOpenlines","EditOpenline","ImgfileList","openLineData","setOpenLineData","openlineErrorUpdated","setopenlineErrorUpdated","updateOpenLine","openLineId","CheckOpenlineName","Routes","EditProfile","exact","amorg","ImportFile","HotlineContainer","OpenlineContainer","PollsContainer","OrganizationContainer","decryptedPassword","localPwd","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","idleTimer","idleModal","showIdleModal","logoutModal","showLogoutModal","timedOut","setTimedOut","onIdle","reset","onAction","onActive","debounce","timeout","ReactDOM"],"mappings":"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","file":"static/js/main.73bba787.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emoji.0d8c3e70.svg\";","module.exports = __webpack_public_path__ + \"static/media/steps.677f415b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_sidebar\":\"manageEmp_no_sidebar__2IV_7\",\"box_bordered\":\"manageEmp_box_bordered__1L9Kq\",\"icon\":\"manageEmp_icon__2NaGI\",\"box_bordered_active\":\"manageEmp_box_bordered_active__1hEvf\"};","module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-openlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-openline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-polls.648b5bd2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sm_textarea\":\"managePoll_sm_textarea__2gyc1\",\"poll_info\":\"managePoll_poll_info__35K0P\",\"circle_white\":\"managePoll_circle_white__1jSAt\",\"select_md\":\"managePoll_select_md__30Qzr\",\"ant-select-dropdown\":\"managePoll_ant-select-dropdown__38nnC\",\"edit_tag\":\"managePoll_edit_tag__zHGBk\",\"add_tag\":\"managePoll_add_tag__2VJTM\",\"ant-tag\":\"managePoll_ant-tag__3TI5u\"};","const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";\r\nexport const WEBSOCKET_HOTLINE_URL = \"ws://10.0.6.10:8000/ws/hotlineMessages/\";\r\nexport const WEBSOCKET_OPENLINE_URL =\r\n  \"ws://10.0.6.10:8000/ws/openlineMessages/\";\r\n","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      const data = response.data;\r\n      const userFName = CryptoJS.AES.encrypt(\r\n        data.user_details?.first_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userLName = CryptoJS.AES.encrypt(\r\n        data.user_details?.last_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const departmentId = CryptoJS.AES.encrypt(\r\n        data.user_details?.department_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgUserId = CryptoJS.AES.encrypt(\r\n        data.user_details?.org_user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const endDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.end_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const startDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.start_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userEmail = CryptoJS.AES.encrypt(\r\n        data.user_data?.email,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userMobile = CryptoJS.AES.encrypt(\r\n        data.user_data?.mobile_number,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgId = CryptoJS.AES.encrypt(\r\n        data.user_data?.organization_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userId = CryptoJS.AES.encrypt(\r\n        data.user_data?.user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amweb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_am_web_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_amcc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amorgcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_org_cc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amidb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_idb_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amseeded = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_seeded_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amapp = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_app_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userData = {\r\n        ...data,\r\n        user_data: {\r\n          ...data.user_data,\r\n          email: userEmail,\r\n          mobile_number: userMobile,\r\n          organization_id: orgId,\r\n          user_id: userId,\r\n          is_am_web_user: amweb,\r\n          is_amcc_user: amcc,\r\n          is_app_user: amapp,\r\n          is_org_cc_user: amorgcc,\r\n          is_idb_user: amidb,\r\n          is_seeded_user: amseeded,\r\n        },\r\n        user_details: {\r\n          ...data.user_details,\r\n          first_name: userFName,\r\n          last_name: userLName,\r\n          department_id: departmentId,\r\n          org_user_id: orgUserId,\r\n          end_date: endDate,\r\n          start_date: startDate,\r\n        },\r\n      };\r\n      AppStorage.set(\"user\", JSON.stringify(userData));\r\n      AppStorage.set(\r\n        \"current\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          current: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\nexport const POLL_SUCCESS = \"POLL_SUCCESS\";\r\nexport const POLL_FAIL = \"POLL_FAIL\";\r\n\r\n\r\n\r\n\r\n","export const STATUS_ACTIVE = \"Active\";\r\nexport const STATUS_INACTIVE = \"In active\";\r\nexport const AM_WEB = \"AM Web\";\r\nexport const AM_CC = \"AM CC\";\r\nexport const ORG_CC = \"Org CC\";\r\nexport const PIE_CHART = \"Pie Chart\";\r\nexport const BAR_CHART = \"Bar Chart\";\r\nexport const STAR_FORMAT = \"Star Format\";\r\nexport const SELECT_SINGLE = \"Select Single\";\r\nexport const SELECT_MULTIPLE = \"Select Multiple\";\r\nexport const STAR_RATING = \"Star Rating\";\r\nexport const MAKE_SUPER_USER = \"Make Super User\";\r\nexport const MAKE_ORG_USER = \"Make ORG User\";\r\nexport const MAKE_IDB_USER = \"Make IDB User\";\r\nexport const OPENLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const OPENLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const OPENLINE_CREATE_STEP3 = \"Review Details\";\r\nexport const HOTLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const HOTLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const HOTLINE_CREATE_STEP3 = \"Create Directory\";\r\nexport const URGENCY_LEVEL_LOW = \"Low\";\r\nexport const URGENCY_LEVEL_MEDIUM = \"Medium\";\r\nexport const URGENCY_LEVEL_HIGH = \"High\";\r\nexport const STATUS_OPEN = \"Open\";\r\nexport const STATUS_CLOSED = \"Closed\";\r\nexport const STATUS_NEW = \"New\";\r\nexport const AUDIT_LOG1 = \"Updated the Status to\";\r\nexport const AUDIT_LOG2 = \"Updated the Urgency level to\";\r\nexport const AUDIT_LOG3 = \"Added new Note\";\r\nexport const AUDIT_LOGH4 = \"View Hotline Converations\";\r\nexport const AUDIT_LOGO4 = \"View Openline Converations\";\r\nexport const SEXUAL_HARRASMENT = \"Sexual Harrasment\";\r\nexport const VIOLENCE = \"Violence\";\r\nexport const RACISM = \"Racism\";\r\nexport const CYBER_BULLYING = \"Cyber Bullying\";\r\nexport const FIGHT = \"Fight\";\r\nexport const DISCRIMINATION = \"Discrimination\";\r\nexport const SLAP = \"Slap\";\r\nexport const SCHEDULED = \"Scheduled\";\r\nexport const COMPLETED = \"Completed\";\r\n","export const POLLS = \"Polls\";\r\nexport const OPENLINES = \"Openlines\";\r\nexport const HOTLINES = \"Hotlines\";\r\nexport const HOTLINE = \"Hotline\";\r\nexport const OPENLINE = \"Openline\";\r\nexport const ORGANIZATIONS = \"Organizations\";\r\nexport const BROADCAST_MESSAGES = \"Broadcast Messages\";\r\nexport const HELP = \"Help\";\r\nexport const INFO = \"Info\";\r\nexport const ORGANIZATION_DETAILS = \"Organization Details\";\r\nexport const EDIT_DETAILS = \"Edit Details\";\r\nexport const MANAGE_POLLS = \"Manage Polls\";\r\nexport const PREVIEW_POLL = \"Preview Poll\";\r\nexport const SCHEDULE = \"Schedule\";\r\nexport const RESCHEDULE = \"Reschedule\";\r\nexport const OOTB_POLL = \"OOTB Poll\";\r\nexport const POLL_RESULTS = \"Poll Results\";\r\nexport const SHOW_INTRIM_RESULT = \"Show Intrim Results\";\r\nexport const SHOW_FINAL_RESULT = \"Show Final Results\";\r\nexport const SHOW_ALL_POLLS =\r\n  \"Show All Polls (includes Completed and In active Polls)\";\r\nexport const PUBLISH_POLL = \"Publish Poll\";\r\nexport const PUBLISH = \"Publish\";\r\nexport const MANAGE_EMPLOYEES = \"Manage Employees\";\r\nexport const MANAGE_HOTLINES = \"Manage Hotlines\";\r\nexport const CREATE_POLL = \"Create Poll\";\r\nexport const CREATE_ORGANIZATION = \"Create Organization\";\r\nexport const EDIT_ORGANIZATION = \"Edit Organization\";\r\nexport const EDIT_POLL = \"Edit Poll\";\r\nexport const VIEW_POLL = \"View Poll\";\r\nexport const VIEW = \"View\";\r\nexport const SEARCH_EMPLOYEE = \"Search Employee\";\r\nexport const SEARCH_USER = \"Search User\";\r\nexport const SEARCH = \"Search\";\r\nexport const ADD_USER = \"Add User\";\r\nexport const ADD_SEEDED_USER = \"Add Seeded User\";\r\nexport const EDIT_SEEDED_USERS = \"Edit Seeded Users\";\r\nexport const EDIT_SEEDED_USER = \"Edit Seeded User\";\r\nexport const EDIT_HOTLINE = \"Edit Hotline\";\r\nexport const NO_SEEDED_USERS = \"No Seeded User\";\r\nexport const CANCEL_MODAL = \"Cancel\";\r\nexport const UPDATE_MODAL = \"Update\";\r\nexport const ADD_TEXT_MODAL = \"Add\";\r\nexport const DELETE_TEXT_MODAL = \"Delete\";\r\nexport const OK_TEXT_MODAL = \"OK\";\r\nexport const YES_TEXT_MODAL = \"Yes\";\r\nexport const NO_TEXT_MODAL = \"No\";\r\nexport const CHANGE_PASSWORD_FOR = \"Change Password for\";\r\nexport const CHANGE_PASSWORD = \"Change Password\";\r\nexport const RESET_PASSWORD_LINK = \"Reset password for this user\";\r\nexport const RESET_PASSWORD = \"Reset Password\";\r\nexport const SET_NEW_PASSWORD = \"Set a new password for your account.\";\r\nexport const RESET_INVITE = \"Reset and Invite\";\r\nexport const RESET_PASSWORD_FOR = \"Reset password for \";\r\nexport const SUBMIT = \"Submit\";\r\nexport const NEXT = \"Next\";\r\nexport const BACK = \"Back\";\r\nexport const SAVE = \"Save\";\r\nexport const UPDATE = \"Update\";\r\nexport const CANCEL = \"Cancel\";\r\nexport const CREATE = \"Create\";\r\nexport const EDIT = \"Edit\";\r\nexport const DELETE = \"Delete\";\r\nexport const CREATE_INVITE = \"Create and Invite\";\r\nexport const ADD_ICON = \"Add Icon\";\r\nexport const SEEDED_USERS_DETAILS = \"Seeded Users Details\";\r\nexport const HOTLINE_DIRECTORY = \"Hotline Directory\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const CREATE_HOTLINE_DIRECTORY = \"Create Hotline Directory\";\r\nexport const CREATE_OPENLINE_DIRECTORY = \"Create Openline Directory\";\r\nexport const CREATE_HOTLINE_DIRECTORY_ENTRIES =\r\n  \"Create Hotline Directory Entries\";\r\nexport const CREATE_OPENLINE_DIRECTORY_ENTRIES =\r\n  \"Create Openline Directory Entries\";\r\nexport const DELETE_HOTLINE = \"Delete Hotline\";\r\nexport const ASSIGN = \"Assign\";\r\nexport const DONE = \"Done\";\r\nexport const ORGANIZATION_CREATE_STEP3 = \"Confirm Details\";\r\nexport const ACTIVITY = \"Activity\";\r\nexport const SHOW_LESS = \"Show less\";\r\nexport const SHOW = \"Show\";\r\nexport const OPENLINE_MESSAGES = \"Openline Messages\";\r\nexport const HOTLINE_MESSAGES = \"Hotline Messages\";\r\nexport const ASSIGNED_TO = \"Assigned To\";\r\nexport const FILTER = \"Filter\";\r\nexport const RESET = \"Reset\";\r\nexport const URGENCY_LEVEL = \"Urgency level\";\r\nexport const APPLY = \"Apply\";\r\nexport const CONVERSATIONS = \"Conversations\";\r\nexport const URGENCY = \"Urgency\";\r\nexport const NO_MESSAGES_FOUND = \"No messages found\";\r\nexport const NO_CONVERSATION_SELECETD = \"No Conversation Selected\";\r\nexport const SELECT_CONVERSATION = \"Select a Conversation to view\";\r\nexport const LAST_READ = \"Last Read\";\r\nexport const URGENCY_LEVEL_CHANGED = \"Urgency Level Changed\";\r\nexport const STATUS_CHANGED = \"Status Changed\";\r\nexport const SEND_MESSAGE_TEXT = \"Replying as Hotline representative\";\r\nexport const NOTES = \"Notes\";\r\nexport const TAKE_NOTE = \"Take a note\";\r\nexport const ADD_NOTE = \"Add note here\";\r\nexport const LOADING = \"Loading...\";\r\nexport const SIGN_IN = \"Sign In\";\r\nexport const SIGN_OUT = \"Sign Out\";\r\nexport const FORGOT_PASSWORD = \"Forgot Password\";\r\nexport const ADD_EMPLOYEE = \"Add Employee\";\r\nexport const MANAGE_ORGANIZATIONS = \"Manage Organizations\";\r\nexport const POLL_TITLE = \"Poll Title\";\r\nexport const POLL = \"Poll\";\r\nexport const UPLOAD = \"Upload\";\r\nexport const DOCUMENT_IMAGE = \" Document Or Image\";\r\nexport const CLOSE_TEXT_MODAL = \"Close\";\r\nexport const ADD_OPTION = \"Add Option\";\r\nexport const PREVIEW = \"Preview\";\r\nexport const EXTEND_END_DATE = \"Extend End Date\";\r\nexport const EXTEND_TEXT_MODAL = \"Extend Date\";\r\nexport const EDIT_OPENLINE = \"Edit Openline\";\r\nexport const UPLOAD_IMAGE = \"Upload Image\";\r\nexport const OPENLINE_DIRECTORY = \"Openline Directory\";\r\nexport const EDIT_PROFILE = \"Edit Profile\";\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { AM_CC, AM_WEB, ORG_CC } from \"../../values\";\r\nimport { CHANGE_PASSWORD, EDIT_PROFILE, SIGN_OUT } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser } = this.props.userRole;\r\n    if (amCCUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"Org CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM WEB\", \"anonymoose\").toString()\r\n      );\r\n    }\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{userType}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">{EDIT_PROFILE}</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>{CHANGE_PASSWORD}</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>{SIGN_OUT}</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{userType}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    }\r\n    const password = props.current.includes('\"')\r\n      ? props.current.slice(1, -1)\r\n      : props.current;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log('INTERVAL');\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Anonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, current } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    current,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  MANAGE_EMPLOYEES,\r\n  HOTLINES,\r\n  OPENLINES,\r\n  HELP,\r\n  INFO,\r\n  BROADCAST_MESSAGES,\r\n  POLLS,\r\n} from \"../headings\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"employee\")) {\r\n        defaultKey = \"4\";\r\n      } else if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      } else if (this.props.data.location.pathname.includes(\"poll\")) {\r\n        defaultKey = \"3\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuFoldOutlined: MenuUnfoldOutlined ,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \" d-lg-block w-md-100 sider-width\"\r\n              : \"d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/hotlinedirectory\">{HOTLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/openlinedirectory\">{OPENLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/pollsdirectory\">{POLLS}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/manageemployees\">{MANAGE_EMPLOYEES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {BROADCAST_MESSAGES}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-help\" />\r\n                </span>\r\n              }\r\n            >\r\n              {HELP}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {INFO}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              {INFO}\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport { MANAGE_ORGANIZATIONS } from \"../../headings\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ?MenuFoldOutlined : MenuUnfoldOutlined  ,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-lg-block w-md-100 sider-width\"\r\n              : \" d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/amcc/manageorganizations\">{MANAGE_ORGANIZATIONS}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ShowDetails = (props) => {\r\n  const history = useHistory();\r\n  const path = `/amcc/orgdetails/${props.record.organization_id}`;\r\n\r\n  const showModal = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.orgName ? (\r\n        <a onClick={showModal}>{props.record.name}</a>\r\n      ) : props.orgId ? (\r\n        <a onClick={showModal}>{props.record.identifier}</a>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export const FIRST_NAME = \"First Name\";\r\nexport const LAST_NAME = \"Last Name\";\r\nexport const NAME = \"Name\";\r\nexport const RESPOND = \"Respond\";\r\nexport const EMAIL = \"Email\";\r\nexport const PASSWORD = \"Password\";\r\nexport const DATE = \"Date\";\r\nexport const MOBILE = \"Mobile\";\r\nexport const STATUS = \"Status\";\r\nexport const SELECT_ROLE = \"Select Role\";\r\nexport const CURRENT_PASSWORD = \"Current Password\";\r\nexport const NEW_PASSWORD = \"New Password\";\r\nexport const CONFIRM_PASSWORD = \"Confirm Password\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const DESCRIPTION = \"Description\";\r\nexport const ACCESS = \"Access\";\r\nexport const ACTIONS = \"Actions\";\r\nexport const ORGANIZATION_NAME = \"Organization Name\";\r\nexport const ORGANIZATION_ID = \"Organization Id\";\r\nexport const HOTLINE_NAME = \"Hotline Name\";\r\nexport const OPENLINE_NAME = \"Openline Name\";\r\nexport const START_DATE = \"Start Date\";\r\nexport const END_DATE = \"End Date\";\r\nexport const SELECT_START_DATE = \"Select Start Date\";\r\nexport const SELECT_END_DATE = \"Select End Date\";\r\nexport const SELECT_START_TIME = \"Select Start Time\";\r\nexport const SELECT_END_TIME = \"Select End Time\";\r\nexport const PERMISSIONS = \"Permissions\";\r\nexport const DISPLAY_RESULTS_AS = \"Display final results as\";\r\nexport const QUESTION_TYPE = \"Question Type\";\r\nexport const QUESTION = \"Question\";\r\nexport const SHOW_RESULTS_POLL = \"Show result to users\";\r\nexport const SEE = \"See\";\r\nexport const PRIVACY_POLICY = \"Privacy Policy\";\r\n","export const PASSWORD_CHANGED =\r\n  \"Your password has been changed successfully. Please login again with your new password.\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART1 =\r\n  \"You are about to delete the organization\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART2 =\r\n  \"Deleting organization would delete all records associated with it. Are you sure you want to delete organization\";\r\nexport const DELETE_CONFIRM = \"Are you sure you want to delete\";\r\nexport const ATLEAST_ONE_SEEDED_USER =\r\n  \"There should be at least one seeded user.\";\r\nexport const HOTLINE_UPDATED =\r\n  \"Hotline details have been changed successfully.\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART1 =\r\n  \"Create Hotline entries and assign them to managers,\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const DELETE_CONFIRM_HOTLINE =\r\n  \"Are you sure you want to delete this hotline?\";\r\nexport const DELETE_CONFIRM_OPENLINE =\r\n  \"Are you sure you want to delete this Openline?\";\r\nexport const NO_CONVERSATION_INITIATED =\r\n  \"No conversations are initiated for the hotlines assigned to you\";\r\nexport const NO_CONVERSATION_INITIATED_OPENLINE =\r\n  \"No conversations are initiated for the openlines assigned to you\";\r\nexport const LOGIN_PART1 = \"Control Center and Insights Dashboard\";\r\nexport const LOGIN_PART2 = \"Raising Voice Anonymously Made Easy\";\r\nexport const LOGIN_PART3 =\r\n  \"Login to manage AnonyMoose eco-system. This includes employees eligible to use the app and/or components such as Hotlines, Openlines, Polls and Surveys, Broadcast Messages and access to different features of the Insights Dashboard, through set of assignable permissions.\";\r\nexport const CREATE_NEW_ORGANIZATION_TEXT =\r\n  \"Create a new Org Id for your client's organization\";\r\nexport const POLL_DATES_TEXT = \"Select Date and Time to publish the\";\r\nexport const EXTEND_END_DATE_TEXT_PART1 = \"Select Date and Time to \";\r\nexport const EXTEND_END_DATE_TEXT_PART2 = \"extend the\";\r\nexport const EXTEND_END_DATE_TEXT_PART3 =\r\n  \" date has been extended successfully.\";\r\nexport const OOTB_TEXT = \"Out Of The Box (OOTB) Poll\";\r\nexport const CREATE_NEW_POLL_TEXT =\r\n  \"Create polls and publish them for all employees from here\";\r\nexport const ASSIGN_HOTLINE_TEXT_PART1 = \"Assign Permissions for \";\r\nexport const ASSIGN_HOTLINE_TEXT_PART2 =\r\n  \"Reply to Messages, Add Notes, Status & Urgency level\";\r\nexport const OPENLINE_PERMISSION_TEXT_PART1 = \"Employees with permissions to \";\r\nexport const HIT_ENTER_TO_ADD = \"Hit enter to add\";\r\nexport const PRIVACY_POLICY_TEXT_PART1 =\r\n  \"THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART1 =\r\n  \"Create Openline entries and assign them to managers,\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART1 = \"Status of \";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART2 =\r\n  \" has been changed successfully.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART3 =\r\n  \" can't be changed as the end date has been passed.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART4 =\r\n  \" can't be changed as this poll is completed.\";\r\nexport const ABOUT_TO_LOGOUT_TEXT =\r\n  \"You are about to log out. Click Ok to keep yourself logged in.\";\r\nexport const LOGGED_OUT_TEXT = \"You are logged out. Click Ok to log in again.\";\r\nexport const PERMISSION_DENIED =\r\n  \"You don't have access rights! Please contact your administrator.\";\r\nexport const ADD_SEEDED_USER_NOTIFICATION = \" has been added successfully.\";\r\nexport const EDIT_SEEDED_USER_NOTIFICATION_PART1 = \"Details for\";\r\nexport const EDIT_SEEDED_USER_NOTIFICATION_PART2 =\r\n  \" have been changed successfully.\";\r\nexport const DELETE_SEEDED_USER_NOTIFICATION =\r\n  \" has been deleted successfully.\";\r\nexport const EDIT_POLL_NOTIFICATION =\r\n  \"Poll details have been changed successfully.\";\r\nexport const POLL_RESULTS_NOT_AVAILABLE =\r\n  \"Results for this poll are not available at this moment.\";\r\nexport const ADD_EMPLOYEE_TEXT_PART1 =\r\n  \"Please create all employees for your organization who are eligible to use the app. You can either integrate with existing system, import through CSV or add each employee manually.\";\r\nexport const ADD_EMPLOYEE_TEXT_PART2 = \"Integrate with existing system\";\r\nexport const ADD_EMPLOYEE_TEXT_PART3 = \"Import through CSV\";\r\nexport const ADD_EMPLOYEE_TEXT_PART4 = \"Create manually\";\r\nexport const IMPORT_CSV = \"Import CSV file\";\r\nexport const DOWNLOAD_SAMPLE_FILE = \"Download Sample File\";\r\nexport const DROP_FILES_TO_UPLOAD = \"Drop files to upload or Browse\";\r\nexport const REQUEST_PASSWORD_RESET = \"Request Password Reset Link\";\r\nexport const BACK_TO = \"Back to \";\r\nexport const FORGOT_PASSWORD_TEXT1 =\r\n  \" Enter your registered email address to request a password reset link.\";\r\nexport const RESET_EMAIL_SENT = \"Reset Password email has been sent to \";\r\nexport const PASSWORD_RESET_DONE =\r\n  \"Password has been reset successfully. Please login with your new password\";\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, notification, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport ShowDetails from \"../../containers/ShowDetails\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport moment from \"moment\";\r\nimport {\r\n  ACTIONS,\r\n  END_DATE,\r\n  ORGANIZATION_ID,\r\n  ORGANIZATION_NAME,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { CREATE_ORGANIZATION, ORGANIZATIONS, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      searchBy: \"\",\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations?.forEach((org) => {\r\n      org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.organizations !== nextProps.organizations) {\r\n      nextProps.organizations.forEach((org) => {\r\n        org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.organizations }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        name: record.name,\r\n        identifier: record.identifier,\r\n        organization_id: record.organization_id,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 2 : 1,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description:\r\n            STATUS_CHANGED_NOTIFICATION_PART1 +\r\n            record.name +\r\n            STATUS_CHANGED_NOTIFICATION_PART2,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: ORGANIZATION_NAME,\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgName />,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ORGANIZATION_ID,\r\n        dataIndex: \"\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgId />,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{ORGANIZATIONS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value={CREATE_ORGANIZATION} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    key=\"manageOrg\"\r\n                    rowKey=\"identifier\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","export const REQUIRED_MESSAGE =\r\n  \"Please fill the fields marked with asterisk(*)\";\r\nexport const MAX_CHAR_LIMIT = \"Max Characters limit reached.\";\r\nexport const VALID_EMAIL = \"Please enter a valid email address.\";\r\nexport const VALID_MOBILE = \"Please enter a valid mobile number.\";\r\nexport const OLD_PASSWORD = \"Old Password is wrong.\";\r\nexport const ENTER_CURRENT_PASSWORD = \"Please enter your current password!\";\r\nexport const ENTER_NEW_PASSWORD = \"Please enter your new password!\";\r\nexport const ENTER_PASSWORD = \"Please enter your password\";\r\nexport const PASSWORD_RULES =\r\n  \"Please enter a valid password. It should be atleast 8 characters long with atleast 1 each of Capital letter, small letter, numeric and special character.\";\r\nexport const CONFIRM_YOUR_PASSWORD = \"Please confirm your password!\";\r\nexport const PASSWORD_NOT_MATCH =\r\n  \"The two passwords that you entered do not match!\";\r\nexport const ENTER_DIRECTORY_NAME = \"Please enter directory name\";\r\nexport const UPLOAD_IMAGE_REQUIRED = \"Please upload an image.\";\r\nexport const HOTLINE_ALREADY_EXISTS =\r\n  \"Sorry! This hotline already exists in the system. Please use a different name.\";\r\nexport const ENTER_DESCRIPTION = \"Please enter description\";\r\nexport const SELECT_DATE = \"Please select date\";\r\nexport const SELECT_STATUS = \"Please select status\";\r\nexport const ASSIGN_USERS_HOTLINES = \"Please select user(s).\";\r\nexport const ORGANIZATION_NAME_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different name.\";\r\nexport const ORGANIZATION_ID_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different Id.\";\r\nexport const CREATE_ORGANIZATION_ERROR =\r\n  \"There is some difficulty while creating this organization.\";\r\nexport const STATUS_NOT_CHANGED =\r\n  \"Status can't be changed as the end date has been passed.\";\r\nexport const POLL_ALREADY_EXISTS =\r\n  \"Sorry! This Poll title already exists in the system. Please use a different name.\";\r\nexport const STAR_CHART_TYPE = \"Please select the Chart type as Star\";\r\nexport const PAST_TIME = \"Past Time can not be selected\";\r\nexport const OPENLINE_ALREADY_EXISTS =\r\n  \"Sorry! This openline already exists in the system. Please use a different name.\";\r\nexport const SELECT_USER_TYPE = \"Please select user type\";\r\nexport const UPLOAD_CSV_FILE = \"Please upload a csv file.\";\r\nexport const RESET_EMAIL_INCORRECT =\r\n  \"This email address is incorrect. Please enter a valid email address.\";\r\nexport const PASSWORD_NOT_RESET =\r\n  \"Password can not be reset at this moment. Please try again\";\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  orgIdCount,\r\n  orgNameCount,\r\n  setOrgNameAlreadyExists,\r\n  setOrgIDAlreadyExists,\r\n  orgIDAlreadyExists,\r\n  orgNameAlreadyExists,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganization/\",\r\n        { organization_name: stepOneOrganizationInfo.organizationName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgNameAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganizationID/\",\r\n        { orgID: stepOneOrganizationInfo.organizationId },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgIDAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      if (\r\n        orgNameAlreadyExists === \"status: false\" &&\r\n        orgIDAlreadyExists === \"status: false\"\r\n      ) {\r\n        showError(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_NAME}\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationName(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                />\r\n                {orgNameAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationName\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationName.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgNameAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_ID}\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationID(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={20}\r\n                />\r\n                {orgIDAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationId\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationId.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgIDAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgIdCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-100\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  DELETE,\r\n  DELETE_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n  NO_TEXT_MODAL,\r\n  OK_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport {\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART1,\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART2,\r\n  ATLEAST_ONE_SEEDED_USER,\r\n  DELETE_CONFIRM,\r\n} from \"../../messages\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.deleteOrg) this.props.handleCancel();\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg && !this.props.data.manageEmp ? (\r\n          <Button onClick={this.showBothModals}>{DELETE}</Button>\r\n        ) : this.props.data.manageEmp ? (\r\n          <a onClick={this.showModal}>{DELETE}</a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleOk}\r\n            centered\r\n            width={700}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={CANCEL_MODAL}\r\n            cancelText={DELETE_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART1}{\" \"}\r\n              <strong>{this.props.org}</strong>.{\" \"}\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART2}{\" \"}\r\n              <strong>{this.props.org}</strong>?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length === 1 ? (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            <p>{ATLEAST_ONE_SEEDED_USER}</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={OK_TEXT_MODAL}\r\n            cancelText={CANCEL_MODAL}\r\n          >\r\n            <p>{DELETE_CONFIRM}</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              {EDIT}\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              {EDIT}\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <a href=\"\">{EDIT}</a>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal data={props} />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button, notification } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { EMAIL, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { ADD_SEEDED_USER } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n} from \"../../messages\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const data = {\r\n      first_name: record.firstName,\r\n      last_name: record.lastName,\r\n      email: record.email,\r\n      mobile_number: record.mobile,\r\n      status_id: via === \"Active\" ? 2 : 1,\r\n      start_date: record.date2[0]\r\n        ? moment(record.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: record.date2[1]\r\n        ? moment(record.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: this.props.orgID,\r\n    };\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.firstName +\r\n          STATUS_CHANGED_NOTIFICATION_PART2,\r\n      });\r\n      this.props.statusOnClicked();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile.includes(\"+\") ? mobile : \"+\" + mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: EMAIL,\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status2 === 1 || record.status2 === \"1\" ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Row className=\"content-center pt-0\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() =>\r\n                this.props.fromStepTwo\r\n                  ? this.props.showAddSeededUserForm()\r\n                  : this.props.addSeededUser()\r\n              }\r\n            >\r\n              {ADD_SEEDED_USER}\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n         <div id=\"no-more-tables\">\r\n           <Grid\r\n            rowKey=\"unique_identifier\"\r\n            columns={columns}\r\n            data={this.state.data}\r\n          />\r\n        </div>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport moment from \"moment\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport { DATE, EMAIL, FIRST_NAME, LAST_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, ADD_USER, UPDATE, NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleMobile,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n  fNameCount,\r\n  lNameCount,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n      showPasswordValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    if (stepTwoOrganizationInfo.mobile.length > 10) {\r\n      showMobileValidationError(false);\r\n    } else {\r\n      showMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={FIRST_NAME}\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {fNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={LAST_NAME}\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {lNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validatePassword(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n                {passwordValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid password.\r\n                    It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={EMAIL} value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <PhoneInput\r\n                  country={\"us\"}\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={handleMobile}\r\n                  onBlur={validateMobile}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert message={VALID_MOBILE} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                {ADD_USER}\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                {UPDATE}\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            {BACK}\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            {NEXT}\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              {BACK}\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport { CREATE_ORGANIZATION_ERROR, REQUIRED_MESSAGE } from \"../../errors\";\r\nimport {\r\n  ADD_SEEDED_USER,\r\n  BACK,\r\n  CREATE_INVITE,\r\n  OK_TEXT_MODAL,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  loader,\r\n  apiError,\r\n  handleOk,\r\n  handleCancel,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Modal\r\n            visible={apiError}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            centered\r\n            width={500}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            {\" \"}\r\n            <p>{CREATE_ORGANIZATION_ERROR}</p>{\" \"}\r\n          </Modal>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_NAME}\r\n                value={stepOneOrganizationInfo.organizationName}\r\n              >\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_ID}\r\n                value={stepOneOrganizationInfo.organizationId}\r\n              >\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={STATUS}\r\n                value={stepOneOrganizationInfo.status1}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-100\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                      disabled\r\n                    >\r\n                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                      <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label={DATE} value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Col\r\n            span={24}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n            <div>\r\n              {\" \"}\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => addSeededUserFromThirdStep()}\r\n              >\r\n                {ADD_SEEDED_USER}\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <AssignedUsers\r\n                seededUsers={seededUsers}\r\n                handleEditUser={handleEditUser}\r\n                handleDelete={handleDelete}\r\n                fromStepThree\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Form.Item>\r\n            <div className=\"steps-action mt-5\">\r\n              <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n                {CREATE_INVITE}\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Spin>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CREATE_ORGANIZATION,\r\n  ORGANIZATIONS,\r\n  ORGANIZATION_CREATE_STEP3,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: ORGANIZATION_DETAILS,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: SEEDED_USERS_DETAILS,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: ORGANIZATION_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [orgNameAlreadyExists, setOrgNameExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDExists] = useState(\"\");\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    s2Date: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = { ...stepTwoOrganization, userId: userID };\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n        //  password: \"\",\r\n        s2Date: \"\",\r\n        mobile: \"\",\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      s2Date: \"\",\r\n      mobile: \"\",\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const setOrgNameAlreadyExists = (value) => {\r\n    setOrgNameExists(value);\r\n  };\r\n\r\n  const setOrgIDAlreadyExists = (value) => {\r\n    setOrgIDExists(value);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    if (e.target.id === \"organizationId\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (\r\n      e.target.id === \"organizationName\" &&\r\n      e.target.value.length === 80\r\n    ) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    setLoader(true);\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n        // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.s2Date[0]\r\n          ? moment(value.s2Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.s2Date[1]\r\n          ? moment(value.s2Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"saveOrganization/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/amcc/manageorganizations\";\r\n      })\r\n      .catch((error) => {\r\n        if (error.message.includes(\"500\")) {\r\n          setApiError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>{ORGANIZATIONS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{CREATE_ORGANIZATION}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{CREATE_ORGANIZATION}</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            orgNameCount={orgNameCount}\r\n                            orgIdCount={orgIdCount}\r\n                            setOrgNameAlreadyExists={setOrgNameAlreadyExists}\r\n                            orgNameAlreadyExists={orgNameAlreadyExists}\r\n                            setOrgIDAlreadyExists={setOrgIDAlreadyExists}\r\n                            orgIDAlreadyExists={orgIDAlreadyExists}\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                            handleOk={handleOk}\r\n                            handleCancel={handleCancel}\r\n                            loader={loader}\r\n                            apiError={apiError}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nimport { CREATE_ORGANIZATION, MANAGE_ORGANIZATIONS } from \"../../headings\";\r\nimport { CREATE_NEW_ORGANIZATION_TEXT } from \"../../messages\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_ORGANIZATIONS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_ORGANIZATION_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            {CREATE_ORGANIZATION}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      const orgId = CryptoJS.AES.decrypt(\r\n        orgcc_user.user_data.organization_id,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8);\r\n      return parseInt(orgId);\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n  getPolls(filterStatus, search) {\r\n    console.log(filterStatus.status_id?.length, search.length);\r\n    if (filterStatus.status_id?.length > 0 && search.length > 0) {\r\n      return axios.get(\r\n        BASE_URL +\r\n          \"poll/?filter=\" +\r\n          JSON.stringify(filterStatus) +\r\n          \"&search=\" +\r\n          search,\r\n        options\r\n      );\r\n    } else if (filterStatus.status_id?.length > 0 && search.length === 0) {\r\n      return axios.get(\r\n        BASE_URL + \"poll/?filter=\" + JSON.stringify(filterStatus),\r\n        options\r\n      );\r\n    } else if (\r\n      (filterStatus.status_id?.length === undefined ||\r\n        filterStatus.status_id?.length === 0) &&\r\n      search.length > 0\r\n    ) {\r\n      return axios.get(BASE_URL + \"poll/?search=\" + search, options);\r\n    } else {\r\n      return axios.get(BASE_URL + \"poll/\", options);\r\n    }\r\n  }\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.manageOrgData === null) {\r\n      setLoader(true);\r\n    } else if (props.manageOrgData !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.manageOrgData]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.manageOrgData !== null &&\r\n    props.manageOrgData.length === 0 ? (\r\n    <CreateOrg />\r\n  ) : (\r\n    <ShowAllOrganizations\r\n      organizations={props.manageOrgData}\r\n      statusOnClicked={statusOnClicked}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { ADD_EMPLOYEE, MANAGE_EMPLOYEES, SEARCH } from \"../../../src/headings\";\r\nimport {\r\n  ACCESS,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  ACTIONS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        key: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag = false;\r\n          for (let property in res) {\r\n            if (res[property] === true) {\r\n              if (property === \"am_web\") {\r\n                property = \"AM WEB\";\r\n                flag = true;\r\n              }\r\n              if (property === \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n                flag = true;\r\n              }\r\n              if (property === \"idb_user\") {\r\n                property = \"IDB User\";\r\n                flag = true;\r\n              }\r\n              if (property === \"super_user\") {\r\n                property = \"SUPER User\";\r\n                flag = true;\r\n              }\r\n              if (property === \"app_user\") {\r\n                if (!flag) {\r\n                  property = \"APP\";\r\n                }\r\n              }\r\n\r\n              if (test.length === 0) {\r\n                test += property;\r\n              } else if (property !== \"app_user\") {\r\n                if (test.includes(\"APP\")) {\r\n                  test = property;\r\n                } else {\r\n                  test += \", \" + property;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status === 1 ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover manageEmp />,\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n      loader: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData, loader: false }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_EMPLOYEES}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/addemployee\">\r\n                        <Buttons value={ADD_EMPLOYEE} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.state.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"unique_identifier\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { VALID_EMAIL, RESET_EMAIL_INCORRECT } from \"../../errors\";\r\nimport { EMAIL } from \"../../labels\";\r\nimport {\r\n  BACK_TO,\r\n  FORGOT_PASSWORD_TEXT1,\r\n  LOGIN_PART1,\r\n  LOGIN_PART2,\r\n  REQUEST_PASSWORD_RESET,\r\n  RESET_EMAIL_SENT,\r\n} from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      error: false,\r\n      emailSent: false,\r\n      incorrectEMail: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  sendEmail = (e) => {\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (this.state.email !== \"\") {\r\n      const data = {\r\n        email: this.state.email,\r\n      };\r\n      this.setState({ error: false, loader: true });\r\n      axios\r\n        .post(BASE_URL + \"request-reset-email/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            this.setState({\r\n              emailSent: true,\r\n              loader: false,\r\n              incorrectEMail: false,\r\n            });\r\n          }\r\n        })\r\n        .catch(() =>\r\n          this.setState({\r\n            emailSent: false,\r\n            loader: false,\r\n            incorrectEMail: true,\r\n          })\r\n        );\r\n    } else {\r\n      this.setState({ error: true, emailSent: false, incorrectEMail: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.emailSent\r\n                ? RESET_EMAIL_SENT + this.state.email\r\n                : null}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{FORGOT_PASSWORD}</h2>\r\n                <p className=\"mt-3 font-weight-bold\">{FORGOT_PASSWORD_TEXT1}</p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                {this.state.error && (\r\n                  <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                )}\r\n                {this.state.incorrectEMail && (\r\n                  <Form.Item>\r\n                    <Alert message={RESET_EMAIL_INCORRECT} type=\"error\"></Alert>\r\n                  </Form.Item>\r\n                )}\r\n                <FloatLabel label={EMAIL} value={this.state.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={(e) => this.sendEmail()}\r\n                  >\r\n                    {REQUEST_PASSWORD_RESET}\r\n                  </Button>\r\n                </Form.Item>\r\n\r\n                <div className=\"justify-content-center d-flex\">\r\n                  <Button type=\"link\" className=\"link\">\r\n                    <Link to=\"/login\">\r\n                      {\" \"}\r\n                      {BACK_TO} <b className=\"pl-1\">{SIGN_IN}</b>\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Alert, Modal } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport {\r\n  OK_TEXT_MODAL,\r\n  RESET_PASSWORD,\r\n  SET_NEW_PASSWORD,\r\n} from \"../../headings\";\r\nimport { LOGIN_PART1, LOGIN_PART2 } from \"../../messages\";\r\nimport {\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n  PASSWORD_NOT_RESET,\r\n} from \"../../errors\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CONFIRM_PASSWORD, PASSWORD } from \"../../labels\";\r\nimport { PASSWORD_RESET_DONE } from \"../../messages\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      error: \"false\",\r\n      passwordValidationError: \"\",\r\n      resetDone: false,\r\n      resetFailed: false,\r\n    };\r\n  }\r\n\r\n  onChangePassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeConfirmPassword = (e) => {\r\n    this.setState({\r\n      confirm_password: e.target.value,\r\n    });\r\n  };\r\n\r\n  resetPassword = (e) => {\r\n    const uidb64 = new URLSearchParams(this.props.location.search).get(\r\n      \"uidb64\"\r\n    );\r\n    const token = new URLSearchParams(this.props.location.search).get(\"token\");\r\n    const data = {\r\n      password: this.state.password,\r\n      token: token,\r\n      uidb64: uidb64,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (\r\n      this.state.password === this.state.confirm_password &&\r\n      !this.state.passwordValidationError\r\n    ) {\r\n      axios\r\n        .put(BASE_URL + \"password-reset-complete/\", data, options)\r\n        .then(() => {\r\n          this.setState({ resetDone: true, resetFailed: false });\r\n        })\r\n        .catch(() => {\r\n          this.setState({ resetFailed: true, resetDone: false });\r\n        });\r\n    }\r\n  };\r\n\r\n  validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      this.setState({ passwordValidationError: true });\r\n    } else {\r\n      this.setState({ passwordValidationError: false });\r\n    }\r\n  };\r\n\r\n  handleOk = () => {\r\n    window.location = \"/login\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{RESET_PASSWORD}</h2>\r\n                <p className=\"mt-3 font-weight-bold\">{SET_NEW_PASSWORD}</p>\r\n              </Row>\r\n              <Modal\r\n                visible={this.state.resetDone}\r\n                onOk={this.handleOk}\r\n                centered\r\n                width={350}\r\n                okButtonProps={{\r\n                  children: \"Custom OK\",\r\n                }}\r\n                cancelButtonProps={{ style: { display: \"none\" } }}\r\n                okText={OK_TEXT_MODAL}\r\n              >\r\n                <p>{PASSWORD_RESET_DONE}</p>\r\n              </Modal>\r\n              <Form>\r\n                {this.state.resetFailed && (\r\n                  <Alert\r\n                    message={PASSWORD_NOT_RESET}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n                <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                  <Form.Item\r\n                    name=\"newpassword\"\r\n                    className=\"pwd required\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: ENTER_NEW_PASSWORD,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input.Password\r\n                      htmlFor=\"newpassword\"\r\n                      id=\"newPwd\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                      onBlur={(e) => this.validatePassword(e)}\r\n                    />\r\n                  </Form.Item>\r\n                  {this.state.passwordValidationError && (\r\n                    <Alert\r\n                      message={PASSWORD_RULES}\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </FloatLabel>\r\n\r\n                <FloatLabel\r\n                  label={CONFIRM_PASSWORD}\r\n                  value={this.state.confirm_password}\r\n                >\r\n                  <Form.Item\r\n                    name=\"confirmpassword\"\r\n                    className=\"pwd confirpwd required\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: CONFIRM_YOUR_PASSWORD,\r\n                      },\r\n                      ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                          if (\r\n                            !value ||\r\n                            getFieldValue(\"newpassword\") === value\r\n                          ) {\r\n                            return Promise.resolve();\r\n                          }\r\n\r\n                          return Promise.reject(PASSWORD_NOT_MATCH);\r\n                        },\r\n                      }),\r\n                    ]}\r\n                    dependencies={[\"newpassword\"]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input.Password\r\n                      htmlFor=\"confirmpassword\"\r\n                      id=\"confirmPwd\"\r\n                      value={this.state.confirm_password}\r\n                      onChange={this.onChangeConfirmPassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={(e) => this.resetPassword(e)}\r\n                  >\r\n                    {RESET_PASSWORD}\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { PRIVACY_POLICY, SEE } from \"../../labels\";\r\nimport { PRIVACY_POLICY_TEXT_PART1 } from \"../../messages\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {SEE}\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          {PRIVACY_POLICY}\r\n        </Button>\r\n        <Modal\r\n          title={PRIVACY_POLICY}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              {PRIVACY_POLICY_TEXT_PART1}\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Spin, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\nimport { LOGIN_PART1, LOGIN_PART2, LOGIN_PART3 } from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\nimport { EMAIL, PASSWORD } from \"../../labels\";\r\nimport { ENTER_PASSWORD, VALID_EMAIL } from \"../../errors\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n      loading: false,\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n    //  const checkSoftDelete = JSON.parse(AppStorage.get(\"user\"));\r\n    //  console.log(\"checkSoftDelete\",checkSoftDelete)\r\n\r\n    //  if(checkSoftDelete.user_data.soft_delete){\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      }\r\n    }\r\n    //  }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                {LOGIN_PART3}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              <Spin spinning={this.state.loading} size=\"large\">\r\n                {this.state.error == \"true\" && (\r\n                  <Alert\r\n                    message=\"Invalid Login! Please try again\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n                <Row className=\"mb-4 d-none d-lg-block\">\r\n                  <h2>{SIGN_IN}</h2>\r\n                </Row>\r\n\r\n                <Form\r\n                  className=\"floating-label\"\r\n                  {...layout}\r\n                  onSubmit={this.handleLogin}\r\n                  ref={(c) => {\r\n                    this.form = c;\r\n                  }}\r\n                  name=\"basic\"\r\n                  initialValues={{\r\n                    remember: true,\r\n                  }}\r\n                >\r\n                  <FloatLabel label={EMAIL} value={this.state.email}>\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: VALID_EMAIL,\r\n                          type: \"email\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"Email\"\r\n                        className=\"input-control\"\r\n                        placeholder=\" \"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeUsername}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: ENTER_PASSWORD,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"password\"\r\n                        className=\"input-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <div className=\"forgot-pwd\">\r\n                    <Link to=\"/forgotpassword\"> {FORGOT_PASSWORD}</Link>\r\n                  </div>\r\n\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button\r\n                      disabled={!isEnabled}\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"primary-btn-lg w-100 mt-4\"\r\n                      onClick={() => {\r\n                        this.handleLogin();\r\n                      }}\r\n                    >\r\n                      {SIGN_IN}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </Spin>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n  HOTLINE_MESSAGES,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, Modal, Alert } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport AmWebSidebar from \"../hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CHANGE_PASSWORD_FOR, OK_TEXT_MODAL, SUBMIT } from \"../../headings\";\r\nimport { PASSWORD_CHANGED } from \"../../messages\";\r\nimport {\r\n  OLD_PASSWORD,\r\n  ENTER_CURRENT_PASSWORD,\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n} from \"../../errors\";\r\nimport { CURRENT_PASSWORD, NEW_PASSWORD, CONFIRM_PASSWORD } from \"../../labels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst ChangePassword = (props) => {\r\n  const type = AppStorage.get(\"userType\");\r\n  const userType = type\r\n    ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n    : \"\";\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n  const [passwordChanged, setPasswordChanged] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    showPasswordValidationError(false);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const userName = user\r\n      ? CryptoJS.AES.decrypt(\r\n          user.user_details.first_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) +\r\n        \" \" +\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.last_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    setUserName(userName);\r\n  }, []);\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (pwd.newPwd === pwd.confirmPwd && !passwordValidationError) {\r\n      axios\r\n        .put(BASE_URL + \"changepassword/\", data, options)\r\n        .then(() => {\r\n          setError(false);\r\n          setPasswordChanged(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n            setError(true);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">\r\n                    {CHANGE_PASSWORD_FOR} {userName}\r\n                  </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Modal\r\n                    visible={passwordChanged}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    width={350}\r\n                    okButtonProps={{\r\n                      children: \"Custom OK\",\r\n                    }}\r\n                    cancelButtonProps={{ style: { display: \"none\" } }}\r\n                    okText={OK_TEXT_MODAL}\r\n                  >\r\n                    <p>{PASSWORD_CHANGED}</p>\r\n                  </Modal>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={OLD_PASSWORD}\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <FloatLabel\r\n                                label={CURRENT_PASSWORD}\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:  ENTER_CURRENT_PASSWORD ,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={NEW_PASSWORD}\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: ENTER_NEW_PASSWORD,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                    onBlur={(e) => validatePassword(e)}\r\n                                  />\r\n                                </Form.Item>\r\n                                {passwordValidationError && (\r\n                                  <Alert\r\n                                    message={PASSWORD_RULES}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={CONFIRM_PASSWORD}\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: CONFIRM_YOUR_PASSWORD,\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                      validator(_, value) {\r\n                                        if (\r\n                                          !value ||\r\n                                          getFieldValue(\"newpassword\") === value\r\n                                        ) {\r\n                                          return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(\r\n                                          PASSWORD_NOT_MATCH\r\n                                        );\r\n                                      },\r\n                                    }),\r\n                                  ]}\r\n                                  dependencies={[\"newpassword\"]}\r\n                                  hasFeedback\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              {SUBMIT}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ADD_ICON, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          {ADD_ICON}\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title={ADD_ICON}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"1\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={1}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SEXUAL_HARRASMENT}>\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"2\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={2}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={VIOLENCE}>\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"3\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={3}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={RACISM}>\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"4\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={4}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={CYBER_BULLYING}>\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"5\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={5}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={FIGHT}>\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"6\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={6}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={DISCRIMINATION}>\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"7\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={7}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SLAP}>\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport {\r\n  ENTER_DIRECTORY_NAME,\r\n  REQUIRED_MESSAGE,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  ENTER_DESCRIPTION,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n} from \"../../errors\";\r\nimport { DIRECTORY_NAME, DESCRIPTION, DATE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.directoryName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      if (hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0], \"hotlineErrorUpdated\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <FloatLabel\r\n        label={DIRECTORY_NAME}\r\n        value={stepOneHotLineInfo.directoryName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"directoryName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DIRECTORY_NAME },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneHotLineInfo.directoryName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"directoryName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"directoryName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated === \"status: false\" &&\r\n            stepOneHotLineInfo.directoryName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneHotLineInfo.directoryName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={HOTLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneHotLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DESCRIPTION },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            className=\"input-control\"\r\n            value={stepOneHotLineInfo.description}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneHotLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneHotLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneHotLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { FIRST_NAME, LAST_NAME, STATUS, ACCESS, MOBILE } from \"../../labels\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n          loader: false,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n          children:firstname,\r\n          props: {\r\n            \"data-title\": \"First Name\",\r\n          },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children:lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n        render: (Mobile_Number) => {\r\n          return {\r\n            children:Mobile_Number,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return {\r\n            children:<span>{test}</span>,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          }\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => {\r\n          return {\r\n            children:  <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>\r\n            {STATUS_ACTIVE}\r\n          </div>,\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n            }\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <Spin spinning={this.state.loader} size=\"large\">\r\n          <div id=\"no-more-tables\">\r\n            <Table\r\n              rowSelection={rowSelection}\r\n              columns={columns}\r\n              dataSource={this.state.filterData}\r\n              rowKey=\"unique_identifier\"\r\n            />\r\n          </div>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              style={{ margin: \"0 8px\" }}\r\n              onClick={() => this.stepTwoPrev()}\r\n              data-test=\"steptwoPrev\"\r\n            >\r\n              {BACK}\r\n            </Button>\r\n            <Button\r\n              className=\"md\"\r\n              type=\"primary\"\r\n              onClick={() => this.stepTwoNext()}\r\n              data-test=\"steptwoNext\"\r\n            >\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\nimport { SELECT_DATE } from \"../../errors\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { BACK, CREATE } from \"../../headings\";\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id=\"directoryName\"\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CREATE_HOTLINE_DIRECTORY,\r\n  HOTLINE_DIRECTORY,\r\n  CREATE_HOTLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n  HOTLINE_CREATE_STEP1,\r\n  HOTLINE_CREATE_STEP2,\r\n  HOTLINE_CREATE_STEP3,\r\n} from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: HOTLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const setNameValidHandle = (value, name) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>{HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_HOTLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content\">\r\n                        {current == 0 ? (\r\n                          <CreateHotlineStepOne\r\n                            next={next}\r\n                            stepOneHotLineInfo={stepOneHotLine}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            setNameValidHandle={setNameValidHandle}\r\n                            addIcon={addIcon}\r\n                            getIconText={getIconText}\r\n                            hotlineErrorUpdated={hotlineErrorUpdated}\r\n                            data-test=\"CreateHotlineStepOne\"\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateHotlineStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepOneHotLine={stepOneHotLine}\r\n                            stepTwoHotLine={stepTwoHotLine}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateHotlineStepThree\r\n                            prev={prev}\r\n                            createNewHotLine={createHotLine}\r\n                            stepOneHotLine={stepOneHotLine}\r\n                            stepTwoHotLine={stepTwoHotLine}\r\n                            getIconText={getIconText}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, HOTLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  HOTLINE_DIRECTORY_TEXT_PART1,\r\n  HOTLINE_DIRECTORY_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{HOTLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {HOTLINE_DIRECTORY_TEXT_PART1}\r\n                          <br />\r\n                          {HOTLINE_DIRECTORY_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <HotlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DELETE,\r\n  DELETE_HOTLINE,\r\n  NO_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport { DELETE_CONFIRM_HOTLINE } from \"../../messages\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{DELETE}</a>\r\n        <Modal\r\n          title={DELETE_HOTLINE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_HOTLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/edithotline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/edithotline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteHotlineModal\r\n          hotlineId={test.hotline_id}\r\n          hotlineName={test.name}\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    { title: NAME, dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  //const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n      // setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        //value={value}\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\nimport { CANCEL, SHOW, DONE } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getHotlineAssignEmpl/\" + this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedHotLines[index] = {\r\n      ...assignedHotLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedHotLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"getHotlineAssignEmpl/\" + value.hotline_id, options)\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <GridPermission\r\n              data={this.state.assignedHotLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  HOTLINE_NAME,\r\n  END_DATE,\r\n  START_DATE,\r\n  PERMISSIONS,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { HOTLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines?.forEach((hotline) => {\r\n      hotline.start_date = moment(hotline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      hotline.end_date = moment(hotline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.hotlines !== nextProps.hotlines) {\r\n      nextProps.hotlines?.forEach((hotline) => {\r\n        hotline.start_date = moment(hotline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        hotline.end_date = moment(hotline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.hotlines }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        help_text: record.help_text,\r\n        hotline_icon_id: record.hotline_icon_id,\r\n        hotline_id: record.hotline_id,\r\n        name: record.name,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"hotline/\" + data.hotline_id, data, options)\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: HOTLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Hotline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <PermissionModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <HotlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{HOTLINE_DIRECTORY}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create Hotline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.hotlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.hotlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.hotlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.hotlinesdata !== null &&\r\n    props.hotlinesdata.length === 0 ? (\r\n    <HotlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllHotlines\r\n      hotlines={props.hotlinesdata}\r\n      statusOnClicked={statusOnClicked}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React, { useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ASSIGN, CANCEL, DONE, HOTLINE } from \"../../headings\";\r\nimport { ASSIGN_HOTLINE_TEXT_PART2 } from \"../../messages\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        {ASSIGN}\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText={DONE}\r\n        cancelText={CANCEL}\r\n      >\r\n        <div>\r\n          {ASSIGN_HOTLINE_TEXT_PART1}{\" \"}\r\n          <b>{stepOneHotLineValues.directoryName}</b> {HOTLINE}\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          <Row className=\"mt-2 mt-lg-5\">\r\n            <Col span={6}></Col>\r\n            <Col span={14} className=\"small text-center\">\r\n              {ASSIGN_HOTLINE_TEXT_PART2}\r\n            </Col>\r\n          </Row>\r\n          {selectedRow &&\r\n            selectedRow.map((item) => {\r\n              let per = permissions.find((p) => p.user_id === item.user_id);\r\n              return (\r\n                <Row className=\"mt-3 d-flex justify-content-center\">\r\n                  <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                  <Col span={10}>\r\n                    <Checkbox\r\n                      checked={per && per.can_respond === 1 ? true : false}\r\n                      disabled\r\n                      onChange={(e) => handleCheck(item)}\r\n                    ></Checkbox>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","export const highlightText = (data, str) => {\r\n  let highlightedObject = {};\r\n  highlightedObject = data\r\n    .filter(\r\n      (item) =>\r\n        item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.responder_conversation_name\r\n          .toLowerCase()\r\n          .includes(str.toLowerCase()) ||\r\n        item.hotline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.message.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n    .map((item) => {\r\n      let conversation_id = item.conversation_id.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = item.responder_conversation_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = item.hotline_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = item.message.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      return {\r\n        ...item,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: item.hotline_id,\r\n        },\r\n      };\r\n    });\r\n  return highlightedObject;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  FILTER,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n  HOTLINE,\r\n  CANCEL,\r\n  APPLY,\r\n} from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n} from \"../../values\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserallHotlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{HOTLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  ADD_NOTE,\r\n  ADD_TEXT_MODAL,\r\n  CANCEL_MODAL,\r\n  TAKE_NOTE,\r\n} from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state = {\r\n      visible: false,\r\n      noteText: \"\",\r\n    };\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios.post(BASE_URL + \"addNotes/\", data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        this.setState({ noteText: \"\" });\r\n        this.formRef.current.resetFields();\r\n        this.props.getNoteData(res.data.conversation_id);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      noteText: \"\",\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          {TAKE_NOTE}\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title={TAKE_NOTE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n            <Form\r\n              className=\"input-md w-100\"\r\n              name=\"validate-other\"\r\n              ref={this.formRef}\r\n            >\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder={ADD_NOTE}\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { ACTIVITY } from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGH4,\r\n} from \"../../values\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: AUDIT_LOG1 },\r\n  { id: 2, name: AUDIT_LOG2 },\r\n  { id: 3, name: AUDIT_LOG3 },\r\n  { id: 4, name: AUDIT_LOGH4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport { STATUS } from \"../../labels\";\r\nimport {\r\n  LAST_READ,\r\n  STATUS_CHANGED,\r\n  URGENCY_LEVEL_CHANGED,\r\n  URGENCY_LEVEL,\r\n  SEND_MESSAGE_TEXT,\r\n} from \"../../headings\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n          document.getElementsByClassName(\"hotline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if ((e.altKey && e.keyCode === 13) || (e.ctrlKey && e.keyCode === 13)) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message.length > 0) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        hotline_id: conversation.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline_name.includes(\"</mark>\")) {\r\n      conversation.hotline_name = conversation.hotline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline_name = conversation.hotline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline_name = conversation.hotline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ? (\r\n                        <Divider plain>{URGENCY_LEVEL_CHANGED}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\"Status has been changed to\") ? (\r\n                        <Divider plain>  {msg.message.replace(/ has been/g,'')}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ||\r\n                      msg.message.includes(\r\n                        \"Status has been changed to\"\r\n                      ) ? null : (\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"outgoing-msg hotline_message mb-3\"\r\n                              : \"incoming-msg hotline_message mb-2\"\r\n                          }\r\n                        >\r\n                          <div\r\n                            className={\r\n                              msg.is_responder_message\r\n                                ? \"sent-msg\"\r\n                                : \"received-msg\"\r\n                            }\r\n                          >\r\n                            <p\r\n                              ellipsis\r\n                              // className=\"w-75 pr-2 mb-1\"\r\n                              dangerouslySetInnerHTML={createMarkup(\r\n                                msg.message\r\n                              )}\r\n                            />\r\n\r\n                            <span className=\"time-date\">\r\n                              {\" \"}\r\n                              {moment(msg.created_on).isSame(moment(), \"day\")\r\n                                ? moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"hh:mm A\")\r\n                                : moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"MM:DD:YY | hh:mm A \")}\r\n                              {msg.is_responder_message &&\r\n                                ` | ${msg.first_name} ${msg.last_name}`}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    name={conversation.conversation_id}\r\n                    placeholder={SEND_MESSAGE_TEXT}\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchHotlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.hotlineFilterData.length > 0 && {\r\n        hotline_id: props.hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchHotlineMessages from \"./SearchHotlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  HOTLINE,\r\n  NO_MESSAGES_FOUND,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\nimport { NO_CONVERSATION_SELECETD, SELECT_CONVERSATION } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HoltineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Urgency Level has been changed to ${\r\n        event === 1 ? \"Low\" : event === 2 ? \"Medium\" : \"High\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Status has been changed to ${\r\n        event === 1 ? \"New\" : event === 2 ? \"Open\" : \"Closed\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.hotlineFilterData.map((hotline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyHotline\", hotline.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {HOTLINE}: <span>{hotline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchHotlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  hotlineFilterData={props.hotlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.hotline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoHotlines}\r\n                alt=\"No Hotlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoltineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED } from \"../../messages\";\r\n\r\nconst NoHotlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateHotline}\r\n        alt=\"No Hotlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED}</h5>\r\n    {/* <small>Select a hotline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Spin } from \"antd\";\r\nimport { LOADING } from \"../../headings\";\r\n\r\nconst Spinner = (loader) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <Spin size=\"large\" tip={LOADING} spinning={loader}></Spin>\r\n    </Row>\r\n  </Col>\r\n);\r\n\r\nexport default Spinner;\r\n","import * as AppStorage from \"./AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nexport const displayNewConvAtTop = (\r\n  updatedConversations,\r\n  newConvo,\r\n  updatedNewConvo\r\n) => {\r\n  let index = 0;\r\n  // create a replica of updatedConversations\r\n  const dummyArray = updatedConversations;\r\n  // return the index of the new incoming conversation from the list of all conversations.\r\n  updatedConversations.map((value) => {\r\n    if (\r\n      value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n      newConvo?.conversation_id\r\n    ) {\r\n      return (index = updatedConversations.indexOf(value));\r\n    }\r\n  });\r\n  // remove that new conversation from the dummy list temporarily.\r\n  dummyArray.splice(index, 1);\r\n  // push that removed incoming conversation on top of the list.\r\n  const finalConversations = [updatedNewConvo, ...dummyArray];\r\n  return finalConversations;\r\n};\r\n\r\nexport const increaseOverallCount = (\r\n  newConvo,\r\n  conversationsToDisplay,\r\n  selectedConv,\r\n  setUnreadCount\r\n) => {\r\n  const user = JSON.parse(AppStorage.get(\"user\"));\r\n  // return only that new incoming message which comes from a user other than logged in user.\r\n  const newConvFromDiffUser = conversationsToDisplay.filter(\r\n    (filter) =>\r\n      filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id &&\r\n      newConvo.created_by !==\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        ) &&\r\n      newConvo.conversation_id !== selectedConv\r\n  );\r\n  // return the new incoming message irrespective of any user.\r\n  const incomingConversation = conversationsToDisplay.filter(\r\n    (item) =>\r\n      item?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n      newConvo?.conversation_id\r\n  );\r\n  for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n    if (\r\n      incomingConversation[0]?.conversation_id\r\n        .toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvFromDiffUser[item]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") &&\r\n      incomingConversation[0].unread_messages_count === 0\r\n    ) {\r\n      setUnreadCount((unreadCount) => unreadCount + 1);\r\n    }\r\n  }\r\n};\r\n\r\nexport const increaseOverallCountDuringFilters = (\r\n  newState,\r\n  allConversations,\r\n  urgencyFilterData,\r\n  statusFilterData,\r\n  lineFilterData,\r\n  searchString,\r\n  newInitiatedConv,\r\n  setUnreadCount,\r\n  setAllConversations,\r\n  conversation\r\n) => {\r\n  if (\r\n    urgencyFilterData.length > 0 ||\r\n    statusFilterData.length > 0 ||\r\n    lineFilterData.length > 0 ||\r\n    searchString.length > 0\r\n  ) {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = allConversations?.filter(\r\n      (filter) =>\r\n        filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id &&\r\n        newState.created_by !==\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ) &&\r\n        newState?.conversation_id !== conversation.conversation_id\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = allConversations?.filter(\r\n      (item) =>\r\n        item?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newState?.conversation_id\r\n    );\r\n    for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[item]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0]?.unread_messages_count === 0\r\n      ) {\r\n        if (!newInitiatedConv.current) {\r\n          setUnreadCount((unreadCount) => unreadCount + 1);\r\n        }\r\n        const updatedAllConversations = allConversations.map((item) =>\r\n          item.conversation_id === newState?.conversation_id\r\n            ? {\r\n                ...item,\r\n                unread_messages_count: item.unread_messages_count + 1,\r\n              }\r\n            : item\r\n        );\r\n        setAllConversations(updatedAllConversations);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const unSetFilters = (via) => {\r\n  AppStorage.remove(\"urgencyLevels\");\r\n  AppStorage.remove(\"status\");\r\n  if (via === \"hotline\") {\r\n    AppStorage.remove(\"hotline\");\r\n  } else {\r\n    AppStorage.remove(\"openline\");\r\n  }\r\n  AppStorage.remove(\"searchBy\");\r\n  AppStorage.remove(\"ConvID\");\r\n};\r\n\r\nexport const filterSocket = (\r\n  totalFiltersApplied,\r\n  newConvo,\r\n  conversations,\r\n  conversationIds,\r\n  via\r\n) => {\r\n  const hotlineOrOpenlineFilter =\r\n    via === \"hotline\"\r\n      ? totalFiltersApplied.hotline\r\n      : totalFiltersApplied.openline;\r\n  const hotlineOrOpenlineConvoId =\r\n    via === \"hotline\" ? newConvo.hotline_id : newConvo.openline_id;\r\n  const hotlineOrOpenlineConvoName =\r\n    via === \"hotline\" ? newConvo.hotline_name : newConvo.openline_name;\r\n  let totalConversations = [];\r\n  if (\r\n    (totalFiltersApplied.status?.includes(newConvo.status_id.toString()) &&\r\n      totalFiltersApplied.urgency?.includes(\r\n        newConvo.urgency_level_id.toString()\r\n      ) &&\r\n      hotlineOrOpenlineFilter?.includes(hotlineOrOpenlineConvoId.toString()) &&\r\n      totalFiltersApplied.searchBy?.length > 0 &&\r\n      newConvo.conversation_id\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n    newConvo.responder_conversation_name\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n    hotlineOrOpenlineConvoName\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n    newConvo.message\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n  ) {\r\n    let conversation_id = newConvo.conversation_id.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let lineName = hotlineOrOpenlineConvoName.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let itemMessage = newConvo.message.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    const updatedConversation =\r\n      via === \"hotline\"\r\n        ? {\r\n            ...newConvo,\r\n            conversation_id: conversation_id,\r\n            responder_conversation_name: responder_conversation_name,\r\n            message: itemMessage,\r\n            hotline: {\r\n              name: lineName,\r\n              hotline_id: hotlineOrOpenlineConvoId,\r\n            },\r\n          }\r\n        : {\r\n            ...newConvo,\r\n            conversation_id: conversation_id,\r\n            responder_conversation_name: responder_conversation_name,\r\n            message: itemMessage,\r\n            openline: {\r\n              name: lineName,\r\n              openline_id: hotlineOrOpenlineConvoId,\r\n            },\r\n          };\r\n    if (\r\n      !conversationIds.includes(\r\n        updatedConversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      )\r\n    ) {\r\n      totalConversations = [...conversations, updatedConversation];\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n  } else {\r\n    totalConversations = conversations;\r\n  }\r\n  return totalConversations;\r\n};\r\n\r\nexport function setAppliedFilters(\r\n  urgencyLevels,\r\n  status,\r\n  line,\r\n  setUrgencyFilterData,\r\n  setStatusFilterData,\r\n  setLineFilterData,\r\n  via\r\n) {\r\n  setUrgencyFilterData(urgencyLevels);\r\n  setStatusFilterData(status);\r\n  setLineFilterData(line);\r\n  AppStorage.set(\r\n    \"urgencyLevels\",\r\n    Object.values(urgencyLevels)?.map((data) => data.value)\r\n  );\r\n  if (via === \"hotline\") {\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(line)?.map((data) => data.value)\r\n    );\r\n  } else {\r\n    AppStorage.set(\r\n      \"openline\",\r\n      Object.values(line)?.map((data) => data.value)\r\n    );\r\n  }\r\n  AppStorage.set(\r\n    \"status\",\r\n    Object.values(status)?.map((data) => data.value)\r\n  );\r\n}\r\n\r\nexport const createMarkup = (html) => {\r\n  return { __html: html };\r\n};\r\n","import { LeftOutlined } from \"@ant-design/icons\";\r\nimport { Form, Layout, Row } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport { HOTLINE_MESSAGES } from \"../../headings\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL, WEBSOCKET_HOTLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport \"./hotlineMessages.scss\";\r\nimport HoltineMessagesLeftSection from \"./HotlineMessagesLeftSection\";\r\nimport NoHotlineMessages from \"./NoHotlineMessages\";\r\nimport Spinner from \"./Spinner\";\r\nimport {\r\n  displayNewConvAtTop,\r\n  increaseOverallCount,\r\n  increaseOverallCountDuringFilters,\r\n  unSetFilters,\r\n  filterSocket,\r\n  setAppliedFilters,\r\n  createMarkup,\r\n} from \"../../utils/MessagesUtil\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const [showBack, setshowBack] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    // remove filters when component loads.\r\n    unSetFilters(\"hotline\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n    increaseOverallCountDuringFilters(\r\n      newState,\r\n      mergedConversations,\r\n      urgencyFilterData,\r\n      statusFilterData,\r\n      hotlineFilterData,\r\n      searchString,\r\n      newInitiatedConv,\r\n      setUnreadCount,\r\n      setAllConversations,\r\n      conversation\r\n    );\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_HOTLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n      if (newConvo.message.includes(\"Urgency Level has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const urgency =\r\n          lastWord.trim() === \"Low\" ? 1 : lastWord.trim() === \"Medium\" ? 2 : 3;\r\n        setUrgencyLevel(urgency);\r\n      } else if (newConvo.message.includes(\"Status has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const status =\r\n          lastWord.trim() === \"New\" ? 1 : lastWord.trim() === \"Open\" ? 2 : 3;\r\n        setStatus(status);\r\n      }\r\n    };\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        // return those conversations which have matched filters or search.\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds,\r\n            \"hotline\"\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n          increaseOverallCount(\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            selectedConv,\r\n            setUnreadCount\r\n          );\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          // append the new incoming conversation at the top of the existing list of conversations.\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    // set state values of applied filters.\r\n    setAppliedFilters(\r\n      selectedUrgency,\r\n      selectedStatus,\r\n      selectedHotline,\r\n      setUrgencyFilterData,\r\n      setStatusFilterData,\r\n      setHotlineFilterData,\r\n      \"hotline\"\r\n    );\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   hotline_id:\r\n    //     allAppliedFilters.hotline_id && allAppliedFilters.hotline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n    setshowBack(false)\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n      setshowBack(true)\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                {showBack ? (\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span> ) : (null) }\r\n                  {HOTLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Spinner loader={loader} />\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <HoltineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoHotlines={NoHotlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  hotlineFilterData={hotlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoHotlineMessages CreateHotline={CreateHotline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  HOTLINE_MESSAGES,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","export const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.openline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let openlineName = item.openline_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          openline: {\r\n            name: openlineName,\r\n            openline_id: item.openline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport {\r\n  APPLY,\r\n  CANCEL,\r\n  FILTER,\r\n  OPENLINE,\r\n  OPENLINES,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [openline, setOpenline] = useState([]);\r\n  const [openlinesData, setOpenlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldOpenline, setOldOpenline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldOpenline, setSelectedOldOpenline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedOpenline, setSelectedOpenline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserAllOpenlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.openline.name,\r\n            value: value.openline.openline_id,\r\n          })\r\n        );\r\n        setOpenlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, openline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyOpenline\") {\r\n      const removeOpenline = selectedOpenline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmOpen = openline.filter((ur) => ur !== props.removeFilter.value);\r\n      setOpenline(rmOpen);\r\n      setSelectedOpenline(removeOpenline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const openlineOptions = openlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setOpenline(oldOpenline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedOpenline(selectedOldOpenline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(openline.length > 0 && { openline_id: openline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldOpenline(openline);\r\n    setSelectedOldOpenline(selectedOpenline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedOpenline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleOpenline(checkedValues) {\r\n    let selected = selectedOpenline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(openlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedOpenline(selected);\r\n    setOpenline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedOpenline([]);\r\n      setOpenline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{OPENLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"openline\"\r\n                    options={openlineOptions}\r\n                    value={openline}\r\n                    onChange={handleOpenline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGO4,\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { ACTIONS } from \"../../labels\";\r\nimport { ACTIVITY } from \"../../headings\";\r\n\r\nconst audit_log = [\r\n  { id: 5, name: AUDIT_LOG1 },\r\n  { id: 6, name: AUDIT_LOG2 },\r\n  { id: 7, name: AUDIT_LOG3 },\r\n  { id: 8, name: AUDIT_LOGO4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineConversationActivity/?conversation_id=\" +\r\n          conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.openline_id);\r\n  }\r\n\r\n  getAssigne(openlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getOpenlineAssignEmpl/\" + openlineId, options)\r\n      .then((res) => {\r\n        let listOfAssignedUsers = [];\r\n        res.data.map((value) => {\r\n          const user = value.user.first_name + \" \" + value.user.last_name;\r\n          listOfAssignedUsers.push({ \"Assigned User_name\": user });\r\n          return listOfAssignedUsers;\r\n        });\r\n        this.setState({ assigneEmp: listOfAssignedUsers });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./openlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { LAST_READ, URGENCY_LEVEL } from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getOpenlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"openline_message\")[\r\n          document.getElementsByClassName(\"openline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getOpenlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if ((e.altKey && e.keyCode === 13) || (e.ctrlKey && e.keyCode === 13)) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        openline_id: conversation.openline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveOpenlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.openline_name.includes(\"</mark>\")) {\r\n      conversation.openline_name = conversation.openline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.openline_name = conversation.openline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.openline_name = conversation.openline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.openline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg openline_message mb-3\"\r\n                            : \"incoming-msg openline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            // className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD:YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.first_name} ${msg.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Openline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                openline_id={conversation.openline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchOpenlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.openlineFilterData.length > 0 && {\r\n        openline_id: props.openlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchOpenlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchOpenlineMessages from \"./SearchOpenlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  NO_CONVERSATION_SELECETD,\r\n  NO_MESSAGES_FOUND,\r\n  OPENLINE,\r\n  SELECT_CONVERSATION,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.openlineFilterData.map((openline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\r\n                          \"urgencyOpenline\",\r\n                          openline.value\r\n                        )\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {OPENLINE}: <span>{openline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchOpenlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  openlineFilterData={props.openlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.openline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoOpenlines}\r\n                alt=\"No Openlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED_OPENLINE } from \"../../messages\";\r\n\r\nconst NoOpenlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateOpenline}\r\n        alt=\"No Openlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED_OPENLINE}</h5>\r\n    {/* <small>Select a openline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoOpenlineMessages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Layout, Row, Col, Form, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./openlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport NoOpenlines from \"../../assets/images/no-openlines.svg\";\r\nimport { BASE_URL, WEBSOCKET_OPENLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport CreateOpenline from \"../../assets/images/create-openline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport OpenlineMessagesLeftSection from \"./OpenlineMessagesLeftSection\";\r\nimport NoOpenlineMessages from \"./NoOpenlineMessages\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\nimport { OPENLINE_MESSAGES } from \"../../headings\";\r\nimport {\r\n  displayNewConvAtTop,\r\n  increaseOverallCount,\r\n  increaseOverallCountDuringFilters,\r\n  unSetFilters,\r\n  filterSocket,\r\n  setAppliedFilters,\r\n  createMarkup,\r\n} from \"../../utils/MessagesUtil\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [openlineFilterData, setOpenlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    // remove filters when component loads.\r\n    unSetFilters(\"openline\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n    increaseOverallCountDuringFilters(\r\n      newState,\r\n      mergedConversations,\r\n      urgencyFilterData,\r\n      statusFilterData,\r\n      openlineFilterData,\r\n      searchString,\r\n      newInitiatedConv,\r\n      setUnreadCount,\r\n      setAllConversations,\r\n      conversation\r\n    );\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_OPENLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const openlineState =\r\n          AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let openlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          openline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (openlineState !== null && openlineState?.length > 0) {\r\n          openlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            openline: openlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        // return those conversations which have matched filters or search.\r\n        if (urgencyFilter || statusFilter || openlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds,\r\n            \"openline\"\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.openline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n          increaseOverallCount(\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            selectedConv,\r\n            setUnreadCount\r\n          );\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          openlineFilter &&\r\n          !openlineState.includes(newConvo.openline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          // append the new incoming conversation at the top of the existing list of conversations.\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedOpenline\r\n  ) => {\r\n    // set state values of applied filters.\r\n    setAppliedFilters(\r\n      selectedUrgency,\r\n      selectedStatus,\r\n      selectedOpenline,\r\n      setUrgencyFilterData,\r\n      setStatusFilterData,\r\n      setOpenlineFilterData,\r\n      \"openline\"\r\n    );\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const openlineState =\r\n      AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(openlineState &&\r\n        openlineState.length > 0 && { openline_id: openlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   openline_id:\r\n    //     allAppliedFilters.openline_id && allAppliedFilters.openline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      openlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"openlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  {OPENLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <Spin\r\n                      size=\"large\"\r\n                      tip=\"Loading...\"\r\n                      spinning={loader}\r\n                    ></Spin>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <OpenlineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoOpenlines={NoOpenlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  openlineFilterData={openlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoOpenlineMessages CreateOpenline={CreateOpenline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\nimport { PERMISSION_DENIED } from \"../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={this.props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={this.props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">{PERMISSION_DENIED}</h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionDenied;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  RESET_INVITE,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_FOR,\r\n  RESET_PASSWORD_LINK,\r\n} from \"../../headings\";\r\nimport { CONFIRM_PASSWORD, NEW_PASSWORD } from \"../../labels\";\r\nimport {ENTER_NEW_PASSWORD, CONFIRM_YOUR_PASSWORD} from \"../../errors\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>{RESET_PASSWORD_LINK}</span>\r\n        </Button>\r\n        <Modal\r\n          title={RESET_PASSWORD}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={RESET_INVITE}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                {RESET_PASSWORD_FOR}{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label={NEW_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {ENTER_NEW_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={CONFIRM_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {CONFIRM_YOUR_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n  Spin,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\nimport { CANCEL_MODAL, EDIT_SEEDED_USER, UPDATE_MODAL } from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  DATE,\r\n  EMAIL,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst EditSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleEditOk}\r\n      onCancel={props.handleEditCancel}\r\n      centered\r\n      width={900}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={UPDATE_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Spin spinning={props.loader} size=\"large\">\r\n        <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n          <div>{EDIT_SEEDED_USER}</div>\r\n          <br />\r\n          <div className=\"avatar-wrapper pt-2 pb-4\">\r\n            <Avatar>{props.seededUserName.charAt(0)}</Avatar>\r\n            <span className=\"md-name\">{props.seededUserName}</span>\r\n          </div>\r\n          {props.error && (\r\n            <Form.Item>\r\n              <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n            </Form.Item>\r\n          )}\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={FIRST_NAME}\r\n                  value={props.seededUserDetails.firstName}\r\n                >\r\n                  <Form.Item name=\"firstName\" className=\"required\">\r\n                    <Input\r\n                      id=\"firstName\"\r\n                      className=\"input-control\"\r\n                      defaultValue={props.seededUserDetails.firstName}\r\n                      htmlFor=\"firstName\"\r\n                      value={props.seededUserDetails.firstName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.fNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={LAST_NAME}\r\n                  value={props.seededUserDetails.lastName}\r\n                >\r\n                  <Form.Item name=\"lastName\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"lastName\"\r\n                      htmlFor=\"lastName\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.lastName}\r\n                      value={props.seededUserDetails.lastName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.lNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={EMAIL} value={props.seededUserDetails.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"email\"\r\n                      htmlFor=\"email\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.email}\r\n                      value={props.seededUserDetails.email}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      onBlur={(e) => props.validateEmailAddress(e)}\r\n                      autoComplete=\"off\"\r\n                      disabled\r\n                    />\r\n                    {props.emailValidationError && (\r\n                      <Alert\r\n                        message={VALID_EMAIL}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={DATE} value=\"date2\">\r\n                  <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                    <RangePicker\r\n                      className=\"new w-100\"\r\n                      name=\"date2\"\r\n                      className=\"required\"\r\n                      value={props.seededUserDetails.date2}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                <FloatLabel\r\n                  label={MOBILE}\r\n                  value={props.seededUserDetails.mobile}\r\n                >\r\n                  <Form.Item name=\"mobile\" className=\"required\">\r\n                    <PhoneInput\r\n                      country={\"us\"}\r\n                      id=\"mobile\"\r\n                      htmlFor=\"mobile\"\r\n                      defaultValue={props.seededUserDetails.mobile}\r\n                      value={props.seededUserDetails.mobile}\r\n                      onChange={props.handleMobile}\r\n                      onBlur={(e) => props.validateMobile(e)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.mobileValidationError && (\r\n                      <Alert\r\n                        message={VALID_MOBILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={STATUS}\r\n                  value={props.seededUserDetails.status2}\r\n                >\r\n                  <Form.Item className=\"required\" name=\"status2\">\r\n                    <>\r\n                      <Select\r\n                        className=\"input-control w-100 w-lg-50\"\r\n                        value={props.seededUserDetails.status2}\r\n                        htmlFor=\"status2\"\r\n                        className=\"required\"\r\n                        onSelect={(value) =>\r\n                          props.handleSeededUserOnSelect(value, \"status2\")\r\n                        }\r\n                      >\r\n                        <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                        <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                      </Select>\r\n                    </>\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n      <ResetPwdModal\r\n        user={props.seededUserDetails.firstName}\r\n        handleResetPasswordOk={props.handleResetPasswordOk}\r\n        handleResetPasswordCancel={props.handleResetPasswordCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSeededUser;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n  Spin,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { ADD_SEEDED_USER, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  MAX_CHAR_LIMIT,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  EMAIL,\r\n  DATE,\r\n  MOBILE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleAddSeededUser}\r\n      onCancel={props.handleAddSeededUserCancel}\r\n      centered\r\n      width={1200}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={ADD_TEXT_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Spin spinning={props.loader} size=\"large\">\r\n        <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n          {props.error && (\r\n            <Form.Item>\r\n              <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n            </Form.Item>\r\n          )}\r\n          <Col span={24}>\r\n            <div>{ADD_SEEDED_USER}</div>\r\n            <br />\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={FIRST_NAME}\r\n                  value={props.seededUserDetails.firstName}\r\n                >\r\n                  <Form.Item name=\"firstName\" className=\"required\">\r\n                    <Input\r\n                      id=\"firstName\"\r\n                      className=\"input-control\"\r\n                      defaultValue={props.seededUserDetails.firstName}\r\n                      htmlFor=\"firstName\"\r\n                      value={props.seededUserDetails.firstName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.fNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={LAST_NAME}\r\n                  value={props.seededUserDetails.lastName}\r\n                >\r\n                  <Form.Item name=\"lastName\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"lastName\"\r\n                      htmlFor=\"lastName\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.lastName}\r\n                      value={props.seededUserDetails.lastName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.lNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              {/* <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Temporary Password\"\r\n                value={props.seededUserDetails.password}\r\n              >\r\n                <Form.Item name=\"password\" className=\"pwd required\">\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"password\"\r\n                    className=\"required\"\r\n                    id=\"password\"\r\n                    defaultValue={props.seededUserDetails.password}\r\n                    value={props.seededUserDetails.password}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validatePassword(e)}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {props.passwordValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid password.\r\n                      It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col> */}\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={EMAIL} value={props.seededUserDetails.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"email\"\r\n                      htmlFor=\"email\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.email}\r\n                      value={props.seededUserDetails.email}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      onBlur={(e) => props.validateEmailAddress(e)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.emailValidationError && (\r\n                      <Alert\r\n                        message={VALID_EMAIL}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={DATE} value=\"date2\">\r\n                  <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                    <RangePicker\r\n                      className=\"new w-100\"\r\n                      name=\"date2\"\r\n                      className=\"required\"\r\n                      value={props.seededUserDetails.date2}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                <FloatLabel\r\n                  label={MOBILE}\r\n                  value={props.seededUserDetails.mobile}\r\n                >\r\n                  <Form.Item name=\"mobile\" className=\"required\">\r\n                    <PhoneInput\r\n                      country={\"us\"}\r\n                      id=\"mobile\"\r\n                      htmlFor=\"mobile\"\r\n                      value={props.seededUserDetails.mobile}\r\n                      onChange={props.handleMobile}\r\n                      onBlur={props.validateMobile}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.mobileValidationError && (\r\n                      <Alert\r\n                        message={VALID_MOBILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={STATUS}\r\n                  value={props.seededUserDetails.status2}\r\n                >\r\n                  <Form.Item className=\"required\" name=\"status2\">\r\n                    <>\r\n                      <Select\r\n                        className=\"input-control w-100 w-lg-50\"\r\n                        value={props.seededUserDetails.status2}\r\n                        htmlFor=\"status2\"\r\n                        className=\"required\"\r\n                        onSelect={(value) =>\r\n                          props.handleSeededUserOnSelect(value, \"status2\")\r\n                        }\r\n                      >\r\n                        <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                        <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                      </Select>\r\n                    </>\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewSeededUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  ORGANIZATION_DETAILS,\r\n  EDIT_DETAILS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport {\r\n  ADD_SEEDED_USER_NOTIFICATION,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART1,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n  DELETE_SEEDED_USER_NOTIFICATION,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrgDetails = (props) => {\r\n  const history = useHistory();\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n      setLoader(false);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onFinish = (values) => {};\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            date2: [\r\n              moment(value.date2[0], \"YYYY-MM-DD\"),\r\n              moment(value.date2[1], \"YYYY-MM-DD\"),\r\n            ],\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const editOrg = () => {\r\n    const path = `/amcc/editorg/${orgID}`;\r\n    history.push(path, \"viaOrgDetails\");\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description:\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART1 +\r\n          seededUserName +\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n        placement,\r\n      });\r\n      setLoader(false);\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      // password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        setLoader(true);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              seededUserDetails.firstName + ADD_SEEDED_USER_NOTIFICATION,\r\n            placement,\r\n          });\r\n          setLoader(false);\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: userName + DELETE_SEEDED_USER_NOTIFICATION,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{ORGANIZATION_DETAILS}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"d-flex justify-content-between align-items-center\"\r\n                      >\r\n                        <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n                        <div>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3\"\r\n                            onClick={() => editOrg()}\r\n                          >\r\n                            <span className=\"icon icon-pencil\" />\r\n                            <span className=\"pl-2 d-none d-block-md\">\r\n                              {EDIT_DETAILS}\r\n                            </span>\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                        <Avatar>{organizationDetails.name.charAt(0)}</Avatar>\r\n                        <span className=\"md-name\">\r\n                          {organizationDetails.name}\r\n                        </span>\r\n                      </div>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                        onFinish={onFinish}\r\n                        form={form}\r\n                      >\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_NAME}\r\n                                value={organizationDetails.name}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    htmlFor=\"organization name\"\r\n                                    defaultValue={organizationDetails.name}\r\n                                    value={organizationDetails.name}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_ID}\r\n                                value={organizationDetails.identifier}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"identifier\"\r\n                                    name=\"identifier\"\r\n                                    htmlFor=\"organization name\"\r\n                                    defaultValue={\r\n                                      organizationDetails.identifier\r\n                                    }\r\n                                    value={organizationDetails.identifier}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={organizationDetails.status}\r\n                              >\r\n                                <Form.Item className=\"required\" name=\"status1\">\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-100\"\r\n                                      value={organizationDetails.status}\r\n                                      htmlFor=\"status\"\r\n                                      onSelect={(value) =>\r\n                                        handleOrganizationOnSelect(\r\n                                          value,\r\n                                          \"status\"\r\n                                        )\r\n                                      }\r\n                                      disabled\r\n                                    >\r\n                                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                      <Option value=\"2\">\r\n                                        {STATUS_INACTIVE}\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date1\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date1\"\r\n                                    value={organizationDetails.date1}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <Row className=\"w-100\">\r\n                        <Col span={24} md={12}>\r\n                          <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          md={12}\r\n                          className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                        >\r\n                          <Button\r\n                            className=\"mr-4\"\r\n                            type=\"secondary\"\r\n                            onClick={() => addSeededUser()}\r\n                          >\r\n                            {ADD_SEEDED_USER}\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        {seededUsers.length > 0 ? (\r\n                          <AssignedUsers\r\n                            seededUsers={seededUsers}\r\n                            orgID={parseInt(orgID)}\r\n                            statusOnClicked={statusOnClicked}\r\n                            handleEditUser={handleEditSeededUser}\r\n                            handleDelete={handleDeleteSeededUser}\r\n                            addSeededUser={addSeededUser}\r\n                            viaEdit\r\n                            orgDetails\r\n                            seededUser\r\n                          />\r\n                        ) : (\r\n                          <Col span={24} lg={18}>\r\n                            <Row className=\"justify-content-center\">\r\n                              {NO_SEEDED_USERS}\r\n                            </Row>\r\n                          </Col>\r\n                        )}\r\n                        {editVisible ? (\r\n                          <EditSeededUsers\r\n                            error={modalError}\r\n                            handleEditOk={handleEditOk}\r\n                            handleEditCancel={handleEditCancel}\r\n                            seededUsers={seededUsers}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                            seededUserName={seededUserName}\r\n                            seededUserDetails={seededUserDetails}\r\n                            disabledDate={disabledDate}\r\n                            handleSeededUserOnChange={handleSeededUserOnChange}\r\n                            handleSeededUserDatePickerChange={\r\n                              handleSeededUserDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                            validateEmailAddress={validateEmailAddress}\r\n                            emailValidationError={emailValidationError}\r\n                            validateMobile={validateMobile}\r\n                            mobileValidationError={mobileValidationError}\r\n                            handleResetPasswordOk={handleResetPasswordOk}\r\n                            handleResetPasswordCancel={\r\n                              handleResetPasswordCancel\r\n                            }\r\n                            loader={loader}\r\n                          />\r\n                        ) : showAddSeededUser ? (\r\n                          <AddNewSeededUser\r\n                            error={modalError}\r\n                            handleAddSeededUser={handleAddSeededUser}\r\n                            handleAddSeededUserCancel={\r\n                              handleAddSeededUserCancel\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                            seededUserDetails={seededUserDetails}\r\n                            disabledDate={disabledDate}\r\n                            handleSeededUserOnChange={handleSeededUserOnChange}\r\n                            handleSeededUserDatePickerChange={\r\n                              handleSeededUserDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                            validateEmailAddress={validateEmailAddress}\r\n                            emailValidationError={emailValidationError}\r\n                            validateMobile={validateMobile}\r\n                            mobileValidationError={mobileValidationError}\r\n                            validatePassword={validatePassword}\r\n                            passwordValidationError={passwordValidationError}\r\n                            loader={loader}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrgDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport {\r\n  DELETE,\r\n  EDIT_ORGANIZATION,\r\n  UPDATE,\r\n  CANCEL,\r\n  EDIT_SEEDED_USERS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n} from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport {\r\n  ADD_SEEDED_USER_NOTIFICATION,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART1,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n  DELETE_SEEDED_USER_NOTIFICATION,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [orgNameAlreadyExists, setOrgNameAlreadyExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDAlreadyExists] = useState(\"\");\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [organizationIdentifier, setOrganizationIdentifier] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    //  password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [orgStatus, setOrgStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      setOrganizationIdentifier(data.organization.identifier);\r\n      setOrgStatus(data.organization.status_id.toString());\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setLoader(false);\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationName) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganization/\",\r\n          { organization_name: organizationDetails.name },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgNameAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgNameAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationIdentifier) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganizationID/\",\r\n          { orgId: organizationDetails.identifier },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgIDAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgIDAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            date2: [\r\n              moment(value.date2[0], \"YYYY-MM-DD\"),\r\n              moment(value.date2[1], \"YYYY-MM-DD\"),\r\n            ],\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleOrganizationOnChange = (e) => {\r\n    if (e.target.id === \"identifier\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (e.target.id === \"name\" && e.target.value.length === 80) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setOrganizationDetails({\r\n      ...organizationDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteClick(false);\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      name: organizationDetails.name,\r\n      identifier: organizationDetails.identifier,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(organizationDetails.status),\r\n    };\r\n    const endDate = moment(organizationDetails.date1[1]).format(\"MM-DD-YYYY\");\r\n    if (organizationDetails.status !== orgStatus) {\r\n      if (new Date() < new Date(endDate)) {\r\n        if (organizationDetails.name && organizationDetails.identifier) {\r\n          if (\r\n            (orgNameAlreadyExists === \"status: false\" ||\r\n              organizationDetails.name === organizationName) &&\r\n            (orgIDAlreadyExists === \"status: false\" ||\r\n              organizationDetails.identifier === organizationIdentifier)\r\n          ) {\r\n            showError(false);\r\n            axios\r\n              .put(BASE_URL + \"saveOrganization/\", data, options)\r\n              .then(() => {\r\n                window.location = \"/amcc/manageorganizations\";\r\n              });\r\n          }\r\n        } else {\r\n          showError(true);\r\n        }\r\n      } else {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: STATUS_NOT_CHANGED,\r\n          placement,\r\n        });\r\n      }\r\n    } else {\r\n      if (organizationDetails.name && organizationDetails.identifier) {\r\n        showError(false);\r\n        setLoader(true);\r\n        axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n          window.location = \"/amcc/manageorganizations\";\r\n        });\r\n      } else {\r\n        showError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description:\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART1 +\r\n          seededUserName +\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n        placement,\r\n      });\r\n      setLoader(false);\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    if (props.location.state) {\r\n      const path = `/amcc/orgdetails/${orgID}`;\r\n      history.push(path);\r\n    } else {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        setLoader(true);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              seededUserDetails.firstName + ADD_SEEDED_USER_NOTIFICATION,\r\n            placement,\r\n          });\r\n          setLoader(false);\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: userNam + DELETE_SEEDED_USER_NOTIFICATION,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{EDIT_ORGANIZATION}</h1>\r\n              </Row>\r\n\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"d-flex justify-content-between align-items-center\"\r\n                      >\r\n                        <h6 className=\"py-3 mb-0\">{EDIT_ORGANIZATION}</h6>\r\n                        <div>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3 deleteOrg\"\r\n                            onClick={onDelete}\r\n                          >\r\n                            <span className=\"icon icon-delete\" />\r\n                            <span className=\"d-none d-md-inline-flex deleteOrg\">\r\n                              {DELETE}\r\n                            </span>\r\n                          </Button>\r\n                          {deleteClick ? (\r\n                            <DeleteModal\r\n                              org={organizationName}\r\n                              handleDelete={handleDeleteOrganization}\r\n                              handleCancel={handleCancelDelete}\r\n                              deleteOrg\r\n                            />\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </Col>\r\n                      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                        <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                        <span className=\"md-name\">{organizationName}</span>\r\n                      </div>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        form={form}\r\n                      >\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message={REQUIRED_MESSAGE}\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Organization Name\"\r\n                                value={organizationDetails.name}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    className=\"required\"\r\n                                    defaultValue={organizationDetails.name}\r\n                                    value={organizationDetails.name}\r\n                                    onChange={(e) =>\r\n                                      handleOrganizationOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => CheckOrganizationName(e)}\r\n                                    htmlFor=\"name\"\r\n                                    autoComplete=\"off\"\r\n                                    maxLength={80}\r\n                                  />\r\n                                  {orgNameAlreadyExists === \"status: false\" &&\r\n                                    organizationDetails.name\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    organizationDetails.name.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {orgNameAlreadyExists == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                                {orgNameCount && (\r\n                                  <Form.Item>\r\n                                    <Alert\r\n                                      message={MAX_CHAR_LIMIT}\r\n                                      type=\"error\"\r\n                                    ></Alert>\r\n                                  </Form.Item>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_ID}\r\n                                value={organizationDetails.identifier}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control edit-input\"\r\n                                    name=\"identifier\"\r\n                                    id=\"identifier\"\r\n                                    htmlFor=\"identifier\"\r\n                                    className=\"required\"\r\n                                    defaultValue={\r\n                                      organizationDetails.identifier\r\n                                    }\r\n                                    value={organizationDetails.identifier}\r\n                                    onChange={(e) =>\r\n                                      handleOrganizationOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => CheckOrganizationID(e)}\r\n                                    autoComplete=\"off\"\r\n                                    maxLength={20}\r\n                                  />\r\n                                  {orgIDAlreadyExists === \"status: false\" &&\r\n                                    organizationDetails.identifier\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    organizationDetails.identifier.length >\r\n                                      0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {orgIDAlreadyExists == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                                {orgIdCount && (\r\n                                  <Form.Item>\r\n                                    <Alert\r\n                                      message={MAX_CHAR_LIMIT}\r\n                                      type=\"error\"\r\n                                    ></Alert>\r\n                                  </Form.Item>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={organizationDetails.status}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"status\"\r\n                                >\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-100\"\r\n                                      value={organizationDetails.status}\r\n                                      htmlFor=\"status\"\r\n                                      onSelect={(value) =>\r\n                                        handleOrganizationOnSelect(\r\n                                          value,\r\n                                          \"status\"\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                      <Option value=\"2\">\r\n                                        {STATUS_INACTIVE}\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date1\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date1\"\r\n                                    value={organizationDetails.date1}\r\n                                    onChange={(date) =>\r\n                                      handleOrganizationDatePickerChange(\r\n                                        date,\r\n                                        \"date1\"\r\n                                      )\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Form.Item>\r\n                          <div className=\"steps-action mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onOrgEditSubmit}\r\n                            >\r\n                              {UPDATE}\r\n                            </Button>\r\n                            <Button\r\n                              className=\"ml-4\"\r\n                              type=\"secondary\"\r\n                              onClick={cancelEditing}\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      md={12}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">{EDIT_SEEDED_USERS}</h6>\r\n                    </Col>\r\n                    <Col\r\n                      span={24}\r\n                      md={12}\r\n                      className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                    >\r\n                      <Button\r\n                        className=\"mr-4\"\r\n                        type=\"secondary\"\r\n                        onClick={() => addSeededUser()}\r\n                      >\r\n                        {ADD_SEEDED_USER}\r\n                      </Button>\r\n                    </Col>\r\n                    {seededUsers.length > 0 ? (\r\n                      <AssignedUsers\r\n                        seededUsers={seededUsers}\r\n                        statusOnClicked={statusOnClicked}\r\n                        orgID={parseInt(orgID)}\r\n                        handleEditUser={handleEditSeededUser}\r\n                        handleDelete={handleDeleteSeededUser}\r\n                        addSeededUser={addSeededUser}\r\n                        viaEdit\r\n                        seededUser\r\n                      />\r\n                    ) : (\r\n                      <Col span={24} lg={18}>\r\n                        <Row className=\"justify-content-center\">\r\n                          {NO_SEEDED_USERS}\r\n                        </Row>\r\n                      </Col>\r\n                    )}\r\n                    {editVisible ? (\r\n                      <EditSeededUsers\r\n                        error={modalError}\r\n                        handleEditOk={handleEditOk}\r\n                        handleEditCancel={handleEditCancel}\r\n                        seededUsers={seededUsers}\r\n                        seededUserName={seededUserName}\r\n                        fNameCount={fNameCount}\r\n                        lNameCount={lNameCount}\r\n                        seededUserDetails={seededUserDetails}\r\n                        disabledDate={disabledDate}\r\n                        handleSeededUserOnChange={handleSeededUserOnChange}\r\n                        handleSeededUserDatePickerChange={\r\n                          handleSeededUserDatePickerChange\r\n                        }\r\n                        handleMobile={handleMobile}\r\n                        handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                        validateEmailAddress={validateEmailAddress}\r\n                        emailValidationError={emailValidationError}\r\n                        validateMobile={validateMobile}\r\n                        mobileValidationError={mobileValidationError}\r\n                        handleResetPasswordOk={handleResetPasswordOk}\r\n                        handleResetPasswordCancel={handleResetPasswordCancel}\r\n                        loader={loader}\r\n                      />\r\n                    ) : showAddSeededUser ? (\r\n                      <AddNewSeededUser\r\n                        error={modalError}\r\n                        handleAddSeededUser={handleAddSeededUser}\r\n                        handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                        seededUsers={seededUsers}\r\n                        fNameCount={fNameCount}\r\n                        lNameCount={lNameCount}\r\n                        seededUserDetails={seededUserDetails}\r\n                        disabledDate={disabledDate}\r\n                        handleSeededUserOnChange={handleSeededUserOnChange}\r\n                        handleSeededUserDatePickerChange={\r\n                          handleSeededUserDatePickerChange\r\n                        }\r\n                        handleMobile={handleMobile}\r\n                        handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                        validateEmailAddress={validateEmailAddress}\r\n                        emailValidationError={emailValidationError}\r\n                        validatePassword={validatePassword}\r\n                        passwordValidationError={passwordValidationError}\r\n                        validateMobile={validateMobile}\r\n                        mobileValidationError={mobileValidationError}\r\n                        loader={loader}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n  ENTER_DIRECTORY_NAME,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  SELECT_DATE,\r\n  ENTER_DESCRIPTION,\r\n} from \"../../errors\";\r\nimport { HOTLINE_UPDATED } from \"../../messages\";\r\nimport { CANCEL, EDIT_HOTLINE, UPDATE } from \"../../headings\";\r\nimport {\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = (props) => {\r\n  const [hotLineData, sethotLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    hotline_icon_id: \"\",\r\n    hotline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [hotlineStatus, setHotlineStatus] = useState(\"\");\r\n  const [iconHtml, seticonHtml] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [error, showError] = useState(false);\r\n\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n\r\n  const addIcon = (values, id) => {\r\n    sethotLineData({\r\n      ...hotLineData,\r\n      hotline_icon_id: id,\r\n    });\r\n    seticonHtml(values);\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setIcon = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return '<span class=\"icon icon-sexual-harassment-1 ant-tooltip-open\"></span>';\r\n      case \"2\":\r\n        return '<span class=\"icon icon-violence ant-tooltip-open\"></span>';\r\n      case \"3\":\r\n        return '<span class=\"icon icon-racism ant-tooltip-open\"></span>';\r\n      case \"4\":\r\n        return '<span class=\"icon icon-cyber-bullying ant-tooltip-open\"></span>';\r\n      case \"5\":\r\n        return '<span class=\"icon icon-fight ant-tooltip-open\"></span>';\r\n      case \"6\":\r\n        return '<span class=\"icon icon-discrimination ant-tooltip-open\"></span>';\r\n      case \"7\":\r\n        return '<span class=\"icon icon-slap ant-tooltip-open\"></span>';\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const eDate = moment(location.state.end_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    sethotLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      hotline_icon_id: location.state.hotline_icon_id,\r\n      hotline_id: location.state.hotline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    setHotlineStatus(location.state.status_id.toString());\r\n    const test = setIcon(location.state.hotline_icon_id.toString());\r\n    seticonHtml(test);\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: value });\r\n  };\r\n\r\n  const editHotline = (e) => {\r\n    if (\r\n      hotLineData.name &&\r\n      hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      hotLineData.help_text &&\r\n      hotLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      hotLineData.status_id &&\r\n      hotLineData.hotline_icon_id &&\r\n      hotLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const endDate = moment(hotLineData.start_date[1]).format(\"MM-DD-YYYY\");\r\n      const data = {\r\n        end_date: moment(hotLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: hotLineData.help_text,\r\n        hotline_icon_id: hotLineData.hotline_icon_id,\r\n        hotline_id: hotLineData.hotline_id,\r\n        name: hotLineData.name,\r\n        start_date: moment(hotLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(hotLineData.status_id),\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      if (\r\n        hotlineErrorUpdated == \"status: false\" ||\r\n        hotLineData.name === location.state.name\r\n      ) {\r\n        if (hotlineStatus !== hotLineData.status_id) {\r\n          if (new Date() < new Date(endDate)) {\r\n            saveHotLine(data);\r\n          } else {\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: STATUS_NOT_CHANGED,\r\n              placement,\r\n            });\r\n          }\r\n        } else {\r\n          saveHotLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  const saveHotLine = (data) => {\r\n    const token = authHeader();\r\n    let hotLineId = hotLineData.hotline_id;\r\n    delete hotLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"hotline/\" + hotLineId, data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: HOTLINE_UPDATED,\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkhotline/\",\r\n          { hotline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            sethotlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      sethotlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_HOTLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n\r\n                    <FloatLabel label={DIRECTORY_NAME} value={hotLineData.name}>\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: { ENTER_DIRECTORY_NAME },\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={hotLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckHotlineName(e)}\r\n                          id=\"name\"\r\n                          name=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {hotlineErrorUpdated == \"status: false\" &&\r\n                          hotLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          hotLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {hotlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={HOTLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={hotLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={hotLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            id=\"help_text\"\r\n                            name=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          disabledDate={disabledDate}\r\n                          value={hotLineData.start_date}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: { SELECT_DATE },\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={hotLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={hotLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <AddIcoModal\r\n                          data-test=\"addIconComponent\"\r\n                          addIcon={addIcon}\r\n                        />\r\n                        {getIconText(\r\n                          hotLineData.hotline_icon_id.toString()\r\n                        ) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      hotLineData.hotline_icon_id.toString()\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(\r\n                                      hotLineData.hotline_icon_id.toString()\r\n                                    )}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editHotline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditHotLine;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport { ADD_EMPLOYEE, BACK } from \"../../headings\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport {\r\n  ADD_EMPLOYEE_TEXT_PART1,\r\n  ADD_EMPLOYEE_TEXT_PART2,\r\n  ADD_EMPLOYEE_TEXT_PART3,\r\n  ADD_EMPLOYEE_TEXT_PART4,\r\n} from \"../../messages\";\r\n\r\nconst AddEmployee = (props) => {\r\n  const history = useHistory();\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/manageemployees\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{ADD_EMPLOYEE}</h1>\r\n                  <div className=\"d-block w-100 pl-3 pl-lg-0 pt-1\">\r\n                    {ADD_EMPLOYEE_TEXT_PART1}\r\n                  </div>\r\n                </Row>\r\n                <div className=\"mid-content mt-0 mt-md-4 no-bg px-3 px-md-0\">\r\n                  <Row>\r\n                    <Col span={24} className=\"mt-5\">\r\n                      <Row\r\n                        className=\"d-flex justify-content-center\"\r\n                        gutter={{ xs: 8, sm: 32, md: 32, lg: 100 }}\r\n                      >\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div\r\n                            className={`d-flex flex-column ${styles.box_bordered}`}\r\n                          >\r\n                            <span\r\n                              className={`icon-integrate ${styles.icon}`}\r\n                            ></span>\r\n                            <div className=\"font-weight-bold text-center\">\r\n                              {ADD_EMPLOYEE_TEXT_PART2}\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <Link to=\"/orgcc/importfile\">\r\n                            <div\r\n                              className={`d-flex flex-column ${styles.box_bordered}`}\r\n                            >\r\n                              <span\r\n                                className={`icon-csv ${styles.icon}`}\r\n                              ></span>\r\n                              <div className=\"font-weight-bold text-center\">\r\n                                {ADD_EMPLOYEE_TEXT_PART3}\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <Link to=\"/orgcc/createmanually\">\r\n                            <div\r\n                              className={`d-flex flex-column ${styles.box_bordered}`}\r\n                            >\r\n                              <span\r\n                                className={`icon-add-user ${styles.icon}`}\r\n                              ></span>\r\n                              <div className=\"font-weight-bold text-center\">\r\n                                {ADD_EMPLOYEE_TEXT_PART4}\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button type=\"primary\" onClick={onCancel}>\r\n                    {BACK}\r\n                  </Button>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Upload, message } from \"antd\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport { DROP_FILES_TO_UPLOAD } from \"../../messages\";\r\nconst { Dragger } = Upload;\r\n\r\nconst UploadFiles = (props) => {\r\n  return (  \r\n    <Dragger\r\n      accept=\".csv\"\r\n      name=\"file\"\r\n      fileList={props.file}\r\n      onChange={(value) => props.onChange(value)}\r\n    >\r\n      <p className=\"ant-upload-drag-icon\">\r\n        <span className=\"icon icon-upload\" />\r\n      </p>\r\n      <p className=\"ant-upload-text\">{DROP_FILES_TO_UPLOAD}</p>\r\n    </Dragger>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Breadcrumb, Button, Alert, Spin } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport UploadFiles from \"./UploadFiles\";\r\nimport { ADD_EMPLOYEE, CANCEL, UPLOAD } from \"../../headings\";\r\nimport { IMPORT_CSV, DOWNLOAD_SAMPLE_FILE } from \"../../messages\";\r\nimport { UPLOAD_CSV_FILE } from \"../../errors\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst ImportFiles = () => {\r\n  const [error, showError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [uploadMessage, SetUploadMessage] = useState(\"\");\r\n  const [uploaderror, Setuploaderror] = useState(\"\");\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/addemployee\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    let fileList = e.fileList.slice(-1);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setFile(fileList);\r\n  };\r\n\r\n  const onUpload = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": `multipart/form-data`,\r\n      },\r\n    };\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file[0].originFileObj);\r\n      showError(false);\r\n      setLoader(true);\r\n      axios\r\n        .post(BASE_URL + \"uploadCsv/\", formData, options)\r\n        .then(() => {\r\n          window.location = \"/orgcc/manageemployees\";\r\n        })\r\n        .catch((error) => {\r\n          setLoader(false);\r\n          if (error.message.includes(\"400\")) {\r\n            Setuploaderror(true);\r\n            SetUploadMessage(error.response.data);\r\n          }\r\n        });\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/addemployee\">\r\n                      <Breadcrumb.Item>{ADD_EMPLOYEE}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{IMPORT_CSV}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{IMPORT_CSV} </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    {error && (\r\n                      <Alert\r\n                        message={UPLOAD_CSV_FILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                    {uploaderror && (\r\n                      <Alert\r\n                        message={uploadMessage}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                    <Row className=\"d-flex justify-content-center align-items-center\">\r\n                      <Col span={20} className=\"mt-3 dragdrop\">\r\n                        <UploadFiles onChange={onChange} file={file} />\r\n                      </Col>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"justify-content-center d-flex mt-5\"\r\n                      >\r\n                        <Button\r\n                          type=\"link\"\r\n                          href=\"https://amstagingresources.s3-us-west-1.amazonaws.com/upload-data/Sample_Employees.csv\"\r\n                          className=\"link pl-0\"\r\n                        >\r\n                          <span className=\"icon icon-download-icon\" />\r\n                          {DOWNLOAD_SAMPLE_FILE}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"mt-3 btn-row\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"mr-4 mb-4\"\r\n                        onClick={onUpload}\r\n                      >\r\n                        {UPLOAD}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        className=\"md\"\r\n                        onClick={onCancel}\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Spin>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImportFiles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport \"../form/form.scss\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ADD_EMPLOYEE, SAVE, CANCEL } from \"../../headings\";\r\nimport { ADD_EMPLOYEE_TEXT_PART4 } from \"../../messages\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  SELECT_USER_TYPE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  EMAIL,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  DATE,\r\n  SELECT_ROLE,\r\n} from \"../../labels\";\r\nimport {\r\n  MAKE_SUPER_USER,\r\n  MAKE_ORG_USER,\r\n  MAKE_IDB_USER,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\nconst { RangePicker } = DatePicker;\r\nconst CreateManually = () => {\r\n  const [userDetails, setUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status: \"\",\r\n    email: \"\",\r\n    date: \"\",\r\n    mobile: \"\",\r\n    empId: \"\",\r\n    department: \"\",\r\n    role: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [error, showError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n\r\n  const handleUserOnChange = (e) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleUserOnSelect = (value, name) => {\r\n    setUserDetails({ ...userDetails, [name]: value });\r\n  };\r\n\r\n  const handleUserDatePickerChange = (date, name) => {\r\n    setUserDetails({ ...userDetails, [name]: date });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (userDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (\r\n      userDetails.firstName &&\r\n      userDetails.lastName &&\r\n      userDetails.email &&\r\n      userDetails.mobile &&\r\n      userDetails.status &&\r\n      userDetails.role &&\r\n      userDetails.date\r\n    ) {\r\n      const data = {\r\n        first_name: userDetails.firstName,\r\n        last_name: userDetails.lastName,\r\n        email: userDetails.email,\r\n        mobile_number: \"+\" + userDetails.mobile,\r\n        is_org_cc_user: userDetails.role === \"2\" ? 1 : 0,\r\n        is_idb_user: userDetails.role === \"3\" ? 1 : 0,\r\n        is_super_user: userDetails.role === \"1\" ? 1 : 0,\r\n        start_date: userDetails.date[0]\r\n          ? moment(userDetails.date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: userDetails.date[1]\r\n          ? moment(userDetails.date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: parseInt(userDetails.status),\r\n      };\r\n      showError(false);\r\n      setLoader(true);\r\n      axios.post(BASE_URL + \"createUser/\", data, options).then(() => {\r\n        window.location = \"/orgcc/manageemployees\";\r\n      });\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/addemployee\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/addemployee\">\r\n                      <Breadcrumb.Item>{ADD_EMPLOYEE}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{ADD_EMPLOYEE_TEXT_PART4}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{ADD_EMPLOYEE_TEXT_PART4}</h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <Form className=\"input-md floating-label w-100\" name=\"\">\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message={REQUIRED_MESSAGE}\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={FIRST_NAME}\r\n                                value={userDetails.firstName}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"firstName\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"firstName\"\r\n                                    htmlFor=\"firstName\"\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={LAST_NAME}\r\n                                value={userDetails.lastName}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"lastName\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"lastName\"\r\n                                    htmlFor=\"lastName\"\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={EMAIL}\r\n                                value={userDetails.email}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"email\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    type=\"email\"\r\n                                    className=\"input-control\"\r\n                                    id=\"email\"\r\n                                    htmlFor=\"email\"\r\n                                    value={userDetails.email}\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    onBlur={(e) => validateEmailAddress(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {emailValidationError && (\r\n                                    <Alert\r\n                                      message={VALID_EMAIL}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col\r\n                              span={24}\r\n                              md={8}\r\n                              className=\"gutter-row phone-field\"\r\n                            >\r\n                              <FloatLabel\r\n                                label={MOBILE}\r\n                                value={userDetails.mobile}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"mobile\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <PhoneInput\r\n                                    country=\"us\"\r\n                                    id=\"mobile\"\r\n                                    htmlFor=\"mobile\"\r\n                                    value={userDetails.mobile}\r\n                                    onChange={handleMobile}\r\n                                    onBlur={validateMobile}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {mobileValidationError && (\r\n                                    <Alert\r\n                                      message={VALID_MOBILE}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={userDetails.status}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"status\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_STATUS,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Select\r\n                                    className=\"input-control w-100\"\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleUserOnSelect(value, \"status\")\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date\">\r\n                                <Form.Item\r\n                                  className=\"input-control datepicker-wrapper required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_DATE,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date\"\r\n                                    value={userDetails.date}\r\n                                    onChange={(date) =>\r\n                                      handleUserDatePickerChange(date, \"date\")\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={SELECT_ROLE}\r\n                                value={userDetails.role}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"role\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_USER_TYPE,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Select\r\n                                    className=\"input-control w-100\"\r\n                                    htmlFor=\"role\"\r\n                                    onSelect={(value) =>\r\n                                      handleUserOnSelect(value, \"role\")\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{MAKE_SUPER_USER}</Option>\r\n                                    <Option value=\"2\">{MAKE_ORG_USER}</Option>\r\n                                    <Option value=\"3\">{MAKE_IDB_USER}</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F1\">\r\n                                <Form.Item name=\"f1\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f1\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F2\">\r\n                                <Form.Item name=\"f2\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f3\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F3\">\r\n                                <Form.Item name=\"f3\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f3\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F4\">\r\n                                <Form.Item name=\"f4\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f4\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F5\">\r\n                                <Form.Item name=\"f5\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f5\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"mr-4\"\r\n                            onClick={onSubmit}\r\n                          >\r\n                            {SAVE}\r\n                          </Button>\r\n                          <Button type=\"secondary\" onClick={onCancel}>\r\n                            {CANCEL}\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Spin>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateManually;\r\n","import React from \"react\";\r\nimport { Upload, Button, Modal } from \"antd\";\r\nimport { CLOSE_TEXT_MODAL, DOCUMENT_IMAGE } from \"../../headings\";\r\n\r\nconst UploadImage = ({\r\n  file,\r\n  handleStepOneUpload,\r\n  handleBeforeUpload,\r\n  handleOnRemove,\r\n  handlePollImagePreview,\r\n  handleCancel,\r\n  poll,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Upload\r\n        listType=\"picture\"\r\n        fileList={file}\r\n        onChange={(value) => handleStepOneUpload(value, \"pollDocument\")}\r\n        beforeUpload={(value) => handleBeforeUpload(value, \"pollDocument\")}\r\n        onRemove={(value) => handleOnRemove(value, \"pollImageValidation\")}\r\n        onPreview={(value) => handlePollImagePreview(value)}\r\n        className=\"upload-list-inline c-upload\"\r\n        accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n      >\r\n        <Button type=\"link\" className=\"link pl-0\">\r\n          <span className=\"icon icon-upload pr-2\"></span>\r\n          {DOCUMENT_IMAGE}\r\n        </Button>\r\n      </Upload>\r\n      <Modal\r\n        className=\"modal-openline\"\r\n        visible={poll.previewVisible}\r\n        title={poll.previewTitle}\r\n        centered\r\n        onOk={(value) => handleCancel(value)}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{ style: { display: \"none\" } }}\r\n        okText={CLOSE_TEXT_MODAL}\r\n      >\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={poll.previewImage} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nimport { Tag, Input, Tooltip, Col, Button } from \"antd\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport { ADD_OPTION } from \"../../headings\";\r\n\r\nclass MultiChoice extends Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: \"\",\r\n    editInputIndex: -1,\r\n    editInputValue: \"\",\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter((tag) => tag !== removedTag);\r\n    this.props.setSingleChoiceResponse(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const tagsOption = this.props.pollResponse;\r\n    this.setState({ tags: tagsOption });\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: \"\",\r\n    });\r\n    this.props.setSingleChoiceResponse(tags);\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tags,\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className={`${styles.edit_tag}`}\r\n              key={tag}\r\n              closable={!this.props.disabled}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={(e) => {\r\n                  // if (index ) {\r\n                  this.setState(\r\n                    { editInputIndex: index, editInputValue: tag },\r\n                    () => {\r\n                      this.editInput.focus();\r\n                    }\r\n                  );\r\n                  e.preventDefault();\r\n                  // }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        <Col span={12} className=\"mb-4\">\r\n          <Tag onClick={this.showInput} className={`${styles.add_tag}`}>\r\n            <Button\r\n              type=\"link\"\r\n              className=\"link pl-0\"\r\n              onClick={this.showModal}\r\n              disabled={this.props.disabled}\r\n            >\r\n              <span className=\"icon icon-add-filled\" />\r\n              {ADD_OPTION}\r\n            </Button>\r\n          </Tag>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiChoice;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { CANCEL, PUBLISH_POLL, PUBLISH, SCHEDULE } from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport {\r\n  SELECT_END_DATE,\r\n  SELECT_END_TIME,\r\n  SELECT_START_DATE,\r\n  SELECT_START_TIME,\r\n} from \"../../labels\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.onPublish();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return current && current < moment(this.props.pollData.pollStartDate);\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ startTimeError: true });\r\n    } else {\r\n      this.setState({ startTimeError: false });\r\n      this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollStartDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.startTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label={SELECT_START_TIME}\r\n                        value={this.props.pollData.pollStartTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollEndDate}\r\n                    disabledDate={this.disabledEndDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.props.pollData.pollEndTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import moment from 'moment-timezone';\r\n//#region Formats\r\n\r\nconst formatAsYYYYMMDDHHmmss = date => moment(date, \"MM/DD/YYYY\").format('YYYY-MM-DD[T]HH:mm:ss');\r\nconst formatAsHHmmss = date => moment(date).format('HH:mm:ss');\r\nconst formatAsMMMDDYYYY = date => moment(date).format('MM-DD-YYYY');\r\nconst formatAsHHmm = date => moment(date).format('HH:mm');\r\nconst formatAsYYYYMMDD = date => moment(date).format('YYYY-MM-DD');\r\nconst formatAsDDMMYYYY = date => moment(date).format('DD-MM-YYYY');\r\n\r\n\r\nconst format = date => moment(date).format();\r\nexport default{\r\n    formatAsYYYYMMDDHHmmss,\r\n    formatAsHHmmss,\r\n    formatAsMMMDDYYYY,\r\n    formatAsHHmm,\r\n    formatAsYYYYMMDD,\r\n    formatAsDDMMYYYY,\r\n    format\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Input,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DateTimeModal from \"../modal/DateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport { BACK, PREVIEW_POLL, POLLS } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n}\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst PreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  isImage,\r\n  data,\r\n  attachmentName,\r\n}) => {\r\n  const [schedulePoll, setSchedulePoll] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const openDocument = (e) => {};\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    setLoader(true);\r\n    const optionsData = [];\r\n    let data = {};\r\n    poll.pollResponse.map((value) => {\r\n      optionsData.push({ option_text: value });\r\n    });\r\n    if (isImage) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          image:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          image_name: attachmentName,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          document:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          document_name: attachmentName,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    }\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"poll/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{PREVIEW_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    <Col\r\n                      span={24}\r\n                      className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                    >\r\n                      <h6>\r\n                        {poll.pollName}\r\n                        <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                          <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                        </Tooltip>\r\n                      </h6>\r\n                    </Col>\r\n\r\n                    <div className=\"mid-content\">\r\n                      <Row>\r\n                        <Col span={24}>\r\n                          <p className=\"font-weight-md6\">{poll.pollQuestion}</p>\r\n                          <Row className=\"preview-que\" disabled={true}>\r\n                            <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                              {poll.pollQuestionType === \"1\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Radio>{value}</Radio>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"2\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Checkbox>{value}</Checkbox>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"3\" ? (\r\n                                  poll.pollRatingType === \"1\" ? (\r\n                                    <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                  ):\r\n                                  poll.pollRatingType === \"2\" ? (<img src={Smiley} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"3\" ? (<img src={Thermometer} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"4\" ? (<img src={Thumb} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"5\" ? (<img src={Steps} alt=\"send message\" />):\r\n                                  (null)\r\n                              ) : null}\r\n                            </div>\r\n                          </Row>\r\n                          <Row className=\"mt-2\">\r\n                            <div class=\"ant-upload-list-item\">\r\n                              <div class=\"ant-upload-list-item-info\">\r\n                                <span class=\"ant-upload-span\">\r\n                                  <div class=\"ant-upload-text-icon\">\r\n                                    <PaperClipOutlined />\r\n                                  </div>\r\n                                  <span\r\n                                    class=\"ant-upload-list-item-name\"\r\n                                    title=\"add-user-doc\"\r\n                                  >\r\n                                    {poll.pollDocument &&\r\n                                    poll.pollDocument[0] ? (\r\n                                      <a\r\n                                        href={poll.pollDocument[0].base64}\r\n                                        download={\r\n                                          poll.pollDocument[0].originFileObj\r\n                                            .name\r\n                                        }\r\n                                      >\r\n                                        {\r\n                                          poll.pollDocument[0].originFileObj\r\n                                            .name\r\n                                        }\r\n                                      </a>\r\n                                    ) : null}\r\n                                  </span>\r\n                                  <span class=\"ant-upload-list-item-card-actions\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"ant-btn\"\r\n                                    ></button>\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 px-3\">\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        type=\"secondary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"mr-4\"\r\n                        onClick={onBackCreatePoll}\r\n                      >\r\n                        {BACK}\r\n                      </Button>\r\n                      <DateTimeModal\r\n                        pollData={poll}\r\n                        handlePollStartDatePickerChange={\r\n                          handlePollStartDatePickerChange\r\n                        }\r\n                        handlePollEndDatePickerChange={\r\n                          handlePollEndDatePickerChange\r\n                        }\r\n                        handlePollStartTimePickerChange={\r\n                          handlePollStartTimePickerChange\r\n                        }\r\n                        handlePollEndTimePickerChange={\r\n                          handlePollEndTimePickerChange\r\n                        }\r\n                        onPublish={onPublish}\r\n                      />\r\n                    </div>\r\n                  </Spin>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewPoll;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Breadcrumb,\r\n  Alert,\r\n  message,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport PreviewPoll from \"./PreviewPoll\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\n\r\n//import Star from \"../../assets/images/star.svg\"\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  CANCEL,\r\n  CREATE_POLL,\r\n  POLLS,\r\n  POLL_TITLE,\r\n  PREVIEW,\r\n  UPLOAD,\r\n} from \"../../headings\";\r\nimport {\r\n  POLL_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STAR_CHART_TYPE,\r\n} from \"../../errors\";\r\nimport {\r\n  BAR_CHART,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n} from \"../../values\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  emptyIcon:<i class=\"far fa-smile\"></i>,\r\n  fullIcon : <i class=\"fa fa-smile\"></i>,\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst CreatePoll = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    attachmentName: \"\",\r\n    pollStartTime: new Date(),\r\n    pollEndTime: new Date(),\r\n    pollResponse: [],\r\n    pollImageValidation: true,\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    pollRatingType:\"\"\r\n  });\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if(poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        }else{\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      }else{\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      } \r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (value.file.status === \"removed\") {\r\n      showuploadError(true);\r\n    }\r\n    let fileList = value.fileList.slice(-1);\r\n    checkDoucmentType(value.file.type);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setAttachmentName(value.file.name);\r\n    setPoll({ ...poll, [name]: fileList });\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handlePollImagePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPoll({\r\n      ...poll,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setPoll({ ...poll, pollImageValidation: true });\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    let xlsxfileExt = file.name.includes(\".xls\");\r\n    let pptxfileExt = file.name.includes(\".pptx\");\r\n    let docfileExt = file.name.includes(\".doc\");\r\n    let csvfileExt = file.name.includes(\".csv\");\r\n\r\n    const isValidDoc =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\" ||\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    if (!isValidDoc) {\r\n      showuploadError(false);\r\n      message.error(`${file.name} is not a supported format file type.`);\r\n    } else {\r\n      showuploadError(true);\r\n    }\r\n    const isImage =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\";\r\n    const isDocument =\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    const isLt10M = file.size / 1024 / 1024 < 10;\r\n    if (isImage) {\r\n      if (!isLt5M && isImage) {\r\n        showuploadError(false);\r\n        message.error(\"Image must smaller than 5MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n\r\n    if (isDocument) {\r\n      if (!isLt10M && isDocument) {\r\n        showuploadError(false);\r\n        message.error(\"Document must smaller than 10MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n    return (isValidDoc && isLt5M) || isLt10M;\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setpollError(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!previewPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{CREATE_POLL}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                          form={form}\r\n                        >\r\n                          {error && (\r\n                            <Form.Item>\r\n                              <Alert\r\n                                message={REQUIRED_MESSAGE}\r\n                                type=\"error\"\r\n                                showIcon\r\n                              ></Alert>\r\n                            </Form.Item>\r\n                          )}\r\n                          <Col span={24}>\r\n                            <Row>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={POLL_TITLE}\r\n                                  value={poll.pollName}\r\n                                >\r\n                                  <TextArea\r\n                                    showCount\r\n                                    maxLength={50}\r\n                                    htmlFor=\"polltitle\"\r\n                                    value={poll.pollName}\r\n                                    id=\"pollName\"\r\n                                    onChange={(e) => onCreateChange(e)}\r\n                                    onBlur={(e) => isPollNameDuplicate(e)}\r\n                                    autoComplete=\"off\"\r\n                                    className={`required ${styles.sm_textarea}`}\r\n                                  />\r\n\r\n                                  {pollError === \"status: false\" &&\r\n                                    poll.pollName\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    poll.pollName.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {pollError == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={POLL_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={DESCRIPTION}\r\n                                  value={poll.pollHelpText}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollHelpText\"\r\n                                    id=\"pollHelpText\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"helptext\"\r\n                                      id=\"pollHelpText\"\r\n                                      name=\"pollHelpText\"\r\n                                      value={poll.pollHelpText}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row mt-3\">\r\n                                <h6>{UPLOAD}</h6>\r\n                                <Form.Item\r\n                                  name=\"upload\"\r\n                                  className=\"upload-list\"\r\n                                >\r\n                                  <UploadImage\r\n                                    file={poll.pollDocument}\r\n                                    handleStepOneUpload={handleStepOneUpload}\r\n                                    handleBeforeUpload={handleBeforeUpload}\r\n                                    handleOnRemove={handleOnRemove}\r\n                                    handlePollImagePreview={\r\n                                      handlePollImagePreview\r\n                                    }\r\n                                    handleCancel={handleCancel}\r\n                                    poll={poll}\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                          <Col span={24} className=\"gutter-row\">\r\n                            <Row>\r\n                              <Col\r\n                                span={24}\r\n                                md={8}\r\n                                lg={8}\r\n                                xl={6}\r\n                                className=\"mb-3 t-2 mb-y-0\"\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"showresult\"\r\n                                  label={SHOW_RESULTS_POLL}\r\n                                  className=\"mb-0\"\r\n                                >\r\n                                  <Switch\r\n                                    id=\"showResult\"\r\n                                    checked={poll.showResult}\r\n                                    onChange={(checked, e) =>\r\n                                      onChange(checked, e)\r\n                                    }\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                              {poll.showResult ? (\r\n                                <Col span={24} md={10} lg={8}>\r\n                                  <FloatLabel\r\n                                    label={DISPLAY_RESULTS_AS}\r\n                                    value={poll.pollChartType}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required mb-0\"\r\n                                      name=\"result\"\r\n                                    >\r\n                                      <>\r\n                                        <Select\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"result\"\r\n                                          className=\"required\"\r\n                                          value={poll.pollChartType}\r\n                                          onSelect={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollChartType\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <Select.Option value=\"1\">\r\n                                            {PIE_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"3\">\r\n                                            {BAR_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"4\">\r\n                                            {STAR_FORMAT}\r\n                                          </Select.Option>\r\n                                        </Select>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                  {chartError && (\r\n                                    <Form.Item>\r\n                                      <Alert\r\n                                        message={STAR_CHART_TYPE}\r\n                                        type=\"error\"\r\n                                        showIcon\r\n                                      ></Alert>\r\n                                    </Form.Item>\r\n                                  )}\r\n                                </Col>\r\n                              ) : (\r\n                                <Col></Col>\r\n                              )}\r\n                            </Row>\r\n                          </Col>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"mid-content mt-4\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                        >\r\n                          <Col span={24}>\r\n                            <Row className=\"d-block\">\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                              <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                              <Col\r\n                                span={24}\r\n                                md={8}\r\n                                lg={8}\r\n                                className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                              >\r\n                                <FloatLabel\r\n                                  label={QUESTION_TYPE}\r\n                                  value={poll.pollQuestionType}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required mb-0\"\r\n                                    name=\"questiontype\"\r\n                                  >\r\n                                    <>\r\n                                      <Select\r\n                                        className=\"\"\r\n                                        htmlFor=\"questiontype\"\r\n                                        className=\"required\"\r\n                                        id=\"pollQuestionType\"\r\n                                        value={poll.pollQuestionType}\r\n                                        onSelect={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollQuestionType\"\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <Select.Option\r\n                                          value=\"1\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType === \"4\"\r\n                                          }\r\n                                        >\r\n                                          {SELECT_SINGLE}\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"2\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType === \"4\"\r\n                                          }\r\n                                        >\r\n                                          {SELECT_MULTIPLE}\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"3\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType !== \"4\"\r\n                                          }\r\n                                        >\r\n                                          {STAR_RATING}\r\n                                        </Select.Option>\r\n                                      </Select>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                                </Col>\r\n                                \r\n                                {poll.pollQuestionType === \"3\" ? (\r\n                                  <Col\r\n                                  span={24} md={10} lg={8}\r\n                                  className=\"gutter-row\"\r\n                                  >\r\n                                <FloatLabel\r\n                                  label=\"Rating Type\"\r\n                                  value={poll.pollRatingType}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required mb-0\"\r\n                                    name=\"ratingtype\"\r\n                                  >\r\n                                    <>\r\n                                      <Select\r\n                                        className=\"\"\r\n                                        htmlFor=\"ratingtype\"\r\n                                        className=\"required\"\r\n                                        id=\"pollRatingType\"\r\n                                        value={poll.pollRatingType}\r\n                                        onSelect={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollRatingType\"\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <Select.Option\r\n                                          value=\"1\"\r\n                                        >\r\n                                          Stars\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"2\" \r\n                                        >\r\n                                          Smiley \r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"3\"\r\n                                        >\r\n                                          Thermometer\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"4\"\r\n                                          >\r\n                                          ThumbsUp\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"5\"\r\n                                        >\r\n                                          Ladder\r\n                                        </Select.Option>\r\n                                      </Select>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                                </Col>\r\n                                ): (null)}\r\n                               \r\n                                </Row>\r\n                             </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={QUESTION}\r\n                                  value={poll.pollQuestion}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollQuestion\"\r\n                                    id=\"pollQuestion\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"pollQuestion\"\r\n                                      id=\"pollQuestion\"\r\n                                      name=\"pollQuestion\"\r\n                                      defaultValue={poll.pollQuestion}\r\n                                      value={poll.pollQuestion}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={12}  className=\"mt-4\">\r\n                                {poll.pollQuestionType === \"3\" && poll.pollRatingType ? (\r\n                                  poll.pollRatingType === \"1\" ? (\r\n                                    <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                  ):\r\n                                  poll.pollRatingType === \"2\" ? (<img className=\"font-size\" src={Smiley} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"3\" ? (<img className=\"font-size\" src={Thermometer} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"4\" ? (<img className=\"font-size\" src={Thumb} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"5\" ? (<img className=\"font-size\" src={Steps} alt=\"send message\" />):\r\n                                  (null)\r\n                                  // <ReactStars\r\n                                  //   {...starsRating}\r\n                                  //   value={poll.pollRatingResponse}\r\n                                  //   name=\"pollRatingResponse\"\r\n                                  //   emptyIcon={ <img src={Thermometer} alt=\"send message\" />}\r\n                                  //   fullIcon ={ <img src={Thermometer} alt=\"send message\" />}\r\n                                  //   onChange={(value) =>\r\n                                  //     handlePollOnSelect(\r\n                                  //       value,\r\n                                  //       \"pollRatingResponse\"\r\n                                  //     )\r\n                                  //   }\r\n                                  //   classNames=\"mt-3\"\r\n                                  // />\r\n                                  \r\n                                ) : poll.pollQuestionType === \"1\" ? (\r\n                                  <div>\r\n                                    <MultiChoice\r\n                                      setSingleChoiceResponse={\r\n                                        setSingleChoiceResponse\r\n                                      }\r\n                                      pollResponse={poll.pollResponse}\r\n                                    />\r\n                                  </div>\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  <MultiChoice\r\n                                    pollResponse={poll.pollResponse}\r\n                                    setSingleChoiceResponse={\r\n                                      setSingleChoiceResponse\r\n                                    }\r\n                                  />\r\n                                ) : null}\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              className=\"md mr-4\"\r\n                              onClick={onPreview}\r\n                            >\r\n                              {PREVIEW}\r\n                            </Button>\r\n                            <Button\r\n                              type=\"secondary\"\r\n                              type=\"secondary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onCancel}\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                          </div>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <PreviewPoll\r\n          poll={poll}\r\n          setPollsDate={setPollsDate}\r\n          backtoEdit={backtoEdit}\r\n          isImage={isImage}\r\n          attachmentName={attachmentName}\r\n          data={props}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Form, Col, DatePicker } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport {\r\n  CANCEL,\r\n  EXTEND_END_DATE,\r\n  EXTEND_TEXT_MODAL,\r\n  POLL,\r\n} from \"../../headings\";\r\nimport {\r\n  EXTEND_END_DATE_TEXT_PART1,\r\n  EXTEND_END_DATE_TEXT_PART2,\r\n} from \"../../messages\";\r\nimport { SELECT_END_DATE, SELECT_END_TIME } from \"../../labels\";\r\nimport { SELECT_DATE } from \"../../errors\";\r\n\r\nlet startDate = \"\";\r\n\r\nclass ExtendEndDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      pollEndDate: \"\",\r\n      pollEndTime: new Date(),\r\n    };\r\n    this.range = this.range.bind(this);\r\n    this.disabledDateTime = this.disabledDateTime.bind(this);\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   console.log(\r\n  //    '***********'\r\n  //   );\r\n  //   // const s_date = moment(\r\n  //   //   this.props.pollsData.start_date + \" \" + this.props.pollsData.start_time\r\n  //   // );\r\n  //   // const sDate = moment(s_date)\r\n  //   //   .utcOffset(\"+05:30\")\r\n  //   //   .format(\"YYYY/MM/DD HH:mm:ss\");\r\n  //   // const eDate = moment(\r\n  //   //   this.props.pollsData.end_date + \" \" + this.props.pollsData.end_time\r\n  //   // )\r\n  //   //   .utcOffset(\"+05:30\")\r\n  //   //   .format(\"YYYY/MM/DD HH:mm:ss\");\r\n  //   // this.setState({ pollStartDate: moment(this.props.pollsData.start_date),\r\n  //   //   pollEndDate: this.props.pollsData.end_date,\r\n  //   //   pollStartTime: this.props.pollsData.start_time,\r\n  //   //   pollEndTime: this.props.pollsData.end_time,\r\n  //   //  });\r\n  // }\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    let obj = {\r\n      poll_id: this.props.pollsData.poll_id,\r\n      pollName: this.props.pollsData.title,\r\n    };\r\n    this.props.extendPollDate(obj, this.state);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    window.location = \"/orgcc/pollsdirectory\";\r\n  };\r\n\r\n  onChangeEndDate(date) {\r\n    this.setState({\r\n      pollEndDate: date,\r\n    });\r\n  }\r\n\r\n  onChangeEndTime(time) {\r\n    this.setState({\r\n      pollEndTime: time,\r\n    });\r\n  }\r\n\r\n  disabledDate(current) {\r\n    return current && current < moment().startOf(\"day\");\r\n  }\r\n\r\n  range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  disabledDateTime(current, type) {\r\n    if (type === \"start\") {\r\n      startDate = current;\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    } else if (type === \"end\") {\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      } else if (moment(current).isSame(moment(startDate))) {\r\n        var now = moment(startDate);\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{EXTEND_END_DATE}</a>\r\n        <Modal\r\n          title={EXTEND_END_DATE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={EXTEND_TEXT_MODAL}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md font-weight-md6\">\r\n                {EXTEND_END_DATE_TEXT_PART1}{\" \"}\r\n                <span className=\"pr-1\"> {EXTEND_END_DATE_TEXT_PART2}</span>\r\n                {this.props.pollsData.title} {POLL}\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.state.pollEndDate}\r\n                    disabledDate={this.disabledDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.state.pollEndTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExtendEndDate;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./managePoll.module.scss\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ManagePolls from \"../../assets/images/manage-polls.svg\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport CreatePoll from \"../managePolls/CreatePoll\";\r\nimport { CREATE_POLL, MANAGE_POLLS } from \"../../headings\";\r\nimport { CREATE_NEW_POLL_TEXT } from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\nconst ManagePoll = (props) => {\r\n  const [createPoll, setCreatePoll] = useState(false);\r\n  const ShowCreatePoll = () => {\r\n    setCreatePoll(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!createPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Polls\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_POLLS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={ManagePolls}\r\n                            alt=\"Create Poll\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_POLL_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={ShowCreatePoll}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE_POLL}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <Redirect to=\"/orgcc/createpoll\" />\r\n        // <CreatePoll data={props.data} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { DELETE, NO_TEXT_MODAL, YES_TEXT_MODAL } from \"../../headings\";\r\nimport { DELETE_CONFIRM_OPENLINE } from \"../../messages\";\r\n\r\nclass DeletePollModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deletePoll();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deletePoll() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"poll/\" + this.props.pollId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{DELETE}</a>\r\n        <Modal\r\n          title=\"Delete Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_OPENLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeletePollModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport ExtendEndDate from \"../../components/modal/ExtendEndDate\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  EDIT,\r\n  SHOW_FINAL_RESULT,\r\n  SHOW_INTRIM_RESULT,\r\n  VIEW,\r\n} from \"../../headings\";\r\nimport DeletePollModal from \"../modal/DeletePollModal\";\r\n\r\nconst content = (data, extendPollDate) => (\r\n  <div>\r\n    <ul>\r\n      <Link\r\n        to={{ pathname: `/orgcc/duplicatepoll/${data.poll_id}`, state: data }}\r\n      >\r\n        <li>\r\n          <a href={`/orgcc/duplicatepoll/${data.poll_id}`}>Create Duplicate</a>{\" \"}\r\n        </li>{\" \"}\r\n      </Link>\r\n      {data.poll_id != 1 && data.poll_id != 2 ? (\r\n        <Link to={{ pathname: `/orgcc/editpoll/${data.poll_id}`, state: data }}>\r\n          <li>\r\n            <a href={`/orgcc/editpoll/${data.poll_id}`}>\r\n              {data.status_id === 4 || data.status_id === 1 ? VIEW : EDIT}\r\n            </a>{\" \"}\r\n          </li>\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 4 ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">{SHOW_FINAL_RESULT}</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 1 ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">{SHOW_INTRIM_RESULT}</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n\r\n      {(data.status_id === 1 || data.status_id === 2 || data.status_id === 3) &&\r\n      data.poll_id != 1 &&\r\n      data.poll_id != 2 ? (\r\n        <li>\r\n          <ExtendEndDate extendPollDate={extendPollDate} pollsData={data} />\r\n        </li>\r\n      ) : null}\r\n\r\n      {data.poll_id != 1 &&\r\n      data.poll_id != 2 &&\r\n      (data.status_id === 2 || data.status_id === 3) ? (\r\n        <li>\r\n          <DeletePollModal pollId={data.poll_id} />\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data, this.props.extendPollDate)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Spin,\r\n  notification,\r\n  Select,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined, PaperClipOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport PollPopover from \"../table/PollPopover\";\r\nimport CreatePollPopover from \"../table/CreatePollPopover\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { resolveOnChange } from \"antd/lib/input/Input\";\r\nimport {\r\n  CREATE_POLL,\r\n  MANAGE_POLLS,\r\n  SEARCH,\r\n  SHOW_ALL_POLLS,\r\n} from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART4,\r\n  EXTEND_END_DATE_TEXT_PART3,\r\n} from \"../../messages\";\r\nimport {\r\n  COMPLETED,\r\n  SCHEDULED,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { polls, checked } = this.props;\r\n    let finalPolls = [];\r\n    polls?.forEach((poll) => {\r\n      poll.start_date = moment(poll.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM/DD/YYYY\");\r\n      poll.end_date = moment(poll.start_date).isValid()\r\n        ? moment(poll.end_date).utc().local().format(\"MM/DD/YYYY\")\r\n        : \"\";\r\n    });\r\n    finalPolls = !checked\r\n      ? polls.filter((value) => value.status_id === 1 || value.status_id === 3)\r\n      : polls;\r\n    this.setState({ data: finalPolls });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    let finalPolls = [];\r\n    if (this.props.polls !== nextProps.polls) {\r\n      nextProps.polls?.forEach((poll) => {\r\n        poll.start_date = moment(poll.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n        poll.end_date = moment(poll.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n      });\r\n      finalPolls = !nextProps.checked\r\n        ? nextProps.polls.filter(\r\n            (value) => value.status_id === 1 || value.status_id === 3\r\n          )\r\n        : nextProps.polls;\r\n      this.setState({ data: finalPolls });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  extendPollDate = (value, date) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      end_date: momentUtil.formatAsDDMMYYYY(date.pollEndDate),\r\n      end_time: momentUtil.formatAsHHmmss(date.pollEndTime),\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"extendEndDate/\" + value.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: value.pollName + EXTEND_END_DATE_TEXT_PART3,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      });\r\n  };\r\n\r\n  onSearch = (value) => {\r\n    this.props.setSearchValue(value);\r\n  };\r\n\r\n  handlePollStatusOnSelect = (value) => {\r\n    let newArray = value.map((item) => parseInt(item));\r\n    const data = {\r\n      status_id: newArray,\r\n    };\r\n    this.props.setFilterOptions(data);\r\n  };\r\n\r\n  handleCheck = (e) => {\r\n    let data = {};\r\n    if (e.target.checked) {\r\n      data = {\r\n        status_id: [1, 2, 3, 4],\r\n      };\r\n    } else {\r\n      data = {\r\n        status_id: [1, 3],\r\n      };\r\n    }\r\n    this.props.handleCheck(data);\r\n  };\r\n\r\n  statusClicked = (record, via) => {\r\n    let data = {};\r\n    if (via.length === 0) {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.title +\r\n          STATUS_CHANGED_NOTIFICATION_PART4,\r\n      });\r\n    } else if (via === \"Scheduled\" || via === \"Active\") {\r\n      data = {\r\n        status_id: 2,\r\n      };\r\n    } else if (via === \"inActive\") {\r\n      const startDate = record.start_date;\r\n      const sdate = startDate.split(\"/\")[0];\r\n      const smonth = startDate.split(\"/\")[1];\r\n      const syear = startDate.split(\"/\")[2];\r\n      const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n      const currentDate = new Date();\r\n      if (finalStartDate > currentDate) {\r\n        data = {\r\n          status_id: 3,\r\n        };\r\n      } else if (finalStartDate < currentDate) {\r\n        data = {\r\n          status_id: 1,\r\n        };\r\n      } else if (finalStartDate === currentDate) {\r\n        const startTime = record.start_time;\r\n        const SFullDate = smonth + \"-\" + sdate + \"-\" + syear;\r\n        const startTimeWithDate = new Date(SFullDate + startTime);\r\n        if (startTimeWithDate > new Date()) {\r\n          data = {\r\n            status_id: 3,\r\n          };\r\n        } else if (startTimeWithDate <= new Date()) {\r\n          data = {\r\n            status_id: 1,\r\n          };\r\n        }\r\n      }\r\n    }\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"changePollStatus/\" + record.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description:\r\n            STATUS_CHANGED_NOTIFICATION_PART1 +\r\n            record.title +\r\n            STATUS_CHANGED_NOTIFICATION_PART2,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { polls, loader } = this.props;\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.image || record.document ? <PaperClipOutlined /> : null,\r\n            props: {\r\n              \"data-title\": \"\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name, record) => {\r\n          return {\r\n            children:\r\n              record.poll_id != 2 && record.poll_id != 1 ? (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/orgcc/editpoll/${record.poll_id}`,\r\n                    state: record,\r\n                  }}\r\n                >\r\n                  <li>\r\n                    <a href={`/orgcc/editpoll/${record.poll_id}`}>{name}</a>{\" \"}\r\n                  </li>\r\n                </Link>\r\n              ) : (\r\n                name\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.start_date + \" \" + record.start_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.end_date + \" \" + record.end_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.poll_id != 1 && record.poll_id != 2 ? (\r\n                record.status_id === 2 ? (\r\n                  <div\r\n                    className=\"secondary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"inActive\")}\r\n                  >\r\n                    In active\r\n                  </div>\r\n                ) : record.status_id === 1 ? (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"Active\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    Active\r\n                  </div>\r\n                ) : record.status_id === 3 ? (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"Scheduled\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    Scheduled\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    Completed\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">In active</div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: (\r\n              <PollPopover extendPollDate={this.extendPollDate} data={record} />\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_POLLS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          lg={9}\r\n                          className=\"ml-0 ml-lg-4 mt-2 mt-lg-0\"\r\n                        >\r\n                          <Select\r\n                            mode=\"multiple\"\r\n                            className=\"w-100 w-md-75\"\r\n                            onChange={(value) =>\r\n                              this.handlePollStatusOnSelect(value, \"status\")\r\n                            }\r\n                          >\r\n                            <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                            <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                            <Option value=\"3\">{SCHEDULED}</Option>\r\n                            <Option value=\"4\">{COMPLETED}</Option>\r\n                          </Select>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      {/* <CreatePollPopover polls={polls} /> */}\r\n                      <Link to=\"/orgcc/createpoll\">\r\n                        <Buttons value={CREATE_POLL} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={loader} size=\"large\">\r\n                  <Checkbox onChange={(e) => this.handleCheck(e)}>\r\n                    {SHOW_ALL_POLLS}\r\n                  </Checkbox>\r\n                  <Grid\r\n                    rowKey=\"poll_id\"\r\n                    columns={columns}\r\n                    data={this.state.data}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllPolls;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        <a href=\"/orgcc/createpoll\">Create New</a>{\" \"}\r\n      </li>\r\n\r\n      {/* <li>\r\n        <a href=\"/orgcc/existingpolls\">Choose from existing</a>{\" \"}\r\n      </li> */}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass CreatePollPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <Button type=\"primary\">{CREATE_POLL}</Button>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePollPopover;\r\n","import moment from \"moment\";\r\n\r\nlet getDefaultPoll = [\r\n  {\r\n    title: \"Impact of Microaggressions\",\r\n    help_text: \"Description of what a Harbinger is\",\r\n    start_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    end_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    start_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    created_by: 12,\r\n    created_on: \"2021-02-09T07:39:50.743345Z\",\r\n    document: null,\r\n    document_name: null,\r\n    end_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    image: null,\r\n    image_name: null,\r\n    is_out_of_the_box: false,\r\n    option_text: [],\r\n    poll_id: 1,\r\n    poll_question_rating_type: null,\r\n    poll_question_type: 3,\r\n    poll_result_chart_type: 2,\r\n    question: \"1. The technique for selecting a new point depends upon\",\r\n    show_result_to_users: false,\r\n    status_id: 2,\r\n    update_on: null,\r\n  },\r\n  {\r\n    created_by: 12,\r\n    created_on: \"2021-02-09T07:39:50.743345Z\",\r\n    document: null,\r\n    document_name: null,\r\n    end_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    end_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    help_text: \"Description of what a Harbinger is\",\r\n    image: null,\r\n    image_name: null,\r\n    is_out_of_the_box: false,\r\n    option_text: [],\r\n    poll_id: 2,\r\n    poll_question_rating_type: null,\r\n    poll_question_type: 3,\r\n    poll_result_chart_type: 2,\r\n    question: \"1. The technique for selecting a new point depends upon\",\r\n    show_result_to_users: false,\r\n    start_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    start_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    status_id: 2,\r\n    title: \"Experience of Work From Home (WFH)\",\r\n    update_on: null,\r\n  },\r\n];\r\n\r\nexport const mergePoll = (data) => {\r\n  let pollObject = [];\r\n  pollObject = data;\r\n  for (var i = 0; i < getDefaultPoll.length; i++) {\r\n    pollObject.push(getDefaultPoll[i]);\r\n  }\r\n  return pollObject;\r\n};\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    POLL_SUCCESS,\r\n    POLL_FAIL,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getPollAsync=(filterStatus, search)=>(dispatch)=>{\r\n        return UserService.getPolls(filterStatus,search).then((data)=>{\r\n            dispatch({\r\n                type:POLL_SUCCESS,\r\n                payload:{pollsdata:data.data},\r\n                \r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:POLL_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllPolls from \"./ShowAllPolls\";\r\nimport { mergePoll } from \"../../utils/defaultpoll\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\n\r\nconst PollsContainer = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [filter, setFilter] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getPollAsync(filter, search));\r\n  }, [statusClicked, filter, search]);\r\n\r\n  useEffect(() => {\r\n    if (props.pollsdata.length === 0) {\r\n      setLoader(true);\r\n    } else if (props.pollsdata.length > 0) {\r\n      setLoader(false);\r\n    }\r\n    mergePoll(props.pollsdata);\r\n  }, [props.pollsdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const setSearchValue = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const setFilterOptions = (value) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const handleCheck = (data) => {\r\n    setChecked(!checked);\r\n    setFilter(data);\r\n  };\r\n\r\n  return (\r\n    <ShowAllPolls\r\n      polls={props.pollsdata}\r\n      data={props}\r\n      loader={loader}\r\n      checked={checked}\r\n      setLoader={setLoader}\r\n      statusOnClicked={statusOnClicked}\r\n      setFilterOptions={setFilterOptions}\r\n      setSearchValue={setSearchValue}\r\n      handleCheck={handleCheck}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollsContainer);\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Button, Input, Breadcrumb } from \"antd\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { POLLS, POLL_RESULTS } from \"../../headings\";\r\nimport { POLL_RESULTS_NOT_AVAILABLE } from \"../../messages\";\r\n\r\nconst starsRating = {\r\n  size: 30,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 3,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst PollResponse = (props) => {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{POLL_RESULTS}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3 justify-content-between\">\r\n                  <h1 className=\"mb-0\">{location.state.title}</h1>\r\n                  <Col\r\n                    span={24}\r\n                    md={24}\r\n                    lg={12}\r\n                    xl={15}\r\n                    className=\"d-flex align-items-center justify-content-start justify-content-lg-end px-3 px-lg-0 my-4 my-lg-0\"\r\n                  >\r\n                    {/* <span className=\"pr-3\">Total audience : 2300</span> */}\r\n                    {/* <Button type=\"primary\" className=\"md\">\r\n                      Download\r\n                    </Button> */}\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex align-items-center justify-content-end\"\r\n                  ></Col>\r\n                </Row>\r\n                <div className=\"\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <p className=\"font-weight-md6\">\r\n                        {location.state.question}\r\n                      </p>\r\n                      {/* <span className=\"font-weight-md6 pt-3 d-flex\">\r\n                        1846 Responses\r\n                      </span> */}\r\n\r\n                      <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            {/* <div className=\"c-vector-area\">\r\n                          <img\r\n                           // src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div> */}\r\n                            <h1 className=\"text-center pt-3\">\r\n                              {POLL_RESULTS_NOT_AVAILABLE}\r\n                            </h1>\r\n                            <Row className=\"d-flex justify-content-center\">\r\n                              {/* <Divider className=\"mt-1\" /> */}\r\n                            </Row>\r\n                            <Col\r\n                              span={24}\r\n                              className=\"d-flex align-items-center justify-content-center\"\r\n                            >\r\n                              {/* <Button\r\n                            data-test=\"createHotline\"\r\n                           // onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button> */}\r\n                              {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <Row className=\"preview-que mt-3\">\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center font-weight-md6\"\r\n                        >\r\n                          {/* <span>\r\n                            <ReactStars {...starsRating} />\r\n                          </span> */}\r\n                          {/* <span className=\"pl-5\">30%</span> */}\r\n                        </Col>\r\n\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center font-weight-md6\"\r\n                        >\r\n                          {/* <span>\r\n                            <ReactStars {...starsRating} />\r\n                          </span>\r\n                          <span className=\"pl-5\">20%</span> */}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PollResponse;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\nimport {\r\n  CANCEL,\r\n  PUBLISH,\r\n  RESCHEDULE,\r\n  SCHEDULE,\r\n  PUBLISH_POLL,\r\n} from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport {\r\n  SELECT_START_DATE,\r\n  SELECT_END_DATE,\r\n  SELECT_START_TIME,\r\n  SELECT_END_TIME,\r\n} from \"../../labels\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.props.pollData.pollStartDate ||\r\n      !this.props.pollData.pollEndDate\r\n    ) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ startTimeError: true });\r\n    } else {\r\n      this.setState({ startTimeError: false, startTime: time });\r\n      this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTime: time, endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {this.props.viaEdit ? RESCHEDULE : SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={\r\n            this.props.pollData.status_id === 4\r\n              ? {\r\n                  style: { display: \"none\" },\r\n                }\r\n              : {\r\n                  children: \"Custom OK\",\r\n                }\r\n          }\r\n          cancelButtonProps={\r\n            this.props.pollData.status_id === 4\r\n              ? {\r\n                  className: \"ant-btn-primary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n              : {\r\n                  className: \"ant-btn-secondary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n          }\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.startDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                    disabled={this.props.pollData.status_id === 4}\r\n                  />\r\n                  {this.state.startTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label={SELECT_START_TIME}\r\n                        value={this.state.startTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {this.state.endDate !== \"\" ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <DatePicker\r\n                        defaultValue={this.state.endDate}\r\n                        disabledDate={this.disabledEndDate}\r\n                        onChange={(date) => this.onChangeEndDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"eDate\"\r\n                        className=\"required\"\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <DatePicker\r\n                      defaultValue={this.state.endDate}\r\n                      disabledDate={this.disabledEndDate}\r\n                      onChange={(date) => this.onChangeEndDate(date)}\r\n                      className=\"w-100\"\r\n                      name=\"eDate\"\r\n                      className=\"required\"\r\n                      disabled={this.props.pollData.status_id === 4}\r\n                    />\r\n                  )}\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.state.endTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Button, Tooltip, Radio, Checkbox, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport EditDateTimeModal from \"../modal/EditDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport { BACK, PREVIEW_POLL } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditPreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  editPoll,\r\n  showError,\r\n  error,\r\n  data,\r\n  loader,\r\n  attachmentName,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    editPoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n                  <React.Fragment>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <p className=\"font-weight-md6\">\r\n                          {poll.pollQuestion}\r\n                          </p>\r\n                        <Row className=\"preview-que\" disabled={true}>\r\n                          <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                            {poll.pollQuestionType === \"1\" ? (\r\n                              poll.pollResponse.map((value) => (\r\n                                <Radio>{value}</Radio>\r\n                              ))\r\n                            ) : poll.pollQuestionType === \"2\" ? (\r\n                              poll.pollResponse.map((value) => (\r\n                                <Checkbox>{value}</Checkbox>\r\n                              ))\r\n                            ) : poll.pollQuestionType === \"3\"  ? (\r\n                              poll.pollRatingType === \"1\" ? (\r\n                                  \r\n                                    <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                  ):\r\n                                  poll.pollRatingType === \"2\" ? (<img src={Smiley} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"3\" ? (<img src={Thermometer} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"4\" ? (<img src={Thumb} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"5\" ? (<img src={Steps} alt=\"send message\" />):\r\n                                  (null)\r\n                            ) : null}\r\n                          </div>\r\n                        </Row>\r\n                        <Row className=\"mt-2\">\r\n                          <div class=\"ant-upload-list-item\">\r\n                            <div class=\"ant-upload-list-item-info\">\r\n                              <span class=\"ant-upload-span\">\r\n                                <div class=\"ant-upload-text-icon\">\r\n                                  <PaperClipOutlined />\r\n                                </div>\r\n                                <span\r\n                                  class=\"ant-upload-list-item-name\"\r\n                                  title=\"add-user-doc\"\r\n                                >\r\n                                  {poll.pollDocument ? (\r\n                                    <a\r\n                                      href={poll.pollDocument}\r\n                                      download={poll.pollDocument}\r\n                                    >\r\n                                      \r\n                                          {attachmentName}\r\n                                        </a>\r\n                                      ) : null}\r\n                                    </span>\r\n                                    <span class=\"ant-upload-list-item-card-actions\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"ant-btn\"\r\n                                      ></button>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mt-5 px-3\">\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          type=\"secondary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"mr-4\"\r\n                          onClick={onBackCreatePoll}\r\n                        >\r\n                          {BACK}\r\n                        </Button>\r\n                        <EditDateTimeModal\r\n                          pollData={poll}\r\n                          handlePollStartDatePickerChange={\r\n                            handlePollStartDatePickerChange\r\n                          }\r\n                          handlePollEndDatePickerChange={\r\n                            handlePollEndDatePickerChange\r\n                          }\r\n                          handlePollStartTimePickerChange={\r\n                            handlePollStartTimePickerChange\r\n                          }\r\n                          handlePollEndTimePickerChange={\r\n                            handlePollEndTimePickerChange\r\n                          }\r\n                          onPublish={onPublish}\r\n                          showError={showError}\r\n                          error={error}\r\n                          viaEdit\r\n                        />\r\n                      </div>\r\n                      \r\n                    </Spin>\r\n                  </React.Fragment>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport EditPreviewPoll from \"./EditPreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport {\r\n  VIEW_POLL,\r\n  EDIT_POLL,\r\n  POLL_TITLE,\r\n  UPLOAD,\r\n  DOCUMENT_IMAGE,\r\n  PREVIEW,\r\n  CANCEL,\r\n} from \"../../headings\";\r\nimport { REQUIRED_MESSAGE, STAR_CHART_TYPE } from \"../../errors\";\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  BAR_CHART,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n} from \"../../values\";\r\nimport { EDIT_POLL_NOTIFICATION } from \"../../messages\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst EditPoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: [],\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n      const data = res.data;\r\n      setPoll({\r\n        ...poll,\r\n        pollId: data.poll_id,\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollDocument:\r\n          data.image !== null || data.document !== null\r\n            ? [\r\n                {\r\n                  uid: \"1\",\r\n                  name:\r\n                    data.image_name !== null\r\n                      ? data.image_name\r\n                      : data.document_name !== null\r\n                      ? data.document_name\r\n                      : \"\",\r\n                  status: \"done\",\r\n                  url: data.image ? data.image : data.document,\r\n                },\r\n              ]\r\n            : \"\",\r\n        showResult: data.show_result_to_users,\r\n        pollChartType: data.poll_result_chart_type.toString(),\r\n        pollQuestion: data.question,\r\n        pollQuestionType: data.poll_question_type.toString(),\r\n        pollRatingType: data.poll_question_rating_type\r\n          ? data.poll_question_rating_type.toString()\r\n          : \"\",\r\n        pollRatingResponse: data.poll_question_rating_type,\r\n        pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n        pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n        pollStartTime: data.start_time,\r\n        pollEndTime: data.end_time,\r\n        status_id: data.status_id,\r\n        pollResponse: data.option_text.map((value) => value.option_text),\r\n        pollOptionText: data.option_text,\r\n      });\r\n      setAttachmentName(\r\n        data.image_name !== null\r\n          ? data.image_name\r\n          : data.document_name !== null\r\n          ? data.document_name\r\n          : \"\"\r\n      );\r\n      const isImage =\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpeg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"png\");\r\n      if (isImage) {\r\n        setIsImage(true);\r\n      } else {\r\n        setIsImage(false);\r\n      }\r\n      setLoader(false);\r\n      form.setFieldsValue({\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollQuestion: data.question,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if (poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  function convertImgToBase64(url, callback, outputFormat) {\r\n    var canvas = document.createElement(\"CANVAS\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = new Image();\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.onload = function () {\r\n      canvas.height = img.height;\r\n      canvas.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n      callback.call(this, dataURL);\r\n      // Clean up\r\n      canvas = null;\r\n    };\r\n    img.src = url;\r\n  }\r\n\r\n  const editPoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n    let data = {};\r\n\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollEndDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (\r\n      poll.pollDocument?.length === 0 ||\r\n      poll.pollDocument[0].url?.length === 0\r\n    ) {\r\n      data = {\r\n        update_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n        .then(() => {\r\n          setLoader(false);\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: EDIT_POLL_NOTIFICATION,\r\n            placement,\r\n          });\r\n          window.location = \"/orgcc/pollsdirectory\";\r\n        });\r\n    } else {\r\n      if (poll.pollDocument[0]?.url) {\r\n        convertImgToBase64(poll.pollDocument[0]?.url, function (base64Img) {\r\n          if (isImage) {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                image: base64Img,\r\n                image_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                poll_question_rating_type: poll.pollRatingType\r\n                  ? parseInt(poll.pollRatingType)\r\n                  : \"\",\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n          } else {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                document: base64Img,\r\n                document_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                poll_question_rating_type: poll.pollRatingType\r\n                  ? parseInt(poll.pollRatingType)\r\n                  : \"\",\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n          }\r\n          axios\r\n            .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n            .then(() => {\r\n              setLoader(false);\r\n              const placement = \"bottomLeft\";\r\n              api.info({\r\n                description: \"Poll details have been changed successfully.\",\r\n                placement,\r\n              });\r\n              window.location = \"/orgcc/pollsdirectory\";\r\n            });\r\n        });\r\n      } else {\r\n        if (isImage) {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              image: poll.pollDocument.base64,\r\n              image_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type: poll.pollRatingType\r\n                ? parseInt(poll.pollRatingType)\r\n                : \"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        } else {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              document: poll.pollDocument.base64,\r\n              document_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type: poll.pollRatingType\r\n                ? parseInt(poll.pollRatingType)\r\n                : \"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        }\r\n        axios\r\n          .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n          .then(() => {\r\n            setLoader(false);\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: \"Poll details have been changed successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/orgcc/pollsdirectory\";\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (poll.status_id === 4 || poll.status_id === 1) {\r\n      return null;\r\n    } else {\r\n      if (value.file.status === \"removed\") {\r\n        showuploadError(true);\r\n      }\r\n      let fileList = value.fileList.slice(-1);\r\n      checkDoucmentType(value.file.type);\r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setAttachmentName(value.file.name);\r\n      setPoll({ ...poll, [name]: fileList });\r\n    }\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 4 || poll.status_id === 1) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      convertImgToBase64(file.url, function (base64Img) {\r\n        // await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setPoll({\r\n          ...poll,\r\n          previewImage: base64Img,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setPoll({\r\n        ...poll,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 4 || poll.status_id === 1) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (e.target.value !== location.state.title) {\r\n      axios\r\n        .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setpollError(res.data[0]);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                        initialValues={{\r\n                          remember: true,\r\n                        }}\r\n                        form={form}\r\n                      >\r\n                        <Row className=\"py-3\">\r\n                          <h1 className=\"mb-0\">\r\n                            {poll.status_id === 4 || poll.status_id === 1\r\n                              ? VIEW_POLL\r\n                              : EDIT_POLL}\r\n                          </h1>\r\n                        </Row>\r\n\r\n                        <div className=\"mid-content\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={REQUIRED_MESSAGE}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <Col span={24}>\r\n                                <Row>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={POLL_TITLE}\r\n                                      value={poll.pollName}\r\n                                    >\r\n                                      <TextArea\r\n                                        showCount\r\n                                        maxLength={50}\r\n                                        htmlFor=\"polltitle\"\r\n                                        value={poll.pollName}\r\n                                        id=\"pollName\"\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        onBlur={(e) => isPollNameDuplicate(e)}\r\n                                        autoComplete=\"off\"\r\n                                        disabled={\r\n                                          poll.status_id === 4 ||\r\n                                          poll.status_id === 1\r\n                                        }\r\n                                        className={`required ${styles.sm_textarea}`}\r\n                                      />\r\n\r\n                                      {pollError === \"status: false\" &&\r\n                                        poll.pollName\r\n                                          .replace(/^\\s*/, \"\")\r\n                                          .replace(/\\s*$/, \"\").length > 0 &&\r\n                                        poll.pollName.length > 0 && (\r\n                                          <CheckCircleTwoTone\r\n                                            className=\"successCheck\"\r\n                                            twoToneColor=\"#52c41a\"\r\n                                          />\r\n                                        )}\r\n                                      {pollError == \"status: true\" && (\r\n                                        <Alert\r\n                                          message={POLL_ALREADY_EXISTS}\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      )}\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={DESCRIPTION}\r\n                                      value={poll.pollHelpText}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"pollHelpText\"\r\n                                        id=\"pollHelpText\"\r\n                                        validateStatus=\"success\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"helptext\"\r\n                                          id=\"pollHelpText\"\r\n                                          name=\"pollHelpText\"\r\n                                          value={poll.pollHelpText}\r\n                                          disabled={\r\n                                            poll.status_id === 4 ||\r\n                                            poll.status_id === 1\r\n                                          }\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"gutter-row mt-3\">\r\n                                    {poll.pollDocument?.length === 0 && (\r\n                                      <h6>{UPLOAD}</h6>\r\n                                    )}\r\n                                    <Form.Item\r\n                                      name=\"upload\"\r\n                                      className=\"upload-list\"\r\n                                      valuePropName=\"fileList\"\r\n                                    >\r\n                                      <>\r\n                                        <Upload\r\n                                          listType=\"picture\"\r\n                                          fileList={poll.pollDocument}\r\n                                          onChange={(value) =>\r\n                                            handleStepOneUpload(\r\n                                              value,\r\n                                              \"pollDocument\"\r\n                                            )\r\n                                          }\r\n                                          beforeUpload={(value) =>\r\n                                            handleBeforeUpload(\r\n                                              value,\r\n                                              \"pollDocument\"\r\n                                            )\r\n                                          }\r\n                                          onRemove={() => handleOnRemove()}\r\n                                          onPreview={(value) =>\r\n                                            handleStepOnePreview(value)\r\n                                          }\r\n                                          className=\"upload-list-inline c-upload\"\r\n                                          accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n                                        >\r\n                                          {poll.pollDocument.length === 0 ? (\r\n                                            <Button\r\n                                              type=\"link\"\r\n                                              className=\"link pl-0\"\r\n                                            >\r\n                                              <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                                              {DOCUMENT_IMAGE}\r\n                                            </Button>\r\n                                          ) : null}\r\n                                        </Upload>\r\n                                        <Modal\r\n                                          visible={poll.previewVisible}\r\n                                          title={poll.previewTitle}\r\n                                          centered\r\n                                          onOk={(value) => handleCancel(value)}\r\n                                          okButtonProps={{\r\n                                            children: \"Custom OK\",\r\n                                          }}\r\n                                          cancelButtonProps={{\r\n                                            style: { display: \"none\" },\r\n                                          }}\r\n                                          okText=\"Close\"\r\n                                        >\r\n                                          <img\r\n                                            alt=\"example\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            src={poll.previewImage}\r\n                                          />\r\n                                        </Modal>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row\">\r\n                                <Row className=\"align-items-center d-flex\">\r\n                                  <Col span={24} md={8} lg={8} xl={6}>\r\n                                    <Form.Item\r\n                                      name=\"showresult\"\r\n                                      label={SHOW_RESULTS_POLL}\r\n                                      className=\"mb-0\"\r\n                                    >\r\n                                      <Switch\r\n                                        id=\"showResult\"\r\n                                        checked={poll.showResult}\r\n                                        disabled={\r\n                                          poll.status_id === 4 ||\r\n                                          poll.status_id === 1\r\n                                        }\r\n                                        onChange={(checked, e) =>\r\n                                          onChange(checked, e)\r\n                                        }\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                  {poll.showResult ? (\r\n                                    <Col span={24} lg={6}>\r\n                                      <FloatLabel\r\n                                        label={DISPLAY_RESULTS_AS}\r\n                                        value={poll.pollChartType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"result\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"input-control\"\r\n                                              htmlFor=\"result\"\r\n                                              className=\"required\"\r\n                                              disabled={\r\n                                                poll.status_id === 4 ||\r\n                                                poll.status_id === 1\r\n                                              }\r\n                                              value={\r\n                                                poll.pollChartType === \"2\"\r\n                                                  ? \"\"\r\n                                                  : poll.pollChartType\r\n                                              }\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollChartType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                {PIE_CHART}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                {BAR_CHART}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                {STAR_FORMAT}\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                      {chartError && (\r\n                                        <Form.Item>\r\n                                          <Alert\r\n                                            message={STAR_CHART_TYPE}\r\n                                            type=\"error\"\r\n                                            showIcon\r\n                                          ></Alert>\r\n                                        </Form.Item>\r\n                                      )}\r\n                                    </Col>\r\n                                  ) : (\r\n                                    <Col></Col>\r\n                                  )}\r\n                                </Row>\r\n                              </Col>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mid-content mt-4\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              <Col span={24}>\r\n                                <Row className=\"d-block\">\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <Row\r\n                                      gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                                    >\r\n                                      <Col\r\n                                        span={24}\r\n                                        md={8}\r\n                                        lg={8}\r\n                                        className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                                      >\r\n                                        <FloatLabel\r\n                                          label={QUESTION_TYPE}\r\n                                          value={poll.pollQuestionType}\r\n                                        >\r\n                                          <Form.Item\r\n                                            className=\"required\"\r\n                                            name=\"questiontype\"\r\n                                          >\r\n                                            <>\r\n                                              <Select\r\n                                                className=\"\"\r\n                                                htmlFor=\"questiontype\"\r\n                                                className=\"required\"\r\n                                                id=\"pollQuestionType\"\r\n                                                disabled={\r\n                                                  poll.status_id === 4 ||\r\n                                                  poll.status_id === 1\r\n                                                }\r\n                                                value={poll.pollQuestionType}\r\n                                                onSelect={(value) =>\r\n                                                  handlePollOnSelect(\r\n                                                    value,\r\n                                                    \"pollQuestionType\"\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <Select.Option\r\n                                                  value=\"1\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType === \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {SELECT_SINGLE}\r\n                                                </Select.Option>\r\n                                                <Select.Option\r\n                                                  value=\"2\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType === \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {SELECT_MULTIPLE}\r\n                                                </Select.Option>\r\n                                                <Select.Option\r\n                                                  value=\"3\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType !== \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {STAR_RATING}\r\n                                                </Select.Option>\r\n                                              </Select>\r\n                                            </>\r\n                                          </Form.Item>\r\n                                        </FloatLabel>\r\n                                      </Col>\r\n                                      {poll.pollQuestionType === \"3\" ? (\r\n                                        <Col\r\n                                          span={24}\r\n                                          md={10}\r\n                                          lg={8}\r\n                                          className=\"gutter-row\"\r\n                                        >\r\n                                          <FloatLabel\r\n                                            label=\"Rating Type\"\r\n                                            value={poll.pollRatingType}\r\n                                          >\r\n                                            <Form.Item\r\n                                              className=\"required mb-0\"\r\n                                              name=\"ratingtype\"\r\n                                            >\r\n                                              <>\r\n                                                <Select\r\n                                                  className=\"\"\r\n                                                  htmlFor=\"ratingtype\"\r\n                                                  className=\"required\"\r\n                                                  id=\"pollRatingType\"\r\n                                                  value={poll.pollRatingType}\r\n                                                  onSelect={(value) =>\r\n                                                    handlePollOnSelect(\r\n                                                      value,\r\n                                                      \"pollRatingType\"\r\n                                                    )\r\n                                                  }\r\n                                                >\r\n                                                  <Select.Option value=\"1\">\r\n                                                    Stars\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"2\">\r\n                                                    Smiley\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"3\">\r\n                                                    Thermometer\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"4\">\r\n                                                    ThumbsUp\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"5\">\r\n                                                    Ladder\r\n                                                  </Select.Option>\r\n                                                </Select>\r\n                                              </>\r\n                                            </Form.Item>\r\n                                          </FloatLabel>\r\n                                        </Col>\r\n                                      ) : null}\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={QUESTION}\r\n                                      value={poll.pollQuestion}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control edit-input\"\r\n                                          name=\"pollQuestion\"\r\n                                          id=\"pollQuestion\"\r\n                                          htmlFor=\"pollQuestion\"\r\n                                          className=\"required\"\r\n                                          disabled={\r\n                                            poll.status_id === 4 ||\r\n                                            poll.status_id === 1\r\n                                          }\r\n                                          defaultValue={poll.pollQuestion}\r\n                                          value={poll.pollQuestion}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"mt-4\">\r\n                                    {poll.pollQuestionType === \"3\" &&\r\n                                    poll.pollRatingType ? (\r\n                                      poll.pollRatingType === \"1\" ? (\r\n                                        <ReactStars\r\n                                          {...starsRating}\r\n                                          value={poll.pollRatingResponse}\r\n                                          name=\"pollRatingResponse\"\r\n                                          disabled={poll.status_id === 4}\r\n                                          onChange={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollRatingResponse\"\r\n                                            )\r\n                                          }\r\n                                          classNames=\"mt-3\"\r\n                                        />\r\n                                      ) : poll.pollRatingType === \"2\" ? (\r\n                                        <img src={Smiley} alt=\"send message\" />\r\n                                      ) : poll.pollRatingType === \"3\" ? (\r\n                                        <img\r\n                                          src={Thermometer}\r\n                                          alt=\"send message\"\r\n                                        />\r\n                                      ) : poll.pollRatingType === \"4\" ? (\r\n                                        <img src={Thumb} alt=\"send message\" />\r\n                                      ) : poll.pollRatingType === \"5\" ? (\r\n                                        <img src={Steps} alt=\"send message\" />\r\n                                      ) : null\r\n                                    ) : poll.pollQuestionType === \"1\" ? (\r\n                                      <div>\r\n                                        <MultiChoice\r\n                                          setSingleChoiceResponse={\r\n                                            setSingleChoiceResponse\r\n                                          }\r\n                                          pollResponse={poll.pollResponse}\r\n                                          disabled={\r\n                                            poll.status_id === 4 ||\r\n                                            poll.status_id === 1\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                    ) : poll.pollQuestionType === \"2\" ? (\r\n                                      <MultiChoice\r\n                                        pollResponse={poll.pollResponse}\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                        disabled={\r\n                                          poll.status_id === 4 ||\r\n                                          poll.status_id === 1\r\n                                        }\r\n                                      />\r\n                                    ) : null}\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n\r\n                              <div className=\"mt-5\">\r\n                                <Button\r\n                                  type=\"primary\"\r\n                                  className=\"md mr-4\"\r\n                                  onClick={onPreview}\r\n                                >\r\n                                  {PREVIEW}\r\n                                </Button>\r\n                                <Button\r\n                                  type=\"secondary\"\r\n                                  type=\"secondary\"\r\n                                  htmlType=\"submit\"\r\n                                  onClick={onCancel}\r\n                                >\r\n                                  {CANCEL}\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Form>\r\n                    </Spin>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <EditPreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            editPoll={editPoll}\r\n            showError={showError}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n            error={error}\r\n            loader={loader}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPoll;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Input, Divider, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\nimport { CREATE_POLL, POLLS, OOTB_POLL, SEARCH } from \"../../headings\";\r\nimport { OOTB_TEXT } from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nclass ExistingPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getPollAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { pollsdata } = this.props;\r\n\r\n    if (prevProps.pollsdata !== pollsdata) {\r\n      this.setState(\r\n        {\r\n          data: pollsdata,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <NavLink to=\"/createpoll\">\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{OOTB_POLL}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1>{OOTB_TEXT}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <div className=\"mid-content\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                  {/* <Row>\r\n                    <Col span={24}>\r\n                      <h6 className=\"mb-4\">Poll Name</h6>\r\n                      <Row className=\"my-2\">\r\n                      <Link to=\"/\">Impact of Microaggression</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                      <Row className=\"my-2\">\r\n                        <Link to=\"/\">Microaggressions – do we have it?</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                    </Col>\r\n                  </Row> */}\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExistingPolls);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker,Alert} from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment, { months } from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nclass DuplicateDateTimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n      dateError:false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n      pollId\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n    });\r\n    const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n    const finalEndDate = new Date(emonth + \"-\" + edate + \"-\" + eyear);\r\n    const currentDate = new Date();\r\n    if(pollId != 1 && pollId !=2){\r\n      if (finalStartDate < currentDate || finalEndDate < currentDate) {\r\n        this.setState({\r\n         dateError:true\r\n        })\r\n      }\r\n     }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.onPublish();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n    this.setState({\r\n        dateError:false\r\n    })\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n    this.setState({\r\n        dateError:false\r\n    })\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    this.setState({ startTime: time });\r\n    this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    this.setState({ endTime: time });\r\n    this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          { \"Schedule\"}\r\n        </Button>\r\n        <Modal\r\n          title=\"Publish Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={\r\n            {\r\n                  children: \"Custom OK\",\r\n                }\r\n          }\r\n          cancelButtonProps={\r\n             {\r\n                  className: \"ant-btn-secondary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n          }\r\n          okText=\"Publish\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                Select Date and Time to publish the\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n              {this.state.dateError && (\r\n                <Form.Item>\r\n                      <Alert\r\n                      message=\"Please select valid date\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                      ></Alert>\r\n                  </Form.Item>\r\n              )}\r\n\r\n              <FloatLabel label=\"Select Start Date\" value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.startDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label=\"Select Start Time\"\r\n                        value={this.state.startTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label=\"Select End Date\" value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  {this.state.endDate !== \"\" ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <DatePicker\r\n                        defaultValue={this.state.endDate}\r\n                        disabledDate={this.disabledEndDate}\r\n                        onChange={(date) => this.onChangeEndDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"eDate\"\r\n                        className=\"required\"\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <DatePicker\r\n                      defaultValue={this.state.endDate}\r\n                      disabledDate={this.disabledEndDate}\r\n                      onChange={(date) => this.onChangeEndDate(date)}\r\n                      className=\"w-100\"\r\n                      name=\"eDate\"\r\n                      className=\"required\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\">\r\n                    <KeyboardTimePicker\r\n                      margin=\"normal\"\r\n                      id=\"time-picker2\"\r\n                      label=\"Select End Time\"\r\n                      value={this.state.endTime}\r\n                      onChange={(time) => this.onChangeEndTime(time)}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change time\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DuplicateDateTimeModal;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DuplicteDateTimeModal from \"../modal/DuplicateDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst DuplicatePreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  CreateDuplicatePoll,\r\n  data,\r\n  attachmentName,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    CreateDuplicatePoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>Manage Polls</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      {/* <NavLink to=\"/orgcc/createpoll\">\r\n                        <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>Preview Poll</Breadcrumb.Item> */}\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">Preview Poll</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <p className=\"font-weight-md6\">{poll.pollQuestion}</p>\r\n                        <Row className=\"preview-que\" disabled={true}>\r\n                          <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                            {poll.pollQuestionType === \"1\" ? (\r\n                              poll.pollResponse.map((value) => (\r\n                                <Radio>{value}</Radio>\r\n                              ))\r\n                            ) : poll.pollQuestionType === \"2\" ? (\r\n                              poll.pollResponse.map((value) => (\r\n                                <Checkbox>{value}</Checkbox>\r\n                              ))\r\n                            ) : poll.pollQuestionType === \"3\" ? (\r\n                              poll.pollRatingType === \"1\" ? (\r\n                                <ReactStars\r\n                                {...starsRating}\r\n                                value={poll.pollRatingResponse}\r\n                                name=\"pollRatingResponse\"\r\n                                onChange={(value) =>\r\n                                  handlePollOnSelect(\r\n                                    value,\r\n                                    \"pollRatingResponse\"\r\n                                  )\r\n                                }\r\n                                classNames=\"mt-3\"\r\n                              />\r\n                              ):\r\n                              poll.pollRatingType === \"2\" ? (<img src={Smiley} alt=\"send message\" />):\r\n                              poll.pollRatingType === \"3\" ? (<img src={Thermometer} alt=\"send message\" />):\r\n                              poll.pollRatingType === \"4\" ? (<img src={Thumb} alt=\"send message\" />):\r\n                              poll.pollRatingType === \"5\" ? (<img src={Steps} alt=\"send message\" />):\r\n                              (null)\r\n                            ) : null}\r\n                          </div>\r\n                        </Row>\r\n                        <Row className=\"mt-2\">\r\n                          <div class=\"ant-upload-list-item\">\r\n                            <div class=\"ant-upload-list-item-info\">\r\n                              <span class=\"ant-upload-span\">\r\n                                <div class=\"ant-upload-text-icon\">\r\n                                  <PaperClipOutlined />\r\n                                </div>\r\n                                <span\r\n                                  class=\"ant-upload-list-item-name\"\r\n                                  title=\"add-user-doc\"\r\n                                >\r\n                                  {poll.pollDocument ? (\r\n                                    <a\r\n                                      href={poll.pollDocument}\r\n                                      download={poll.pollDocument}\r\n                                    >\r\n                                      {attachmentName}\r\n                                    </a>\r\n                                  ) : null}\r\n                                </span>\r\n                                <span class=\"ant-upload-list-item-card-actions\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    class=\"ant-btn\"\r\n                                  ></button>\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"mt-5 px-3\">\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      type=\"secondary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"mr-4\"\r\n                      onClick={onBackCreatePoll}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                    <DuplicteDateTimeModal\r\n                      pollData={poll}\r\n                      handlePollStartDatePickerChange={\r\n                        handlePollStartDatePickerChange\r\n                      }\r\n                      handlePollEndDatePickerChange={\r\n                        handlePollEndDatePickerChange\r\n                      }\r\n                      handlePollStartTimePickerChange={\r\n                        handlePollStartTimePickerChange\r\n                      }\r\n                      handlePollEndTimePickerChange={\r\n                        handlePollEndTimePickerChange\r\n                      }\r\n                      onPublish={onPublish}\r\n                      viaEdit\r\n                    />\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DuplicatePreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Upload,\r\n  Spin,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport DuplicatePreviewPoll from \"./DuplicatePreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport UploadImage from \"./UploadImage\"\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst DuplicatePoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n    pollRatingType:\"\"\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    if(pollID == 1  || pollID == 2 ){\r\n      const options = {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      axios.get(\"http://localhost:3000/data/\"+ `poll_${pollID}.json`, options).then((res) => {\r\n        const data = res.data;\r\n        setDefaultPollDetails(data[0]);\r\n      })\r\n\r\n    }else{\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n      const data = res.data;\r\n      setPollDetails(data);\r\n    });\r\n  }\r\n  }, []);\r\n\r\n  const setDefaultPollDetails = (data) =>{\r\n\r\n    setPoll({\r\n      ...poll,\r\n      pollId: data.poll_id,\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      showResult: data.show_result_to_users,\r\n      pollChartType: data.poll_result_chart_type.toString(),\r\n      pollQuestion: data.question,\r\n      pollQuestionType: data.poll_question_type.toString(),\r\n      pollRatingResponse: \"\",\r\n      pollStartDate: moment().utc().local().format(\"DD-MM-YYYY\"),\r\n      pollEndDate: moment().utc().local().format(\"DD-MM-YYYY\"),\r\n      pollStartTime: moment().utc().local().format(\"hh:mm:ss\"),\r\n      pollEndTime: moment().utc().local().format(\"hh:mm:ss\"),\r\n      status_id: data.status_id,\r\n      pollResponse: data.option_text.map((value) => value.option_text),\r\n      pollOptionText: data.option_text,\r\n    });\r\n\r\n    setAttachmentName(\r\n      data.image_name !== null\r\n        ? data.image_name\r\n        : data.document_name !== null\r\n        ? data.document_name\r\n        : \"\"\r\n    );\r\n    const isImage =\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpeg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"png\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n    form.setFieldsValue({\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      pollQuestion: data.question,\r\n    });\r\n    isPollNameUnique(data.title);\r\n\r\n\r\n  }\r\n\r\n  const setPollDetails = (data) =>{\r\n    setPoll({\r\n      ...poll,\r\n      pollId: data.poll_id,\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      showResult: data.show_result_to_users,\r\n      pollChartType: data.poll_result_chart_type.toString(),\r\n      pollQuestion: data.question,\r\n      pollQuestionType: data.poll_question_type.toString(),\r\n      pollRatingType:data.poll_question_rating_type?data.poll_question_rating_type.toString():\"\",\r\n      pollRatingResponse: \"\",\r\n      pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n      pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n      pollStartTime: data.start_time,\r\n      pollEndTime: data.end_time,\r\n      status_id: data.status_id,\r\n      pollResponse: data.option_text.map((value) => value.option_text),\r\n      pollOptionText: data.option_text,\r\n    });\r\n\r\n    setAttachmentName(\r\n      data.image_name !== null\r\n        ? data.image_name\r\n        : data.document_name !== null\r\n        ? data.document_name\r\n        : \"\"\r\n    );\r\n    const isImage =\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpeg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"png\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n    form.setFieldsValue({\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      pollQuestion: data.question,\r\n    });\r\n    isPollNameUnique(data.title);\r\n\r\n  }\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if(poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        }else{\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const CreateDuplicatePoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n\r\n    let data = {};\r\n    function convertImgToBase64(url, callback, outputFormat) {\r\n      var canvas = document.createElement(\"CANVAS\");\r\n      var ctx = canvas.getContext(\"2d\");\r\n      var img = new Image();\r\n      img.crossOrigin = \"Anonymous\";\r\n      img.onload = function () {\r\n        canvas.height = img.height;\r\n        canvas.width = img.width;\r\n        ctx.drawImage(img, 0, 0);\r\n        var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n        callback.call(this, dataURL);\r\n        // Clean up\r\n        canvas = null;\r\n      };\r\n      img.src = url;\r\n    }\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollStartDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios\r\n        .post(BASE_URL + \"poll/\", data, options)\r\n        .then(() => {\r\n          setLoader(false);\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: \"Poll has been created successfully.\",\r\n            placement,\r\n          });\r\n          window.location = \"/orgcc/pollsdirectory\";\r\n        });\r\n    } else {\r\n        if (isImage) {\r\n          data = {\r\n            create_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              image: poll.pollDocument[0].base64,\r\n              image_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        } else {\r\n          data = {\r\n            create_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              document:  poll.pollDocument[0].base64,\r\n              document_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        }\r\n        axios\r\n          .post(BASE_URL + \"poll/\", data, options)\r\n          .then(() => {\r\n            setLoader(false);\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: \"Poll has been created successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/orgcc/pollsdirectory\";\r\n          });\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    \r\n      if (value.file.status === \"removed\") {\r\n        showuploadError(true);\r\n      }\r\n      let fileList = value.fileList.slice(-1);\r\n      checkDoucmentType(value.file.type);\r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setAttachmentName(value.file.name);\r\n      setPoll({ ...poll, [name]: fileList });\r\n    \r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handlePollImagePreview = async file => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPoll({...poll, previewImage : file.url || file.preview, previewVisible: true, \r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n\r\n    })\r\n  };\r\n\r\n  const handleCancel = (value) =>  setPoll({...poll, previewVisible: false });\r\n\r\n  const getBase64=(file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n   if (e.target.value !== location.state.title) {\r\n      isPollNameUnique(e.target.value)\r\n    }\r\n  };\r\n\r\n  const isPollNameUnique=(value)=>{\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n      axios\r\n        .post(BASE_URL + \"checkpoll/\", { title:value }, options)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setpollError(res.data[0]);\r\n          }\r\n        });\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      initialValues={{\r\n                        remember: true,\r\n                      }}\r\n                      form={form}\r\n                    >\r\n                      <Row className=\"py-3\">\r\n                        <h1 className=\"mb-0\">\r\n                          {\"Duplicate Poll\"}\r\n                        </h1>\r\n                      </Row>\r\n                      <Spin spinning={loader} size=\"large\">\r\n                        <div className=\"mid-content\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Please fill the fields marked with asterisk(*)\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <Col span={24}>\r\n                                <Row>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label=\"Poll Title\"\r\n                                      value={poll.pollName}\r\n                                    >\r\n                                      <TextArea\r\n                                        showCount\r\n                                        maxLength={50}\r\n                                        htmlFor=\"polltitle\"\r\n                                        value={poll.pollName}\r\n                                        id=\"pollName\"\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        onBlur={(e) => isPollNameDuplicate(e, \"pollName\")}\r\n                                        autoComplete=\"off\"\r\n                                        className={`required ${styles.sm_textarea}`}\r\n                                      />\r\n\r\n                                      {pollError === \"status: false\" &&\r\n                                        poll.pollName\r\n                                          .replace(/^\\s*/, \"\")\r\n                                          .replace(/\\s*$/, \"\").length > 0 &&\r\n                                        poll.pollName.length > 0 && (\r\n                                          <CheckCircleTwoTone\r\n                                            className=\"successCheck\"\r\n                                            twoToneColor=\"#52c41a\"\r\n                                          />\r\n                                        )}\r\n                                      {pollError == \"status: true\" && (\r\n                                        <Alert\r\n                                          message=\"Sorry! This Poll title already exists in the system. Please use a different name.\"\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      )}\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label=\"Description\"\r\n                                      value={poll.pollHelpText}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"pollHelpText\"\r\n                                        id=\"pollHelpText\"\r\n                                        validateStatus=\"success\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"helptext\"\r\n                                          id=\"pollHelpText\"\r\n                                          name=\"pollHelpText\"\r\n                                          value={poll.pollHelpText}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"gutter-row mt-3\">\r\n                                      <h6>Upload</h6>\r\n                                    <Form.Item\r\n                                      name=\"upload\"\r\n                                      className=\"upload-list\"\r\n                                      valuePropName=\"fileList\"\r\n                                    >\r\n                                       <UploadImage\r\n                                        file={poll.pollDocument}\r\n                                        handleStepOneUpload={handleStepOneUpload}\r\n                                        handleBeforeUpload={handleBeforeUpload}\r\n                                        handleOnRemove={handleOnRemove}\r\n                                        handlePollImagePreview={handlePollImagePreview}\r\n                                        handleCancel={handleCancel}\r\n                                        poll={poll}\r\n                                        />\r\n                                      \r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row\">\r\n                                <Row className=\"align-items-center d-flex\">\r\n                                  <Col span={24} md={8} lg={8} xl={6}>\r\n                                    <Form.Item\r\n                                      name=\"showresult\"\r\n                                      label=\"Show result to users \"\r\n                                      className=\"mb-0\"\r\n                                    >\r\n                                      <Switch\r\n                                        id=\"showResult\"\r\n                                        checked={poll.showResult}\r\n                                        onChange={(checked, e) =>\r\n                                          onChange(checked, e)\r\n                                        }\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                  {poll.showResult ? (\r\n                                    <Col span={24} lg={6}>\r\n                                      <FloatLabel\r\n                                        label=\"Display final results as\"\r\n                                        value={poll.pollChartType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"result\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"input-control\"\r\n                                              htmlFor=\"result\"\r\n                                              className=\"required\"\r\n                                              value={\r\n                                                poll.pollChartType === \"2\"\r\n                                                  ? \"\"\r\n                                                  : poll.pollChartType\r\n                                              }\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollChartType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                Pie Chart\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                Bar Chart\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                Star Format\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                      {chartError && (\r\n                                        <Form.Item>\r\n                                          <Alert\r\n                                            message=\"Please select the chat type as star\"\r\n                                            type=\"error\"\r\n                                            showIcon\r\n                                          ></Alert>\r\n                                        </Form.Item>\r\n                                      )}\r\n                                    </Col>\r\n                                  ) : (\r\n                                    <Col></Col>\r\n                                  )}\r\n                                </Row>\r\n                              </Col>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mid-content mt-4\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              <Col span={24}>\r\n                                <Row className=\"d-block\">\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                    <Col\r\n                                      span={24}\r\n                                      md={8}\r\n                                      lg={8}\r\n                                      className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                                      >\r\n                                    <FloatLabel\r\n                                      label=\"Question Type\"\r\n                                      value={poll.pollQuestionType}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"questiontype\"\r\n                                      >\r\n                                        <>\r\n                                          <Select\r\n                                            className=\"\"\r\n                                            htmlFor=\"questiontype\"\r\n                                            className=\"required\"\r\n                                            id=\"pollQuestionType\"\r\n                                            value={poll.pollQuestionType}\r\n                                            onSelect={(value) =>\r\n                                              handlePollOnSelect(\r\n                                                value,\r\n                                                \"pollQuestionType\"\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <Select.Option value=\"1\">\r\n                                              Single Choice\r\n                                            </Select.Option>\r\n                                            <Select.Option value=\"2\">\r\n                                              Multiple Choice\r\n                                            </Select.Option>\r\n                                            <Select.Option value=\"3\">\r\n                                              Star Rating\r\n                                              {poll.status_id === 4}\r\n                                            </Select.Option>\r\n                                          </Select>\r\n                                        </>\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  {poll.pollQuestionType === \"3\" ? (\r\n                                   <Col\r\n                                  span={24} md={10} lg={8}\r\n                                  className=\"gutter-row\"\r\n                                  >\r\n                                <FloatLabel\r\n                                  label=\"Rating Type\"\r\n                                  value={poll.pollRatingType}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required mb-0\"\r\n                                    name=\"ratingtype\"\r\n                                  >\r\n                                    <>\r\n                                      <Select\r\n                                        className=\"\"\r\n                                        htmlFor=\"ratingtype\"\r\n                                        className=\"required\"\r\n                                        id=\"pollRatingType\"\r\n                                        value={poll.pollRatingType}\r\n                                        onSelect={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollRatingType\"\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <Select.Option\r\n                                          value=\"1\"\r\n                                        >\r\n                                          Stars\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"2\" \r\n                                        >\r\n                                          Smiley \r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"3\"\r\n                                        >\r\n                                          Thermometer\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"4\"\r\n                                          >\r\n                                          ThumbsUp\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"5\"\r\n                                        >\r\n                                          Ladder\r\n                                        </Select.Option>\r\n                                      </Select>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                                </Col>\r\n                                     ): (null)}\r\n                                   </Row>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n\r\n                                    <FloatLabel\r\n                                      label=\"Question\"\r\n                                      value={poll.pollQuestion}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control edit-input\"\r\n                                          name=\"pollQuestion\"\r\n                                          id=\"pollQuestion\"\r\n                                          htmlFor=\"pollQuestion\"\r\n                                          className=\"required\"\r\n                                          defaultValue={poll.pollQuestion}\r\n                                          value={poll.pollQuestion}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                              \r\n                              \r\n                                  </Col>\r\n                                  <Col span={24} className=\"mt-4\">\r\n                                    {poll.pollQuestionType === \"3\" && poll.pollRatingType ? (\r\n                                      poll.pollRatingType === \"1\" ? (\r\n                                        <ReactStars\r\n                                        {...starsRating}\r\n                                        value={poll.pollRatingResponse}\r\n                                        name=\"pollRatingResponse\"\r\n                                        onChange={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollRatingResponse\"\r\n                                          )\r\n                                        }\r\n                                        classNames=\"mt-3\"\r\n                                      />\r\n                                      ):\r\n                                      poll.pollRatingType === \"2\" ? (<img src={Smiley} alt=\"send message\" />):\r\n                                      poll.pollRatingType === \"3\" ? (<img src={Thermometer} alt=\"send message\" />):\r\n                                      poll.pollRatingType === \"4\" ? (<img src={Thumb} alt=\"send message\" />):\r\n                                      poll.pollRatingType === \"5\" ? (<img src={Steps} alt=\"send message\" />):\r\n                                      (null)\r\n                                      \r\n                                    ) : poll.pollQuestionType === \"1\" ? (\r\n                                      <div>\r\n                                        <MultiChoice\r\n                                          setSingleChoiceResponse={\r\n                                            setSingleChoiceResponse\r\n                                          }\r\n                                          pollResponse={poll.pollResponse}\r\n                                        />\r\n                                      </div>\r\n                                    ) : poll.pollQuestionType === \"2\" ? (\r\n                                      <MultiChoice\r\n                                        pollResponse={poll.pollResponse}\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                      />\r\n                                    ) : null}\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n\r\n                              <div className=\"mt-5\">\r\n                                <Button\r\n                                  type=\"primary\"\r\n                                  className=\"md mr-4\"\r\n                                  onClick={onPreview}\r\n                                >\r\n                                  Preview\r\n                                </Button>\r\n                                <Button\r\n                                  type=\"secondary\"\r\n                                  type=\"secondary\"\r\n                                  htmlType=\"submit\"\r\n                                  onClick={onCancel}\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Spin>\r\n                    </Form>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <DuplicatePreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            CreateDuplicatePoll={CreateDuplicatePoll}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DuplicatePoll;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Upload,\r\n  Modal,\r\n} from \"antd\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { CLOSE_TEXT_MODAL, NEXT, UPLOAD_IMAGE } from \"../../headings\";\r\nimport { DATE, DESCRIPTION, OPENLINE_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  UPLOAD_IMAGE_REQUIRED,\r\n} from \"../../errors\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenlineStepOne = ({\r\n  next,\r\n  imageError,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOpenLineInfo.openelineName &&\r\n      stepOneOpenLineInfo.openelineName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.description &&\r\n      stepOneOpenLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.file &&\r\n      stepOneOpenLineInfo.file.length > 0 &&\r\n      stepOneOpenLineInfo.status &&\r\n      stepOneOpenLineInfo.sDate\r\n    ) {\r\n      if (!imageError && hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOpenline/\",\r\n        { openline_name: stepOneOpenLineInfo.openelineName },\r\n\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <FloatLabel\r\n        label={OPENLINE_NAME}\r\n        value={stepOneOpenLineInfo.openelineName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"openelineName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DIRECTORY_NAME,\r\n            },\r\n          ]}\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneOpenLineInfo.openelineName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"openelineName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"openelineName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated == \"status: false\" &&\r\n            stepOneOpenLineInfo.openelineName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneOpenLineInfo.openelineName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={OPENLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneOpenLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DESCRIPTION,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneOpenLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneOpenLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: SELECT_DATE,\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneOpenLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneOpenLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control required\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <Upload\r\n            listType=\"picture\"\r\n            fileList={stepOneOpenLineInfo.file}\r\n            beforeUpload={(value) => handleBeforeUpload(value)}\r\n            onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n            accept=\"image/png, image/jpeg, image/gif\"\r\n          >\r\n            {stepOneOpenLineInfo.file.length === 0 && (\r\n              <Button type=\"link\" className=\"link pl-0\">\r\n                <span className=\"icon icon-upload pr-2\"></span>\r\n                {UPLOAD_IMAGE}\r\n              </Button>\r\n            )}\r\n          </Upload>\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLineInfo.previewVisible}\r\n            title={stepOneOpenLineInfo.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLineInfo.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      {imageError && (\r\n        <Form.Item>\r\n          <Alert message={UPLOAD_IMAGE_REQUIRED} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\nimport { ACCESS, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\n\r\nclass CreateOpenlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n          loader: false,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>\r\n            {STATUS_ACTIVE}\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <Spin spinning={this.state.loader} size=\"large\">\r\n          <div id=\"no-more-tables\">\r\n            <Table\r\n              rowSelection={rowSelection}\r\n              columns={columns}\r\n              dataSource={this.state.filterData}\r\n              rowKey=\"unique_identifier\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"steps-action mt-5\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              style={{ margin: \"0 8px\" }}\r\n              onClick={() => this.stepTwoPrev()}\r\n              data-test=\"steptwoPrev\"\r\n            >\r\n              {BACK}\r\n            </Button>\r\n            <Button\r\n              className=\"md\"\r\n              type=\"primary\"\r\n              onClick={() => this.stepTwoNext()}\r\n              data-test=\"steptwoNext\"\r\n            >\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Upload, Modal } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, CLOSE_TEXT_MODAL, CREATE } from \"../../headings\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control required\">\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture\"\r\n            disabled\r\n            fileList={stepOneOpenLine.file}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n          ></Upload>\r\n\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLine.previewVisible}\r\n            title={stepOneOpenLine.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLine.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, message, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateOpenlineStepOne from \"../openlineForm/CreateOpenlineStepOne\";\r\nimport CreateOpenlineStepTwo from \"../openlineForm/CreateOpenlineStepTwo\";\r\nimport CreateOpenlineStepThree from \"../openlineForm/CreateOpenlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  OPENLINE_CREATE_STEP1,\r\n  OPENLINE_CREATE_STEP2,\r\n  OPENLINE_CREATE_STEP3,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport {\r\n  CREATE_OPENLINE_DIRECTORY,\r\n  OPENLINE_DIRECTORY,\r\n  CREATE_OPENLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: OPENLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n    imagename: \"\",\r\n  });\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload = (value) => {\r\n    if (!value.type.includes(\"image\")) {\r\n      setImageError(true);\r\n      message.error(\r\n        `The file that you attemped to upload ${value.name} is not supported`\r\n      );\r\n      return false;\r\n    } else {\r\n      setImageError(false);\r\n    }\r\n    return value.type;\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      [name]: fileList,\r\n      imagename: filename,\r\n    });\r\n  };\r\n\r\n  const handleReaderloaded = (readerEvt) => {\r\n    let binaryString = readerEvt.target.result;\r\n    setStepOneOpenLine({ ...stepOneOpenLine, file: btoa(binaryString) });\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setStepOneOpenLine({ ...stepOneOpenLine, previewVisible: false });\r\n  const setNameValidHandle = (value) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_openline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        openline_image: stepOneOpenLine.file[0].base64,\r\n        openline_image_name: stepOneOpenLine.imagename,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>{OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_OPENLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content\">\r\n                        {current == 0 ? (\r\n                          <CreateOpenlineStepOne\r\n                            next={next}\r\n                            imageError={imageError}\r\n                            stepOneOpenLineInfo={stepOneOpenLine}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneUpload={handleStepOneUpload}\r\n                            handleBeforeUpload={handleBeforeUpload}\r\n                            handleStepOnePreview={handleStepOnePreview}\r\n                            handleCancel={handleCancel}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            addIcon={addIcon}\r\n                            getIconText={getIconText}\r\n                            setNameValidHandle={setNameValidHandle}\r\n                            hotlineErrorUpdated={hotlineErrorUpdated}\r\n                            data-test=\"CreateHotlineStepOne\"\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOpenlineStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepOneHotLine={stepOneOpenLine}\r\n                            stepTwoOpenLine={stepTwoOpenLine}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOpenlineStepThree\r\n                            prev={prev}\r\n                            createNewHotLine={createHotLine}\r\n                            stepOneOpenLine={stepOneOpenLine}\r\n                            stepTwoOpenLine={stepTwoOpenLine}\r\n                            getIconText={getIconText}\r\n                            handleStepOnePreview={handleStepOnePreview}\r\n                            handleCancel={handleCancel}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpenlineCreation from \"../../components/openlineCreation/OpenlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, OPENLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  CREATE_NEW_OPENLINE_TEXT_PART1,\r\n  CREATE_NEW_OPENLINE_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{OPENLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART1}\r\n                          <br />\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <OpenlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst OpenlinePermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: NAME,\r\n      dataIndex: \"first_name\",\r\n      key: \"first_name\",\r\n      width: \"30%\",\r\n      render: (record, response) => {\r\n        return {\r\n          children: response.user.first_name,\r\n          props: {\r\n            \"data-title\": \"Name\",\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlinePermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchEmployee = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this openline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchEmployee;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport OpenlinePermission from \"../table/OpenlinePermission\";\r\nimport SearchEmployee from \"../autocomplete/SearchEmployee\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, DONE, SHOW } from \"../../headings\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass OpenlinePermissioModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedOpenLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      openlineId: this.props.selectedRows.openline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineAssignEmpl/\" +\r\n          this.props.selectedRows.openline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedOpenLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedOpenLines = [...this.state.assignedOpenLines];\r\n    let index = assignedOpenLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedOpenLines[index] = {\r\n      ...assignedOpenLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedOpenLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL + \"getOpenlineAssignEmpl/\" + value.openline.openline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedOpenLines, assignedEmp } = this.state;\r\n    const x = {\r\n      user: {\r\n        user_id: parseInt(options.user_id),\r\n        first_name: options.value,\r\n      },\r\n      openline: {\r\n        openline_id: this.state.openlineId,\r\n      },\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n    };\r\n    const y = {\r\n      openline_id: this.state.openlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedOpenLines: [...assignedOpenLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <OpenlinePermission\r\n              data={this.state.assignedOpenLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchEmployee\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedOpenLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlinePermissioModal);\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NO_TEXT_MODAL, YES_TEXT_MODAL } from \"../../headings\";\r\nimport { DELETE_CONFIRM_OPENLINE } from \"../../messages\";\r\n\r\nclass DeleteOpenlineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"openline/\" + this.props.openlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/openlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Openline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_OPENLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteOpenlineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteOpenlineModal from \"../../components/modal/DeleteOpenlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/editopenline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/editopenline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteOpenlineModal openlineId={test.openline_id} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OpenlinePermissioModal from \"../modal/OpenlinePermissioModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport OpenlinePopover from \"../table/OpenlinePopover\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\nimport {\r\n  END_DATE,\r\n  OPENLINE_NAME,\r\n  PERMISSIONS,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { OPENLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpenlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    openlines?.forEach((openline) => {\r\n      openline.start_date = moment(openline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      openline.end_date = moment(openline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.openlines !== nextProps.openlines) {\r\n      nextProps.openlines?.forEach((openline) => {\r\n        openline.start_date = moment(openline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        openline.end_date = moment(openline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.openlines }, () => {\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(\r\n          BASE_URL + \"changeOpenlineStatus/\" + record.openline_id + \"/\",\r\n          data,\r\n          options\r\n        )\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: OPENLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Openline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <OpenlinePermissioModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <OpenlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{OPENLINE_DIRECTORY}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createopenline\">\r\n                        <Buttons value=\"Create Openline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"openline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOpenlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpenlines from \"./ShowAllOpenlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\n\r\nconst OpenlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.openlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.openlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.openlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.openlinesdata !== null &&\r\n    props.openlinesdata.length === 0 ? (\r\n    <OpenlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllOpenlines\r\n      statusOnClicked={statusOnClicked}\r\n      openlines={props.openlinesdata}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, EDIT_OPENLINE, UPDATE, UPLOAD_IMAGE } from \"../../headings\";\r\nimport {\r\n  STATUS_INACTIVE,\r\n  STATUS_ACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n} from \"../../errors\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditOpenline = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [openLineData, setOpenLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    openline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    openline_image: \"\",\r\n    openline_image_name: \"\",\r\n    status_id: \"\",\r\n    iconHtml: \"\",\r\n    ImgfileList: [],\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [openlineErrorUpdated, setopenlineErrorUpdated] = useState(\"\");\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date).format(\"YYYY-MM-DD\");\r\n    const eDate = moment(location.state.end_date).format(\"YYYY-MM-DD\");\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n\r\n    setOpenLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      openline_id: location.state.openline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      openline_image: location.state.openline_image,\r\n      openline_image_name: location.state.openline_image_name,\r\n      status_id: location.state.status_id.toString(),\r\n      ImgfileList: [\r\n        {\r\n          uid: \"1\",\r\n          name: location.state.openline_image_name,\r\n          status: \"done\",\r\n          url: location.state.openline_image,\r\n        },\r\n      ],\r\n    });\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setOpenLineData({ ...openLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: value });\r\n  };\r\n\r\n  function convertImgToBase64(url, callback, outputFormat) {\r\n    var canvas = document.createElement(\"CANVAS\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = new Image();\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.onload = function () {\r\n      canvas.height = img.height;\r\n      canvas.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n      callback.call(this, dataURL);\r\n      // Clean up\r\n      canvas = null;\r\n    };\r\n    img.src = url;\r\n  }\r\n\r\n  const editOpenline = (e) => {\r\n    if (\r\n      openLineData.name &&\r\n      openLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      openLineData.help_text &&\r\n      openLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      openLineData.openline_image.length > 0 &&\r\n      openLineData.status_id &&\r\n      openLineData.start_date\r\n    ) {\r\n      setLoader(true);\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n      let data = {};\r\n      if (openLineData.ImgfileList[0].uid === \"1\") {\r\n        convertImgToBase64(openLineData.openline_image, function (base64Img) {\r\n          data = {\r\n            end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n            help_text: openLineData.help_text,\r\n            openline_id: openLineData.openline_id,\r\n            openline_image: base64Img,\r\n            name: openLineData.name,\r\n            openline_image_name: openLineData.openline_image_name,\r\n            start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n            status_id: parseInt(openLineData.status_id),\r\n            updated_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n            created_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n          };\r\n\r\n          if (\r\n            openlineErrorUpdated == \"status: false\" ||\r\n            openLineData.name === location.state.name\r\n          ) {\r\n            updateOpenLine(data);\r\n          }\r\n        });\r\n      } else {\r\n        data = {\r\n          end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n          help_text: openLineData.help_text,\r\n          openline_id: openLineData.openline_id,\r\n          openline_image: openLineData.ImgfileList[0].base64,\r\n          name: openLineData.name,\r\n          openline_image_name: openLineData.openline_image_name,\r\n          start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n          status_id: parseInt(openLineData.status_id),\r\n          updated_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        };\r\n        if (\r\n          openlineErrorUpdated == \"status: false\" ||\r\n          openLineData.name === location.state.name\r\n        ) {\r\n          updateOpenLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/openlinedirectory\";\r\n  };\r\n\r\n  const updateOpenLine = (data) => {\r\n    const token = authHeader();\r\n    let openLineId = openLineData.openline_id;\r\n    delete openLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"openline/\" + openLineId + \"/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoader(false);\r\n          window.location = \"/orgcc/openlinedirectory\";\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    // setOpenLineData({ ...openLineData, [name]: fileList });\r\n    setOpenLineData({\r\n      ...openLineData,\r\n      ImgfileList: fileList,\r\n      openline_image: fileList,\r\n      openline_image_name: filename,\r\n    });\r\n\r\n    if (value.file.status === \"removed\") {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        ImgfileList: [],\r\n        openline_image: \"\",\r\n        openline_image_name: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      convertImgToBase64(file.url, function (base64Img) {\r\n        // await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setOpenLineData({\r\n          ...openLineData,\r\n          previewImage: base64Img,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setOpenLineData({ ...openLineData, fileList: [] });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setOpenLineData({ ...openLineData, previewVisible: false });\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckOpenlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOpenline/\",\r\n          { openline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setopenlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setopenlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_OPENLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n                    <FloatLabel\r\n                      label={DIRECTORY_NAME}\r\n                      value={openLineData.name}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DIRECTORY_NAME,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={openLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckOpenlineName(e)}\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {openlineErrorUpdated == \"status: false\" &&\r\n                          openLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          openLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {openlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={OPENLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={openLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={openLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            name=\"help_text\"\r\n                            id=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          value={openLineData.start_date}\r\n                          disabledDate={disabledDate}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: SELECT_DATE,\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={openLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={openLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control required\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <Upload\r\n                          listType=\"picture\"\r\n                          fileList={openLineData.ImgfileList}\r\n                          onChange={(value) =>\r\n                            handleStepOneUpload(value, \"openline_image\")\r\n                          }\r\n                          onPreview={(value) => handleStepOnePreview(value)}\r\n                          handleOnRemove={handleOnRemove}\r\n                          accept=\"image/png, image/jpeg, image/gif\"\r\n                        >\r\n                          {openLineData.openline_image.length === 0 && (\r\n                            <Button type=\"link\" className=\"link pl-0\">\r\n                              <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                              {UPLOAD_IMAGE}\r\n                            </Button>\r\n                          )}\r\n                        </Upload>\r\n\r\n                        <Modal\r\n                          visible={openLineData.previewVisible}\r\n                          title={openLineData.previewTitle}\r\n                          centered\r\n                          onOk={(value) => handleCancel(value)}\r\n                          okButtonProps={{\r\n                            children: \"Custom OK\",\r\n                          }}\r\n                          cancelButtonProps={{ style: { display: \"none\" } }}\r\n                          okText=\"Close\"\r\n                        >\r\n                          <img\r\n                            alt=\"example\"\r\n                            style={{ width: \"100%\" }}\r\n                            src={openLineData.previewImage}\r\n                          />\r\n                        </Modal>\r\n\r\n                        {getIconText(openLineData.openline_id) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(openLineData.iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      openLineData.openline_id\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(openLineData.openline_id)}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editOpenline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditOpenline;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from \"./components/login/ForgotPassword\";\r\nimport ResetPassword from \"./components/login/ResetPassword\";\r\nimport Login from \"./components/login/Login\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport OpenlineMessages from \"./components/openlineMessages/OpenlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport AddEmployee from \"./components/manageEmp/AddEmployee\";\r\nimport ImportFile from \"./components/manageEmp/ImportFile\";\r\nimport CreateManually from \"./components/manageEmp/CreateManually\";\r\nimport ManagePolls from \"./components/managePolls/ManagePolls\";\r\nimport CreatePoll from \"./components/managePolls/CreatePoll\";\r\nimport PreviewPoll from \"./components/managePolls/PreviewPoll\";\r\nimport PollsContainer from \"./components/managePolls/PollsContainer\";\r\n\r\nimport PollResponse from \"./components/managePolls/PollResponse\";\r\nimport EditPoll from \"./components/managePolls/EditPoll\";\r\nimport ExistingPolls from \"./components/managePolls/ExistingPolls\";\r\nimport DuplicatePoll from \"./components/managePolls/DuplicatePoll\"\r\n\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\nimport OpenlineCreation from \"./components/openlineCreation/OpenlineCreation\";\r\nimport EditOpenline from \"./components/openlineDirectory/EditOpenline\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_amcc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isorgcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_org_cc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isamweb =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_am_web_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <ProtectedRoute path=\"/changepassword\" component={ChangePassword} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route exact={true} path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route exact={true} path=\"/resetpassword\" component={ResetPassword} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/edithotline\" ||\r\n          url === \"/orgcc/editopenline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/orgcc/pollsdirectory\" ||\r\n          url === \"/orgcc/createpoll\" ||\r\n          url.includes(\"/orgcc/editpoll\") ||\r\n          url === \"/orgcc/previewpoll\" ||\r\n          url === \"/orgcc/pollresponse\" ||\r\n          url === \"/orgcc/existingpolls\" ||\r\n          url === \"/orgcc/duplicatepoll\" || \r\n          url === \"/orgcc/addemployee\" ||\r\n          url === \"/orgcc/createmanually\" ||\r\n          url === \"/orgcc/importfile\" ||\r\n          url === \"/\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/importfile\"\r\n              amorg\r\n              component={ImportFile}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/addemployee\"\r\n              amorg\r\n              component={AddEmployee}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createmanually\"\r\n              amorg\r\n              component={CreateManually}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editopenline\"\r\n              amorg\r\n              component={EditOpenline}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollsdirectory\"\r\n              amorg\r\n              component={PollsContainer}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/previewpoll\"\r\n              amorg\r\n              component={PreviewPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createpoll\"\r\n              amorg\r\n              component={CreatePoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollresponse\"\r\n              amorg\r\n              component={PollResponse}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editpoll/:id\"\r\n              amorg\r\n              component={EditPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/existingpolls\"\r\n              amorg\r\n              component={ExistingPolls}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/duplicatepoll/:id\"\r\n              amorg\r\n              component={DuplicatePoll}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/amweb/openlinemessages\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/hotlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/openlinemessages\"\r\n                amweb\r\n                component={OpenlineMessages}\r\n              />\r\n            </Switch>\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url === \"/\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url.includes(\"/amcc/orgdetails\") ||\r\n            url === \"/login\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/orgdetails/:id\"\r\n                amcc\r\n                component={OrgDetails}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"current\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst userFName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.first_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userLName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.last_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userEmail = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.email, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userMobile = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.mobile_number, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst amweb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_am_web_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_amcc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amorgcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_org_cc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amidb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_idb_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amseeded = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_seeded_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amapp = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_app_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst userData = {\r\n  ...user,\r\n  user_data: {\r\n    ...user?.user_data,\r\n    email: userEmail,\r\n    mobile_number: userMobile,\r\n    is_am_web_user: amweb,\r\n    is_amcc_user: amcc,\r\n    is_app_user: amapp,\r\n    is_org_cc_user: amorgcc,\r\n    is_idb_user: amidb,\r\n    is_seeded_user: amseeded,\r\n  },\r\n  user_details: {\r\n    ...user?.user_details,\r\n    first_name: userFName,\r\n    last_name: userLName,\r\n  },\r\n};\r\n\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\nconst initialState = user\r\n  ? {\r\n      isLoggedIn: true,\r\n      user: userData,\r\n      current: password.replaceAll('^\"+|\"+$', \"\"),\r\n    }\r\n  : { isLoggedIn: false, user: null, current: null };\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        current: payload.current,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = null;\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import {\r\n    POLL_FAIL,\r\n    POLL_SUCCESS \r\n } from \"../actions/types\";\r\n   \r\n  const deafaultState = {};\r\n  deafaultState.pollsdata = [];\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case POLL_SUCCESS:\r\n        return {\r\n          ...state,\r\n          pollsdata: payload.pollsdata,\r\n        };\r\n      case POLL_FAIL:\r\n        return {\r\n          ...state,\r\n          pollsdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\nimport poll from \"./poll\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline,\r\n  poll\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { Modal } from \"antd\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport { ABOUT_TO_LOGOUT_TEXT, LOGGED_OUT_TEXT } from \"./messages\";\r\nimport { OK_TEXT_MODAL } from \"./headings\";\r\n\r\nfunction App() {\r\n  const timeOutIdle = 1200000; // 20 minutes\r\n  const timeOutLogout = 60000; // a minute\r\n  var idleTimer = null;\r\n  const [idleModal, showIdleModal] = useState(false);\r\n  const [logoutModal, showLogoutModal] = useState(false);\r\n  const [timedOut, setTimedOut] = useState(false);\r\n\r\n  const onIdle = (e) => {\r\n    if (AppStorage.get(\"user\")) {\r\n      const isTimedOut = timedOut;\r\n      if (isTimedOut) {\r\n        showIdleModal(false);\r\n        showLogoutModal(true);\r\n      } else {\r\n        showIdleModal(true);\r\n        idleTimer.reset();\r\n        setTimedOut(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIdleOk = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleIdleCancel = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleLogoutOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleLogoutCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const onActive = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  const onAction = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        ref={(ref) => {\r\n          idleTimer = ref;\r\n        }}\r\n        element={document}\r\n        onIdle={onIdle}\r\n        onAction={onAction}\r\n        onActive={onActive}\r\n        debounce={250}\r\n        timeout={!timedOut ? timeOutIdle : timeOutLogout}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n            <Modal\r\n              visible={idleModal}\r\n              onOk={handleIdleOk}\r\n              onCancel={handleIdleCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{ABOUT_TO_LOGOUT_TEXT}</p>\r\n            </Modal>\r\n            <Modal\r\n              visible={logoutModal}\r\n              onOk={handleLogoutOk}\r\n              onCancel={handleLogoutCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{LOGGED_OUT_TEXT}</p>\r\n            </Modal>\r\n            <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/thermometer.34d42075.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thumb.11938490.svg\";"],"sourceRoot":""}