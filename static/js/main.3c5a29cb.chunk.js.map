{"version":3,"sources":["assets/icons/dots-icon.svg","components/manageEmp/manageEmp.module.scss","assets/images/amcc-vector.svg","assets/images/create-hotline.svg","assets/icons/send.svg","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/icons/pencil.svg","assets/images/work-chart.svg","assets/images/no-hotlines.svg","assets/images/no-openlines.svg","assets/images/create-openline.svg","assets/images/manage-polls.svg","components/managePolls/managePoll.module.scss","assets/images/thermometer.svg","assets/images/Thumb.svg","utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","values.js","headings.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","components/manageOrg/AccSidebar.js","containers/ShowDetails.js","components/table/Table.js","components/button/Button.js","services/auth-header.js","labels.js","messages.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","errors.js","components/form/CreateOrgStepOne.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/modal/PrivacyPolicyModal.js","components/login/Login.js","components/hotlineMessages/AmWebSidebar.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","components/modal/AssignHotlineModal.js","utils/HighlightTextHotline.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/SearchHotlineMessages.js","components/hotlineMessages/HotlineMessagesLeftSection.js","components/hotlineMessages/NoHotlineMessages.js","components/hotlineMessages/Spinner.js","utils/MessagesUtil.js","components/hotlineMessages/HotlineMessages.js","components/openlineMessages/AmWebSidebar.js","utils/HighlightTextOpenline.js","components/openlineMessages/FilterPopover.js","components/openlineMessages/AddedNotes.js","components/openlineMessages/Note.js","components/openlineMessages/Activity.js","components/openlineMessages/Assigned.js","components/openlineMessages/Messages.js","components/openlineMessages/SearchOpenlineMessages.js","components/openlineMessages/OpenlineMessagesLeftSection.js","components/openlineMessages/NoOpenlineMessages.js","components/openlineMessages/OpenlineMessages.js","containers/PermissionDenied.js","components/modal/ResetPwdModal.js","components/form/EditSeededUsers.js","components/form/AddNewSeededUser.js","components/form/OrgDetails.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/manageEmp/AddEmployee.js","components/manageEmp/UploadFiles.js","components/manageEmp/ImportFile.js","components/manageEmp/CreateManually.js","components/managePolls/UploadImage.js","components/managePolls/MultipleChoice.js","components/modal/DateTimeModal.js","utils/momentUtil.js","components/managePolls/PreviewPoll.js","components/managePolls/CreatePoll.js","components/managePolls/ManagePolls.js","components/modal/ExtendEndDate.js","components/modal/DeletePollModal.js","components/table/PollPopover.js","components/table/CreatePollPopover.js","components/managePolls/MultiSelection.js","components/managePolls/ShowAllPolls.js","utils/defaultpoll.js","actions/poll.js","components/managePolls/PollsContainer.js","components/managePolls/PollResponse.js","components/modal/EditDateTimeModal.js","components/managePolls/EditPreviewPoll.js","components/managePolls/EditPoll.js","components/managePolls/ExistingPolls.js","components/modal/DuplicateDateTimeModal.js","components/managePolls/DuplicatePreviewPoll.js","components/managePolls/DuplicatePoll.js","components/openlineForm/CreateOpenlineStepOne.js","components/openlineForm/CreateOpenlineStepTwo.js","components/openlineForm/CreateOpenlineStepThree.js","components/openlineCreation/OpenlineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/table/OpenlinePermission.js","components/autocomplete/SearchEmployee.js","components/modal/OpenlinePermissioModal.js","components/modal/DeleteOpenlineModal.js","components/table/OpenlinePopover.js","components/openlineDirectory/ShowAllOpenlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/openlineDirectory/EditOpenline.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/poll.js","reducers/index.js","services/stores.js","App.js","index.js","assets/images/emoji.svg","assets/images/steps.svg"],"names":["module","exports","getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","email","password","page","axios","post","response","data","userFName","AES","encrypt","user_details","first_name","toString","userLName","last_name","departmentId","department_id","orgUserId","org_user_id","endDate","end_date","startDate","start_date","userEmail","user_data","userMobile","mobile_number","orgId","organization_id","userId","user_id","amweb","is_am_web_user","amcc","is_amcc_user","amorgcc","is_org_cc_user","amidb","is_idb_user","amseeded","is_seeded_user","amapp","is_app_user","userData","JSON","stringify","clear","window","location","reload","login","dispatch","AuthService","then","type","payload","user","current","Promise","resolve","error","message","reject","STATUS_ACTIVE","STATUS_INACTIVE","AM_WEB","ORG_CC","SUPER_USER","IDB_USER","APP_USER","OK_TEXT_MODAL","NEXT","BACK","CANCEL","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","userType","decrypt","enc","Utf8","name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","collapsed","toggle","setState","defaultKey","createElement","MenuFoldOutlined","MenuUnfoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","AccSidebar","ShowDetails","history","useHistory","path","record","showModal","push","orgName","identifier","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","authHeader","CommonAuthHeader","parse","tokens","access","FIRST_NAME","LAST_NAME","DATE","MOBILE","STATUS","ACCESS","ACTIONS","DELETE_CONFIRM","LOGIN_PART1","LOGIN_PART2","EXTEND_END_DATE_TEXT_PART3","ASSIGN_HOTLINE_TEXT_PART2","STATUS_CHANGED_NOTIFICATION_PART1","STATUS_CHANGED_NOTIFICATION_PART2","STATUS_CHANGED_NOTIFICATION_PART3","STATUS_CHANGED_NOTIFICATION_PART4","ABOUT_TO_LOGOUT_TEXT","LOGGED_OUT_TEXT","Content","ShowAllOrganizations","statusClicked","via","replaceAll","Date","moment","format","status_id","Authorization","put","notification","config","open","description","statusOnClicked","onSearch","filterDt","filterIt","filterData","searchBy","organizations","forEach","org","utc","local","nextProps","arr","searchKey","filter","obj","Object","keys","some","title","dataIndex","width","render","children","Pencil","placeholder","Button","spinning","loader","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","REQUIRED_MESSAGE","MAX_CHAR_LIMIT","VALID_EMAIL","VALID_MOBILE","PASSWORD_RULES","HOTLINE_ALREADY_EXISTS","SELECT_DATE","STATUS_NOT_CHANGED","PAST_TIME","OPENLINE_ALREADY_EXISTS","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","orgIdCount","orgNameCount","setOrgNameAlreadyExists","setOrgIDAlreadyExists","orgIDAlreadyExists","orgNameAlreadyExists","Form","useForm","form","showError","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","organization_name","res","CheckOrganizationName","autoComplete","maxLength","replace","CheckCircleTwoTone","twoToneColor","organizationId","validateStatus","orgID","CheckOrganizationID","status1","onSelect","Option","s1Date","date","disabledDate","startOf","htmlType","preventDefault","DeleteModal","visible","show","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","deleteOrg","handleCancel","delete","hotlineId","catch","manageEmp","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","isValid","lastName","mobile","status2","fromStepTwo","showAddSeededUserForm","addSeededUser","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleMobile","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","fNameCount","lNameCount","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","passwordValidationError","showPasswordValidationError","stepTwoPrev","test","target","validateEmailAddress","country","userID","CreateOrgStepThree","apiError","createNewOrganization","addSeededUserFromThirdStep","disabled","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","setLoader","setApiError","stepOneOrganization","setStepOneOrganization","setOrgNameExists","setOrgIDExists","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","setOrgNameCount","setOrgIDCount","setFNameCount","setLNameCount","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","organization","mobile_authentication_key_id","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","filterStatus","search","undefined","hotLineId","manageOrgData","manageOrg","setStatusClicked","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","flag","property","status","layout","wrapperCol","tailLayout","ForgotPassword","onChangeUsername","sendEmail","emailSent","incorrectEMail","Amccvector","ref","c","initialValues","remember","ResetPassword","onChangePassword","onChangeConfirmPassword","confirm_password","resetPassword","uidb64","URLSearchParams","resetDone","resetFailed","setTimeout","validatePassword","rules","required","Password","getFieldValue","validator","_","dependencies","hasFeedback","PrivacyPolicyModal","Login","handleLogin","loading","isamcc","isorgcc","isamweb","isAuthenticated","commonForAllUsers","isEnabled","canSubmit","onSubmit","AmWebSidebar","ChangePassword","currentPwd","newPwd","confirmPwd","pwd","setPwd","passwordChanged","setPasswordChanged","setError","userName","setUserName","handleOnChange","old_password","new_password","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","setNameValidHandle","hotlineErrorUpdated","iconText","setdisabledbtn","directoryName","ENTER_DIRECTORY_NAME","showCount","hotline_name","CheckHotlineName","ENTER_DESCRIPTION","sDate","valuePropName","hotlineIconId","ReactHtmlParser","iconHtml","CreateHotlineStepTwo","employeeData","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","prevProps","rowSelection","selectedRowKeys","Mobile_Number","margin","TextArea","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setHotlineErrorUpdated","setStepTwoHotLine","values","permissions","per","id1","reduce","accumulator","currentValue","can_respond","can_view_reports","created_by","concat","a","async","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","HotlinePopover","DeleteHotlineModal","hotline_id","hotlineName","GridPermission","deleteRecord","handleCheck","permissionData","setPermissionaData","changeDataSource","editable","checked","text","onDelete","locale","emptyText","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","ShowAllHotlines","updated_by","hotlines","hotline","hotlinesdata","hotlinedata","getHotlines","AssignHotlineModal","selectedRow","stepOneHotLineValues","getCheckValues","setVisible","ASSIGN_HOTLINE_TEXT_PART1","find","p","highlightText","str","conversation_id","toLowerCase","responder_conversation_name","RegExp","match","itemMessage","setStatus","urgencyLevel","setUrgencyLevel","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalInput","finalUrl","searchString","filteredData","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","convMsg","setConvMsg","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","setSearchBy","getHotlineMessages","document","getElementById","note","assigne","classList","count","highlightedMessage","getElementsByTagName","scrollIntoView","block","lastMessage","getElementsByClassName","messagevalue","convID","onSendMessageClick","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","messageLength","unread_messages_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","ctrlKey","textarea","querySelector","shiftKey","Send","SearchHotlineMessages","useRef","trim","statusFil","statusFilterData","urgencyFilterData","ugc","hotlineFilterData","ht","setSearchString","setConversations","HoltineMessagesLeftSection","showdiv","unreadCount","closable","onClose","removeFilterLevel","conversations","onConversationClick","fontWeight","dataForReceiveAPI","getConversations","NoHotlines","opacity","NoHotlineMessages","Spinner","tip","displayNewConvAtTop","updatedConversations","newConvo","updatedNewConvo","dummyArray","splice","increaseOverallCount","conversationsToDisplay","selectedConv","setUnreadCount","newConvFromDiffUser","incomingConversation","increaseOverallCountDuringFilters","allConversations","lineFilterData","newInitiatedConv","setAllConversations","unSetFilters","filterSocket","totalFiltersApplied","conversationIds","hotlineOrOpenlineFilter","openline","hotlineOrOpenlineConvoId","openline_id","hotlineOrOpenlineConvoName","openline_name","totalConversations","urgency","lineName","updatedConversation","setAppliedFilters","urgencyLevels","line","setUrgencyFilterData","setStatusFilterData","setLineFilterData","HotlineMessages","initialConv","setInitialConv","setHotlineFilterData","setRemoveFilter","setConversation","setSocket","setNewState","setShowDiv","setChatDiv","showBack","setshowBack","webSocket","allConversationIds","mergedConversations","convoID","WebSocket","onopen","onmessage","sendSocketMessage","lastWord","words","onclose","onerror","accessed_users","urgencyState","statusState","hotlineState","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","allAppliedFilters","urlWithFilters","disabledCount","LeftOutlined","receivedConversation","Header","openlineName","setOpenline","openlinesData","setOpenlinesData","oldOpenline","setOldOpenline","selectedOldOpenline","setSelectedOldOpenline","selectedOpenline","setSelectedOpenline","removeOpenline","rmOpen","openlineOptions","openlineId","listOfAssignedUsers","getOpenlineMessages","SearchOpenlineMessages","openlineFilterData","OpenlineMessagesLeftSection","NoOpenlines","NoOpenlineMessages","CreateOpenline","OpenlineMessages","setOpenlineFilterData","openlineState","openlineFilter","PermissionDenied","justifyContent","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","ENTER_NEW_PASSWORD","CONFIRM_YOUR_PASSWORD","EditSeededUser","handleEditOk","handleEditCancel","seededUserName","seededUserDetails","handleSeededUserOnChange","handleSeededUserDatePickerChange","validateMobile","handleSeededUserOnSelect","AddNewSeededUser","handleAddSeededUser","handleAddSeededUserCancel","OrgDetails","modalError","showModalError","setEmailValidationError","setMobileValidationError","setSeededUserName","seededUserEmail","setSeededUserEmail","setSeededUserDetails","editVisible","setEditVisible","showAddSeededUser","setShowAddSeededUser","org_id","date1","organizationDetails","setOrganizationDetails","useNotification","api","contextHolder","computedMatch","appendedUsers","seeded_user","soft_delete","finalUsers","onSeededUserEditSubmit","info","editOrg","onFinish","handleOrganizationOnSelect","orgDetails","EditSeededUsers","newSeededUser","EditOrg","setOrganizationName","organizationIdentifier","setOrganizationIdentifier","deleteClick","setDeleteClick","orgStatus","setOrgStatus","handleOrganizationOnChange","handleOrganizationDatePickerChange","EditHotLine","hotLineData","sethotLineData","hotlineStatus","setHotlineStatus","seticonHtml","sethotlineErrorUpdated","useLocation","eDate","dates","setIcon","saveHotLine","AddEmployee","xl","styles","box_bordered","Dragger","Upload","UploadFiles","accept","fileList","file","ImportFiles","uploadMessage","SetUploadMessage","uploaderror","Setuploaderror","setFile","reader","FileReader","onload","base64","result","readAsDataURL","originFileObj","formData","FormData","append","CreateManually","empId","department","role","userDetails","setUserDetails","handleUserOnChange","handleUserOnSelect","handleUserDatePickerChange","is_super_user","UploadImage","handleStepOneUpload","handleBeforeUpload","handleOnRemove","handlePollImagePreview","poll","listType","beforeUpload","onRemove","onPreview","previewVisible","previewTitle","previewImage","MultiChoice","tags","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","tag","setSingleChoiceResponse","showInput","input","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","tagsOption","pollResponse","onPressEnter","isLongTag","tagElem","edit_tag","onDoubleClick","add_tag","DatetimeModal","pollData","pollStartDate","pollEndDate","onPublish","disabledStartDate","disabledEndDate","range","end","onChangeStartDate","handlePollStartDatePickerChange","onChangeEndDate","handlePollEndDatePickerChange","onChangeStartTime","time","startTimeError","handlePollStartTimePickerChange","onChangeEndTime","endTimeError","handlePollEndTimePickerChange","pollName","utils","DateFnsUtils","container","justify","pollStartTime","KeyboardButtonProps","pollEndTime","formatAsYYYYMMDDHHmmss","formatAsHHmmss","formatAsMMMDDYYYY","formatAsHHmm","formatAsYYYYMMDD","formatAsDDMMYYYY","starsRating","isHalf","activeColor","newValue","PreviewPoll","setPollsDate","backtoEdit","isImage","attachmentName","pollHelpText","pollDocument","pollChartType","pollQuestion","pollQuestionType","pollRatingResponse","pollImageValidation","pollRatingType","pollState","setPollState","getBase64","poll_info","handlePollOnSelect","classNames","Smiley","Thermometer","Thumb","PaperClipOutlined","preview","url","substring","lastIndexOf","DateTimeModal","optionsData","option_text","create_poll","image","show_result_to_users","poll_result_chart_type","image_name","poll_question_type","question","poll_question_rating_type","momentUtil","start_time","end_time","document_name","emptyIcon","fullIcon","CreatePoll","setPoll","pollError","setpollError","previewPoll","setPreviewPoll","chartError","showChartError","uploadError","showuploadError","setIsImage","setAttachmentName","onCreateChange","checkChartType","checkDoucmentType","fileType","isPollNameDuplicate","sm_textarea","xlsxfileExt","pptxfileExt","docfileExt","csvfileExt","isValidDoc","isDocument","isLt5M","isLt10M","ExtendEndDate","endTime","poll_id","pollsData","extendPollDate","edate","emonth","eyear","formattedEndDate","DeletePollModal","deletePoll","pollId","OpenlinePopover","SHOW_PARENT","TreeSelect","treeData","MultiSelection","tProps","handlePollStatusOnSelect","treeCheckable","showCheckedStrategy","ShowAllPolls","setSearchValue","setFilterOptions","sdate","smonth","syear","finalStartDate","currentDate","startTime","startTimeWithDate","polls","PollPopover","DownOutlined","getDefaultPoll","is_out_of_the_box","update_on","getPollAsync","getPolls","pollsdata","setFilter","setSearch","setChecked","totalPolls","setTotalPolls","isInactivePollPresent","pollObject","mergePoll","PollResponse","setData","total_employee_count","total_response","percentage","EditPreviewPoll","editPoll","download","EditDateTimeModal","EditPoll","pollOptionText","pollID","uid","convertImgToBase64","callback","outputFormat","canvas","ctx","getContext","img","Image","crossOrigin","height","drawImage","dataURL","toDataURL","call","finalOptions","assign","poll_option_id","isMoment","update_poll","base64Img","atb","btoa","base64Blob","Blob","POLL_ALREADY_EXISTS","ExistingPolls","DuplicateDateTimeModal","dateError","finalEndDate","DuplicatePreviewPoll","CreateDuplicatePoll","DuplicatePoll","setDefaultPollDetails","setPollDetails","isPollNameUnique","CreateOpenlineStepOne","imageError","stepOneOpenLineInfo","handleStepOnePreview","openelineName","rotate","modalOk","CreateOpenlineStepTwo","stepTwoOpenLine","CreateOpenlineStepThree","stepOneOpenLine","action","OpenlineCreation","setImageError","imagename","setStepOneOpenLine","setStepTwoOpenLine","filename","create_openline","openline_image","openline_image_name","OpenlineDirectory","OpenlinePermission","SearchEmployee","OpenlinePermissioModal","assignedOpenLines","DeleteOpenlineModal","ShowAllOpenlines","openlines","openlinesdata","getOpenlines","EditOpenline","ImgfileList","openLineData","setOpenLineData","openlineErrorUpdated","setopenlineErrorUpdated","updateOpenLine","openLineId","CheckOpenlineName","Routes","EditProfile","exact","amorg","ImportFile","HotlineContainer","OpenlineContainer","PollsContainer","OrganizationContainer","decryptedPassword","localPwd","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","idleTimer","idleModal","showIdleModal","logoutModal","showLogoutModal","timedOut","setTimedOut","onIdle","reset","onAction","onActive","debounce","timeout","ReactDOM"],"mappings":"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","file":"static/js/main.3c5a29cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_sidebar\":\"manageEmp_no_sidebar__2IV_7\",\"box_bordered\":\"manageEmp_box_bordered__1L9Kq\",\"icon\":\"manageEmp_icon__2NaGI\",\"box_bordered_active\":\"manageEmp_box_bordered_active__1hEvf\"};","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-openlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-openline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-polls.648b5bd2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sm_textarea\":\"managePoll_sm_textarea__2gyc1\",\"poll_info\":\"managePoll_poll_info__35K0P\",\"circle_white\":\"managePoll_circle_white__1jSAt\",\"select_md\":\"managePoll_select_md__30Qzr\",\"ant-select-dropdown\":\"managePoll_ant-select-dropdown__38nnC\",\"edit_tag\":\"managePoll_edit_tag__zHGBk\",\"add_tag\":\"managePoll_add_tag__2VJTM\",\"ant-tag\":\"managePoll_ant-tag__3TI5u\"};","module.exports = __webpack_public_path__ + \"static/media/thermometer.34d42075.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thumb.11938490.svg\";","const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";\r\nexport const WEBSOCKET_HOTLINE_URL = \"ws://10.0.6.10:8000/ws/hotlineMessages/\";\r\nexport const WEBSOCKET_OPENLINE_URL =\r\n  \"ws://10.0.6.10:8000/ws/openlineMessages/\";\r\n","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      const data = response.data;\r\n      const userFName = CryptoJS.AES.encrypt(\r\n        data.user_details?.first_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userLName = CryptoJS.AES.encrypt(\r\n        data.user_details?.last_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const departmentId = CryptoJS.AES.encrypt(\r\n        data.user_details?.department_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgUserId = CryptoJS.AES.encrypt(\r\n        data.user_details?.org_user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const endDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.end_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const startDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.start_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userEmail = CryptoJS.AES.encrypt(\r\n        data.user_data?.email,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userMobile = CryptoJS.AES.encrypt(\r\n        data.user_data?.mobile_number,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgId = CryptoJS.AES.encrypt(\r\n        data.user_data?.organization_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userId = CryptoJS.AES.encrypt(\r\n        data.user_data?.user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amweb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_am_web_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_amcc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amorgcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_org_cc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amidb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_idb_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amseeded = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_seeded_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amapp = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_app_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userData = {\r\n        ...data,\r\n        user_data: {\r\n          ...data.user_data,\r\n          email: userEmail,\r\n          mobile_number: userMobile,\r\n          organization_id: orgId,\r\n          user_id: userId,\r\n          is_am_web_user: amweb,\r\n          is_amcc_user: amcc,\r\n          is_app_user: amapp,\r\n          is_org_cc_user: amorgcc,\r\n          is_idb_user: amidb,\r\n          is_seeded_user: amseeded,\r\n        },\r\n        user_details: {\r\n          ...data.user_details,\r\n          first_name: userFName,\r\n          last_name: userLName,\r\n          department_id: departmentId,\r\n          org_user_id: orgUserId,\r\n          end_date: endDate,\r\n          start_date: startDate,\r\n        },\r\n      };\r\n      AppStorage.set(\"user\", JSON.stringify(userData));\r\n      AppStorage.set(\r\n        \"current\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          current: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\nexport const POLL_SUCCESS = \"POLL_SUCCESS\";\r\nexport const POLL_FAIL = \"POLL_FAIL\";\r\n\r\n\r\n\r\n\r\n","export const STATUS_ACTIVE = \"Active\";\r\nexport const STATUS_INACTIVE = \"Inactive\";\r\nexport const AM_WEB = \"AM Web\";\r\nexport const AM_CC = \"AM CC\";\r\nexport const ORG_CC = \"Org CC\";\r\nexport const PIE_CHART = \"Pie Chart\";\r\nexport const BAR_CHART = \"Bar Chart\";\r\nexport const STAR_FORMAT = \"Star Format\";\r\nexport const SELECT_SINGLE = \"Select Single\";\r\nexport const SELECT_MULTIPLE = \"Select Multiple\";\r\nexport const STAR_RATING = \"Rating Type\";\r\nexport const MAKE_SUPER_USER = \"Make Super User\";\r\nexport const MAKE_ORG_USER = \"Make ORG User\";\r\nexport const MAKE_IDB_USER = \"Make IDB User\";\r\nexport const OPENLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const OPENLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const OPENLINE_CREATE_STEP3 = \"Review Details\";\r\nexport const HOTLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const HOTLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const HOTLINE_CREATE_STEP3 = \"Create Directory\";\r\nexport const URGENCY_LEVEL_LOW = \"Low\";\r\nexport const URGENCY_LEVEL_MEDIUM = \"Medium\";\r\nexport const URGENCY_LEVEL_HIGH = \"High\";\r\nexport const STATUS_OPEN = \"Open\";\r\nexport const STATUS_CLOSED = \"Closed\";\r\nexport const STATUS_NEW = \"New\";\r\nexport const AUDIT_LOG1 = \"Updated the Status to\";\r\nexport const AUDIT_LOG2 = \"Updated the Urgency level to\";\r\nexport const AUDIT_LOG3 = \"Added new Note\";\r\nexport const AUDIT_LOGH4 = \"View Hotline Converations\";\r\nexport const AUDIT_LOGO4 = \"View Openline Converations\";\r\nexport const SEXUAL_HARRASMENT = \"Sexual Harrasment\";\r\nexport const VIOLENCE = \"Violence\";\r\nexport const RACISM = \"Racism\";\r\nexport const CYBER_BULLYING = \"Cyber Bullying\";\r\nexport const FIGHT = \"Fight\";\r\nexport const DISCRIMINATION = \"Discrimination\";\r\nexport const SLAP = \"Slap\";\r\nexport const SCHEDULED = \"Scheduled\";\r\nexport const COMPLETED = \"Completed\";\r\nexport const SUPER_USER = \"Super User\";\r\nexport const IDB_USER = \"Idb User\";\r\nexport const APP_USER = \"APP\";\r\nexport const STARS = \"Stars\";\r\nexport const SMILEY = \"Smiley\";\r\nexport const THERMOMETER = \"Thermometer\";\r\nexport const THUMBSUP = \"ThumbsUp\";\r\nexport const LADDER = \"Ladder\";\r\n","export const POLLS = \"Polls\";\r\nexport const OPENLINES = \"Openlines\";\r\nexport const HOTLINES = \"Hotlines\";\r\nexport const HOTLINE = \"Hotline\";\r\nexport const OPENLINE = \"Openline\";\r\nexport const ORGANIZATIONS = \"Organizations\";\r\nexport const BROADCAST_MESSAGES = \"Broadcast Messages\";\r\nexport const HELP = \"Help\";\r\nexport const INFO = \"Info\";\r\nexport const ORGANIZATION_DETAILS = \"Organization Details\";\r\nexport const EDIT_DETAILS = \"Edit Details\";\r\nexport const MANAGE_POLLS = \"Manage Polls\";\r\nexport const PREVIEW_POLL = \"Preview Poll\";\r\nexport const SCHEDULE = \"Schedule\";\r\nexport const RESCHEDULE = \"Reschedule\";\r\nexport const OOTB_POLL = \"OOTB Poll\";\r\nexport const POLL_RESULTS = \"Poll Results\";\r\nexport const SHOW_INTRIM_RESULT = \"Show Intrim Results\";\r\nexport const SHOW_FINAL_RESULT = \"Show Final Results\";\r\nexport const SHOW_ALL_POLLS =\r\n  \"Show All Polls (includes Completed and Inactive Polls)\";\r\nexport const PUBLISH_POLL = \"Publish Poll\";\r\nexport const PUBLISH = \"Publish\";\r\nexport const MANAGE_EMPLOYEES = \"Manage Employees\";\r\nexport const MANAGE_HOTLINES = \"Manage Hotlines\";\r\nexport const CREATE_POLL = \"Create Poll\";\r\nexport const CREATE_ORGANIZATION = \"Create Organization\";\r\nexport const EDIT_ORGANIZATION = \"Edit Organization\";\r\nexport const EDIT_POLL = \"Edit Poll\";\r\nexport const VIEW_POLL = \"View Poll\";\r\nexport const VIEW = \"View\";\r\nexport const SEARCH_EMPLOYEE = \"Search Employee\";\r\nexport const SEARCH_USER = \"Search User\";\r\nexport const SEARCH = \"Search\";\r\nexport const ADD_USER = \"Add User\";\r\nexport const ADD_SEEDED_USER = \"Add Seeded User\";\r\nexport const EDIT_SEEDED_USERS = \"Edit Seeded Users\";\r\nexport const EDIT_SEEDED_USER = \"Edit Seeded User\";\r\nexport const EDIT_HOTLINE = \"Edit Hotline\";\r\nexport const NO_SEEDED_USERS = \"No Seeded User\";\r\nexport const CANCEL_MODAL = \"Cancel\";\r\nexport const UPDATE_MODAL = \"Update\";\r\nexport const ADD_TEXT_MODAL = \"Add\";\r\nexport const DELETE_TEXT_MODAL = \"Delete\";\r\nexport const OK_TEXT_MODAL = \"OK\";\r\nexport const YES_TEXT_MODAL = \"Yes\";\r\nexport const NO_TEXT_MODAL = \"No\";\r\nexport const CHANGE_PASSWORD_FOR = \"Change Password for\";\r\nexport const CHANGE_PASSWORD = \"Change Password\";\r\nexport const RESET_PASSWORD_LINK = \"Reset password for this user\";\r\nexport const RESET_PASSWORD = \"Reset Password\";\r\nexport const SET_NEW_PASSWORD = \"Set a new password for your account.\";\r\nexport const RESET_INVITE = \"Reset and Invite\";\r\nexport const RESET_PASSWORD_FOR = \"Reset password for \";\r\nexport const SUBMIT = \"Submit\";\r\nexport const NEXT = \"Next\";\r\nexport const BACK = \"Back\";\r\nexport const SAVE = \"Save\";\r\nexport const UPDATE = \"Update\";\r\nexport const CANCEL = \"Cancel\";\r\nexport const CREATE = \"Create\";\r\nexport const EDIT = \"Edit\";\r\nexport const DELETE = \"Delete\";\r\nexport const CREATE_INVITE = \"Create and Invite\";\r\nexport const ADD_ICON = \"Add Icon\";\r\nexport const SEEDED_USERS_DETAILS = \"Seeded Users Details\";\r\nexport const HOTLINE_DIRECTORY = \"Hotline Directory\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const CREATE_HOTLINE_DIRECTORY = \"Create Hotline Directory\";\r\nexport const CREATE_OPENLINE_DIRECTORY = \"Create Openline Directory\";\r\nexport const CREATE_HOTLINE_DIRECTORY_ENTRIES =\r\n  \"Create Hotline Directory Entries\";\r\nexport const CREATE_OPENLINE_DIRECTORY_ENTRIES =\r\n  \"Create Openline Directory Entries\";\r\nexport const DELETE_HOTLINE = \"Delete Hotline\";\r\nexport const ASSIGN = \"Assign\";\r\nexport const DONE = \"Done\";\r\nexport const ORGANIZATION_CREATE_STEP3 = \"Confirm Details\";\r\nexport const ACTIVITY = \"Activity\";\r\nexport const SHOW_LESS = \"Show less\";\r\nexport const SHOW = \"Show\";\r\nexport const OPENLINE_MESSAGES = \"Openline Messages\";\r\nexport const HOTLINE_MESSAGES = \"Hotline Messages\";\r\nexport const ASSIGNED_TO = \"Assigned To\";\r\nexport const FILTER = \"Filter\";\r\nexport const RESET = \"Reset\";\r\nexport const URGENCY_LEVEL = \"Urgency level\";\r\nexport const APPLY = \"Apply\";\r\nexport const CONVERSATIONS = \"Conversations\";\r\nexport const URGENCY = \"Urgency\";\r\nexport const NO_MESSAGES_FOUND = \"No messages found\";\r\nexport const NO_CONVERSATION_SELECETD = \"No Conversation Selected\";\r\nexport const SELECT_CONVERSATION = \"Select a Conversation to view\";\r\nexport const LAST_READ = \"Last Read\";\r\nexport const URGENCY_LEVEL_CHANGED = \"Urgency Level Changed\";\r\nexport const STATUS_CHANGED = \"Status Changed\";\r\nexport const SEND_MESSAGE_TEXT = \"Replying as Hotline representative\";\r\nexport const NOTES = \"Notes\";\r\nexport const TAKE_NOTE = \"Take a note\";\r\nexport const ADD_NOTE = \"Add note here\";\r\nexport const LOADING = \"Loading...\";\r\nexport const SIGN_IN = \"Sign In\";\r\nexport const SIGN_OUT = \"Sign Out\";\r\nexport const FORGOT_PASSWORD = \"Forgot Password\";\r\nexport const ADD_EMPLOYEE = \"Add Employee\";\r\nexport const MANAGE_ORGANIZATIONS = \"Manage Organizations\";\r\nexport const POLL_TITLE = \"Poll Title\";\r\nexport const POLL = \"Poll\";\r\nexport const UPLOAD = \"Upload\";\r\nexport const DOCUMENT_IMAGE = \" Document Or Image\";\r\nexport const CLOSE_TEXT_MODAL = \"Close\";\r\nexport const ADD_OPTION = \"Add Option\";\r\nexport const PREVIEW = \"Preview\";\r\nexport const EXTEND_END_DATE = \"Extend End Date\";\r\nexport const EXTEND_TEXT_MODAL = \"Extend Date\";\r\nexport const EDIT_OPENLINE = \"Edit Openline\";\r\nexport const UPLOAD_IMAGE = \"Upload Image\";\r\nexport const OPENLINE_DIRECTORY = \"Openline Directory\";\r\nexport const EDIT_PROFILE = \"Edit Profile\";\r\nexport const APPLY_FILTER = \"Apply Filter\";\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { AM_CC, AM_WEB, ORG_CC } from \"../../values\";\r\nimport { CHANGE_PASSWORD, EDIT_PROFILE, SIGN_OUT } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser } = this.props.userRole;\r\n    if (amCCUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"Org CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM WEB\", \"anonymoose\").toString()\r\n      );\r\n    }\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{userType}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">{EDIT_PROFILE}</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>{CHANGE_PASSWORD}</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>{SIGN_OUT}</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{userType}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    }\r\n    const password = props.current.includes('\"')\r\n      ? props.current.slice(1, -1)\r\n      : props.current;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log('INTERVAL');\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Anonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, current } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    current,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  MANAGE_EMPLOYEES,\r\n  HOTLINES,\r\n  OPENLINES,\r\n  HELP,\r\n  INFO,\r\n  BROADCAST_MESSAGES,\r\n  POLLS,\r\n} from \"../headings\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"employee\")) {\r\n        defaultKey = \"4\";\r\n      } else if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      } else if (this.props.data.location.pathname.includes(\"poll\")) {\r\n        defaultKey = \"3\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuFoldOutlined: MenuUnfoldOutlined ,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \" d-lg-block w-md-100 sider-width\"\r\n              : \"d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/hotlinedirectory\">{HOTLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/openlinedirectory\">{OPENLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/pollsdirectory\">{POLLS}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/manageemployees\">{MANAGE_EMPLOYEES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {BROADCAST_MESSAGES}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-help\" />\r\n                </span>\r\n              }\r\n            >\r\n              {HELP}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {INFO}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              {INFO}\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport { MANAGE_ORGANIZATIONS } from \"../../headings\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ?MenuFoldOutlined : MenuUnfoldOutlined  ,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-lg-block w-md-100 sider-width\"\r\n              : \" d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/amcc/manageorganizations\">{MANAGE_ORGANIZATIONS}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ShowDetails = (props) => {\r\n  const history = useHistory();\r\n  const path = `/amcc/orgdetails/${props.record.organization_id}`;\r\n\r\n  const showModal = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.orgName ? (\r\n        <a onClick={showModal}>{props.record.name}</a>\r\n      ) : props.orgId ? (\r\n        <a onClick={showModal}>{props.record.identifier}</a>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export const FIRST_NAME = \"First Name\";\r\nexport const LAST_NAME = \"Last Name\";\r\nexport const NAME = \"Name\";\r\nexport const RESPOND = \"Respond\";\r\nexport const EMAIL = \"Email\";\r\nexport const PASSWORD = \"Password\";\r\nexport const DATE = \"Date\";\r\nexport const MOBILE = \"Mobile\";\r\nexport const STATUS = \"Status\";\r\nexport const SELECT_STATUS = \"Select Status\";\r\nexport const SELECT_ROLE = \"Select Role\";\r\nexport const CURRENT_PASSWORD = \"Current Password\";\r\nexport const NEW_PASSWORD = \"New Password\";\r\nexport const CONFIRM_PASSWORD = \"Confirm Password\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const DESCRIPTION = \"Description\";\r\nexport const ACCESS = \"Access\";\r\nexport const ACTIONS = \"Actions\";\r\nexport const ORGANIZATION_NAME = \"Organization Name\";\r\nexport const ORGANIZATION_ID = \"Organization Id\";\r\nexport const HOTLINE_NAME = \"Hotline Name\";\r\nexport const OPENLINE_NAME = \"Openline Name\";\r\nexport const START_DATE = \"Start Date\";\r\nexport const END_DATE = \"End Date\";\r\nexport const SELECT_START_DATE = \"Select Start Date\";\r\nexport const SELECT_END_DATE = \"Select End Date\";\r\nexport const SELECT_START_TIME = \"Select Start Time\";\r\nexport const SELECT_END_TIME = \"Select End Time\";\r\nexport const PERMISSIONS = \"Permissions\";\r\nexport const DISPLAY_RESULTS_AS = \"Display final results as\";\r\nexport const QUESTION_TYPE = \"Question Type\";\r\nexport const QUESTION = \"Question\";\r\nexport const SHOW_RESULTS_POLL = \"Show result to users\";\r\nexport const SEE = \"See\";\r\nexport const PRIVACY_POLICY = \"Privacy Policy\";\r\nexport const RATING_TYPE = \"Rating Type\";\r\n","export const PASSWORD_CHANGED =\r\n  \"Your password has been changed successfully. Please login again with your new password.\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART1 =\r\n  \"You are about to delete the organization\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART2 =\r\n  \"Deleting organization would delete all records associated with it. Are you sure you want to delete organization\";\r\nexport const DELETE_CONFIRM = \"Are you sure you want to delete\";\r\nexport const ATLEAST_ONE_SEEDED_USER =\r\n  \"There should be at least one seeded user.\";\r\nexport const HOTLINE_UPDATED =\r\n  \"Hotline details have been changed successfully.\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART1 =\r\n  \"Create Hotline entries and assign them to managers,\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const DELETE_CONFIRM_HOTLINE =\r\n  \"Are you sure you want to delete this hotline?\";\r\nexport const DELETE_CONFIRM_OPENLINE =\r\n  \"Are you sure you want to delete this Openline?\";\r\nexport const NO_CONVERSATION_INITIATED =\r\n  \"No conversations are initiated for the hotlines assigned to you\";\r\nexport const NO_CONVERSATION_INITIATED_OPENLINE =\r\n  \"No conversations are initiated for the openlines assigned to you\";\r\nexport const LOGIN_PART1 = \"Control Center and Insights Dashboard\";\r\nexport const LOGIN_PART2 = \"Raising Voice Anonymously Made Easy\";\r\nexport const LOGIN_PART3 =\r\n  \"Login to manage AnonyMoose eco-system. This includes employees eligible to use the app and/or components such as Hotlines, Openlines, Polls and Surveys, Broadcast Messages and access to different features of the Insights Dashboard, through set of assignable permissions.\";\r\nexport const CREATE_NEW_ORGANIZATION_TEXT =\r\n  \"Create a new Org Id for your client's organization\";\r\nexport const POLL_DATES_TEXT = \"Select Date and Time to publish the\";\r\nexport const EXTEND_END_DATE_TEXT_PART1 = \"Select Date and Time to \";\r\nexport const EXTEND_END_DATE_TEXT_PART2 = \"extend the\";\r\nexport const EXTEND_END_DATE_TEXT_PART3 =\r\n  \" date has been extended successfully.\";\r\nexport const OOTB_TEXT = \"Out Of The Box (OOTB) Poll\";\r\nexport const CREATE_NEW_POLL_TEXT =\r\n  \"Create polls and publish them for all employees from here\";\r\nexport const ASSIGN_HOTLINE_TEXT_PART1 = \"Assign Permissions for \";\r\nexport const ASSIGN_HOTLINE_TEXT_PART2 =\r\n  \"Reply to Messages, Add Notes, Status & Urgency level\";\r\nexport const OPENLINE_PERMISSION_TEXT_PART1 = \"Employees with permissions to \";\r\nexport const HIT_ENTER_TO_ADD = \"Hit enter to add\";\r\nexport const PRIVACY_POLICY_TEXT_PART1 =\r\n  \"THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART1 =\r\n  \"Create Openline entries and assign them to managers,\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART1 = \"Status of \";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART2 =\r\n  \" has been changed successfully.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART3 =\r\n  \" can't be changed as the end date has been passed.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART4 =\r\n  \" can't be changed as this poll is completed.\";\r\nexport const ABOUT_TO_LOGOUT_TEXT =\r\n  \"You are about to log out. Click Ok to keep yourself logged in.\";\r\nexport const LOGGED_OUT_TEXT = \"You are logged out. Click Ok to log in again.\";\r\nexport const PERMISSION_DENIED =\r\n  \"You don't have access rights! Please contact your administrator.\";\r\nexport const ADD_SEEDED_USER_NOTIFICATION = \" has been added successfully.\";\r\nexport const EDIT_SEEDED_USER_NOTIFICATION_PART1 = \"Details for\";\r\nexport const EDIT_SEEDED_USER_NOTIFICATION_PART2 =\r\n  \" have been changed successfully.\";\r\nexport const DELETE_SEEDED_USER_NOTIFICATION =\r\n  \" has been deleted successfully.\";\r\nexport const EDIT_POLL_NOTIFICATION =\r\n  \"Poll details have been changed successfully.\";\r\nexport const POLL_RESULTS_NOT_AVAILABLE =\r\n  \"Results for this poll are not available at this moment.\";\r\nexport const ADD_EMPLOYEE_TEXT_PART1 =\r\n  \"Please create all employees for your organization who are eligible to use the app. You can either integrate with existing system, import through CSV or add each employee manually.\";\r\nexport const ADD_EMPLOYEE_TEXT_PART2 = \"Integrate with existing system\";\r\nexport const ADD_EMPLOYEE_TEXT_PART3 = \"Import through CSV\";\r\nexport const ADD_EMPLOYEE_TEXT_PART4 = \"Create Manually\";\r\nexport const IMPORT_CSV = \"Import CSV file\";\r\nexport const DOWNLOAD_SAMPLE_FILE = \"Download Sample File\";\r\nexport const DROP_FILES_TO_UPLOAD = \"Drop files to upload or Browse\";\r\nexport const REQUEST_PASSWORD_RESET = \"Request Password Reset Link\";\r\nexport const BACK_TO = \"Back to \";\r\nexport const FORGOT_PASSWORD_TEXT1 =\r\n  \" Enter your registered email address to request a password reset link.\";\r\nexport const RESET_EMAIL_SENT = \"Reset Password email has been sent to \";\r\nexport const PASSWORD_RESET_DONE =\r\n  \"Password has been reset successfully. Please login with your new password\";\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, notification, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport ShowDetails from \"../../containers/ShowDetails\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport moment from \"moment\";\r\nimport {\r\n  ACTIONS,\r\n  END_DATE,\r\n  ORGANIZATION_ID,\r\n  ORGANIZATION_NAME,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { CREATE_ORGANIZATION, ORGANIZATIONS, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      searchBy: \"\",\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations?.forEach((org) => {\r\n      org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.organizations !== nextProps.organizations) {\r\n      nextProps.organizations.forEach((org) => {\r\n        org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.organizations }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        name: record.name,\r\n        identifier: record.identifier,\r\n        organization_id: record.organization_id,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 2 : 1,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description:\r\n            STATUS_CHANGED_NOTIFICATION_PART1 +\r\n            record.name +\r\n            STATUS_CHANGED_NOTIFICATION_PART2,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: ORGANIZATION_NAME,\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgName />,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ORGANIZATION_ID,\r\n        dataIndex: \"\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgId />,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{ORGANIZATIONS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value={CREATE_ORGANIZATION} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    key=\"manageOrg\"\r\n                    rowKey=\"identifier\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","export const REQUIRED_MESSAGE =\r\n  \"Please fill the fields marked with asterisk(*)\";\r\nexport const MAX_CHAR_LIMIT = \"Max Characters limit reached.\";\r\nexport const VALID_EMAIL = \"Please enter a valid email address.\";\r\nexport const VALID_MOBILE = \"Please enter a valid mobile number.\";\r\nexport const OLD_PASSWORD = \"Old Password is wrong.\";\r\nexport const ENTER_CURRENT_PASSWORD = \"Please enter your current password!\";\r\nexport const ENTER_NEW_PASSWORD = \"Please enter your new password!\";\r\nexport const ENTER_PASSWORD = \"Please enter your password\";\r\nexport const PASSWORD_RULES =\r\n  \"Please enter a valid password. It should be atleast 8 characters long with atleast 1 each of Capital letter, small letter, numeric and special character.\";\r\nexport const CONFIRM_YOUR_PASSWORD = \"Please confirm your password!\";\r\nexport const PASSWORD_NOT_MATCH =\r\n  \"The two passwords that you entered do not match!\";\r\nexport const ENTER_DIRECTORY_NAME = \"Please enter directory name\";\r\nexport const UPLOAD_IMAGE_REQUIRED = \"Please upload an image.\";\r\nexport const HOTLINE_ALREADY_EXISTS =\r\n  \"Sorry! This hotline already exists in the system. Please use a different name.\";\r\nexport const ENTER_DESCRIPTION = \"Please enter description\";\r\nexport const SELECT_DATE = \"Please select date\";\r\nexport const SELECT_STATUS = \"Please select status\";\r\nexport const ASSIGN_USERS_HOTLINES = \"Please select user(s).\";\r\nexport const ORGANIZATION_NAME_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different name.\";\r\nexport const ORGANIZATION_ID_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different Id.\";\r\nexport const CREATE_ORGANIZATION_ERROR =\r\n  \"There is some difficulty while creating this organization.\";\r\nexport const STATUS_NOT_CHANGED =\r\n  \"Status can't be changed as the end date has been passed.\";\r\nexport const POLL_ALREADY_EXISTS =\r\n  \"Sorry! This Poll title already exists in the system. Please use a different name.\";\r\nexport const STAR_CHART_TYPE = \"Please select the Chart type as Star\";\r\nexport const PAST_TIME = \"Past Time can not be selected\";\r\nexport const OPENLINE_ALREADY_EXISTS =\r\n  \"Sorry! This openline already exists in the system. Please use a different name.\";\r\nexport const SELECT_USER_TYPE = \"Please select user type\";\r\nexport const UPLOAD_CSV_FILE = \"Please upload a csv file.\";\r\nexport const RESET_EMAIL_INCORRECT =\r\n  \"This email address is incorrect. Please enter a valid email address.\";\r\nexport const PASSWORD_NOT_RESET =\r\n  \"Password can not be reset at this moment. Please try again\";\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  orgIdCount,\r\n  orgNameCount,\r\n  setOrgNameAlreadyExists,\r\n  setOrgIDAlreadyExists,\r\n  orgIDAlreadyExists,\r\n  orgNameAlreadyExists,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganization/\",\r\n        { organization_name: stepOneOrganizationInfo.organizationName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgNameAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganizationID/\",\r\n        { orgID: stepOneOrganizationInfo.organizationId },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgIDAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      if (\r\n        orgNameAlreadyExists === \"status: false\" &&\r\n        orgIDAlreadyExists === \"status: false\"\r\n      ) {\r\n        showError(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_NAME}\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationName(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                />\r\n                {orgNameAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationName\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationName.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgNameAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_ID}\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationID(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={20}\r\n                />\r\n                {orgIDAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationId\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationId.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgIDAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgIdCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-100\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  DELETE,\r\n  DELETE_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n  NO_TEXT_MODAL,\r\n  OK_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport {\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART1,\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART2,\r\n  ATLEAST_ONE_SEEDED_USER,\r\n  DELETE_CONFIRM,\r\n} from \"../../messages\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.deleteOrg) this.props.handleCancel();\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg && !this.props.data.manageEmp ? (\r\n          <Button onClick={this.showBothModals}>{DELETE}</Button>\r\n        ) : this.props.data.manageEmp ? (\r\n          <a onClick={this.showModal}>{DELETE}</a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleOk}\r\n            centered\r\n            width={700}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={CANCEL_MODAL}\r\n            cancelText={DELETE_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART1}{\" \"}\r\n              <strong>{this.props.org}</strong>.{\" \"}\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART2}{\" \"}\r\n              <strong>{this.props.org}</strong>?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length === 1 ? (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            <p>{ATLEAST_ONE_SEEDED_USER}</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={OK_TEXT_MODAL}\r\n            cancelText={CANCEL_MODAL}\r\n          >\r\n            <p>{DELETE_CONFIRM}</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              {EDIT}\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              {EDIT}\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <a href=\"\">{EDIT}</a>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            data={props}\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal data={props} />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button, notification } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { EMAIL, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { ADD_SEEDED_USER } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n} from \"../../messages\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const data = moment(record.endDate).isValid() ? {\r\n      first_name: record.firstName,\r\n      last_name: record.lastName,\r\n      email: record.email,\r\n      mobile_number: record.mobile,\r\n      status_id: via === \"Active\" ? 2 : 1,\r\n      start_date: record.startDate\r\n        ? moment(record.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: record.endDate\r\n        ? moment(record.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: this.props.orgID,\r\n    } : {\r\n      first_name: record.firstName,\r\n      last_name: record.lastName,\r\n      email: record.email,\r\n      mobile_number: record.mobile,\r\n      status_id: via === \"Active\" ? 2 : 1,\r\n      start_date: record.startDate\r\n        ? moment(record.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: this.props.orgID,\r\n    };\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.firstName +\r\n          STATUS_CHANGED_NOTIFICATION_PART2,\r\n      });\r\n      this.props.statusOnClicked();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile.includes(\"+\") ? mobile : \"+\" + mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: EMAIL,\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status2 === 1 || record.status2 === \"1\" ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"w-100\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() =>\r\n                this.props.fromStepTwo\r\n                  ? this.props.showAddSeededUserForm()\r\n                  : this.props.addSeededUser()\r\n              }\r\n            >\r\n              {ADD_SEEDED_USER}\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n           <Grid\r\n            rowKey=\"unique_identifier\"\r\n            columns={columns}\r\n            data={this.state.data}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport moment from \"moment\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport { DATE, EMAIL, FIRST_NAME, LAST_NAME, STATUS, START_DATE, END_DATE } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, ADD_USER, UPDATE, NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleMobile,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n  fNameCount,\r\n  lNameCount,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n      showPasswordValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.startDate &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.startDate &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    if (stepTwoOrganizationInfo.mobile.length > 10) {\r\n      showMobileValidationError(false);\r\n    } else {\r\n      showMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={FIRST_NAME}\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {fNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={LAST_NAME}\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {lNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validatePassword(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n                {passwordValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid password.\r\n                    It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={EMAIL} value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={4} className=\"gutter-row\">\r\n              <FloatLabel label={START_DATE} value=\"date\">\r\n                <Form.Item\r\n                  className=\"input-control datepicker-wrapper required\"\r\n                >\r\n                  <DatePicker\r\n                    className=\"w-100 \"\r\n                    name=\"startDate\"\r\n                    value={stepTwoOrganizationInfo.startDate}\r\n                    onChange={(date) =>\r\n                      handleStepTwoDatePickerChange(date, \"startDate\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={4} className=\"gutter-row\">\r\n            <FloatLabel label={END_DATE} value=\"date\">\r\n              <Form.Item\r\n                className=\"input-control datepicker-wrapper\"\r\n              >\r\n                <DatePicker\r\n                  className=\"w-100 \"\r\n                  name=\"endDate\"\r\n                  value={stepTwoOrganizationInfo.endDate}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"endDate\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <PhoneInput\r\n                  country={\"us\"}\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={handleMobile}\r\n                  onBlur={validateMobile}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert message={VALID_MOBILE} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                {ADD_USER}\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                {UPDATE}\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            {BACK}\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            {NEXT}\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              {BACK}\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport { CREATE_ORGANIZATION_ERROR, REQUIRED_MESSAGE } from \"../../errors\";\r\nimport {\r\n  ADD_SEEDED_USER,\r\n  BACK,\r\n  CREATE_INVITE,\r\n  OK_TEXT_MODAL,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  loader,\r\n  apiError,\r\n  handleOk,\r\n  handleCancel,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Modal\r\n            visible={apiError}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            centered\r\n            width={500}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            {\" \"}\r\n            <p>{CREATE_ORGANIZATION_ERROR}</p>{\" \"}\r\n          </Modal>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_NAME}\r\n                value={stepOneOrganizationInfo.organizationName}\r\n              >\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_ID}\r\n                value={stepOneOrganizationInfo.organizationId}\r\n              >\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={STATUS}\r\n                value={stepOneOrganizationInfo.status1}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-100\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                      disabled\r\n                    >\r\n                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                      <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label={DATE} value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Col\r\n            span={24}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n            <div>\r\n              {\" \"}\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => addSeededUserFromThirdStep()}\r\n              >\r\n                {ADD_SEEDED_USER}\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <AssignedUsers\r\n                seededUsers={seededUsers}\r\n                handleEditUser={handleEditUser}\r\n                handleDelete={handleDelete}\r\n                fromStepThree\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Form.Item>\r\n            <div className=\"steps-action mt-5\">\r\n              <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n                {CREATE_INVITE}\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Spin>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CREATE_ORGANIZATION,\r\n  ORGANIZATIONS,\r\n  ORGANIZATION_CREATE_STEP3,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: ORGANIZATION_DETAILS,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: SEEDED_USERS_DETAILS,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: ORGANIZATION_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [orgNameAlreadyExists, setOrgNameExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDExists] = useState(\"\");\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    //s2Date: \"\",\r\n    mobile: \"\",\r\n    startDate:\"\",\r\n    endDate:\"\"\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = { ...stepTwoOrganization, userId: userID };\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n        //  password: \"\",\r\n        //s2Date: \"\",\r\n        mobile: \"\",\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      //s2Date: \"\",\r\n      mobile: \"\",\r\n      startDate:\"\",\r\n      endDate:\"\"\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const setOrgNameAlreadyExists = (value) => {\r\n    setOrgNameExists(value);\r\n  };\r\n\r\n  const setOrgIDAlreadyExists = (value) => {\r\n    setOrgIDExists(value);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    if (e.target.id === \"organizationId\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (\r\n      e.target.id === \"organizationName\" &&\r\n      e.target.value.length === 80\r\n    ) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    setLoader(true);\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = value.endDate ? {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n        // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.startDate  \r\n          ? moment(value.startDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.endDate\r\n          ? moment(value.endDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      } : {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n        // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.startDate  \r\n          ? moment(value.startDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_authentication_key_id:1\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"saveOrganization/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/amcc/manageorganizations\";\r\n      })\r\n      .catch((error) => {\r\n        if (error.message.includes(\"500\")) {\r\n          setApiError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>{ORGANIZATIONS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{CREATE_ORGANIZATION}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{CREATE_ORGANIZATION}</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            orgNameCount={orgNameCount}\r\n                            orgIdCount={orgIdCount}\r\n                            setOrgNameAlreadyExists={setOrgNameAlreadyExists}\r\n                            orgNameAlreadyExists={orgNameAlreadyExists}\r\n                            setOrgIDAlreadyExists={setOrgIDAlreadyExists}\r\n                            orgIDAlreadyExists={orgIDAlreadyExists}\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                            handleOk={handleOk}\r\n                            handleCancel={handleCancel}\r\n                            loader={loader}\r\n                            apiError={apiError}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nimport { CREATE_ORGANIZATION, MANAGE_ORGANIZATIONS } from \"../../headings\";\r\nimport { CREATE_NEW_ORGANIZATION_TEXT } from \"../../messages\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_ORGANIZATIONS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_ORGANIZATION_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            {CREATE_ORGANIZATION}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      const orgId = CryptoJS.AES.decrypt(\r\n        orgcc_user.user_data.organization_id,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8);\r\n      return parseInt(orgId);\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n  getPolls(filterStatus, search) {\r\n    if (filterStatus.status_id?.length > 0 && search.length > 0) {\r\n      return axios.get(\r\n        BASE_URL +\r\n          \"poll/?filter=\" +\r\n          JSON.stringify(filterStatus) +\r\n          \"&search=\" +\r\n          search,\r\n        options\r\n      );\r\n    } else if (filterStatus.status_id?.length > 0 && search.length === 0) {\r\n      return axios.get(\r\n        BASE_URL + \"poll/?filter=\" + JSON.stringify(filterStatus),\r\n        options\r\n      );\r\n    } else if (\r\n      (filterStatus.status_id?.length === undefined ||\r\n        filterStatus.status_id?.length === 0) &&\r\n      search.length > 0\r\n    ) {\r\n      return axios.get(BASE_URL + \"poll/?search=\" + search, options);\r\n    } else {\r\n      return axios.get(BASE_URL + \"poll/\", options);\r\n    }\r\n  }\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.manageOrgData === null) {\r\n      setLoader(true);\r\n    } else if (props.manageOrgData !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.manageOrgData]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.manageOrgData !== null &&\r\n    props.manageOrgData.length === 0 ? (\r\n    <CreateOrg />\r\n  ) : (\r\n    <ShowAllOrganizations\r\n      organizations={props.manageOrgData}\r\n      statusOnClicked={statusOnClicked}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { ADD_EMPLOYEE, MANAGE_EMPLOYEES, SEARCH } from \"../../../src/headings\";\r\nimport {\r\n  ACCESS,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  ACTIONS,\r\n} from \"../../labels\";\r\nimport {\r\n  IDB_USER,\r\n  ORG_CC,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n  SUPER_USER,\r\n  APP_USER,\r\n  AM_WEB,\r\n} from \"../../values\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        key: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag = false;\r\n          for (let property in res) {\r\n            if (res[property] === true) {\r\n              if (property === \"am_web\") {\r\n                property = AM_WEB;\r\n                flag = true;\r\n              }\r\n              if (property === \"org_cc_user\") {\r\n                property = ORG_CC;\r\n                flag = true;\r\n              }\r\n              if (property === \"idb_user\") {\r\n                property = IDB_USER;\r\n                flag = true;\r\n              }\r\n              if (property === \"super_user\") {\r\n                property = SUPER_USER;\r\n                flag = true;\r\n              }\r\n              if (property === \"app_user\") {\r\n                if (!flag) {\r\n                  property = APP_USER;\r\n                }\r\n              }\r\n\r\n              if (test.length === 0) {\r\n                test += property;\r\n              } else if (property !== \"app_user\") {\r\n                if (test.includes(\"APP\")) {\r\n                  test = property;\r\n                } else {\r\n                  test += \", \" + property;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status === 1 ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover manageEmp />,\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n      loader: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData, loader: false }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_EMPLOYEES}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/addemployee\">\r\n                        <Buttons value={ADD_EMPLOYEE} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.state.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"unique_identifier\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { VALID_EMAIL, RESET_EMAIL_INCORRECT } from \"../../errors\";\r\nimport { EMAIL } from \"../../labels\";\r\nimport {\r\n  BACK_TO,\r\n  FORGOT_PASSWORD_TEXT1,\r\n  LOGIN_PART1,\r\n  LOGIN_PART2,\r\n  REQUEST_PASSWORD_RESET,\r\n  RESET_EMAIL_SENT,\r\n} from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      error: false,\r\n      emailSent: false,\r\n      incorrectEMail: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  sendEmail = (e) => {\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (this.state.email !== \"\") {\r\n      const data = {\r\n        email: this.state.email,\r\n      };\r\n      this.setState({ error: false, loader: true });\r\n      axios\r\n        .post(BASE_URL + \"request-reset-email/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            this.setState({\r\n              emailSent: true,\r\n              loader: false,\r\n              incorrectEMail: false,\r\n            });\r\n          }\r\n        })\r\n        .catch(() =>\r\n          this.setState({\r\n            emailSent: false,\r\n            loader: false,\r\n            incorrectEMail: true,\r\n          })\r\n        );\r\n    } else {\r\n      this.setState({ error: true, emailSent: false, incorrectEMail: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.emailSent\r\n                ? RESET_EMAIL_SENT + this.state.email\r\n                : null}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{FORGOT_PASSWORD}</h2>\r\n                <p className=\"mt-3 font-weight-bold\">{FORGOT_PASSWORD_TEXT1}</p>\r\n              </Row>\r\n              <Form\r\n                {...layout}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <Spin spinning={this.state.loader} size=\"large\">\r\n                  {this.state.error && (\r\n                    <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  {this.state.incorrectEMail && (\r\n                    <Form.Item>\r\n                      <Alert\r\n                        message={RESET_EMAIL_INCORRECT}\r\n                        type=\"error\"\r\n                      ></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                  <FloatLabel label={EMAIL} value={this.state.email}>\r\n                    <Form.Item name=\"email\" className=\"required\">\r\n                      <Input\r\n                        type=\"Email\"\r\n                        className=\"input-control\"\r\n                        placeholder=\" \"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeUsername}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"primary-btn-lg w-100 mt-4\"\r\n                      onClick={(e) => this.sendEmail()}\r\n                    >\r\n                      {REQUEST_PASSWORD_RESET}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Spin>\r\n                <div className=\"justify-content-center d-flex\">\r\n                  <Button type=\"link\" className=\"link\">\r\n                    <Link to=\"/login\">\r\n                      {\" \"}\r\n                      {BACK_TO} <b className=\"pl-1\">{SIGN_IN}</b>\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Alert, Modal, Spin } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport {\r\n  OK_TEXT_MODAL,\r\n  RESET_PASSWORD,\r\n  SET_NEW_PASSWORD,\r\n} from \"../../headings\";\r\nimport { LOGIN_PART1, LOGIN_PART2 } from \"../../messages\";\r\nimport {\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n  PASSWORD_NOT_RESET,\r\n} from \"../../errors\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CONFIRM_PASSWORD, PASSWORD } from \"../../labels\";\r\nimport { PASSWORD_RESET_DONE } from \"../../messages\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      error: \"false\",\r\n      passwordValidationError: \"\",\r\n      resetDone: false,\r\n      resetFailed: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  onChangePassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeConfirmPassword = (e) => {\r\n    this.setState({\r\n      confirm_password: e.target.value,\r\n    });\r\n  };\r\n\r\n  resetPassword = (e) => {\r\n    const uidb64 = new URLSearchParams(this.props.location.search).get(\r\n      \"uidb64\"\r\n    );\r\n    const token = new URLSearchParams(this.props.location.search).get(\"token\");\r\n    const data = {\r\n      password: this.state.password,\r\n      token: token,\r\n      uidb64: uidb64,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (\r\n      this.state.password === this.state.confirm_password &&\r\n      !this.state.passwordValidationError\r\n    ) {\r\n      this.setState({ loader: true });\r\n      axios\r\n        .put(BASE_URL + \"password-reset-complete/\", data, options)\r\n        .then(() => {\r\n          this.setState({ resetDone: true, resetFailed: false, loader: false });\r\n        })\r\n        .catch(() => {\r\n          this.setState({ resetFailed: true, resetDone: false, loader: false });\r\n          setTimeout(() => {\r\n            this.handleOk();\r\n          }, 5000);\r\n        });\r\n    }\r\n  };\r\n\r\n  validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      this.setState({ passwordValidationError: true });\r\n    } else {\r\n      this.setState({ passwordValidationError: false });\r\n    }\r\n  };\r\n\r\n  handleOk = () => {\r\n    window.location = \"/login\";\r\n  };\r\n\r\n  handleCancel = () => {\r\n    window.location = \"/login\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{RESET_PASSWORD}</h2>\r\n                <p className=\"mt-3 font-weight-bold\">{SET_NEW_PASSWORD}</p>\r\n              </Row>\r\n              <Modal\r\n                visible={this.state.resetDone}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n                centered\r\n                width={350}\r\n                okButtonProps={{\r\n                  children: \"Custom OK\",\r\n                }}\r\n                cancelButtonProps={{ style: { display: \"none\" } }}\r\n                okText={OK_TEXT_MODAL}\r\n              >\r\n                <p>{PASSWORD_RESET_DONE}</p>\r\n              </Modal>\r\n              <Form>\r\n                <Spin spinning={this.state.loader} size=\"large\">\r\n                  {this.state.resetFailed && (\r\n                    <Alert\r\n                      message={PASSWORD_NOT_RESET}\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                  <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                    <Form.Item\r\n                      name=\"newpassword\"\r\n                      className=\"pwd required\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: ENTER_NEW_PASSWORD,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        htmlFor=\"newpassword\"\r\n                        id=\"newPwd\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        onBlur={(e) => this.validatePassword(e)}\r\n                      />\r\n                    </Form.Item>\r\n                    {this.state.passwordValidationError && (\r\n                      <Alert\r\n                        message={PASSWORD_RULES}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </FloatLabel>\r\n\r\n                  <FloatLabel\r\n                    label={CONFIRM_PASSWORD}\r\n                    value={this.state.confirm_password}\r\n                  >\r\n                    <Form.Item\r\n                      name=\"confirmpassword\"\r\n                      className=\"pwd confirpwd required\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: CONFIRM_YOUR_PASSWORD,\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                          validator(_, value) {\r\n                            if (\r\n                              !value ||\r\n                              getFieldValue(\"newpassword\") === value\r\n                            ) {\r\n                              return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject(PASSWORD_NOT_MATCH);\r\n                          },\r\n                        }),\r\n                      ]}\r\n                      dependencies={[\"newpassword\"]}\r\n                      hasFeedback\r\n                    >\r\n                      <Input.Password\r\n                        htmlFor=\"confirmpassword\"\r\n                        id=\"confirmPwd\"\r\n                        value={this.state.confirm_password}\r\n                        onChange={this.onChangeConfirmPassword}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"primary-btn-lg w-100 mt-4\"\r\n                      onClick={(e) => this.resetPassword(e)}\r\n                    >\r\n                      {RESET_PASSWORD}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Spin>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { PRIVACY_POLICY, SEE } from \"../../labels\";\r\nimport { PRIVACY_POLICY_TEXT_PART1 } from \"../../messages\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {SEE}\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          {PRIVACY_POLICY}\r\n        </Button>\r\n        <Modal\r\n          title={PRIVACY_POLICY}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              {PRIVACY_POLICY_TEXT_PART1}\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Spin, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\nimport { LOGIN_PART1, LOGIN_PART2, LOGIN_PART3 } from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\nimport { EMAIL, PASSWORD } from \"../../labels\";\r\nimport { ENTER_PASSWORD, VALID_EMAIL } from \"../../errors\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n      loading: false,\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n    //  const checkSoftDelete = JSON.parse(AppStorage.get(\"user\"));\r\n    //  console.log(\"checkSoftDelete\",checkSoftDelete)\r\n\r\n    //  if(checkSoftDelete.user_data.soft_delete){\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      }\r\n    }\r\n    //  }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                {LOGIN_PART3}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              <Spin spinning={this.state.loading} size=\"large\">\r\n                {this.state.error == \"true\" && (\r\n                  <Alert\r\n                    message=\"Invalid Login! Please try again\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n                <Row className=\"mb-4 d-none d-lg-block\">\r\n                  <h2>{SIGN_IN}</h2>\r\n                </Row>\r\n\r\n                <Form\r\n                  className=\"floating-label\"\r\n                  {...layout}\r\n                  onSubmit={this.handleLogin}\r\n                  ref={(c) => {\r\n                    this.form = c;\r\n                  }}\r\n                  name=\"basic\"\r\n                  initialValues={{\r\n                    remember: true,\r\n                  }}\r\n                >\r\n                  <FloatLabel label={EMAIL} value={this.state.email}>\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: VALID_EMAIL,\r\n                          type: \"email\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"Email\"\r\n                        className=\"input-control\"\r\n                        placeholder=\" \"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeUsername}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: ENTER_PASSWORD,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"password\"\r\n                        className=\"input-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <div className=\"forgot-pwd\">\r\n                    <Link to=\"/forgotpassword\"> {FORGOT_PASSWORD}</Link>\r\n                  </div>\r\n\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button\r\n                      disabled={!isEnabled}\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"primary-btn-lg w-100 mt-4\"\r\n                      onClick={() => {\r\n                        this.handleLogin();\r\n                      }}\r\n                    >\r\n                      {SIGN_IN}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </Spin>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n  HOTLINE_MESSAGES,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, Modal, Alert } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport AmWebSidebar from \"../hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CHANGE_PASSWORD_FOR, OK_TEXT_MODAL, SUBMIT } from \"../../headings\";\r\nimport { PASSWORD_CHANGED } from \"../../messages\";\r\nimport {\r\n  OLD_PASSWORD,\r\n  ENTER_CURRENT_PASSWORD,\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n} from \"../../errors\";\r\nimport { CURRENT_PASSWORD, NEW_PASSWORD, CONFIRM_PASSWORD } from \"../../labels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst ChangePassword = (props) => {\r\n  const type = AppStorage.get(\"userType\");\r\n  const userType = type\r\n    ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n    : \"\";\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n  const [passwordChanged, setPasswordChanged] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    showPasswordValidationError(false);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const userName = user\r\n      ? CryptoJS.AES.decrypt(\r\n          user.user_details.first_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) +\r\n        \" \" +\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.last_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    setUserName(userName);\r\n  }, []);\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (pwd.newPwd === pwd.confirmPwd && !passwordValidationError) {\r\n      axios\r\n        .put(BASE_URL + \"changepassword/\", data, options)\r\n        .then(() => {\r\n          setError(false);\r\n          setPasswordChanged(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n            setError(true);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">\r\n                    {CHANGE_PASSWORD_FOR} {userName}\r\n                  </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Modal\r\n                    visible={passwordChanged}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    width={350}\r\n                    okButtonProps={{\r\n                      children: \"Custom OK\",\r\n                    }}\r\n                    cancelButtonProps={{ style: { display: \"none\" } }}\r\n                    okText={OK_TEXT_MODAL}\r\n                  >\r\n                    <p>{PASSWORD_CHANGED}</p>\r\n                  </Modal>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={24} lg={8} className=\"gutter-row\">\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={OLD_PASSWORD}\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <FloatLabel\r\n                                label={CURRENT_PASSWORD}\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:  ENTER_CURRENT_PASSWORD ,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} lg={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={NEW_PASSWORD}\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: ENTER_NEW_PASSWORD,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                    onBlur={(e) => validatePassword(e)}\r\n                                  />\r\n                                </Form.Item>\r\n                                {passwordValidationError && (\r\n                                  <Alert\r\n                                    message={PASSWORD_RULES}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} lg={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={CONFIRM_PASSWORD}\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: CONFIRM_YOUR_PASSWORD,\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                      validator(_, value) {\r\n                                        if (\r\n                                          !value ||\r\n                                          getFieldValue(\"newpassword\") === value\r\n                                        ) {\r\n                                          return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(\r\n                                          PASSWORD_NOT_MATCH\r\n                                        );\r\n                                      },\r\n                                    }),\r\n                                  ]}\r\n                                  dependencies={[\"newpassword\"]}\r\n                                  hasFeedback\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              {SUBMIT}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ADD_ICON, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          {ADD_ICON}\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title={ADD_ICON}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"1\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={1}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SEXUAL_HARRASMENT}>\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"2\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={2}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={VIOLENCE}>\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"3\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={3}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={RACISM}>\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"4\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={4}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={CYBER_BULLYING}>\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"5\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={5}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={FIGHT}>\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"6\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={6}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={DISCRIMINATION}>\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"7\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={7}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SLAP}>\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport {\r\n  ENTER_DIRECTORY_NAME,\r\n  REQUIRED_MESSAGE,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  ENTER_DESCRIPTION,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n} from \"../../errors\";\r\nimport { DIRECTORY_NAME, DESCRIPTION, DATE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.directoryName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      if (hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0], \"hotlineErrorUpdated\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <FloatLabel\r\n        label={DIRECTORY_NAME}\r\n        value={stepOneHotLineInfo.directoryName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"directoryName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DIRECTORY_NAME },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneHotLineInfo.directoryName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"directoryName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"directoryName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated === \"status: false\" &&\r\n            stepOneHotLineInfo.directoryName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneHotLineInfo.directoryName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={HOTLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneHotLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DESCRIPTION },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            className=\"input-control\"\r\n            value={stepOneHotLineInfo.description}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneHotLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneHotLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneHotLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { FIRST_NAME, LAST_NAME, STATUS, ACCESS, MOBILE } from \"../../labels\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n          loader: false,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n          children:firstname,\r\n          props: {\r\n            \"data-title\": \"First Name\",\r\n          },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children:lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n        render: (Mobile_Number) => {\r\n          return {\r\n            children:Mobile_Number,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        }\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return {\r\n            children:<span>{test}</span>,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          }\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => {\r\n          return {\r\n            children:  <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>\r\n            {STATUS_ACTIVE}\r\n          </div>,\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n            }\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <Spin spinning={this.state.loader} size=\"large\">\r\n          <div id=\"no-more-tables\">\r\n            <Table\r\n              rowSelection={rowSelection}\r\n              columns={columns}\r\n              dataSource={this.state.filterData}\r\n              rowKey=\"unique_identifier\"\r\n            />\r\n          </div>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              style={{ margin: \"0 8px\" }}\r\n              onClick={() => this.stepTwoPrev()}\r\n              data-test=\"steptwoPrev\"\r\n            >\r\n              {BACK}\r\n            </Button>\r\n            <Button\r\n              className=\"md\"\r\n              type=\"primary\"\r\n              onClick={() => this.stepTwoNext()}\r\n              data-test=\"steptwoNext\"\r\n            >\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\nimport { SELECT_DATE } from \"../../errors\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { BACK, CREATE } from \"../../headings\";\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id=\"directoryName\"\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CREATE_HOTLINE_DIRECTORY,\r\n  HOTLINE_DIRECTORY,\r\n  CREATE_HOTLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n  HOTLINE_CREATE_STEP1,\r\n  HOTLINE_CREATE_STEP2,\r\n  HOTLINE_CREATE_STEP3,\r\n} from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: HOTLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const setNameValidHandle = (value, name) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>{HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_HOTLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content\">\r\n                        {current == 0 ? (\r\n                          <CreateHotlineStepOne\r\n                            next={next}\r\n                            stepOneHotLineInfo={stepOneHotLine}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            setNameValidHandle={setNameValidHandle}\r\n                            addIcon={addIcon}\r\n                            getIconText={getIconText}\r\n                            hotlineErrorUpdated={hotlineErrorUpdated}\r\n                            data-test=\"CreateHotlineStepOne\"\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateHotlineStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepOneHotLine={stepOneHotLine}\r\n                            stepTwoHotLine={stepTwoHotLine}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateHotlineStepThree\r\n                            prev={prev}\r\n                            createNewHotLine={createHotLine}\r\n                            stepOneHotLine={stepOneHotLine}\r\n                            stepTwoHotLine={stepTwoHotLine}\r\n                            getIconText={getIconText}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, HOTLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  HOTLINE_DIRECTORY_TEXT_PART1,\r\n  HOTLINE_DIRECTORY_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{HOTLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {HOTLINE_DIRECTORY_TEXT_PART1}\r\n                          <br />\r\n                          {HOTLINE_DIRECTORY_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <HotlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DELETE,\r\n  DELETE_HOTLINE,\r\n  NO_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport { DELETE_CONFIRM_HOTLINE } from \"../../messages\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{DELETE}</a>\r\n        <Modal\r\n          title={DELETE_HOTLINE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_HOTLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/edithotline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/edithotline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteHotlineModal\r\n          hotlineId={test.hotline_id}\r\n          hotlineName={test.name}\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    { title: NAME, dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  //const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n      // setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        //value={value}\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\nimport { CANCEL, SHOW, DONE } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getHotlineAssignEmpl/\" + this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedHotLines[index] = {\r\n      ...assignedHotLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedHotLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"getHotlineAssignEmpl/\" + value.hotline_id, options)\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <GridPermission\r\n              data={this.state.assignedHotLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  HOTLINE_NAME,\r\n  END_DATE,\r\n  START_DATE,\r\n  PERMISSIONS,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { HOTLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines?.forEach((hotline) => {\r\n      hotline.start_date = moment(hotline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      hotline.end_date = moment(hotline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.hotlines !== nextProps.hotlines) {\r\n      nextProps.hotlines?.forEach((hotline) => {\r\n        hotline.start_date = moment(hotline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        hotline.end_date = moment(hotline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.hotlines }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        help_text: record.help_text,\r\n        hotline_icon_id: record.hotline_icon_id,\r\n        hotline_id: record.hotline_id,\r\n        name: record.name,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"hotline/\" + data.hotline_id, data, options)\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: HOTLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Hotline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <PermissionModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <HotlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{HOTLINE_DIRECTORY}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create Hotline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.hotlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.hotlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.hotlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.hotlinesdata !== null &&\r\n    props.hotlinesdata.length === 0 ? (\r\n    <HotlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllHotlines\r\n      hotlines={props.hotlinesdata}\r\n      statusOnClicked={statusOnClicked}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React, { useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ASSIGN, CANCEL, DONE, HOTLINE } from \"../../headings\";\r\nimport { ASSIGN_HOTLINE_TEXT_PART2 } from \"../../messages\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        {ASSIGN}\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText={DONE}\r\n        cancelText={CANCEL}\r\n      >\r\n        <div>\r\n          {ASSIGN_HOTLINE_TEXT_PART1}{\" \"}\r\n          <b>{stepOneHotLineValues.directoryName}</b> {HOTLINE}\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          <Row className=\"mt-2 mt-lg-5\">\r\n            <Col span={6}></Col>\r\n            <Col span={14} className=\"small text-center\">\r\n              {ASSIGN_HOTLINE_TEXT_PART2}\r\n            </Col>\r\n          </Row>\r\n          {selectedRow &&\r\n            selectedRow.map((item) => {\r\n              let per = permissions.find((p) => p.user_id === item.user_id);\r\n              return (\r\n                <Row className=\"mt-3 d-flex justify-content-center\">\r\n                  <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                  <Col span={10}>\r\n                    <Checkbox\r\n                      checked={per && per.can_respond === 1 ? true : false}\r\n                      disabled\r\n                      onChange={(e) => handleCheck(item)}\r\n                    ></Checkbox>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","export const highlightText = (data, str) => {\r\n  let highlightedObject = {};\r\n  highlightedObject = data\r\n    .filter(\r\n      (item) =>\r\n        item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.responder_conversation_name\r\n          .toLowerCase()\r\n          .includes(str.toLowerCase()) ||\r\n        item.hotline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.message.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n    .map((item) => {\r\n      let conversation_id = item.conversation_id.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = item.responder_conversation_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = item.hotline_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = item.message.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      return {\r\n        ...item,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: item.hotline_id,\r\n        },\r\n      };\r\n    });\r\n  return highlightedObject;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  FILTER,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n  HOTLINE,\r\n  CANCEL,\r\n  APPLY,\r\n} from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n} from \"../../values\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserallHotlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{HOTLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  ADD_NOTE,\r\n  ADD_TEXT_MODAL,\r\n  CANCEL_MODAL,\r\n  TAKE_NOTE,\r\n} from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state = {\r\n      visible: false,\r\n      noteText: \"\",\r\n    };\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios.post(BASE_URL + \"addNotes/\", data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        this.setState({ noteText: \"\" });\r\n        this.formRef.current.resetFields();\r\n        this.props.getNoteData(res.data.conversation_id);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      noteText: \"\",\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          {TAKE_NOTE}\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title={TAKE_NOTE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n            <Form\r\n              className=\"input-md w-100\"\r\n              name=\"validate-other\"\r\n              ref={this.formRef}\r\n            >\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder={ADD_NOTE}\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { ACTIVITY } from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGH4,\r\n} from \"../../values\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: AUDIT_LOG1 },\r\n  { id: 2, name: AUDIT_LOG2 },\r\n  { id: 3, name: AUDIT_LOG3 },\r\n  { id: 4, name: AUDIT_LOGH4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport { STATUS } from \"../../labels\";\r\nimport {\r\n  LAST_READ,\r\n  STATUS_CHANGED,\r\n  URGENCY_LEVEL_CHANGED,\r\n  URGENCY_LEVEL,\r\n  SEND_MESSAGE_TEXT,\r\n} from \"../../headings\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n          document.getElementsByClassName(\"hotline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if ((e.altKey && e.keyCode === 13) || (e.ctrlKey && e.keyCode === 13)) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message.length > 0) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        hotline_id: conversation.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline_name.includes(\"</mark>\")) {\r\n      conversation.hotline_name = conversation.hotline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline_name = conversation.hotline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline_name = conversation.hotline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-start justify-content-lg-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={8} >\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={8} >\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ? (\r\n                        <Divider plain>{URGENCY_LEVEL_CHANGED}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\"Status has been changed to\") ? (\r\n                        <Divider plain>  {msg.message.replace(/ has been/g,'')}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ||\r\n                      msg.message.includes(\r\n                        \"Status has been changed to\"\r\n                      ) ? null : (\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"outgoing-msg hotline_message mb-3\"\r\n                              : \"incoming-msg hotline_message mb-2\"\r\n                          }\r\n                        >\r\n                          <div\r\n                            className={\r\n                              msg.is_responder_message\r\n                                ? \"sent-msg\"\r\n                                : \"received-msg\"\r\n                            }\r\n                          >\r\n                            <p\r\n                              ellipsis\r\n                              // className=\"w-75 pr-2 mb-1\"\r\n                              dangerouslySetInnerHTML={createMarkup(\r\n                                msg.message\r\n                              )}\r\n                            />\r\n\r\n                            <span className=\"time-date\">\r\n                              {\" \"}\r\n                              {moment(msg.created_on).isSame(moment(), \"day\")\r\n                                ? moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"hh:mm A\")\r\n                                : moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"MM:DD:YY | hh:mm A \")}\r\n                              {msg.is_responder_message &&\r\n                                ` | ${msg.first_name} ${msg.last_name}`}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    name={conversation.conversation_id}\r\n                    placeholder={SEND_MESSAGE_TEXT}\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchHotlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.hotlineFilterData.length > 0 && {\r\n        hotline_id: props.hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchHotlineMessages from \"./SearchHotlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  HOTLINE,\r\n  NO_MESSAGES_FOUND,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\nimport { NO_CONVERSATION_SELECETD, SELECT_CONVERSATION } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HoltineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Urgency Level has been changed to ${\r\n        event === 1 ? \"Low\" : event === 2 ? \"Medium\" : \"High\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Status has been changed to ${\r\n        event === 1 ? \"New\" : event === 2 ? \"Open\" : \"Closed\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.hotlineFilterData.map((hotline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyHotline\", hotline.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {HOTLINE}: <span>{hotline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchHotlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  hotlineFilterData={props.hotlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.hotline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoHotlines}\r\n                alt=\"No Hotlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoltineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED } from \"../../messages\";\r\n\r\nconst NoHotlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateHotline}\r\n        alt=\"No Hotlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED}</h5>\r\n    {/* <small>Select a hotline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Spin } from \"antd\";\r\nimport { LOADING } from \"../../headings\";\r\n\r\nconst Spinner = (loader) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <Spin size=\"large\" tip={LOADING} spinning={loader}></Spin>\r\n    </Row>\r\n  </Col>\r\n);\r\n\r\nexport default Spinner;\r\n","import * as AppStorage from \"./AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nexport const displayNewConvAtTop = (\r\n  updatedConversations,\r\n  newConvo,\r\n  updatedNewConvo\r\n) => {\r\n  let index = 0;\r\n  // create a replica of updatedConversations\r\n  const dummyArray = updatedConversations;\r\n  // return the index of the new incoming conversation from the list of all conversations.\r\n  updatedConversations.map((value) => {\r\n    if (\r\n      value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n      newConvo?.conversation_id\r\n    ) {\r\n      return (index = updatedConversations.indexOf(value));\r\n    }\r\n  });\r\n  // remove that new conversation from the dummy list temporarily.\r\n  dummyArray.splice(index, 1);\r\n  // push that removed incoming conversation on top of the list.\r\n  const finalConversations = [updatedNewConvo, ...dummyArray];\r\n  return finalConversations;\r\n};\r\n\r\nexport const increaseOverallCount = (\r\n  newConvo,\r\n  conversationsToDisplay,\r\n  selectedConv,\r\n  setUnreadCount\r\n) => {\r\n  const user = JSON.parse(AppStorage.get(\"user\"));\r\n  // return only that new incoming message which comes from a user other than logged in user.\r\n  const newConvFromDiffUser = conversationsToDisplay.filter(\r\n    (filter) =>\r\n      filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id &&\r\n      newConvo.created_by !==\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        ) &&\r\n      newConvo.conversation_id !== selectedConv\r\n  );\r\n  // return the new incoming message irrespective of any user.\r\n  const incomingConversation = conversationsToDisplay.filter(\r\n    (item) =>\r\n      item?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n      newConvo?.conversation_id\r\n  );\r\n  for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n    if (\r\n      incomingConversation[0]?.conversation_id\r\n        .toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvFromDiffUser[item]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") &&\r\n      incomingConversation[0].unread_messages_count === 0\r\n    ) {\r\n      setUnreadCount((unreadCount) => unreadCount + 1);\r\n    }\r\n  }\r\n};\r\n\r\nexport const increaseOverallCountDuringFilters = (\r\n  newState,\r\n  allConversations,\r\n  urgencyFilterData,\r\n  statusFilterData,\r\n  lineFilterData,\r\n  searchString,\r\n  newInitiatedConv,\r\n  setUnreadCount,\r\n  setAllConversations,\r\n  conversation\r\n) => {\r\n  if (\r\n    urgencyFilterData.length > 0 ||\r\n    statusFilterData.length > 0 ||\r\n    lineFilterData.length > 0 ||\r\n    searchString.length > 0\r\n  ) {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = allConversations?.filter(\r\n      (filter) =>\r\n        filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id &&\r\n        newState.created_by !==\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ) &&\r\n        newState?.conversation_id !== conversation.conversation_id\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = allConversations?.filter(\r\n      (item) =>\r\n        item?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newState?.conversation_id\r\n    );\r\n    for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[item]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0]?.unread_messages_count === 0\r\n      ) {\r\n        if (!newInitiatedConv.current) {\r\n          setUnreadCount((unreadCount) => unreadCount + 1);\r\n        }\r\n        const updatedAllConversations = allConversations.map((item) =>\r\n          item.conversation_id === newState?.conversation_id\r\n            ? {\r\n                ...item,\r\n                unread_messages_count: item.unread_messages_count + 1,\r\n              }\r\n            : item\r\n        );\r\n        setAllConversations(updatedAllConversations);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const unSetFilters = (via) => {\r\n  AppStorage.remove(\"urgencyLevels\");\r\n  AppStorage.remove(\"status\");\r\n  if (via === \"hotline\") {\r\n    AppStorage.remove(\"hotline\");\r\n  } else {\r\n    AppStorage.remove(\"openline\");\r\n  }\r\n  AppStorage.remove(\"searchBy\");\r\n  AppStorage.remove(\"ConvID\");\r\n};\r\n\r\nexport const filterSocket = (\r\n  totalFiltersApplied,\r\n  newConvo,\r\n  conversations,\r\n  conversationIds,\r\n  via\r\n) => {\r\n  const hotlineOrOpenlineFilter =\r\n    via === \"hotline\"\r\n      ? totalFiltersApplied.hotline\r\n      : totalFiltersApplied.openline;\r\n  const hotlineOrOpenlineConvoId =\r\n    via === \"hotline\" ? newConvo.hotline_id : newConvo.openline_id;\r\n  const hotlineOrOpenlineConvoName =\r\n    via === \"hotline\" ? newConvo.hotline_name : newConvo.openline_name;\r\n  let totalConversations = [];\r\n  if (\r\n    (totalFiltersApplied.status?.includes(newConvo.status_id.toString()) &&\r\n      totalFiltersApplied.urgency?.includes(\r\n        newConvo.urgency_level_id.toString()\r\n      ) &&\r\n      hotlineOrOpenlineFilter?.includes(hotlineOrOpenlineConvoId.toString()) &&\r\n      totalFiltersApplied.searchBy?.length > 0 &&\r\n      newConvo.conversation_id\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n    newConvo.responder_conversation_name\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n    hotlineOrOpenlineConvoName\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n    newConvo.message\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n  ) {\r\n    let conversation_id = newConvo.conversation_id.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let lineName = hotlineOrOpenlineConvoName.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let itemMessage = newConvo.message.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    const updatedConversation =\r\n      via === \"hotline\"\r\n        ? {\r\n            ...newConvo,\r\n            conversation_id: conversation_id,\r\n            responder_conversation_name: responder_conversation_name,\r\n            message: itemMessage,\r\n            hotline: {\r\n              name: lineName,\r\n              hotline_id: hotlineOrOpenlineConvoId,\r\n            },\r\n          }\r\n        : {\r\n            ...newConvo,\r\n            conversation_id: conversation_id,\r\n            responder_conversation_name: responder_conversation_name,\r\n            message: itemMessage,\r\n            openline: {\r\n              name: lineName,\r\n              openline_id: hotlineOrOpenlineConvoId,\r\n            },\r\n          };\r\n    if (\r\n      !conversationIds.includes(\r\n        updatedConversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      )\r\n    ) {\r\n      totalConversations = [...conversations, updatedConversation];\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n  } else {\r\n    totalConversations = conversations;\r\n  }\r\n  return totalConversations;\r\n};\r\n\r\nexport function setAppliedFilters(\r\n  urgencyLevels,\r\n  status,\r\n  line,\r\n  setUrgencyFilterData,\r\n  setStatusFilterData,\r\n  setLineFilterData,\r\n  via\r\n) {\r\n  setUrgencyFilterData(urgencyLevels);\r\n  setStatusFilterData(status);\r\n  setLineFilterData(line);\r\n  AppStorage.set(\r\n    \"urgencyLevels\",\r\n    Object.values(urgencyLevels)?.map((data) => data.value)\r\n  );\r\n  if (via === \"hotline\") {\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(line)?.map((data) => data.value)\r\n    );\r\n  } else {\r\n    AppStorage.set(\r\n      \"openline\",\r\n      Object.values(line)?.map((data) => data.value)\r\n    );\r\n  }\r\n  AppStorage.set(\r\n    \"status\",\r\n    Object.values(status)?.map((data) => data.value)\r\n  );\r\n}\r\n\r\nexport const createMarkup = (html) => {\r\n  return { __html: html };\r\n};\r\n","import { LeftOutlined } from \"@ant-design/icons\";\r\nimport { Form, Layout, Row } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport { HOTLINE_MESSAGES } from \"../../headings\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL, WEBSOCKET_HOTLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport \"./hotlineMessages.scss\";\r\nimport HoltineMessagesLeftSection from \"./HotlineMessagesLeftSection\";\r\nimport NoHotlineMessages from \"./NoHotlineMessages\";\r\nimport Spinner from \"./Spinner\";\r\nimport {\r\n  displayNewConvAtTop,\r\n  increaseOverallCount,\r\n  increaseOverallCountDuringFilters,\r\n  unSetFilters,\r\n  filterSocket,\r\n  setAppliedFilters,\r\n  createMarkup,\r\n} from \"../../utils/MessagesUtil\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const [showBack, setshowBack] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    // remove filters when component loads.\r\n    unSetFilters(\"hotline\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n    increaseOverallCountDuringFilters(\r\n      newState,\r\n      mergedConversations,\r\n      urgencyFilterData,\r\n      statusFilterData,\r\n      hotlineFilterData,\r\n      searchString,\r\n      newInitiatedConv,\r\n      setUnreadCount,\r\n      setAllConversations,\r\n      conversation\r\n    );\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_HOTLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n      if (newConvo.message.includes(\"Urgency Level has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const urgency =\r\n          lastWord.trim() === \"Low\" ? 1 : lastWord.trim() === \"Medium\" ? 2 : 3;\r\n        setUrgencyLevel(urgency);\r\n      } else if (newConvo.message.includes(\"Status has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const status =\r\n          lastWord.trim() === \"New\" ? 1 : lastWord.trim() === \"Open\" ? 2 : 3;\r\n        setStatus(status);\r\n      }\r\n    };\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        // return those conversations which have matched filters or search.\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds,\r\n            \"hotline\"\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n          increaseOverallCount(\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            selectedConv,\r\n            setUnreadCount\r\n          );\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          // append the new incoming conversation at the top of the existing list of conversations.\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    // set state values of applied filters.\r\n    setAppliedFilters(\r\n      selectedUrgency,\r\n      selectedStatus,\r\n      selectedHotline,\r\n      setUrgencyFilterData,\r\n      setStatusFilterData,\r\n      setHotlineFilterData,\r\n      \"hotline\"\r\n    );\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   hotline_id:\r\n    //     allAppliedFilters.hotline_id && allAppliedFilters.hotline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n    setshowBack(false)\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n      setshowBack(true)\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                {showBack ? (\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span> ) : (null) }\r\n                  {HOTLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Spinner loader={loader} />\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <HoltineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoHotlines={NoHotlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  hotlineFilterData={hotlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoHotlineMessages CreateHotline={CreateHotline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  HOTLINE_MESSAGES,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","export const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.openline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let openlineName = item.openline_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          openline: {\r\n            name: openlineName,\r\n            openline_id: item.openline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport {\r\n  APPLY,\r\n  CANCEL,\r\n  FILTER,\r\n  OPENLINE,\r\n  OPENLINES,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [openline, setOpenline] = useState([]);\r\n  const [openlinesData, setOpenlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldOpenline, setOldOpenline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldOpenline, setSelectedOldOpenline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedOpenline, setSelectedOpenline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserAllOpenlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.openline.name,\r\n            value: value.openline.openline_id,\r\n          })\r\n        );\r\n        setOpenlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, openline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyOpenline\") {\r\n      const removeOpenline = selectedOpenline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmOpen = openline.filter((ur) => ur !== props.removeFilter.value);\r\n      setOpenline(rmOpen);\r\n      setSelectedOpenline(removeOpenline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const openlineOptions = openlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setOpenline(oldOpenline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedOpenline(selectedOldOpenline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(openline.length > 0 && { openline_id: openline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldOpenline(openline);\r\n    setSelectedOldOpenline(selectedOpenline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedOpenline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleOpenline(checkedValues) {\r\n    let selected = selectedOpenline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(openlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedOpenline(selected);\r\n    setOpenline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedOpenline([]);\r\n      setOpenline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{OPENLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"openline\"\r\n                    options={openlineOptions}\r\n                    value={openline}\r\n                    onChange={handleOpenline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGO4,\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { ACTIONS } from \"../../labels\";\r\nimport { ACTIVITY } from \"../../headings\";\r\n\r\nconst audit_log = [\r\n  { id: 5, name: AUDIT_LOG1 },\r\n  { id: 6, name: AUDIT_LOG2 },\r\n  { id: 7, name: AUDIT_LOG3 },\r\n  { id: 8, name: AUDIT_LOGO4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineConversationActivity/?conversation_id=\" +\r\n          conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.openline_id);\r\n  }\r\n\r\n  getAssigne(openlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getOpenlineAssignEmpl/\" + openlineId, options)\r\n      .then((res) => {\r\n        let listOfAssignedUsers = [];\r\n        res.data.map((value) => {\r\n          const user = value.user.first_name + \" \" + value.user.last_name;\r\n          listOfAssignedUsers.push({ \"Assigned User_name\": user });\r\n          return listOfAssignedUsers;\r\n        });\r\n        this.setState({ assigneEmp: listOfAssignedUsers });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./openlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { LAST_READ, URGENCY_LEVEL } from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getOpenlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"openline_message\")[\r\n          document.getElementsByClassName(\"openline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getOpenlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if ((e.altKey && e.keyCode === 13) || (e.ctrlKey && e.keyCode === 13)) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        openline_id: conversation.openline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveOpenlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.openline_name.includes(\"</mark>\")) {\r\n      conversation.openline_name = conversation.openline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.openline_name = conversation.openline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.openline_name = conversation.openline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.openline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg openline_message mb-3\"\r\n                            : \"incoming-msg openline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            // className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD:YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.first_name} ${msg.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Openline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                openline_id={conversation.openline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchOpenlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.openlineFilterData.length > 0 && {\r\n        openline_id: props.openlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchOpenlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchOpenlineMessages from \"./SearchOpenlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  NO_CONVERSATION_SELECETD,\r\n  NO_MESSAGES_FOUND,\r\n  OPENLINE,\r\n  SELECT_CONVERSATION,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.openlineFilterData.map((openline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\r\n                          \"urgencyOpenline\",\r\n                          openline.value\r\n                        )\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {OPENLINE}: <span>{openline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchOpenlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  openlineFilterData={props.openlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.openline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoOpenlines}\r\n                alt=\"No Openlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED_OPENLINE } from \"../../messages\";\r\n\r\nconst NoOpenlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateOpenline}\r\n        alt=\"No Openlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED_OPENLINE}</h5>\r\n    {/* <small>Select a openline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoOpenlineMessages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Layout, Row, Col, Form, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./openlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport NoOpenlines from \"../../assets/images/no-openlines.svg\";\r\nimport { BASE_URL, WEBSOCKET_OPENLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport CreateOpenline from \"../../assets/images/create-openline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport OpenlineMessagesLeftSection from \"./OpenlineMessagesLeftSection\";\r\nimport NoOpenlineMessages from \"./NoOpenlineMessages\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\nimport { OPENLINE_MESSAGES } from \"../../headings\";\r\nimport {\r\n  displayNewConvAtTop,\r\n  increaseOverallCount,\r\n  increaseOverallCountDuringFilters,\r\n  unSetFilters,\r\n  filterSocket,\r\n  setAppliedFilters,\r\n  createMarkup,\r\n} from \"../../utils/MessagesUtil\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [openlineFilterData, setOpenlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    // remove filters when component loads.\r\n    unSetFilters(\"openline\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n    increaseOverallCountDuringFilters(\r\n      newState,\r\n      mergedConversations,\r\n      urgencyFilterData,\r\n      statusFilterData,\r\n      openlineFilterData,\r\n      searchString,\r\n      newInitiatedConv,\r\n      setUnreadCount,\r\n      setAllConversations,\r\n      conversation\r\n    );\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_OPENLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const openlineState =\r\n          AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let openlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          openline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (openlineState !== null && openlineState?.length > 0) {\r\n          openlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            openline: openlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        // return those conversations which have matched filters or search.\r\n        if (urgencyFilter || statusFilter || openlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds,\r\n            \"openline\"\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.openline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n          increaseOverallCount(\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            selectedConv,\r\n            setUnreadCount\r\n          );\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          openlineFilter &&\r\n          !openlineState.includes(newConvo.openline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          // append the new incoming conversation at the top of the existing list of conversations.\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedOpenline\r\n  ) => {\r\n    // set state values of applied filters.\r\n    setAppliedFilters(\r\n      selectedUrgency,\r\n      selectedStatus,\r\n      selectedOpenline,\r\n      setUrgencyFilterData,\r\n      setStatusFilterData,\r\n      setOpenlineFilterData,\r\n      \"openline\"\r\n    );\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const openlineState =\r\n      AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(openlineState &&\r\n        openlineState.length > 0 && { openline_id: openlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   openline_id:\r\n    //     allAppliedFilters.openline_id && allAppliedFilters.openline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      openlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"openlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  {OPENLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <Spin\r\n                      size=\"large\"\r\n                      tip=\"Loading...\"\r\n                      spinning={loader}\r\n                    ></Spin>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <OpenlineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoOpenlines={NoOpenlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  openlineFilterData={openlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoOpenlineMessages CreateOpenline={CreateOpenline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\nimport { PERMISSION_DENIED } from \"../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={this.props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={this.props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">{PERMISSION_DENIED}</h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionDenied;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  RESET_INVITE,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_FOR,\r\n  RESET_PASSWORD_LINK,\r\n} from \"../../headings\";\r\nimport { CONFIRM_PASSWORD, NEW_PASSWORD } from \"../../labels\";\r\nimport {ENTER_NEW_PASSWORD, CONFIRM_YOUR_PASSWORD} from \"../../errors\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>{RESET_PASSWORD_LINK}</span>\r\n        </Button>\r\n        <Modal\r\n          title={RESET_PASSWORD}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={RESET_INVITE}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                {RESET_PASSWORD_FOR}{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label={NEW_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {ENTER_NEW_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={CONFIRM_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {CONFIRM_YOUR_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n  Spin,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\nimport { CANCEL_MODAL, EDIT_SEEDED_USER, UPDATE_MODAL } from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  DATE,\r\n  EMAIL,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  START_DATE,\r\n  END_DATE\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst EditSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleEditOk}\r\n      onCancel={props.handleEditCancel}\r\n      centered\r\n      width={900}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={UPDATE_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Spin spinning={props.loader} size=\"large\">\r\n        <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n          <div>{EDIT_SEEDED_USER}</div>\r\n          <br />\r\n          <div className=\"avatar-wrapper pt-2 pb-4\">\r\n            <Avatar>{props.seededUserName.charAt(0)}</Avatar>\r\n            <span className=\"md-name\">{props.seededUserName}</span>\r\n          </div>\r\n          {props.error && (\r\n            <Form.Item>\r\n              <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n            </Form.Item>\r\n          )}\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={FIRST_NAME}\r\n                  value={props.seededUserDetails.firstName}\r\n                >\r\n                  <Form.Item name=\"firstName\" className=\"required\">\r\n                    <Input\r\n                      id=\"firstName\"\r\n                      className=\"input-control\"\r\n                      defaultValue={props.seededUserDetails.firstName}\r\n                      htmlFor=\"firstName\"\r\n                      value={props.seededUserDetails.firstName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.fNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={LAST_NAME}\r\n                  value={props.seededUserDetails.lastName}\r\n                >\r\n                  <Form.Item name=\"lastName\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"lastName\"\r\n                      htmlFor=\"lastName\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.lastName}\r\n                      value={props.seededUserDetails.lastName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.lNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={EMAIL} value={props.seededUserDetails.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"email\"\r\n                      htmlFor=\"email\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.email}\r\n                      value={props.seededUserDetails.email}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      onBlur={(e) => props.validateEmailAddress(e)}\r\n                      autoComplete=\"off\"\r\n                      disabled\r\n                    />\r\n                    {props.emailValidationError && (\r\n                      <Alert\r\n                        message={VALID_EMAIL}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              {/* <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={DATE} value=\"date2\">\r\n                  <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                    <RangePicker\r\n                      className=\"new w-100\"\r\n                      name=\"date2\"\r\n                      className=\"required\"\r\n                      value={props.seededUserDetails.date2}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col> */}\r\n              <Col span={24} md={4} className=\"gutter-row\">\r\n                  <FloatLabel label={START_DATE} value=\"date\">\r\n                    <Form.Item\r\n                      className=\"input-control datepicker-wrapper required\"\r\n                    >\r\n                      <DatePicker\r\n                        className=\"w-100 \"\r\n                        name=\"startDate\"\r\n                        value={props.seededUserDetails.startDate}\r\n                        onChange={(date) =>\r\n                          props.handleSeededUserDatePickerChange(date, \"startDate\")\r\n                        }\r\n                        disabledDate={props.disabledDate}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={4} className=\"gutter-row\">\r\n                <FloatLabel label={END_DATE} value=\"date\">\r\n                  <Form.Item\r\n                    className=\"input-control datepicker-wrapper\"\r\n                  >\r\n                    <DatePicker\r\n                      className=\"w-100 \"\r\n                      name=\"endDate\"\r\n                      value={props.seededUserDetails.endDate}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"endDate\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                <FloatLabel\r\n                  label={MOBILE}\r\n                  value={props.seededUserDetails.mobile}\r\n                >\r\n                  <Form.Item name=\"mobile\" className=\"required\">\r\n                    <PhoneInput\r\n                      country={\"us\"}\r\n                      id=\"mobile\"\r\n                      htmlFor=\"mobile\"\r\n                      defaultValue={props.seededUserDetails.mobile}\r\n                      value={props.seededUserDetails.mobile}\r\n                      onChange={props.handleMobile}\r\n                      onBlur={(e) => props.validateMobile(e)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.mobileValidationError && (\r\n                      <Alert\r\n                        message={VALID_MOBILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={STATUS}\r\n                  value={props.seededUserDetails.status2}\r\n                >\r\n                  <Form.Item className=\"required\" name=\"status2\">\r\n                    <>\r\n                      <Select\r\n                        className=\"input-control w-100 w-lg-50\"\r\n                        value={props.seededUserDetails.status2}\r\n                        htmlFor=\"status2\"\r\n                        className=\"required\"\r\n                        onSelect={(value) =>\r\n                          props.handleSeededUserOnSelect(value, \"status2\")\r\n                        }\r\n                      >\r\n                        <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                        <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                      </Select>\r\n                    </>\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n      <ResetPwdModal\r\n        user={props.seededUserDetails.firstName}\r\n        handleResetPasswordOk={props.handleResetPasswordOk}\r\n        handleResetPasswordCancel={props.handleResetPasswordCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSeededUser;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n  Spin,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { ADD_SEEDED_USER, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  MAX_CHAR_LIMIT,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  EMAIL,\r\n  DATE,\r\n  MOBILE,\r\n  STATUS,\r\n  START_DATE,\r\n  END_DATE\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleAddSeededUser}\r\n      onCancel={props.handleAddSeededUserCancel}\r\n      centered\r\n      width={1200}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={ADD_TEXT_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Spin spinning={props.loader} size=\"large\">\r\n        <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n          {props.error && (\r\n            <Form.Item>\r\n              <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n            </Form.Item>\r\n          )}\r\n          <Col span={24}>\r\n            <div>{ADD_SEEDED_USER}</div>\r\n            <br />\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={FIRST_NAME}\r\n                  value={props.seededUserDetails.firstName}\r\n                >\r\n                  <Form.Item name=\"firstName\" className=\"required\">\r\n                    <Input\r\n                      id=\"firstName\"\r\n                      className=\"input-control\"\r\n                      defaultValue={props.seededUserDetails.firstName}\r\n                      htmlFor=\"firstName\"\r\n                      value={props.seededUserDetails.firstName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.fNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={LAST_NAME}\r\n                  value={props.seededUserDetails.lastName}\r\n                >\r\n                  <Form.Item name=\"lastName\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"lastName\"\r\n                      htmlFor=\"lastName\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.lastName}\r\n                      value={props.seededUserDetails.lastName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.lNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              {/* <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Temporary Password\"\r\n                value={props.seededUserDetails.password}\r\n              >\r\n                <Form.Item name=\"password\" className=\"pwd required\">\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"password\"\r\n                    className=\"required\"\r\n                    id=\"password\"\r\n                    defaultValue={props.seededUserDetails.password}\r\n                    value={props.seededUserDetails.password}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validatePassword(e)}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {props.passwordValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid password.\r\n                      It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col> */}\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={EMAIL} value={props.seededUserDetails.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"email\"\r\n                      htmlFor=\"email\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.email}\r\n                      value={props.seededUserDetails.email}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      onBlur={(e) => props.validateEmailAddress(e)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.emailValidationError && (\r\n                      <Alert\r\n                        message={VALID_EMAIL}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              {/* <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={DATE} value=\"date2\">\r\n                  <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                    <RangePicker\r\n                      className=\"new w-100\"\r\n                      name=\"date2\"\r\n                      className=\"required\"\r\n                      value={props.seededUserDetails.date2}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col> */}\r\n              <Col span={24} md={4} className=\"gutter-row\">\r\n                  <FloatLabel label={START_DATE} value=\"date\">\r\n                    <Form.Item\r\n                      className=\"input-control datepicker-wrapper required\"\r\n                    >\r\n                      <DatePicker\r\n                        className=\"w-100 \"\r\n                        name=\"startDate\"\r\n                        value={props.seededUserDetails.startDate}\r\n                        onChange={(date) =>\r\n                          props.handleSeededUserDatePickerChange(date, \"startDate\")\r\n                        }\r\n                        disabledDate={props.disabledDate}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={4} className=\"gutter-row\">\r\n                <FloatLabel label={END_DATE} value=\"date\">\r\n                  <Form.Item\r\n                    className=\"input-control datepicker-wrapper\"\r\n                  >\r\n                    <DatePicker\r\n                      className=\"w-100 \"\r\n                      name=\"endDate\"\r\n                      value={props.seededUserDetails.endDate}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"endDate\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                <FloatLabel\r\n                  label={MOBILE}\r\n                  value={props.seededUserDetails.mobile}\r\n                >\r\n                  <Form.Item name=\"mobile\" className=\"required\">\r\n                    <PhoneInput\r\n                      country={\"us\"}\r\n                      id=\"mobile\"\r\n                      htmlFor=\"mobile\"\r\n                      value={props.seededUserDetails.mobile}\r\n                      onChange={props.handleMobile}\r\n                      onBlur={props.validateMobile}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.mobileValidationError && (\r\n                      <Alert\r\n                        message={VALID_MOBILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={STATUS}\r\n                  value={props.seededUserDetails.status2}\r\n                >\r\n                  <Form.Item className=\"required\" name=\"status2\">\r\n                    <>\r\n                      <Select\r\n                        className=\"input-control w-100 w-lg-50\"\r\n                        value={props.seededUserDetails.status2}\r\n                        htmlFor=\"status2\"\r\n                        className=\"required\"\r\n                        onSelect={(value) =>\r\n                          props.handleSeededUserOnSelect(value, \"status2\")\r\n                        }\r\n                      >\r\n                        <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                        <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                      </Select>\r\n                    </>\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewSeededUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  ORGANIZATION_DETAILS,\r\n  EDIT_DETAILS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport {\r\n  ADD_SEEDED_USER_NOTIFICATION,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART1,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n  DELETE_SEEDED_USER_NOTIFICATION,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrgDetails = (props) => {\r\n  const history = useHistory();\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    //date2: \"\",\r\n    mobile: \"\",\r\n    startDate:\"\",\r\n    endDate:\"\"\r\n  });\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              startDate : moment(value.start_date, \"YYYY-MM-DD\"),\r\n              endDate :  moment(value.end_date).isValid() && moment(value.end_date, \"YYYY-MM-DD\"), \r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n      setLoader(false);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onFinish = (values) => {};\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.startDate &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            startDate : moment(value.startDate, \"YYYY-MM-DD\"),\r\n            endDate : moment(value.endDate).isValid() && moment(value.endDate, \"YYYY-MM-DD\"),\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const editOrg = () => {\r\n    const path = `/amcc/editorg/${orgID}`;\r\n    history.push(path, \"viaOrgDetails\");\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = seededUserDetails.endDate ? {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.endDate\r\n        ? moment(seededUserDetails.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    } : {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description:\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART1 +\r\n          seededUserName +\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n        placement,\r\n      });\r\n      setLoader(false);\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      //date2: \"\",\r\n      mobile: \"\",\r\n      startDate:\"\",\r\n      endDate:\"\"\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      // password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.endDate\r\n        ? moment(seededUserDetails.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        startDate : moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n        endDate :  moment(newSeededUser.end_date).isValid() && moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.startDate &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        setLoader(true);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              seededUserDetails.firstName + ADD_SEEDED_USER_NOTIFICATION,\r\n            placement,\r\n          });\r\n          setLoader(false);\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: userName + DELETE_SEEDED_USER_NOTIFICATION,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{ORGANIZATION_DETAILS}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"d-flex justify-content-between align-items-center\"\r\n                      >\r\n                        <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n                        <div>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3\"\r\n                            onClick={() => editOrg()}\r\n                          >\r\n                            <span className=\"icon icon-pencil\" />\r\n                            <span className=\"pl-2 d-none d-block-md\">\r\n                              {EDIT_DETAILS}\r\n                            </span>\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                        <Avatar>{organizationDetails.name.charAt(0)}</Avatar>\r\n                        <span className=\"md-name\">\r\n                          {organizationDetails.name}\r\n                        </span>\r\n                      </div>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                        onFinish={onFinish}\r\n                        form={form}\r\n                      >\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_NAME}\r\n                                value={organizationDetails.name}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    htmlFor=\"organization name\"\r\n                                    defaultValue={organizationDetails.name}\r\n                                    value={organizationDetails.name}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_ID}\r\n                                value={organizationDetails.identifier}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"identifier\"\r\n                                    name=\"identifier\"\r\n                                    htmlFor=\"organization name\"\r\n                                    defaultValue={\r\n                                      organizationDetails.identifier\r\n                                    }\r\n                                    value={organizationDetails.identifier}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={organizationDetails.status}\r\n                              >\r\n                                <Form.Item className=\"required\" name=\"status1\">\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-100\"\r\n                                      value={organizationDetails.status}\r\n                                      htmlFor=\"status\"\r\n                                      onSelect={(value) =>\r\n                                        handleOrganizationOnSelect(\r\n                                          value,\r\n                                          \"status\"\r\n                                        )\r\n                                      }\r\n                                      disabled\r\n                                    >\r\n                                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                      <Option value=\"2\">\r\n                                        {STATUS_INACTIVE}\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date1\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date1\"\r\n                                    value={organizationDetails.date1}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <Row className=\"w-100\">\r\n                        <Col span={24} md={12}>\r\n                          <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          md={12}\r\n                          className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                        >\r\n                          <Button\r\n                            className=\"mr-4\"\r\n                            type=\"secondary\"\r\n                            onClick={() => addSeededUser()}\r\n                          >\r\n                            {ADD_SEEDED_USER}\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        {seededUsers.length > 0 ? (\r\n                          <AssignedUsers\r\n                            seededUsers={seededUsers}\r\n                            orgID={parseInt(orgID)}\r\n                            statusOnClicked={statusOnClicked}\r\n                            handleEditUser={handleEditSeededUser}\r\n                            handleDelete={handleDeleteSeededUser}\r\n                            addSeededUser={addSeededUser}\r\n                            viaEdit\r\n                            orgDetails\r\n                            seededUser\r\n                          />\r\n                        ) : (\r\n                          <Col span={24} lg={18}>\r\n                            <Row className=\"justify-content-center\">\r\n                              {NO_SEEDED_USERS}\r\n                            </Row>\r\n                          </Col>\r\n                        )}\r\n                        {editVisible ? (\r\n                          <EditSeededUsers\r\n                            error={modalError}\r\n                            handleEditOk={handleEditOk}\r\n                            handleEditCancel={handleEditCancel}\r\n                            seededUsers={seededUsers}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                            seededUserName={seededUserName}\r\n                            seededUserDetails={seededUserDetails}\r\n                            disabledDate={disabledDate}\r\n                            handleSeededUserOnChange={handleSeededUserOnChange}\r\n                            handleSeededUserDatePickerChange={\r\n                              handleSeededUserDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                            validateEmailAddress={validateEmailAddress}\r\n                            emailValidationError={emailValidationError}\r\n                            validateMobile={validateMobile}\r\n                            mobileValidationError={mobileValidationError}\r\n                            handleResetPasswordOk={handleResetPasswordOk}\r\n                            handleResetPasswordCancel={\r\n                              handleResetPasswordCancel\r\n                            }\r\n                            loader={loader}\r\n                          />\r\n                        ) : showAddSeededUser ? (\r\n                          <AddNewSeededUser\r\n                            error={modalError}\r\n                            handleAddSeededUser={handleAddSeededUser}\r\n                            handleAddSeededUserCancel={\r\n                              handleAddSeededUserCancel\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                            seededUserDetails={seededUserDetails}\r\n                            disabledDate={disabledDate}\r\n                            handleSeededUserOnChange={handleSeededUserOnChange}\r\n                            handleSeededUserDatePickerChange={\r\n                              handleSeededUserDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                            validateEmailAddress={validateEmailAddress}\r\n                            emailValidationError={emailValidationError}\r\n                            validateMobile={validateMobile}\r\n                            mobileValidationError={mobileValidationError}\r\n                            validatePassword={validatePassword}\r\n                            passwordValidationError={passwordValidationError}\r\n                            loader={loader}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrgDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport {\r\n  DELETE,\r\n  EDIT_ORGANIZATION,\r\n  UPDATE,\r\n  CANCEL,\r\n  EDIT_SEEDED_USERS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n} from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport {\r\n  ADD_SEEDED_USER_NOTIFICATION,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART1,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n  DELETE_SEEDED_USER_NOTIFICATION,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [orgNameAlreadyExists, setOrgNameAlreadyExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDAlreadyExists] = useState(\"\");\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [organizationIdentifier, setOrganizationIdentifier] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    //  password: \"\",\r\n    //date2: \"\",\r\n    mobile: \"\",\r\n    startDate:\"\",\r\n    endDate:\"\"\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [orgStatus, setOrgStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      setOrganizationIdentifier(data.organization.identifier);\r\n      setOrgStatus(data.organization.status_id.toString());\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              startDate: moment(value.start_date, \"YYYY-MM-DD\"),\r\n              endDate : moment(value.end_date).isValid() && moment(value.end_date, \"YYYY-MM-DD\"),\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setLoader(false);\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationName) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganization/\",\r\n          { organization_name: organizationDetails.name },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgNameAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgNameAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationIdentifier) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganizationID/\",\r\n          { orgId: organizationDetails.identifier },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgIDAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgIDAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.startDate &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            startDate : moment(value.startDate, \"YYYY-MM-DD\"),\r\n            endDate : moment(value.endDate).isValid() && moment(value.endDate, \"YYYY-MM-DD\")\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleOrganizationOnChange = (e) => {\r\n    if (e.target.id === \"identifier\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (e.target.id === \"name\" && e.target.value.length === 80) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setOrganizationDetails({\r\n      ...organizationDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteClick(false);\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      name: organizationDetails.name,\r\n      identifier: organizationDetails.identifier,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(organizationDetails.status),\r\n    };\r\n    const endDate = moment(organizationDetails.date1[1]).format(\"MM-DD-YYYY\");\r\n    if (organizationDetails.status !== orgStatus) {\r\n      if (new Date() < new Date(endDate)) {\r\n        if (organizationDetails.name && organizationDetails.identifier) {\r\n          if (\r\n            (orgNameAlreadyExists === \"status: false\" ||\r\n              organizationDetails.name === organizationName) &&\r\n            (orgIDAlreadyExists === \"status: false\" ||\r\n              organizationDetails.identifier === organizationIdentifier)\r\n          ) {\r\n            showError(false);\r\n            axios\r\n              .put(BASE_URL + \"saveOrganization/\", data, options)\r\n              .then(() => {\r\n                window.location = \"/amcc/manageorganizations\";\r\n              });\r\n          }\r\n        } else {\r\n          showError(true);\r\n        }\r\n      } else {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: STATUS_NOT_CHANGED,\r\n          placement,\r\n        });\r\n      }\r\n    } else {\r\n      if (organizationDetails.name && organizationDetails.identifier) {\r\n        showError(false);\r\n        setLoader(true);\r\n        axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n          window.location = \"/amcc/manageorganizations\";\r\n        });\r\n      } else {\r\n        showError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = seededUserDetails.endDate ? {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.endDate\r\n        ? moment(seededUserDetails.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    } : {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description:\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART1 +\r\n          seededUserName +\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n        placement,\r\n      });\r\n      setLoader(false);\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    if (props.location.state) {\r\n      const path = `/amcc/orgdetails/${orgID}`;\r\n      history.push(path);\r\n    } else {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      //date2: \"\",\r\n      mobile: \"\",\r\n      startDate:\"\",\r\n      endDate:\"\"\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = seededUserDetails.endDate ? {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.endDate\r\n        ? moment(seededUserDetails.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    } : {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        startDate : moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n        endDate : moment(newSeededUser.end_date).isValid() && moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.startDate &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        setLoader(true);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              seededUserDetails.firstName + ADD_SEEDED_USER_NOTIFICATION,\r\n            placement,\r\n          });\r\n          setLoader(false);\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: userName + DELETE_SEEDED_USER_NOTIFICATION,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{EDIT_ORGANIZATION}</h1>\r\n              </Row>\r\n\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"d-flex justify-content-between align-items-center\"\r\n                      >\r\n                        <h6 className=\"py-3 mb-0\">{EDIT_ORGANIZATION}</h6>\r\n                        <div>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3 deleteOrg\"\r\n                            onClick={onDelete}\r\n                          >\r\n                            <span className=\"icon icon-delete\" />\r\n                            <span className=\"d-none d-md-inline-flex deleteOrg\">\r\n                              {DELETE}\r\n                            </span>\r\n                          </Button>\r\n                          {deleteClick ? (\r\n                            <DeleteModal\r\n                              org={organizationName}\r\n                              handleDelete={handleDeleteOrganization}\r\n                              handleCancel={handleCancelDelete}\r\n                              deleteOrg\r\n                            />\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </Col>\r\n                      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                        <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                        <span className=\"md-name\">{organizationName}</span>\r\n                      </div>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        form={form}\r\n                      >\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message={REQUIRED_MESSAGE}\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Organization Name\"\r\n                                value={organizationDetails.name}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    className=\"required\"\r\n                                    defaultValue={organizationDetails.name}\r\n                                    value={organizationDetails.name}\r\n                                    onChange={(e) =>\r\n                                      handleOrganizationOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => CheckOrganizationName(e)}\r\n                                    htmlFor=\"name\"\r\n                                    autoComplete=\"off\"\r\n                                    maxLength={80}\r\n                                  />\r\n                                  {orgNameAlreadyExists === \"status: false\" &&\r\n                                    organizationDetails.name\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    organizationDetails.name.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {orgNameAlreadyExists == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                                {orgNameCount && (\r\n                                  <Form.Item>\r\n                                    <Alert\r\n                                      message={MAX_CHAR_LIMIT}\r\n                                      type=\"error\"\r\n                                    ></Alert>\r\n                                  </Form.Item>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_ID}\r\n                                value={organizationDetails.identifier}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control edit-input\"\r\n                                    name=\"identifier\"\r\n                                    id=\"identifier\"\r\n                                    htmlFor=\"identifier\"\r\n                                    className=\"required\"\r\n                                    defaultValue={\r\n                                      organizationDetails.identifier\r\n                                    }\r\n                                    value={organizationDetails.identifier}\r\n                                    onChange={(e) =>\r\n                                      handleOrganizationOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => CheckOrganizationID(e)}\r\n                                    autoComplete=\"off\"\r\n                                    maxLength={20}\r\n                                  />\r\n                                  {orgIDAlreadyExists === \"status: false\" &&\r\n                                    organizationDetails.identifier\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    organizationDetails.identifier.length >\r\n                                      0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {orgIDAlreadyExists == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                                {orgIdCount && (\r\n                                  <Form.Item>\r\n                                    <Alert\r\n                                      message={MAX_CHAR_LIMIT}\r\n                                      type=\"error\"\r\n                                    ></Alert>\r\n                                  </Form.Item>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={organizationDetails.status}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"status\"\r\n                                >\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-100\"\r\n                                      value={organizationDetails.status}\r\n                                      htmlFor=\"status\"\r\n                                      onSelect={(value) =>\r\n                                        handleOrganizationOnSelect(\r\n                                          value,\r\n                                          \"status\"\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                      <Option value=\"2\">\r\n                                        {STATUS_INACTIVE}\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date1\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date1\"\r\n                                    value={organizationDetails.date1}\r\n                                    onChange={(date) =>\r\n                                      handleOrganizationDatePickerChange(\r\n                                        date,\r\n                                        \"date1\"\r\n                                      )\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Form.Item>\r\n                          <div className=\"steps-action mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onOrgEditSubmit}\r\n                            >\r\n                              {UPDATE}\r\n                            </Button>\r\n                            <Button\r\n                              className=\"ml-4\"\r\n                              type=\"secondary\"\r\n                              onClick={cancelEditing}\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      md={12}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">{EDIT_SEEDED_USERS}</h6>\r\n                    </Col>\r\n                    <Col\r\n                      span={24}\r\n                      md={12}\r\n                      className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                    >\r\n                      <Button\r\n                        className=\"mr-4\"\r\n                        type=\"secondary\"\r\n                        onClick={() => addSeededUser()}\r\n                      >\r\n                        {ADD_SEEDED_USER}\r\n                      </Button>\r\n                    </Col>\r\n                    {seededUsers.length > 0 ? (\r\n                      <AssignedUsers\r\n                        seededUsers={seededUsers}\r\n                        statusOnClicked={statusOnClicked}\r\n                        orgID={parseInt(orgID)}\r\n                        handleEditUser={handleEditSeededUser}\r\n                        handleDelete={handleDeleteSeededUser}\r\n                        addSeededUser={addSeededUser}\r\n                        viaEdit\r\n                        seededUser\r\n                      />\r\n                    ) : (\r\n                      <Col span={24} lg={18}>\r\n                        <Row className=\"justify-content-center\">\r\n                          {NO_SEEDED_USERS}\r\n                        </Row>\r\n                      </Col>\r\n                    )}\r\n                    {editVisible ? (\r\n                      <EditSeededUsers\r\n                        error={modalError}\r\n                        handleEditOk={handleEditOk}\r\n                        handleEditCancel={handleEditCancel}\r\n                        seededUsers={seededUsers}\r\n                        seededUserName={seededUserName}\r\n                        fNameCount={fNameCount}\r\n                        lNameCount={lNameCount}\r\n                        seededUserDetails={seededUserDetails}\r\n                        disabledDate={disabledDate}\r\n                        handleSeededUserOnChange={handleSeededUserOnChange}\r\n                        handleSeededUserDatePickerChange={\r\n                          handleSeededUserDatePickerChange\r\n                        }\r\n                        handleMobile={handleMobile}\r\n                        handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                        validateEmailAddress={validateEmailAddress}\r\n                        emailValidationError={emailValidationError}\r\n                        validateMobile={validateMobile}\r\n                        mobileValidationError={mobileValidationError}\r\n                        handleResetPasswordOk={handleResetPasswordOk}\r\n                        handleResetPasswordCancel={handleResetPasswordCancel}\r\n                        loader={loader}\r\n                      />\r\n                    ) : showAddSeededUser ? (\r\n                      <AddNewSeededUser\r\n                        error={modalError}\r\n                        handleAddSeededUser={handleAddSeededUser}\r\n                        handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                        seededUsers={seededUsers}\r\n                        fNameCount={fNameCount}\r\n                        lNameCount={lNameCount}\r\n                        seededUserDetails={seededUserDetails}\r\n                        disabledDate={disabledDate}\r\n                        handleSeededUserOnChange={handleSeededUserOnChange}\r\n                        handleSeededUserDatePickerChange={\r\n                          handleSeededUserDatePickerChange\r\n                        }\r\n                        handleMobile={handleMobile}\r\n                        handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                        validateEmailAddress={validateEmailAddress}\r\n                        emailValidationError={emailValidationError}\r\n                        validatePassword={validatePassword}\r\n                        passwordValidationError={passwordValidationError}\r\n                        validateMobile={validateMobile}\r\n                        mobileValidationError={mobileValidationError}\r\n                        loader={loader}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n  ENTER_DIRECTORY_NAME,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  SELECT_DATE,\r\n  ENTER_DESCRIPTION,\r\n} from \"../../errors\";\r\nimport { HOTLINE_UPDATED } from \"../../messages\";\r\nimport { CANCEL, EDIT_HOTLINE, UPDATE } from \"../../headings\";\r\nimport {\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = (props) => {\r\n  const [hotLineData, sethotLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    hotline_icon_id: \"\",\r\n    hotline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [hotlineStatus, setHotlineStatus] = useState(\"\");\r\n  const [iconHtml, seticonHtml] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [error, showError] = useState(false);\r\n\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n\r\n  const addIcon = (values, id) => {\r\n    sethotLineData({\r\n      ...hotLineData,\r\n      hotline_icon_id: id,\r\n    });\r\n    seticonHtml(values);\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setIcon = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return '<span class=\"icon icon-sexual-harassment-1 ant-tooltip-open\"></span>';\r\n      case \"2\":\r\n        return '<span class=\"icon icon-violence ant-tooltip-open\"></span>';\r\n      case \"3\":\r\n        return '<span class=\"icon icon-racism ant-tooltip-open\"></span>';\r\n      case \"4\":\r\n        return '<span class=\"icon icon-cyber-bullying ant-tooltip-open\"></span>';\r\n      case \"5\":\r\n        return '<span class=\"icon icon-fight ant-tooltip-open\"></span>';\r\n      case \"6\":\r\n        return '<span class=\"icon icon-discrimination ant-tooltip-open\"></span>';\r\n      case \"7\":\r\n        return '<span class=\"icon icon-slap ant-tooltip-open\"></span>';\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const eDate = moment(location.state.end_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    sethotLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      hotline_icon_id: location.state.hotline_icon_id,\r\n      hotline_id: location.state.hotline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    setHotlineStatus(location.state.status_id.toString());\r\n    const test = setIcon(location.state.hotline_icon_id.toString());\r\n    seticonHtml(test);\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: value });\r\n  };\r\n\r\n  const editHotline = (e) => {\r\n    if (\r\n      hotLineData.name &&\r\n      hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      hotLineData.help_text &&\r\n      hotLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      hotLineData.status_id &&\r\n      hotLineData.hotline_icon_id &&\r\n      hotLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const endDate = moment(hotLineData.start_date[1]).format(\"MM-DD-YYYY\");\r\n      const data = {\r\n        end_date: moment(hotLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: hotLineData.help_text,\r\n        hotline_icon_id: hotLineData.hotline_icon_id,\r\n        hotline_id: hotLineData.hotline_id,\r\n        name: hotLineData.name,\r\n        start_date: moment(hotLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(hotLineData.status_id),\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      if (\r\n        hotlineErrorUpdated == \"status: false\" ||\r\n        hotLineData.name === location.state.name\r\n      ) {\r\n        if (hotlineStatus !== hotLineData.status_id) {\r\n          if (new Date() < new Date(endDate)) {\r\n            saveHotLine(data);\r\n          } else {\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: STATUS_NOT_CHANGED,\r\n              placement,\r\n            });\r\n          }\r\n        } else {\r\n          saveHotLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  const saveHotLine = (data) => {\r\n    const token = authHeader();\r\n    let hotLineId = hotLineData.hotline_id;\r\n    delete hotLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"hotline/\" + hotLineId, data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: HOTLINE_UPDATED,\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkhotline/\",\r\n          { hotline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            sethotlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      sethotlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_HOTLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n\r\n                    <FloatLabel label={DIRECTORY_NAME} value={hotLineData.name}>\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: { ENTER_DIRECTORY_NAME },\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={hotLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckHotlineName(e)}\r\n                          id=\"name\"\r\n                          name=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {hotlineErrorUpdated == \"status: false\" &&\r\n                          hotLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          hotLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {hotlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={HOTLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={hotLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={hotLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            id=\"help_text\"\r\n                            name=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          disabledDate={disabledDate}\r\n                          value={hotLineData.start_date}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: { SELECT_DATE },\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={hotLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={hotLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <AddIcoModal\r\n                          data-test=\"addIconComponent\"\r\n                          addIcon={addIcon}\r\n                        />\r\n                        {getIconText(\r\n                          hotLineData.hotline_icon_id.toString()\r\n                        ) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      hotLineData.hotline_icon_id.toString()\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(\r\n                                      hotLineData.hotline_icon_id.toString()\r\n                                    )}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editHotline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditHotLine;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport { ADD_EMPLOYEE, BACK } from \"../../headings\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport {\r\n  ADD_EMPLOYEE_TEXT_PART1,\r\n  ADD_EMPLOYEE_TEXT_PART2,\r\n  ADD_EMPLOYEE_TEXT_PART3,\r\n  ADD_EMPLOYEE_TEXT_PART4,\r\n} from \"../../messages\";\r\n\r\nconst AddEmployee = (props) => {\r\n  const history = useHistory();\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/manageemployees\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content className=\"w-100\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{ADD_EMPLOYEE}</h1>\r\n                  <div className=\"d-block w-100 pl-3 pl-lg-0 pt-1\">\r\n                    {ADD_EMPLOYEE_TEXT_PART1}\r\n                  </div>\r\n                </Row>\r\n                <div className=\"mid-content mt-0 mt-md-4 no-bg px-3 px-md-0\">\r\n                  <Row>\r\n                    <Col span={24} className=\"mt-5\">\r\n                      <Row\r\n                        className=\"d-flex justify-content-center\"\r\n                        gutter={{ xs: 8, sm: 32, md: 32, lg: 100 }}\r\n                      >\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div\r\n                            className={`d-flex flex-column ${styles.box_bordered}`}\r\n                          >\r\n                            <span\r\n                              className={`icon-integrate ${styles.icon}`}\r\n                            ></span>\r\n                            <div className=\"font-weight-bold text-center\">\r\n                              {ADD_EMPLOYEE_TEXT_PART2}\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <Link to=\"/orgcc/importemployee\">\r\n                            <div\r\n                              className={`d-flex flex-column ${styles.box_bordered}`}\r\n                            >\r\n                              <span\r\n                                className={`icon-csv ${styles.icon}`}\r\n                              ></span>\r\n                              <div className=\"font-weight-bold text-center\">\r\n                                {ADD_EMPLOYEE_TEXT_PART3}\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <Link to=\"/orgcc/createemployee\">\r\n                            <div\r\n                              className={`d-flex flex-column ${styles.box_bordered}`}\r\n                            >\r\n                              <span\r\n                                className={`icon-add-user ${styles.icon}`}\r\n                              ></span>\r\n                              <div className=\"font-weight-bold text-center\">\r\n                                {ADD_EMPLOYEE_TEXT_PART4}\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <Button type=\"primary\" onClick={onCancel}>\r\n                  {BACK}\r\n                </Button>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Upload, message } from \"antd\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport { DROP_FILES_TO_UPLOAD } from \"../../messages\";\r\nconst { Dragger } = Upload;\r\n\r\nconst UploadFiles = (props) => {\r\n  return (  \r\n    <Dragger\r\n      accept=\".csv\"\r\n      name=\"file\"\r\n      fileList={props.file}\r\n      onChange={(value) => props.onChange(value)}\r\n    >\r\n      <p className=\"ant-upload-drag-icon\">\r\n        <span className=\"icon icon-upload\" />\r\n      </p>\r\n      <p className=\"ant-upload-text\">{DROP_FILES_TO_UPLOAD}</p>\r\n    </Dragger>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Breadcrumb, Button, Alert, Spin } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport UploadFiles from \"./UploadFiles\";\r\nimport { ADD_EMPLOYEE, CANCEL, UPLOAD } from \"../../headings\";\r\nimport { IMPORT_CSV, DOWNLOAD_SAMPLE_FILE } from \"../../messages\";\r\nimport { UPLOAD_CSV_FILE } from \"../../errors\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst { Content } = Layout;\r\nconst ImportFiles = (props) => {\r\n  const [error, showError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [uploadMessage, SetUploadMessage] = useState(\"\");\r\n  const [uploaderror, Setuploaderror] = useState(\"\");\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/addemployee\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    let fileList = e.fileList.slice(-1);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setFile(fileList);\r\n  };\r\n\r\n  const onUpload = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": `multipart/form-data`,\r\n      },\r\n    };\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file[0].originFileObj);\r\n      showError(false);\r\n      setLoader(true);\r\n      axios\r\n        .post(BASE_URL + \"uploadCsv/\", formData, options)\r\n        .then(() => {\r\n          window.location = \"/orgcc/manageemployees\";\r\n        })\r\n        .catch((error) => {\r\n          setLoader(false);\r\n          if (error.message.includes(\"400\")) {\r\n            Setuploaderror(true);\r\n            SetUploadMessage(error.response.data);\r\n          }\r\n        });\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content className=\"w-100\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/addemployee\">\r\n                      <Breadcrumb.Item>{ADD_EMPLOYEE}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{IMPORT_CSV}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{IMPORT_CSV} </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    {error && (\r\n                      <Alert\r\n                        message={UPLOAD_CSV_FILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                    {uploaderror && (\r\n                      <Alert\r\n                        message={uploadMessage}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                    <Row className=\"d-flex justify-content-center align-items-center\">\r\n                      <Col span={20} className=\"mt-3 dragdrop\">\r\n                        <UploadFiles onChange={onChange} file={file} />\r\n                      </Col>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"justify-content-center d-flex mt-5\"\r\n                      >\r\n                        <Button\r\n                          type=\"link\"\r\n                          href=\"https://amstagingresources.s3-us-west-1.amazonaws.com/upload-data/Sample_Employees.csv\"\r\n                          className=\"link pl-0\"\r\n                        >\r\n                          <span className=\"icon icon-download-icon\" />\r\n                          {DOWNLOAD_SAMPLE_FILE}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"mt-3 btn-row\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"mr-4 mb-4\"\r\n                        onClick={onUpload}\r\n                      >\r\n                        {UPLOAD}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        className=\"md\"\r\n                        onClick={onCancel}\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Spin>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImportFiles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport \"../form/form.scss\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ADD_EMPLOYEE, SAVE, CANCEL } from \"../../headings\";\r\nimport { ADD_EMPLOYEE_TEXT_PART4 } from \"../../messages\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  SELECT_USER_TYPE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  EMAIL,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  DATE,\r\n  SELECT_ROLE,\r\n  START_DATE,\r\n  END_DATE\r\n} from \"../../labels\";\r\nimport {\r\n  MAKE_SUPER_USER,\r\n  MAKE_ORG_USER,\r\n  MAKE_IDB_USER,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\nconst { RangePicker } = DatePicker;\r\nconst CreateManually = (props) => {\r\n  const [userDetails, setUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status: \"\",\r\n    email: \"\",\r\n    //date: \"\",\r\n    mobile: \"\",\r\n    empId: \"\",\r\n    department: \"\",\r\n    role: \"\",\r\n    startDate:\"\",\r\n    endDate : \"\"\r\n  });\r\n  const history = useHistory();\r\n  const [error, showError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n\r\n  const handleUserOnChange = (e) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleUserOnSelect = (value, name) => {\r\n    setUserDetails({ ...userDetails, [name]: value });\r\n  };\r\n\r\n  const handleUserDatePickerChange = (date, name) => {\r\n    setUserDetails({ ...userDetails, [name]: date });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (userDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (\r\n      userDetails.firstName &&\r\n      userDetails.lastName &&\r\n      userDetails.email &&\r\n      userDetails.mobile &&\r\n      userDetails.status &&\r\n      //userDetails.role &&\r\n      userDetails.startDate\r\n    ) {\r\n      const data = userDetails.endDate ? {\r\n        first_name: userDetails.firstName,\r\n        last_name: userDetails.lastName,\r\n        email: userDetails.email,\r\n        mobile_number: \"+\" + userDetails.mobile,\r\n        is_org_cc_user: userDetails.role === \"2\" ? 1 : 0,\r\n        is_idb_user: userDetails.role === \"3\" ? 1 : 0,\r\n        is_super_user: userDetails.role === \"1\" ? 1 : 0,\r\n        start_date: userDetails.startDate\r\n          ? moment(userDetails.startDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: userDetails.endDate\r\n          ? moment(userDetails.endDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: parseInt(userDetails.status),\r\n      } : {\r\n        first_name: userDetails.firstName,\r\n        last_name: userDetails.lastName,\r\n        email: userDetails.email,\r\n        mobile_number: \"+\" + userDetails.mobile,\r\n        is_org_cc_user: userDetails.role === \"2\" ? 1 : 0,\r\n        is_idb_user: userDetails.role === \"3\" ? 1 : 0,\r\n        is_super_user: userDetails.role === \"1\" ? 1 : 0,\r\n        start_date: userDetails.startDate\r\n          ? moment(userDetails.startDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: parseInt(userDetails.status),\r\n      };\r\n      showError(false);\r\n      setLoader(true);\r\n      axios.post(BASE_URL + \"createUser/\", data, options).then(() => {\r\n        window.location = \"/orgcc/manageemployees\";\r\n      });\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/addemployee\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content className=\"w-100\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/addemployee\">\r\n                      <Breadcrumb.Item>{ADD_EMPLOYEE}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{ADD_EMPLOYEE_TEXT_PART4}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{ADD_EMPLOYEE_TEXT_PART4}</h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <Form className=\"input-md floating-label w-100\" name=\"\">\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message={REQUIRED_MESSAGE}\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={FIRST_NAME}\r\n                                value={userDetails.firstName}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"firstName\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"firstName\"\r\n                                    htmlFor=\"firstName\"\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={LAST_NAME}\r\n                                value={userDetails.lastName}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"lastName\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"lastName\"\r\n                                    htmlFor=\"lastName\"\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={EMAIL}\r\n                                value={userDetails.email}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"email\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    type=\"email\"\r\n                                    className=\"input-control\"\r\n                                    id=\"email\"\r\n                                    htmlFor=\"email\"\r\n                                    value={userDetails.email}\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    onBlur={(e) => validateEmailAddress(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {emailValidationError && (\r\n                                    <Alert\r\n                                      message={VALID_EMAIL}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col\r\n                              span={24}\r\n                              md={8}\r\n                              className=\"gutter-row phone-field\"\r\n                            >\r\n                              <FloatLabel\r\n                                label={MOBILE}\r\n                                value={userDetails.mobile}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"mobile\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <PhoneInput\r\n                                    country=\"us\"\r\n                                    id=\"mobile\"\r\n                                    htmlFor=\"mobile\"\r\n                                    value={userDetails.mobile}\r\n                                    onChange={handleMobile}\r\n                                    onBlur={validateMobile}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {mobileValidationError && (\r\n                                    <Alert\r\n                                      message={VALID_MOBILE}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={userDetails.status}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"status\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_STATUS,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Select\r\n                                    className=\"input-control w-100\"\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleUserOnSelect(value, \"status\")\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            {/* <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date\">\r\n                                <Form.Item\r\n                                  className=\"input-control datepicker-wrapper required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_DATE,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date\"\r\n                                    value={userDetails.date}\r\n                                    onChange={(date) =>\r\n                                      handleUserDatePickerChange(date, \"date\")\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col> */}\r\n                            <Col span={24} md={4} className=\"gutter-row\">\r\n                              <FloatLabel label={START_DATE} value=\"date\">\r\n                                <Form.Item\r\n                                  className=\"input-control datepicker-wrapper required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_DATE,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <DatePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"startDate\"\r\n                                    value={userDetails.startDate}\r\n                                    onChange={(date) =>\r\n                                      handleUserDatePickerChange(date, \"startDate\")\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={4} className=\"gutter-row\">\r\n                              <FloatLabel label={END_DATE} value=\"date\">\r\n                                <Form.Item\r\n                                  className=\"input-control datepicker-wrapper\"\r\n                                >\r\n                                  <DatePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"endDate\"\r\n                                    value={userDetails.endDate}\r\n                                    onChange={(date) =>\r\n                                      handleUserDatePickerChange(date, \"endDate\")\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={SELECT_ROLE}\r\n                                value={userDetails.role}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"role\"\r\n                                >\r\n                                  <Select\r\n                                    className=\"input-control w-100\"\r\n                                    htmlFor=\"role\"\r\n                                    onSelect={(value) =>\r\n                                      handleUserOnSelect(value, \"role\")\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{MAKE_SUPER_USER}</Option>\r\n                                    <Option value=\"2\">{MAKE_ORG_USER}</Option>\r\n                                    <Option value=\"3\">{MAKE_IDB_USER}</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"mr-4\"\r\n                            onClick={onSubmit}\r\n                          >\r\n                            {SAVE}\r\n                          </Button>\r\n                          <Button type=\"secondary\" onClick={onCancel}>\r\n                            {CANCEL}\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Spin>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateManually;\r\n","import React from \"react\";\r\nimport { Upload, Button, Modal } from \"antd\";\r\nimport { CLOSE_TEXT_MODAL, DOCUMENT_IMAGE } from \"../../headings\";\r\n\r\nconst UploadImage = ({\r\n  file,\r\n  handleStepOneUpload,\r\n  handleBeforeUpload,\r\n  handleOnRemove,\r\n  handlePollImagePreview,\r\n  handleCancel,\r\n  poll,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Upload\r\n        listType=\"picture\"\r\n        fileList={file}\r\n        onChange={(value) => handleStepOneUpload(value, \"pollDocument\")}\r\n        beforeUpload={(value) => handleBeforeUpload(value, \"pollDocument\")}\r\n        onRemove={(value) => handleOnRemove(value, \"pollImageValidation\")}\r\n        onPreview={(value) => handlePollImagePreview(value)}\r\n        className=\"upload-list-inline c-upload\"\r\n        accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n      >\r\n        <Button type=\"link\" className=\"link pl-0\">\r\n          <span className=\"icon icon-upload pr-2\"></span>\r\n          {DOCUMENT_IMAGE}\r\n        </Button>\r\n      </Upload>\r\n      <Modal\r\n        className=\"modal-openline\"\r\n        visible={poll.previewVisible}\r\n        title={poll.previewTitle}\r\n        centered\r\n        onOk={(value) => handleCancel(value)}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{ style: { display: \"none\" } }}\r\n        okText={CLOSE_TEXT_MODAL}\r\n      >\r\n        <img alt=\"image\" style={{ width: \"100%\" }} src={poll.previewImage} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nimport { Tag, Input, Tooltip, Col, Button } from \"antd\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport { ADD_OPTION } from \"../../headings\";\r\n\r\nclass MultiChoice extends Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: \"\",\r\n    editInputIndex: -1,\r\n    editInputValue: \"\",\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter((tag) => tag !== removedTag);\r\n    this.props.setSingleChoiceResponse(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const tagsOption = this.props.pollResponse;\r\n    this.setState({ tags: tagsOption });\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: \"\",\r\n    });\r\n    this.props.setSingleChoiceResponse(tags);\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tags,\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className={`${styles.edit_tag}`}\r\n              key={tag}\r\n              closable={!this.props.disabled}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={(e) => {\r\n                  // if (index ) {\r\n                  this.setState(\r\n                    { editInputIndex: index, editInputValue: tag },\r\n                    () => {\r\n                      this.editInput.focus();\r\n                    }\r\n                  );\r\n                  e.preventDefault();\r\n                  // }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        <Col span={12} className=\"mb-4\">\r\n          <Tag onClick={this.showInput} className={`${styles.add_tag}`}>\r\n            <Button\r\n              type=\"link\"\r\n              className=\"link pl-0\"\r\n              onClick={this.showModal}\r\n              disabled={this.props.disabled}\r\n            >\r\n              <span className=\"icon icon-add-filled\" />\r\n              {ADD_OPTION}\r\n            </Button>\r\n          </Tag>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiChoice;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { CANCEL, PUBLISH_POLL, PUBLISH, SCHEDULE } from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport {\r\n  SELECT_END_DATE,\r\n  SELECT_END_TIME,\r\n  SELECT_START_DATE,\r\n  SELECT_START_TIME,\r\n} from \"../../labels\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.props.pollData.pollStartDate ||\r\n      !this.props.pollData.pollEndDate\r\n    ) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return current && current < moment(this.props.pollData.pollStartDate);\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ startTimeError: true });\r\n    } else {\r\n      this.setState({ startTimeError: false });\r\n      this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {\" \"}\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollStartDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.startTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label={SELECT_START_TIME}\r\n                        value={this.props.pollData.pollStartTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollEndDate}\r\n                    disabledDate={this.disabledEndDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.props.pollData.pollEndTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import moment from 'moment-timezone';\r\n//#region Formats\r\n\r\nconst formatAsYYYYMMDDHHmmss = date => moment(date, \"MM/DD/YYYY\").format('YYYY-MM-DD[T]HH:mm:ss');\r\nconst formatAsHHmmss = date => moment(date).format('HH:mm:ss');\r\nconst formatAsMMMDDYYYY = date => moment(date).format('MM-DD-YYYY');\r\nconst formatAsHHmm = date => moment(date).format('HH:mm');\r\nconst formatAsYYYYMMDD = date => moment(date).format('YYYY-MM-DD');\r\nconst formatAsDDMMYYYY = date => moment(date).format('DD-MM-YYYY');\r\n\r\n\r\nconst format = date => moment(date).format();\r\nexport default{\r\n    formatAsYYYYMMDDHHmmss,\r\n    formatAsHHmmss,\r\n    formatAsMMMDDYYYY,\r\n    formatAsHHmm,\r\n    formatAsYYYYMMDD,\r\n    formatAsDDMMYYYY,\r\n    format\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Input,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  Spin,\r\n  Upload,\r\n  Modal,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DateTimeModal from \"../modal/DateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport { BACK, PREVIEW_POLL, POLLS, CLOSE_TEXT_MODAL } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst PreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  isImage,\r\n  data,\r\n  attachmentName,\r\n  showError,\r\n  error,\r\n}) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollState, setPollState] = useState({\r\n    pollName: poll.pollName,\r\n    pollHelpText: poll.pollHelpText,\r\n    pollDocument: poll.pollDocument,\r\n    showResult: poll.showResult,\r\n    pollChartType: poll.pollChartType,\r\n    pollQuestion: poll.pollQuestion,\r\n    pollQuestionType: poll.pollQuestionType,\r\n    pollRatingResponse: poll.pollRatingResponse,\r\n    pollStartDate: poll.pollStartDate,\r\n    pollEndDate: poll.pollEndDate,\r\n    attachmentName: poll.attachmentName,\r\n    pollStartTime: poll.pollStartTime,\r\n    pollEndTime: poll.pollEndTime,\r\n    pollResponse: poll.pollResponse,\r\n    pollImageValidation: poll.pollImageValidation,\r\n    previewVisible: poll.previewVisible,\r\n    previewImage: poll.previewImage,\r\n    previewTitle: poll.previewTitle,\r\n    pollRatingType: poll.pollRatingType,\r\n  });\r\n\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const handlePollImagePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPollState({\r\n      ...pollState,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleCancel = () =>\r\n    setPollState({ ...pollState, previewVisible: false });\r\n\r\n  const onPublish = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    setLoader(true);\r\n    const optionsData = [];\r\n    let data = {};\r\n    poll.pollResponse.map((value) => {\r\n      optionsData.push({ option_text: value });\r\n    });\r\n    if (isImage) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          image:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          image_name: attachmentName,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          document:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          document_name: attachmentName,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    }\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"poll/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{PREVIEW_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    <Col\r\n                      span={24}\r\n                      className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                    >\r\n                      <h6>\r\n                        {poll.pollName}\r\n                        <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                          <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                        </Tooltip>\r\n                      </h6>\r\n                    </Col>\r\n\r\n                    <div className=\"mid-content\">\r\n                      <Row>\r\n                        <Col span={24}>\r\n                          <p className=\"font-weight-md6\">{poll.pollQuestion}</p>\r\n                          <Row className=\"preview-que\" disabled={true}>\r\n                            <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                              {poll.pollQuestionType === \"1\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Radio>{value}</Radio>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"2\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Checkbox>{value}</Checkbox>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"3\" ? (\r\n                                poll.pollRatingType === \"1\" ? (\r\n                                  <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                ) : poll.pollRatingType === \"2\" ? (\r\n                                  <img src={Smiley} alt=\"send message\" />\r\n                                ) : poll.pollRatingType === \"3\" ? (\r\n                                  <img src={Thermometer} alt=\"send message\" />\r\n                                ) : poll.pollRatingType === \"4\" ? (\r\n                                  <img src={Thumb} alt=\"send message\" />\r\n                                ) : poll.pollRatingType === \"5\" ? (\r\n                                  <img src={Steps} alt=\"send message\" />\r\n                                ) : null\r\n                              ) : null}\r\n                            </div>\r\n                          </Row>\r\n                          <Row className=\"mt-2\">\r\n                            <div class=\"ant-upload-list-item\">\r\n                              <div class=\"ant-upload-list-item-info\">\r\n                                <span class=\"ant-upload-span\">\r\n                                  <div class=\"ant-upload-text-icon\">\r\n                                    <PaperClipOutlined />\r\n                                  </div>\r\n                                  <span\r\n                                    class=\"ant-upload-list-item-name\"\r\n                                    title=\"add-user-doc\"\r\n                                  >\r\n                                    <Upload\r\n                                      listType=\"picture\"\r\n                                      fileList={pollState.pollDocument}\r\n                                      onPreview={(value) =>\r\n                                        handlePollImagePreview(value)\r\n                                      }\r\n                                    ></Upload>\r\n                                    <Modal\r\n                                      visible={pollState.previewVisible}\r\n                                      title={pollState.previewTitle}\r\n                                      centered\r\n                                      onOk={(value) => handleCancel(value)}\r\n                                      okButtonProps={{\r\n                                        children: \"Custom OK\",\r\n                                      }}\r\n                                      cancelButtonProps={{\r\n                                        style: { display: \"none\" },\r\n                                      }}\r\n                                      okText={CLOSE_TEXT_MODAL}\r\n                                    >\r\n                                      <img\r\n                                        alt=\"image\"\r\n                                        style={{ width: \"100%\" }}\r\n                                        src={pollState.previewImage}\r\n                                      />\r\n                                    </Modal>\r\n                                  </span>\r\n                                  <span class=\"ant-upload-list-item-card-actions\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"ant-btn\"\r\n                                    ></button>\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 px-3\">\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        type=\"secondary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"mr-4\"\r\n                        onClick={onBackCreatePoll}\r\n                      >\r\n                        {BACK}\r\n                      </Button>\r\n                      <DateTimeModal\r\n                        pollData={poll}\r\n                        handlePollStartDatePickerChange={\r\n                          handlePollStartDatePickerChange\r\n                        }\r\n                        handlePollEndDatePickerChange={\r\n                          handlePollEndDatePickerChange\r\n                        }\r\n                        handlePollStartTimePickerChange={\r\n                          handlePollStartTimePickerChange\r\n                        }\r\n                        handlePollEndTimePickerChange={\r\n                          handlePollEndTimePickerChange\r\n                        }\r\n                        onPublish={onPublish}\r\n                        showError={showError}\r\n                        error={error}\r\n                      />\r\n                    </div>\r\n                  </Spin>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewPoll;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Breadcrumb,\r\n  Alert,\r\n  message,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport PreviewPoll from \"./PreviewPoll\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\n\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  RATING_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  CANCEL,\r\n  CREATE_POLL,\r\n  POLLS,\r\n  POLL_TITLE,\r\n  PREVIEW,\r\n  UPLOAD,\r\n} from \"../../headings\";\r\nimport {\r\n  POLL_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STAR_CHART_TYPE,\r\n} from \"../../errors\";\r\nimport {\r\n  BAR_CHART,\r\n  LADDER,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  SMILEY,\r\n  STARS,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n  THERMOMETER,\r\n  THUMBSUP,\r\n} from \"../../values\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  emptyIcon: <i class=\"far fa-smile\"></i>,\r\n  fullIcon: <i class=\"fa fa-smile\"></i>,\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst CreatePoll = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    attachmentName: \"\",\r\n    pollStartTime: new Date(),\r\n    pollEndTime: new Date(),\r\n    pollResponse: [],\r\n    pollImageValidation: true,\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n    pollRatingType: \"\",\r\n  });\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if (poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    if (name === \"pollRatingType\") {\r\n      setPoll({\r\n        ...poll,\r\n        [name]: value,\r\n        [\"pollResponse\"]: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n      });\r\n    } else {\r\n      setPoll({ ...poll, [name]: value });\r\n    }\r\n  };\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (value.file.status === \"removed\") {\r\n      showuploadError(true);\r\n    }\r\n    let fileList = value.fileList.slice(-1);\r\n    checkDoucmentType(value.file.type);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setAttachmentName(value.file.name);\r\n    setPoll({ ...poll, [name]: fileList });\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handlePollImagePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPoll({\r\n      ...poll,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setPoll({ ...poll, pollImageValidation: true });\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    let xlsxfileExt = file.name.includes(\".xls\");\r\n    let pptxfileExt = file.name.includes(\".pptx\");\r\n    let docfileExt = file.name.includes(\".doc\");\r\n    let csvfileExt = file.name.includes(\".csv\");\r\n\r\n    const isValidDoc =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\" ||\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    if (!isValidDoc) {\r\n      showuploadError(false);\r\n      message.error(`${file.name} is not a supported format file type.`);\r\n    } else {\r\n      showuploadError(true);\r\n    }\r\n    const isImage =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\";\r\n    const isDocument =\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    const isLt10M = file.size / 1024 / 1024 < 10;\r\n    if (isImage) {\r\n      if (!isLt5M && isImage) {\r\n        showuploadError(false);\r\n        message.error(\"Image must smaller than 5MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n\r\n    if (isDocument) {\r\n      if (!isLt10M && isDocument) {\r\n        showuploadError(false);\r\n        message.error(\"Document must smaller than 10MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n    return (isValidDoc && isLt5M) || isLt10M;\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setpollError(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!previewPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{CREATE_POLL}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                          form={form}\r\n                        >\r\n                          {error && (\r\n                            <Form.Item>\r\n                              <Alert\r\n                                message={REQUIRED_MESSAGE}\r\n                                type=\"error\"\r\n                                showIcon\r\n                              ></Alert>\r\n                            </Form.Item>\r\n                          )}\r\n                          <Col span={24}>\r\n                            <Row>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={POLL_TITLE}\r\n                                  value={poll.pollName}\r\n                                >\r\n                                  <TextArea\r\n                                    showCount\r\n                                    maxLength={50}\r\n                                    htmlFor=\"polltitle\"\r\n                                    value={poll.pollName}\r\n                                    id=\"pollName\"\r\n                                    onChange={(e) => onCreateChange(e)}\r\n                                    onBlur={(e) => isPollNameDuplicate(e)}\r\n                                    autoComplete=\"off\"\r\n                                    className={`required ${styles.sm_textarea}`}\r\n                                  />\r\n\r\n                                  {pollError === \"status: false\" &&\r\n                                    poll.pollName\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    poll.pollName.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {pollError == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={POLL_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={DESCRIPTION}\r\n                                  value={poll.pollHelpText}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollHelpText\"\r\n                                    id=\"pollHelpText\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"helptext\"\r\n                                      id=\"pollHelpText\"\r\n                                      name=\"pollHelpText\"\r\n                                      value={poll.pollHelpText}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row mt-3\">\r\n                                <h6>{UPLOAD}</h6>\r\n                                <Form.Item\r\n                                  name=\"upload\"\r\n                                  className=\"upload-list\"\r\n                                >\r\n                                  <UploadImage\r\n                                    file={poll.pollDocument}\r\n                                    handleStepOneUpload={handleStepOneUpload}\r\n                                    handleBeforeUpload={handleBeforeUpload}\r\n                                    handleOnRemove={handleOnRemove}\r\n                                    handlePollImagePreview={\r\n                                      handlePollImagePreview\r\n                                    }\r\n                                    handleCancel={handleCancel}\r\n                                    poll={poll}\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                          <Col span={24} className=\"gutter-row\">\r\n                            <Row>\r\n                              <Col\r\n                                span={24}\r\n                                md={8}\r\n                                lg={8}\r\n                                xl={6}\r\n                                className=\"mb-3 t-2 mb-y-0\"\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"showresult\"\r\n                                  label={SHOW_RESULTS_POLL}\r\n                                  className=\"mb-0\"\r\n                                >\r\n                                  <Switch\r\n                                    id=\"showResult\"\r\n                                    checked={poll.showResult}\r\n                                    onChange={(checked, e) =>\r\n                                      onChange(checked, e)\r\n                                    }\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                              {poll.showResult ? (\r\n                                <Col span={24} md={10} lg={8}>\r\n                                  <FloatLabel\r\n                                    label={DISPLAY_RESULTS_AS}\r\n                                    value={poll.pollChartType}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required mb-0\"\r\n                                      name=\"result\"\r\n                                    >\r\n                                      <>\r\n                                        <Select\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"result\"\r\n                                          className=\"required\"\r\n                                          value={poll.pollChartType}\r\n                                          onSelect={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollChartType\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <Select.Option value=\"1\">\r\n                                            {PIE_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"3\">\r\n                                            {BAR_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"4\">\r\n                                            {STAR_FORMAT}\r\n                                          </Select.Option>\r\n                                        </Select>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                  {chartError && (\r\n                                    <Form.Item>\r\n                                      <Alert\r\n                                        message={STAR_CHART_TYPE}\r\n                                        type=\"error\"\r\n                                        showIcon\r\n                                      ></Alert>\r\n                                    </Form.Item>\r\n                                  )}\r\n                                </Col>\r\n                              ) : (\r\n                                <Col></Col>\r\n                              )}\r\n                            </Row>\r\n                          </Col>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"mid-content mt-4\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                        >\r\n                          <Col span={24}>\r\n                            <Row className=\"d-block\">\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                  <Col\r\n                                    span={24}\r\n                                    md={8}\r\n                                    lg={8}\r\n                                    className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                                  >\r\n                                    <FloatLabel\r\n                                      label={QUESTION_TYPE}\r\n                                      value={poll.pollQuestionType}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required mb-0\"\r\n                                        name=\"questiontype\"\r\n                                      >\r\n                                        <>\r\n                                          <Select\r\n                                            className=\"\"\r\n                                            htmlFor=\"questiontype\"\r\n                                            className=\"required\"\r\n                                            id=\"pollQuestionType\"\r\n                                            value={poll.pollQuestionType}\r\n                                            onSelect={(value) =>\r\n                                              handlePollOnSelect(\r\n                                                value,\r\n                                                \"pollQuestionType\"\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <Select.Option\r\n                                              value=\"1\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType === \"4\"\r\n                                              }\r\n                                            >\r\n                                              {SELECT_SINGLE}\r\n                                            </Select.Option>\r\n                                            <Select.Option\r\n                                              value=\"2\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType === \"4\"\r\n                                              }\r\n                                            >\r\n                                              {SELECT_MULTIPLE}\r\n                                            </Select.Option>\r\n                                            <Select.Option\r\n                                              value=\"3\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType !== \"4\"\r\n                                              }\r\n                                            >\r\n                                              {STAR_RATING}\r\n                                            </Select.Option>\r\n                                          </Select>\r\n                                        </>\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n\r\n                                  {poll.pollQuestionType === \"3\" ? (\r\n                                    <Col\r\n                                      span={24}\r\n                                      md={10}\r\n                                      lg={8}\r\n                                      className=\"gutter-row\"\r\n                                    >\r\n                                      <FloatLabel\r\n                                        label={RATING_TYPE}\r\n                                        value={poll.pollRatingType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"ratingtype\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"\"\r\n                                              htmlFor=\"ratingtype\"\r\n                                              className=\"required\"\r\n                                              id=\"pollRatingType\"\r\n                                              value={poll.pollRatingType}\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollRatingType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                {STARS}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"2\">\r\n                                                {SMILEY}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                {THERMOMETER}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                {THUMBSUP}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"5\">\r\n                                                {LADDER}\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                    </Col>\r\n                                  ) : null}\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={QUESTION}\r\n                                  value={poll.pollQuestion}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollQuestion\"\r\n                                    id=\"pollQuestion\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"pollQuestion\"\r\n                                      id=\"pollQuestion\"\r\n                                      name=\"pollQuestion\"\r\n                                      defaultValue={poll.pollQuestion}\r\n                                      value={poll.pollQuestion}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={12} className=\"mt-4\">\r\n                                {poll.pollQuestionType === \"3\" &&\r\n                                poll.pollRatingType ? (\r\n                                  poll.pollRatingType === \"1\" ? (\r\n                                    <ReactStars\r\n                                      {...starsRating}\r\n                                      value={poll.pollRatingResponse}\r\n                                      name=\"pollRatingResponse\"\r\n                                      onChange={(value) =>\r\n                                        handlePollOnSelect(\r\n                                          value,\r\n                                          \"pollRatingResponse\"\r\n                                        )\r\n                                      }\r\n                                      classNames=\"mt-3\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"2\" ? (\r\n                                    <img\r\n                                      className=\"font-size\"\r\n                                      src={Smiley}\r\n                                      alt=\"send message\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"3\" ? (\r\n                                    <img\r\n                                      className=\"font-size\"\r\n                                      src={Thermometer}\r\n                                      alt=\"send message\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"4\" ? (\r\n                                    <img\r\n                                      className=\"font-size\"\r\n                                      src={Thumb}\r\n                                      alt=\"send message\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"5\" ? (\r\n                                    <img\r\n                                      className=\"font-size\"\r\n                                      src={Steps}\r\n                                      alt=\"send message\"\r\n                                    />\r\n                                  ) : null\r\n                                ) : poll.pollQuestionType === \"1\" ? (\r\n                                  <div>\r\n                                    <MultiChoice\r\n                                      setSingleChoiceResponse={\r\n                                        setSingleChoiceResponse\r\n                                      }\r\n                                      pollResponse={poll.pollResponse}\r\n                                    />\r\n                                  </div>\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  <MultiChoice\r\n                                    pollResponse={poll.pollResponse}\r\n                                    setSingleChoiceResponse={\r\n                                      setSingleChoiceResponse\r\n                                    }\r\n                                  />\r\n                                ) : null}\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              className=\"md mr-4\"\r\n                              onClick={onPreview}\r\n                            >\r\n                              {PREVIEW}\r\n                            </Button>\r\n                            <Button\r\n                              type=\"secondary\"\r\n                              type=\"secondary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onCancel}\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                          </div>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <PreviewPoll\r\n          poll={poll}\r\n          setPollsDate={setPollsDate}\r\n          backtoEdit={backtoEdit}\r\n          showError={showError}\r\n          isImage={isImage}\r\n          attachmentName={attachmentName}\r\n          data={props}\r\n          error={error}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./managePoll.module.scss\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ManagePolls from \"../../assets/images/manage-polls.svg\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport CreatePoll from \"../managePolls/CreatePoll\";\r\nimport { CREATE_POLL, MANAGE_POLLS } from \"../../headings\";\r\nimport { CREATE_NEW_POLL_TEXT } from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\nconst ManagePoll = (props) => {\r\n  const [createPoll, setCreatePoll] = useState(false);\r\n  const ShowCreatePoll = () => {\r\n    setCreatePoll(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!createPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Polls\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_POLLS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={ManagePolls}\r\n                            alt=\"Create Poll\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_POLL_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={ShowCreatePoll}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE_POLL}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <Redirect to=\"/orgcc/createpoll\" />\r\n        // <CreatePoll data={props.data} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport {\r\n  CANCEL,\r\n  EXTEND_END_DATE,\r\n  EXTEND_TEXT_MODAL,\r\n  POLL,\r\n} from \"../../headings\";\r\nimport {\r\n  EXTEND_END_DATE_TEXT_PART1,\r\n  EXTEND_END_DATE_TEXT_PART2,\r\n} from \"../../messages\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { SELECT_END_DATE, SELECT_END_TIME } from \"../../labels\";\r\nimport { SELECT_DATE, PAST_TIME } from \"../../errors\";\r\n\r\nclass ExtendEndDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      endDate: \"\",\r\n      error: false,\r\n      endTime: new Date(),\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { end_date, end_time } = this.props.pollsData;\r\n    const edate = end_date.split(\"/\")[1];\r\n    const emonth = end_date.split(\"/\")[0];\r\n    const eyear = end_date.split(\"/\")[2];\r\n    const formattedEndDate = momentUtil.formatAsDDMMYYYY(end_date);\r\n    this.setState({\r\n      endDate: moment(formattedEndDate, \"DD-MM-YYYY\"),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + end_time),\r\n    });\r\n  }\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.state.endDate ||\r\n      this.state.endDate === null ||\r\n      !this.state.endTime\r\n    ) {\r\n      this.setState({ error: true });\r\n    } else {\r\n      this.setState({ error: false, visible: false });\r\n      let obj = {\r\n        poll_id: this.props.pollsData.poll_id,\r\n        pollName: this.props.pollsData.title,\r\n      };\r\n      this.props.extendPollDate(obj, this.state);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    window.location = \"/orgcc/pollsdirectory\";\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTime: time, endTimeError: false });\r\n    }\r\n  };\r\n\r\n  disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{EXTEND_END_DATE}</a>\r\n        <Modal\r\n          title={EXTEND_END_DATE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={EXTEND_TEXT_MODAL}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.state.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md font-weight-md6\">\r\n                {EXTEND_END_DATE_TEXT_PART1}{\" \"}\r\n                <span className=\"pr-1\"> {EXTEND_END_DATE_TEXT_PART2}</span>\r\n                {this.props.pollsData.title} {POLL}\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.endDate}\r\n                    disabledDate={this.disabledDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.state.endTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExtendEndDate;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { DELETE, NO_TEXT_MODAL, YES_TEXT_MODAL } from \"../../headings\";\r\nimport { DELETE_CONFIRM_OPENLINE } from \"../../messages\";\r\n\r\nclass DeletePollModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deletePoll();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deletePoll() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"poll/\" + this.props.pollId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{DELETE}</a>\r\n        <Modal\r\n          title=\"Delete Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_OPENLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeletePollModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport ExtendEndDate from \"../../components/modal/ExtendEndDate\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  EDIT,\r\n  SHOW_FINAL_RESULT,\r\n  SHOW_INTRIM_RESULT,\r\n  VIEW,\r\n} from \"../../headings\";\r\nimport DeletePollModal from \"../modal/DeletePollModal\";\r\n\r\nconst content = (data, extendPollDate) => (\r\n  <div>\r\n    <ul>\r\n      <Link\r\n        to={{ pathname: `/orgcc/duplicatepoll/${data.poll_id}`, state: data }}\r\n      >\r\n        <li>\r\n          <a href={`/orgcc/duplicatepoll/${data.poll_id}`}>Create Duplicate</a>{\" \"}\r\n        </li>{\" \"}\r\n      </Link>\r\n      {data.poll_id != 1 && data.poll_id != 2 ? (\r\n        <Link to={{ pathname: `/orgcc/editpoll/${data.poll_id}`, state: data }}>\r\n          <li>\r\n            <a href={`/orgcc/editpoll/${data.poll_id}`}>\r\n              {data.status_id === 8 || data.status_id === 5 ? VIEW : EDIT}\r\n            </a>{\" \"}\r\n          </li>\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 8 ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">{SHOW_FINAL_RESULT}</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 5 ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">{SHOW_INTRIM_RESULT}</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n\r\n      {(data.status_id === 5 || data.status_id === 4 || data.status_id === 7) &&\r\n      data.poll_id != 1 &&\r\n      data.poll_id != 2 ? (\r\n        <li>\r\n          <ExtendEndDate extendPollDate={extendPollDate} pollsData={data} />\r\n        </li>\r\n      ) : null}\r\n\r\n      {data.poll_id != 1 &&\r\n      data.poll_id != 2 &&\r\n      (data.status_id === 4 || data.status_id === 7) ? (\r\n        <li>\r\n          <DeletePollModal pollId={data.poll_id} />\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data, this.props.extendPollDate)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        <a href=\"/orgcc/createpoll\">Create New</a>{\" \"}\r\n      </li>\r\n\r\n      {/* <li>\r\n        <a href=\"/orgcc/existingpolls\">Choose from existing</a>{\" \"}\r\n      </li> */}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass CreatePollPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <Button type=\"primary\">{CREATE_POLL}</Button>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePollPopover;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { TreeSelect } from \"antd\";\r\n\r\nimport {\r\n  COMPLETED,\r\n  SCHEDULED,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\nimport { APPLY_FILTER } from \"../../headings\";\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\nconst treeData = [\r\n  {\r\n    title: STATUS_ACTIVE,\r\n    value: \"5\",\r\n    key: \"1\",\r\n  },\r\n  {\r\n    title: STATUS_INACTIVE,\r\n    value: \"4\",\r\n    key: \"2\",\r\n  },\r\n  {\r\n    title: SCHEDULED,\r\n    value: \"7\",\r\n    key: \"3\",\r\n  },\r\n  {\r\n    title: COMPLETED,\r\n    value: \"8\",\r\n    key: \"4\",\r\n  },\r\n];\r\n\r\nclass MultiSelection extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  onChange = (value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const tProps = {\r\n      treeData,\r\n      onChange: this.props.handlePollStatusOnSelect,\r\n      treeCheckable: true,\r\n      showCheckedStrategy: SHOW_PARENT,\r\n      placeholder: APPLY_FILTER,\r\n      style: {\r\n        width: \"100%\",\r\n      },\r\n    };\r\n    return <TreeSelect {...tProps} />;\r\n  }\r\n}\r\n\r\nexport default MultiSelection;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Spin,\r\n  notification,\r\n  Select,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport {\r\n  AudioOutlined,\r\n  PaperClipOutlined,\r\n  DownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport PollPopover from \"../table/PollPopover\";\r\nimport CreatePollPopover from \"../table/CreatePollPopover\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { resolveOnChange } from \"antd/lib/input/Input\";\r\nimport MultiSelection from \"./MultiSelection\";\r\nimport {\r\n  CREATE_POLL,\r\n  MANAGE_POLLS,\r\n  SEARCH,\r\n  SHOW_ALL_POLLS,\r\n} from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART4,\r\n  EXTEND_END_DATE_TEXT_PART3,\r\n} from \"../../messages\";\r\nimport {\r\n  COMPLETED,\r\n  SCHEDULED,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { polls } = this.props;\r\n    polls?.forEach((poll) => {\r\n      poll.start_date = moment(poll.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM/DD/YYYY\");\r\n      poll.end_date = moment(poll.start_date).isValid()\r\n        ? moment(poll.end_date).utc().local().format(\"MM/DD/YYYY\")\r\n        : \"\";\r\n    });\r\n    this.setState({ data: polls });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.polls !== nextProps.polls) {\r\n      nextProps.polls?.forEach((poll) => {\r\n        poll.start_date = moment(poll.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n        poll.end_date = moment(poll.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.polls });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  extendPollDate = (value, date) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      end_date: momentUtil.formatAsDDMMYYYY(date.endDate),\r\n      end_time: momentUtil.formatAsHHmmss(date.endTime),\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"extendEndDate/\" + value.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: value.pollName + EXTEND_END_DATE_TEXT_PART3,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      });\r\n  };\r\n\r\n  onSearch = (value) => {\r\n    this.props.setSearchValue(value);\r\n  };\r\n\r\n  handlePollStatusOnSelect = (value) => {\r\n    let newArray = value.map((item) => parseInt(item));\r\n    const data = {\r\n      status_id: newArray,\r\n    };\r\n    this.props.setFilterOptions(data);\r\n  };\r\n\r\n  handleCheck = (e) => {\r\n    let data = {};\r\n    if (e.target.checked) {\r\n      data = {\r\n        status_id: [5, 4, 7, 8],\r\n      };\r\n    } else {\r\n      data = {\r\n        status_id: [5, 7],\r\n      };\r\n    }\r\n    this.props.handleCheck(data);\r\n  };\r\n\r\n  statusClicked = (record, via) => {\r\n    let data = {};\r\n    if (via.length === 0) {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.title +\r\n          STATUS_CHANGED_NOTIFICATION_PART4,\r\n      });\r\n    } else if (via === \"Scheduled\" || via === \"Active\") {\r\n      data = {\r\n        status_id: 4,\r\n      };\r\n    } else if (via === \"inActive\") {\r\n      const startDate = record.start_date;\r\n      const sdate = startDate.split(\"/\")[1];\r\n      const smonth = startDate.split(\"/\")[0];\r\n      const syear = startDate.split(\"/\")[2];\r\n      const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n      const currentDate = new Date();\r\n      if (finalStartDate > currentDate) {\r\n        data = {\r\n          status_id: 7,\r\n        };\r\n      } else if (finalStartDate < currentDate) {\r\n        data = {\r\n          status_id: 5,\r\n        };\r\n      } else if (finalStartDate === currentDate) {\r\n        const startTime = record.start_time;\r\n        const SFullDate = smonth + \"-\" + sdate + \"-\" + syear;\r\n        const startTimeWithDate = new Date(SFullDate + startTime);\r\n        if (startTimeWithDate > new Date()) {\r\n          data = {\r\n            status_id: 7,\r\n          };\r\n        } else if (startTimeWithDate <= new Date()) {\r\n          data = {\r\n            status_id: 5,\r\n          };\r\n        }\r\n      }\r\n    }\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"changePollStatus/\" + record.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description:\r\n            STATUS_CHANGED_NOTIFICATION_PART1 +\r\n            record.title +\r\n            STATUS_CHANGED_NOTIFICATION_PART2,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { polls, loader } = this.props;\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.image || record.document ? <PaperClipOutlined /> : null,\r\n            props: {\r\n              \"data-title\": \"\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name, record) => {\r\n          return {\r\n            children:\r\n              record.poll_id != 2 && record.poll_id != 1 ? (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/orgcc/editpoll/${record.poll_id}`,\r\n                    state: record,\r\n                  }}\r\n                >\r\n                  <li>\r\n                    <a href={`/orgcc/editpoll/${record.poll_id}`}>{name}</a>{\" \"}\r\n                  </li>\r\n                </Link>\r\n              ) : (\r\n                name\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.start_date + \" \" + record.start_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.end_date + \" \" + record.end_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.poll_id != 1 && record.poll_id != 2 ? (\r\n                record.status_id === 4 ? (\r\n                  <div\r\n                    className=\"secondary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"inActive\")}\r\n                  >\r\n                    {STATUS_INACTIVE}\r\n                  </div>\r\n                ) : record.status_id === 5 ? (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"Active\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    {STATUS_ACTIVE}\r\n                  </div>\r\n                ) : record.status_id === 7 ? (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"Scheduled\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    {SCHEDULED}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    {COMPLETED}\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: (\r\n              <PollPopover extendPollDate={this.extendPollDate} data={record} />\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_POLLS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          lg={9}\r\n                          className=\"ml-0 ml-lg-4 mt-2 mt-lg-0\"\r\n                        >\r\n                          <MultiSelection\r\n                            handlePollStatusOnSelect={\r\n                              this.handlePollStatusOnSelect\r\n                            }\r\n                          />\r\n                          <DownOutlined className=\"down-arrow-ico\" />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      {/* <CreatePollPopover polls={polls} /> */}\r\n                      <Link to=\"/orgcc/createpoll\">\r\n                        <Buttons value={CREATE_POLL} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={loader} size=\"large\">\r\n                  {/* <Checkbox onChange={(e) => this.handleCheck(e)}>\r\n                    {SHOW_ALL_POLLS}\r\n                  </Checkbox> */}\r\n                  <Grid\r\n                    rowKey=\"poll_id\"\r\n                    columns={columns}\r\n                    data={this.state.data}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllPolls;\r\n","import moment from \"moment\";\r\n\r\nlet getDefaultPoll = [\r\n  {\r\n    title: \"Impact of Microaggressions\",\r\n    help_text: \"Description of what a Harbinger is\",\r\n    start_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    end_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    start_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    created_by: 12,\r\n    created_on: \"2021-02-09T07:39:50.743345Z\",\r\n    document: null,\r\n    document_name: null,\r\n    end_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    image: null,\r\n    image_name: null,\r\n    is_out_of_the_box: false,\r\n    option_text: [],\r\n    poll_id: 1,\r\n    poll_question_rating_type: null,\r\n    poll_question_type: 3,\r\n    poll_result_chart_type: 2,\r\n    question: \"1. The technique for selecting a new point depends upon\",\r\n    show_result_to_users: false,\r\n    status_id: 4,\r\n    update_on: null,\r\n  },\r\n  {\r\n    created_by: 12,\r\n    created_on: \"2021-02-09T07:39:50.743345Z\",\r\n    document: null,\r\n    document_name: null,\r\n    end_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    end_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    help_text: \"Description of what a Harbinger is\",\r\n    image: null,\r\n    image_name: null,\r\n    is_out_of_the_box: false,\r\n    option_text: [],\r\n    poll_id: 2,\r\n    poll_question_rating_type: null,\r\n    poll_question_type: 3,\r\n    poll_result_chart_type: 2,\r\n    question: \"1. The technique for selecting a new point depends upon\",\r\n    show_result_to_users: false,\r\n    start_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    start_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    status_id: 4,\r\n    title: \"Experience of Work From Home (WFH)\",\r\n    update_on: null,\r\n  },\r\n];\r\n\r\nexport const mergePoll = (data) => {\r\n  let pollObject = [];\r\n  pollObject = data;\r\n  for (var i = 0; i < getDefaultPoll.length; i++) {\r\n    pollObject.push(getDefaultPoll[i]);\r\n  }\r\n  return pollObject;\r\n};\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    POLL_SUCCESS,\r\n    POLL_FAIL,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getPollAsync=(filterStatus, search)=>(dispatch)=>{\r\n        return UserService.getPolls(filterStatus,search).then((data)=>{\r\n            dispatch({\r\n                type:POLL_SUCCESS,\r\n                payload:{pollsdata:data.data},\r\n                \r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:POLL_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllPolls from \"./ShowAllPolls\";\r\nimport { mergePoll } from \"../../utils/defaultpoll\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\n\r\nconst PollsContainer = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [filter, setFilter] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [checked, setChecked] = useState(false);\r\n  const [totalPolls, setTotalPolls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getPollAsync(filter, search));\r\n  }, [statusClicked, filter, search]);\r\n\r\n  useEffect(() => {\r\n    if (props.pollsdata === null) {\r\n      setLoader(true);\r\n    } else if (props.pollsdata !== null) {\r\n      setLoader(false);\r\n    }\r\n    const polls = props.pollsdata !== null ? props.pollsdata : [];\r\n    const isInactivePollPresent = filter?.status_id?.includes(4);\r\n    if (\r\n      search.length > 0 ||\r\n      (filter?.status_id?.length > 0 && !isInactivePollPresent)\r\n    ) {\r\n      setTotalPolls(polls);\r\n    } else {\r\n      setTotalPolls(mergePoll(polls));\r\n    }\r\n  }, [props.pollsdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const setSearchValue = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const setFilterOptions = (value) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const handleCheck = (data) => {\r\n    setChecked(!checked);\r\n    setFilter(data);\r\n  };\r\n\r\n  return (\r\n    <ShowAllPolls\r\n      polls={totalPolls}\r\n      data={props}\r\n      loader={loader}\r\n      checked={checked}\r\n      setLoader={setLoader}\r\n      statusOnClicked={statusOnClicked}\r\n      setFilterOptions={setFilterOptions}\r\n      setSearchValue={setSearchValue}\r\n      handleCheck={handleCheck}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollsContainer);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Button, Breadcrumb } from \"antd\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { POLLS, POLL_RESULTS } from \"../../headings\";\r\nimport { POLL_RESULTS_NOT_AVAILABLE } from \"../../messages\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\n\r\nconst starsRating = {\r\n  size: 30,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 3,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst PollResponse = (props) => {\r\n  let location = useLocation();\r\n  const [loader, setLoader] = useState(false);\r\n  const [data, setData] = useState({});\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    const data = {\r\n      poll_id: location.state.poll_id,\r\n    };\r\n    axios.post(BASE_URL + \"pollResult/\", data, options).then((res) => {\r\n      setData(res.data[0]);\r\n      setLoader(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{POLL_RESULTS}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3 justify-content-between\">\r\n                  <h1 className=\"mb-0\">{location.state.title}</h1>\r\n                  <Col\r\n                    span={24}\r\n                    md={24}\r\n                    lg={12}\r\n                    xl={15}\r\n                    className=\"d-flex align-items-center justify-content-start justify-content-lg-end px-3 px-lg-0 my-4 my-lg-0\"\r\n                  >\r\n                    {data?.total_employee_count ? (\r\n                      <span className=\"pr-3\">\r\n                        Total audience : {data?.total_employee_count}\r\n                      </span>\r\n                    ) : null}\r\n                    {/* <Button type=\"primary\" className=\"md\">\r\n                      Download\r\n                    </Button> */}\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex align-items-center justify-content-end\"\r\n                  ></Col>\r\n                </Row>\r\n                <div className=\"\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <p className=\"font-weight-md6\">\r\n                        {location.state.question}\r\n                      </p>\r\n                      {data?.total_response ? (\r\n                        <span className=\"font-weight-md6 pt-3 d-flex\">\r\n                          {data?.total_response} Response(s)\r\n                        </span>\r\n                      ) : null}\r\n\r\n                      <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            {/* <div className=\"c-vector-area\">\r\n                          <img\r\n                           // src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div> */}\r\n                            <h1 className=\"text-center pt-3\">\r\n                              {!data && POLL_RESULTS_NOT_AVAILABLE}\r\n                            </h1>\r\n                            <Row className=\"d-flex justify-content-center\">\r\n                              {/* <Divider className=\"mt-1\" /> */}\r\n                            </Row>\r\n                            <Col\r\n                              span={24}\r\n                              className=\"d-flex align-items-center justify-content-center\"\r\n                            >\r\n                              {data?.option_text === \"1\" ? (\r\n                                <span>\r\n                                  <ReactStars {...starsRating} />\r\n                                </span>\r\n                              ) : data?.option_text === \"2\" ? (\r\n                                <img src={Smiley} alt=\"send message\" />\r\n                              ) : data?.option_text === \"3\" ? (\r\n                                <img src={Thermometer} alt=\"send message\" />\r\n                              ) : data?.option_text === \"4\" ? (\r\n                                <img src={Thumb} alt=\"send message\" />\r\n                              ) : data?.option_text === \"5\" ? (\r\n                                <img src={Steps} alt=\"send message\" />\r\n                              ) : null}\r\n                            </Col>\r\n                          </Col>\r\n                          <span className=\"pl-5\">{data?.percentage}</span>\r\n                        </Row>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PollResponse;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\nimport {\r\n  CANCEL,\r\n  PUBLISH,\r\n  RESCHEDULE,\r\n  SCHEDULE,\r\n  PUBLISH_POLL,\r\n} from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport {\r\n  SELECT_START_DATE,\r\n  SELECT_END_DATE,\r\n  SELECT_START_TIME,\r\n  SELECT_END_TIME,\r\n} from \"../../labels\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.props.pollData.pollStartDate ||\r\n      !this.props.pollData.pollEndDate\r\n    ) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ startTimeError: true });\r\n    } else {\r\n      this.setState({ startTimeError: false, startTime: time });\r\n      this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTime: time, endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {this.props.viaEdit ? RESCHEDULE : SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={\r\n            this.props.pollData.status_id === 8 ||\r\n            this.props.pollData.status_id === 5\r\n              ? {\r\n                  style: { display: \"none\" },\r\n                }\r\n              : {\r\n                  children: \"Custom OK\",\r\n                }\r\n          }\r\n          cancelButtonProps={\r\n            this.props.pollData.status_id === 8 ||\r\n            this.props.pollData.status_id === 5\r\n              ? {\r\n                  className: \"ant-btn-primary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n              : {\r\n                  className: \"ant-btn-secondary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n          }\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.startDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                    disabled={\r\n                      this.props.pollData.status_id === 8 ||\r\n                      this.props.pollData.status_id === 5\r\n                    }\r\n                  />\r\n                  {this.state.startTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label={SELECT_START_TIME}\r\n                        value={this.state.startTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={\r\n                          this.props.pollData.status_id === 8 ||\r\n                          this.props.pollData.status_id === 5\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {this.state.endDate !== \"\" ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <DatePicker\r\n                        defaultValue={this.state.endDate}\r\n                        disabledDate={this.disabledEndDate}\r\n                        onChange={(date) => this.onChangeEndDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"eDate\"\r\n                        className=\"required\"\r\n                        disabled={\r\n                          this.props.pollData.status_id === 8 ||\r\n                          this.props.pollData.status_id === 5\r\n                        }\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <DatePicker\r\n                      defaultValue={this.state.endDate}\r\n                      disabledDate={this.disabledEndDate}\r\n                      onChange={(date) => this.onChangeEndDate(date)}\r\n                      className=\"w-100\"\r\n                      name=\"eDate\"\r\n                      className=\"required\"\r\n                      disabled={\r\n                        this.props.pollData.status_id === 8 ||\r\n                        this.props.pollData.status_id === 5\r\n                      }\r\n                    />\r\n                  )}\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.state.endTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={\r\n                          this.props.pollData.status_id === 8 ||\r\n                          this.props.pollData.status_id === 5\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Button, Tooltip, Radio, Checkbox, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport EditDateTimeModal from \"../modal/EditDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport { BACK, PREVIEW_POLL } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditPreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  editPoll,\r\n  showError,\r\n  error,\r\n  data,\r\n  loader,\r\n  attachmentName,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    editPoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n                  <React.Fragment>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <p className=\"font-weight-md6\">\r\n                          {poll.pollQuestion}\r\n                          </p>\r\n                        <Row className=\"preview-que\" disabled={true}>\r\n                          <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                            {poll.pollQuestionType === \"1\" ? (\r\n                              poll.pollResponse.map((value) => (\r\n                                <Radio>{value}</Radio>\r\n                              ))\r\n                            ) : poll.pollQuestionType === \"2\" ? (\r\n                              poll.pollResponse.map((value) => (\r\n                                <Checkbox>{value}</Checkbox>\r\n                              ))\r\n                            ) : poll.pollQuestionType === \"3\"  ? (\r\n                              poll.pollRatingType === \"1\" ? (\r\n                                  \r\n                                    <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                  ):\r\n                                  poll.pollRatingType === \"2\" ? (<img src={Smiley} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"3\" ? (<img src={Thermometer} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"4\" ? (<img src={Thumb} alt=\"send message\" />):\r\n                                  poll.pollRatingType === \"5\" ? (<img src={Steps} alt=\"send message\" />):\r\n                                  (null)\r\n                            ) : null}\r\n                          </div>\r\n                        </Row>\r\n                        <Row className=\"mt-2\">\r\n                          <div class=\"ant-upload-list-item\">\r\n                            <div class=\"ant-upload-list-item-info\">\r\n                              <span class=\"ant-upload-span\">\r\n                                <div class=\"ant-upload-text-icon\">\r\n                                  <PaperClipOutlined />\r\n                                </div>\r\n                                <span\r\n                                  class=\"ant-upload-list-item-name\"\r\n                                  title=\"add-user-doc\"\r\n                                >\r\n                                  {poll.pollDocument ? (\r\n                                    <a\r\n                                      href={poll.pollDocument}\r\n                                      download={poll.pollDocument}\r\n                                    >\r\n                                      \r\n                                          {attachmentName}\r\n                                        </a>\r\n                                      ) : null}\r\n                                    </span>\r\n                                    <span class=\"ant-upload-list-item-card-actions\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"ant-btn\"\r\n                                      ></button>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mt-5 px-3\">\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          type=\"secondary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"mr-4\"\r\n                          onClick={onBackCreatePoll}\r\n                        >\r\n                          {BACK}\r\n                        </Button>\r\n                        <EditDateTimeModal\r\n                          pollData={poll}\r\n                          handlePollStartDatePickerChange={\r\n                            handlePollStartDatePickerChange\r\n                          }\r\n                          handlePollEndDatePickerChange={\r\n                            handlePollEndDatePickerChange\r\n                          }\r\n                          handlePollStartTimePickerChange={\r\n                            handlePollStartTimePickerChange\r\n                          }\r\n                          handlePollEndTimePickerChange={\r\n                            handlePollEndTimePickerChange\r\n                          }\r\n                          onPublish={onPublish}\r\n                          showError={showError}\r\n                          error={error}\r\n                          viaEdit\r\n                        />\r\n                      </div>\r\n                      \r\n                    </Spin>\r\n                  </React.Fragment>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport EditPreviewPoll from \"./EditPreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport {\r\n  VIEW_POLL,\r\n  EDIT_POLL,\r\n  POLL_TITLE,\r\n  UPLOAD,\r\n  DOCUMENT_IMAGE,\r\n  PREVIEW,\r\n  CANCEL,\r\n  CLOSE_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport { REQUIRED_MESSAGE, STAR_CHART_TYPE } from \"../../errors\";\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  RATING_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  BAR_CHART,\r\n  LADDER,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  SMILEY,\r\n  STARS,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n  THERMOMETER,\r\n  THUMBSUP,\r\n} from \"../../values\";\r\nimport { EDIT_POLL_NOTIFICATION } from \"../../messages\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst EditPoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: [],\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n      const data = res.data;\r\n      setPoll({\r\n        ...poll,\r\n        pollId: data.poll_id,\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollDocument:\r\n          data.image !== null || data.document !== null\r\n            ? [\r\n                {\r\n                  uid: \"1\",\r\n                  name:\r\n                    data.image_name !== null\r\n                      ? data.image_name\r\n                      : data.document_name !== null\r\n                      ? data.document_name\r\n                      : \"\",\r\n                  status: \"done\",\r\n                  url: data.image ? data.image : data.document,\r\n                },\r\n              ]\r\n            : \"\",\r\n        showResult: data.show_result_to_users,\r\n        pollChartType: data.poll_result_chart_type.toString(),\r\n        pollQuestion: data.question,\r\n        pollQuestionType: data.poll_question_type.toString(),\r\n        pollRatingType: data.poll_question_rating_type\r\n          ? data.poll_question_rating_type.toString()\r\n          : \"\",\r\n        pollRatingResponse: data.poll_question_rating_type,\r\n        pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n        pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n        pollStartTime: data.start_time,\r\n        pollEndTime: data.end_time,\r\n        status_id: data.status_id,\r\n        pollResponse: data.option_text.map((value) => value.option_text),\r\n        pollOptionText: data.option_text,\r\n      });\r\n      setAttachmentName(\r\n        data.image_name !== null\r\n          ? data.image_name\r\n          : data.document_name !== null\r\n          ? data.document_name\r\n          : \"\"\r\n      );\r\n      const isImage =\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpeg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"png\");\r\n      if (isImage) {\r\n        setIsImage(true);\r\n      } else {\r\n        setIsImage(false);\r\n      }\r\n      setLoader(false);\r\n      form.setFieldsValue({\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollQuestion: data.question,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if (poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  function getBase64(file) {\r\n    var atb = btoa(file);\r\n    var base64Blob = new Blob([atb]);\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(base64Blob);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  function convertImgToBase64(url, callback, outputFormat) {\r\n    var canvas = document.createElement(\"CANVAS\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = new Image();\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.onload = function () {\r\n      canvas.height = img.height;\r\n      canvas.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n      callback.call(this, dataURL);\r\n      // Clean up\r\n      canvas = null;\r\n    };\r\n    img.src = url;\r\n  }\r\n\r\n  const editPoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n    let data = {};\r\n\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollEndDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (\r\n      poll.pollDocument?.length === 0 ||\r\n      poll.pollDocument[0].url?.length === 0\r\n    ) {\r\n      data = {\r\n        update_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n        .then(() => {\r\n          setLoader(false);\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: EDIT_POLL_NOTIFICATION,\r\n            placement,\r\n          });\r\n          window.location = \"/orgcc/pollsdirectory\";\r\n        });\r\n    } else {\r\n      if (poll.pollDocument[0]?.url) {\r\n        if (isImage) {\r\n          convertImgToBase64(poll.pollDocument[0]?.url, function (base64Img) {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                image: base64Img,\r\n                image_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                poll_question_rating_type: poll.pollRatingType\r\n                  ? parseInt(poll.pollRatingType)\r\n                  : \"\",\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n            axios\r\n              .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n              .then(() => {\r\n                setLoader(false);\r\n                const placement = \"bottomLeft\";\r\n                api.info({\r\n                  description: \"Poll details have been changed successfully.\",\r\n                  placement,\r\n                });\r\n                window.location = \"/orgcc/pollsdirectory\";\r\n              });\r\n          });\r\n        } else {\r\n          getBase64(poll.pollDocument[0]?.url).then((res) => {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                document: res,\r\n                document_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                poll_question_rating_type: poll.pollRatingType\r\n                  ? parseInt(poll.pollRatingType)\r\n                  : \"\",\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n            axios\r\n              .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n              .then(() => {\r\n                setLoader(false);\r\n                const placement = \"bottomLeft\";\r\n                api.info({\r\n                  description: \"Poll details have been changed successfully.\",\r\n                  placement,\r\n                });\r\n                window.location = \"/orgcc/pollsdirectory\";\r\n              });\r\n          });\r\n        }\r\n      } else {\r\n        if (isImage) {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              image: poll.pollDocument.base64,\r\n              image_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type: poll.pollRatingType\r\n                ? parseInt(poll.pollRatingType)\r\n                : \"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        } else {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              document: poll.pollDocument.base64,\r\n              document_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type: poll.pollRatingType\r\n                ? parseInt(poll.pollRatingType)\r\n                : \"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        }\r\n        axios\r\n          .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n          .then(() => {\r\n            setLoader(false);\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: \"Poll details have been changed successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/orgcc/pollsdirectory\";\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    if (name === \"pollRatingType\") {\r\n      setPoll({\r\n        ...poll,\r\n        [name]: value,\r\n        [\"pollResponse\"]: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n      });\r\n    } else {\r\n      setPoll({ ...poll, [name]: value });\r\n    }\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (poll.status_id === 8 || poll.status_id === 5) {\r\n      return null;\r\n    } else {\r\n      if (value.file.status === \"removed\") {\r\n        showuploadError(true);\r\n      }\r\n      let fileList = value.fileList.slice(-1);\r\n      checkDoucmentType(value.file.type);\r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setAttachmentName(value.file.name);\r\n      setPoll({ ...poll, [name]: fileList });\r\n    }\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 8 || poll.status_id === 5) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      convertImgToBase64(file.url, function (base64Img) {\r\n        // await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setPoll({\r\n          ...poll,\r\n          previewImage: base64Img,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setPoll({\r\n        ...poll,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 8 || poll.status_id === 5) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (e.target.value !== location.state.title) {\r\n      axios\r\n        .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setpollError(res.data[0]);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                        initialValues={{\r\n                          remember: true,\r\n                        }}\r\n                        form={form}\r\n                      >\r\n                        <Row className=\"py-3\">\r\n                          <h1 className=\"mb-0\">\r\n                            {poll.status_id === 8 || poll.status_id === 5\r\n                              ? VIEW_POLL\r\n                              : EDIT_POLL}\r\n                          </h1>\r\n                        </Row>\r\n\r\n                        <div className=\"mid-content\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={REQUIRED_MESSAGE}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <Col span={24}>\r\n                                <Row>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={POLL_TITLE}\r\n                                      value={poll.pollName}\r\n                                    >\r\n                                      <TextArea\r\n                                        showCount\r\n                                        maxLength={50}\r\n                                        htmlFor=\"polltitle\"\r\n                                        value={poll.pollName}\r\n                                        id=\"pollName\"\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        onBlur={(e) => isPollNameDuplicate(e)}\r\n                                        autoComplete=\"off\"\r\n                                        disabled={\r\n                                          poll.status_id === 8 ||\r\n                                          poll.status_id === 5\r\n                                        }\r\n                                        className={`required ${styles.sm_textarea}`}\r\n                                      />\r\n\r\n                                      {pollError === \"status: false\" &&\r\n                                        poll.pollName\r\n                                          .replace(/^\\s*/, \"\")\r\n                                          .replace(/\\s*$/, \"\").length > 0 &&\r\n                                        poll.pollName.length > 0 && (\r\n                                          <CheckCircleTwoTone\r\n                                            className=\"successCheck\"\r\n                                            twoToneColor=\"#52c41a\"\r\n                                          />\r\n                                        )}\r\n                                      {pollError == \"status: true\" && (\r\n                                        <Alert\r\n                                          message={POLL_ALREADY_EXISTS}\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      )}\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={DESCRIPTION}\r\n                                      value={poll.pollHelpText}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"pollHelpText\"\r\n                                        id=\"pollHelpText\"\r\n                                        validateStatus=\"success\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"helptext\"\r\n                                          id=\"pollHelpText\"\r\n                                          name=\"pollHelpText\"\r\n                                          value={poll.pollHelpText}\r\n                                          disabled={\r\n                                            poll.status_id === 8 ||\r\n                                            poll.status_id === 5\r\n                                          }\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"gutter-row mt-3\">\r\n                                    {poll.pollDocument?.length === 0 && (\r\n                                      <h6>{UPLOAD}</h6>\r\n                                    )}\r\n                                    <Form.Item\r\n                                      name=\"upload\"\r\n                                      className=\"upload-list\"\r\n                                      valuePropName=\"fileList\"\r\n                                    >\r\n                                      <>\r\n                                        <Upload\r\n                                          listType=\"picture\"\r\n                                          fileList={poll.pollDocument}\r\n                                          onChange={(value) =>\r\n                                            handleStepOneUpload(\r\n                                              value,\r\n                                              \"pollDocument\"\r\n                                            )\r\n                                          }\r\n                                          beforeUpload={(value) =>\r\n                                            handleBeforeUpload(\r\n                                              value,\r\n                                              \"pollDocument\"\r\n                                            )\r\n                                          }\r\n                                          onRemove={() => handleOnRemove()}\r\n                                          onPreview={(value) =>\r\n                                            handleStepOnePreview(value)\r\n                                          }\r\n                                          className=\"upload-list-inline c-upload\"\r\n                                          accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n                                        >\r\n                                          {poll.pollDocument.length === 0 ? (\r\n                                            <Button\r\n                                              type=\"link\"\r\n                                              className=\"link pl-0\"\r\n                                            >\r\n                                              <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                                              {DOCUMENT_IMAGE}\r\n                                            </Button>\r\n                                          ) : null}\r\n                                        </Upload>\r\n                                        <Modal\r\n                                          visible={poll.previewVisible}\r\n                                          title={poll.previewTitle}\r\n                                          centered\r\n                                          onOk={(value) => handleCancel(value)}\r\n                                          okButtonProps={{\r\n                                            children: \"Custom OK\",\r\n                                          }}\r\n                                          cancelButtonProps={{\r\n                                            style: { display: \"none\" },\r\n                                          }}\r\n                                          okText={CLOSE_TEXT_MODAL}\r\n                                        >\r\n                                          <img\r\n                                            alt=\"image\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            src={poll.previewImage}\r\n                                          />\r\n                                        </Modal>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row\">\r\n                                <Row className=\"align-items-center d-flex\">\r\n                                  <Col span={24} md={8} lg={8} xl={6}>\r\n                                    <Form.Item\r\n                                      name=\"showresult\"\r\n                                      label={SHOW_RESULTS_POLL}\r\n                                      className=\"mb-0\"\r\n                                    >\r\n                                      <Switch\r\n                                        id=\"showResult\"\r\n                                        checked={poll.showResult}\r\n                                        disabled={\r\n                                          poll.status_id === 8 ||\r\n                                          poll.status_id === 5\r\n                                        }\r\n                                        onChange={(checked, e) =>\r\n                                          onChange(checked, e)\r\n                                        }\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                  {poll.showResult ? (\r\n                                    <Col span={24} lg={6}>\r\n                                      <FloatLabel\r\n                                        label={DISPLAY_RESULTS_AS}\r\n                                        value={poll.pollChartType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"result\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"input-control\"\r\n                                              htmlFor=\"result\"\r\n                                              className=\"required\"\r\n                                              disabled={\r\n                                                poll.status_id === 8 ||\r\n                                                poll.status_id === 5\r\n                                              }\r\n                                              value={\r\n                                                poll.pollChartType === \"2\"\r\n                                                  ? \"\"\r\n                                                  : poll.pollChartType\r\n                                              }\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollChartType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                {PIE_CHART}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                {BAR_CHART}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                {STAR_FORMAT}\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                      {chartError && (\r\n                                        <Form.Item>\r\n                                          <Alert\r\n                                            message={STAR_CHART_TYPE}\r\n                                            type=\"error\"\r\n                                            showIcon\r\n                                          ></Alert>\r\n                                        </Form.Item>\r\n                                      )}\r\n                                    </Col>\r\n                                  ) : (\r\n                                    <Col></Col>\r\n                                  )}\r\n                                </Row>\r\n                              </Col>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mid-content mt-4\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              <Col span={24}>\r\n                                <Row className=\"d-block\">\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <Row\r\n                                      gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                                    >\r\n                                      <Col\r\n                                        span={24}\r\n                                        md={8}\r\n                                        lg={8}\r\n                                        className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                                      >\r\n                                        <FloatLabel\r\n                                          label={QUESTION_TYPE}\r\n                                          value={poll.pollQuestionType}\r\n                                        >\r\n                                          <Form.Item\r\n                                            className=\"required\"\r\n                                            name=\"questiontype\"\r\n                                          >\r\n                                            <>\r\n                                              <Select\r\n                                                className=\"\"\r\n                                                htmlFor=\"questiontype\"\r\n                                                className=\"required\"\r\n                                                id=\"pollQuestionType\"\r\n                                                disabled={\r\n                                                  poll.status_id === 8 ||\r\n                                                  poll.status_id === 5\r\n                                                }\r\n                                                value={poll.pollQuestionType}\r\n                                                onSelect={(value) =>\r\n                                                  handlePollOnSelect(\r\n                                                    value,\r\n                                                    \"pollQuestionType\"\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <Select.Option\r\n                                                  value=\"1\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType === \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {SELECT_SINGLE}\r\n                                                </Select.Option>\r\n                                                <Select.Option\r\n                                                  value=\"2\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType === \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {SELECT_MULTIPLE}\r\n                                                </Select.Option>\r\n                                                <Select.Option\r\n                                                  value=\"3\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType !== \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {STAR_RATING}\r\n                                                </Select.Option>\r\n                                              </Select>\r\n                                            </>\r\n                                          </Form.Item>\r\n                                        </FloatLabel>\r\n                                      </Col>\r\n                                      {poll.pollQuestionType === \"3\" ? (\r\n                                        <Col\r\n                                          span={24}\r\n                                          md={10}\r\n                                          lg={8}\r\n                                          className=\"gutter-row\"\r\n                                        >\r\n                                          <FloatLabel\r\n                                            label={RATING_TYPE}\r\n                                            value={poll.pollRatingType}\r\n                                          >\r\n                                            <Form.Item\r\n                                              className=\"required mb-0\"\r\n                                              name=\"ratingtype\"\r\n                                            >\r\n                                              <>\r\n                                                <Select\r\n                                                  className=\"\"\r\n                                                  htmlFor=\"ratingtype\"\r\n                                                  className=\"required\"\r\n                                                  id=\"pollRatingType\"\r\n                                                  value={poll.pollRatingType}\r\n                                                  onSelect={(value) =>\r\n                                                    handlePollOnSelect(\r\n                                                      value,\r\n                                                      \"pollRatingType\"\r\n                                                    )\r\n                                                  }\r\n                                                >\r\n                                                  <Select.Option value=\"1\">\r\n                                                    {STARS}\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"2\">\r\n                                                    {SMILEY}\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"3\">\r\n                                                    {THERMOMETER}\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"4\">\r\n                                                    {THUMBSUP}\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"5\">\r\n                                                    {LADDER}\r\n                                                  </Select.Option>\r\n                                                </Select>\r\n                                              </>\r\n                                            </Form.Item>\r\n                                          </FloatLabel>\r\n                                        </Col>\r\n                                      ) : null}\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={QUESTION}\r\n                                      value={poll.pollQuestion}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control edit-input\"\r\n                                          name=\"pollQuestion\"\r\n                                          id=\"pollQuestion\"\r\n                                          htmlFor=\"pollQuestion\"\r\n                                          className=\"required\"\r\n                                          disabled={\r\n                                            poll.status_id === 8 ||\r\n                                            poll.status_id === 5\r\n                                          }\r\n                                          defaultValue={poll.pollQuestion}\r\n                                          value={poll.pollQuestion}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"mt-4\">\r\n                                    {poll.pollQuestionType === \"3\" &&\r\n                                    poll.pollRatingType ? (\r\n                                      poll.pollRatingType === \"1\" ? (\r\n                                        <ReactStars\r\n                                          {...starsRating}\r\n                                          value={poll.pollRatingResponse}\r\n                                          name=\"pollRatingResponse\"\r\n                                          disabled={poll.status_id === 8}\r\n                                          onChange={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollRatingResponse\"\r\n                                            )\r\n                                          }\r\n                                          classNames=\"mt-3\"\r\n                                        />\r\n                                      ) : poll.pollRatingType === \"2\" ? (\r\n                                        <img src={Smiley} alt=\"send message\" />\r\n                                      ) : poll.pollRatingType === \"3\" ? (\r\n                                        <img\r\n                                          src={Thermometer}\r\n                                          alt=\"send message\"\r\n                                        />\r\n                                      ) : poll.pollRatingType === \"4\" ? (\r\n                                        <img src={Thumb} alt=\"send message\" />\r\n                                      ) : poll.pollRatingType === \"5\" ? (\r\n                                        <img src={Steps} alt=\"send message\" />\r\n                                      ) : null\r\n                                    ) : poll.pollQuestionType === \"1\" ? (\r\n                                      <div>\r\n                                        <MultiChoice\r\n                                          setSingleChoiceResponse={\r\n                                            setSingleChoiceResponse\r\n                                          }\r\n                                          pollResponse={poll.pollResponse}\r\n                                          disabled={\r\n                                            poll.status_id === 8 ||\r\n                                            poll.status_id === 5\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                    ) : poll.pollQuestionType === \"2\" ? (\r\n                                      <MultiChoice\r\n                                        pollResponse={poll.pollResponse}\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                        disabled={\r\n                                          poll.status_id === 8 ||\r\n                                          poll.status_id === 5\r\n                                        }\r\n                                      />\r\n                                    ) : null}\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n\r\n                              <div className=\"mt-5\">\r\n                                <Button\r\n                                  type=\"primary\"\r\n                                  className=\"md mr-4\"\r\n                                  onClick={onPreview}\r\n                                >\r\n                                  {PREVIEW}\r\n                                </Button>\r\n                                <Button\r\n                                  type=\"secondary\"\r\n                                  type=\"secondary\"\r\n                                  htmlType=\"submit\"\r\n                                  onClick={onCancel}\r\n                                >\r\n                                  {CANCEL}\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Form>\r\n                    </Spin>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <EditPreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            editPoll={editPoll}\r\n            showError={showError}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n            error={error}\r\n            loader={loader}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPoll;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Input, Divider, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\nimport { CREATE_POLL, POLLS, OOTB_POLL, SEARCH } from \"../../headings\";\r\nimport { OOTB_TEXT } from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nclass ExistingPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getPollAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { pollsdata } = this.props;\r\n\r\n    if (prevProps.pollsdata !== pollsdata) {\r\n      this.setState(\r\n        {\r\n          data: pollsdata,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <NavLink to=\"/createpoll\">\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{OOTB_POLL}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1>{OOTB_TEXT}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <div className=\"mid-content\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                  {/* <Row>\r\n                    <Col span={24}>\r\n                      <h6 className=\"mb-4\">Poll Name</h6>\r\n                      <Row className=\"my-2\">\r\n                      <Link to=\"/\">Impact of Microaggression</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                      <Row className=\"my-2\">\r\n                        <Link to=\"/\">Microaggressions – do we have it?</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                    </Col>\r\n                  </Row> */}\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExistingPolls);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker,Alert} from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment, { months } from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nclass DuplicateDateTimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n      dateError:false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n      pollId\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n    });\r\n    const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n    const finalEndDate = new Date(emonth + \"-\" + edate + \"-\" + eyear);\r\n    const currentDate = new Date();\r\n    if(pollId != 1 && pollId !=2){\r\n      if (finalStartDate < currentDate || finalEndDate < currentDate) {\r\n        this.setState({\r\n         dateError:true\r\n        })\r\n      }\r\n     }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.onPublish();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n    this.setState({\r\n        dateError:false\r\n    })\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n    this.setState({\r\n        dateError:false\r\n    })\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    this.setState({ startTime: time });\r\n    this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    this.setState({ endTime: time });\r\n    this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          { \"Schedule\"}\r\n        </Button>\r\n        <Modal\r\n          title=\"Publish Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={\r\n            {\r\n                  children: \"Custom OK\",\r\n                }\r\n          }\r\n          cancelButtonProps={\r\n             {\r\n                  className: \"ant-btn-secondary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n          }\r\n          okText=\"Publish\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                Select Date and Time to publish the\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n              {this.state.dateError && (\r\n                <Form.Item>\r\n                      <Alert\r\n                      message=\"Please select valid date\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                      ></Alert>\r\n                  </Form.Item>\r\n              )}\r\n\r\n              <FloatLabel label=\"Select Start Date\" value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.startDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label=\"Select Start Time\"\r\n                        value={this.state.startTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label=\"Select End Date\" value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  {this.state.endDate !== \"\" ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <DatePicker\r\n                        defaultValue={this.state.endDate}\r\n                        disabledDate={this.disabledEndDate}\r\n                        onChange={(date) => this.onChangeEndDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"eDate\"\r\n                        className=\"required\"\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <DatePicker\r\n                      defaultValue={this.state.endDate}\r\n                      disabledDate={this.disabledEndDate}\r\n                      onChange={(date) => this.onChangeEndDate(date)}\r\n                      className=\"w-100\"\r\n                      name=\"eDate\"\r\n                      className=\"required\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid container justify=\"space-around\">\r\n                    <KeyboardTimePicker\r\n                      margin=\"normal\"\r\n                      id=\"time-picker2\"\r\n                      label=\"Select End Time\"\r\n                      value={this.state.endTime}\r\n                      onChange={(time) => this.onChangeEndTime(time)}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change time\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DuplicateDateTimeModal;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DuplicteDateTimeModal from \"../modal/DuplicateDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst DuplicatePreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  CreateDuplicatePoll,\r\n  data,\r\n  attachmentName,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    CreateDuplicatePoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>Manage Polls</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      {/* <NavLink to=\"/orgcc/createpoll\">\r\n                        <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>Preview Poll</Breadcrumb.Item> */}\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">Preview Poll</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <p className=\"font-weight-md6\">{poll.pollQuestion}</p>\r\n                        <Row className=\"preview-que\" disabled={true}>\r\n                          <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                            {poll.pollQuestionType === \"1\" ? (\r\n                              poll.pollResponse.map((value) => (\r\n                                <Radio>{value}</Radio>\r\n                              ))\r\n                            ) : poll.pollQuestionType === \"2\" ? (\r\n                              poll.pollResponse.map((value) => (\r\n                                <Checkbox>{value}</Checkbox>\r\n                              ))\r\n                            ) : poll.pollQuestionType === \"3\" ? (\r\n                              poll.pollRatingType === \"1\" ? (\r\n                                <ReactStars\r\n                                {...starsRating}\r\n                                value={poll.pollRatingResponse}\r\n                                name=\"pollRatingResponse\"\r\n                                onChange={(value) =>\r\n                                  handlePollOnSelect(\r\n                                    value,\r\n                                    \"pollRatingResponse\"\r\n                                  )\r\n                                }\r\n                                classNames=\"mt-3\"\r\n                              />\r\n                              ):\r\n                              poll.pollRatingType === \"2\" ? (<img src={Smiley} alt=\"send message\" />):\r\n                              poll.pollRatingType === \"3\" ? (<img src={Thermometer} alt=\"send message\" />):\r\n                              poll.pollRatingType === \"4\" ? (<img src={Thumb} alt=\"send message\" />):\r\n                              poll.pollRatingType === \"5\" ? (<img src={Steps} alt=\"send message\" />):\r\n                              (null)\r\n                            ) : null}\r\n                          </div>\r\n                        </Row>\r\n                        <Row className=\"mt-2\">\r\n                          <div class=\"ant-upload-list-item\">\r\n                            <div class=\"ant-upload-list-item-info\">\r\n                              <span class=\"ant-upload-span\">\r\n                                <div class=\"ant-upload-text-icon\">\r\n                                  <PaperClipOutlined />\r\n                                </div>\r\n                                <span\r\n                                  class=\"ant-upload-list-item-name\"\r\n                                  title=\"add-user-doc\"\r\n                                >\r\n                                  {poll.pollDocument ? (\r\n                                    <a\r\n                                      href={poll.pollDocument}\r\n                                      download={poll.pollDocument}\r\n                                    >\r\n                                      {attachmentName}\r\n                                    </a>\r\n                                  ) : null}\r\n                                </span>\r\n                                <span class=\"ant-upload-list-item-card-actions\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    class=\"ant-btn\"\r\n                                  ></button>\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"mt-5 px-3\">\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      type=\"secondary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"mr-4\"\r\n                      onClick={onBackCreatePoll}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                    <DuplicteDateTimeModal\r\n                      pollData={poll}\r\n                      handlePollStartDatePickerChange={\r\n                        handlePollStartDatePickerChange\r\n                      }\r\n                      handlePollEndDatePickerChange={\r\n                        handlePollEndDatePickerChange\r\n                      }\r\n                      handlePollStartTimePickerChange={\r\n                        handlePollStartTimePickerChange\r\n                      }\r\n                      handlePollEndTimePickerChange={\r\n                        handlePollEndTimePickerChange\r\n                      }\r\n                      onPublish={onPublish}\r\n                      viaEdit\r\n                    />\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DuplicatePreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Upload,\r\n  Spin,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport DuplicatePreviewPoll from \"./DuplicatePreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport UploadImage from \"./UploadImage\"\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst DuplicatePoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n    pollRatingType:\"\"\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    if(pollID == 1  || pollID == 2 ){\r\n      const options = {\r\n        headers: {\r\n          'Accept': \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      axios.get(\"http://localhost:3000/data/\"+ `poll_${pollID}.json`, options).then((res) => {\r\n        const data = res.data;\r\n        setDefaultPollDetails(data[0]);\r\n      })\r\n\r\n    }else{\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n      const data = res.data;\r\n      setPollDetails(data);\r\n    });\r\n  }\r\n  }, []);\r\n\r\n  const setDefaultPollDetails = (data) =>{\r\n\r\n    setPoll({\r\n      ...poll,\r\n      pollId: data.poll_id,\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      showResult: data.show_result_to_users,\r\n      pollChartType: data.poll_result_chart_type.toString(),\r\n      pollQuestion: data.question,\r\n      pollQuestionType: data.poll_question_type.toString(),\r\n      pollRatingResponse: \"\",\r\n      pollStartDate: moment().utc().local().format(\"DD-MM-YYYY\"),\r\n      pollEndDate: moment().utc().local().format(\"DD-MM-YYYY\"),\r\n      pollStartTime: moment().utc().local().format(\"hh:mm:ss\"),\r\n      pollEndTime: moment().utc().local().format(\"hh:mm:ss\"),\r\n      status_id: data.status_id,\r\n      pollResponse: data.option_text.map((value) => value.option_text),\r\n      pollOptionText: data.option_text,\r\n    });\r\n\r\n    setAttachmentName(\r\n      data.image_name !== null\r\n        ? data.image_name\r\n        : data.document_name !== null\r\n        ? data.document_name\r\n        : \"\"\r\n    );\r\n    const isImage =\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpeg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"png\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n    form.setFieldsValue({\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      pollQuestion: data.question,\r\n    });\r\n    isPollNameUnique(data.title);\r\n\r\n\r\n  }\r\n\r\n  const setPollDetails = (data) =>{\r\n    setPoll({\r\n      ...poll,\r\n      pollId: data.poll_id,\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      showResult: data.show_result_to_users,\r\n      pollChartType: data.poll_result_chart_type.toString(),\r\n      pollQuestion: data.question,\r\n      pollQuestionType: data.poll_question_type.toString(),\r\n      pollRatingType:data.poll_question_rating_type?data.poll_question_rating_type.toString():\"\",\r\n      pollRatingResponse: \"\",\r\n      pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n      pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n      pollStartTime: data.start_time,\r\n      pollEndTime: data.end_time,\r\n      status_id: data.status_id,\r\n      pollResponse: data.option_text.map((value) => value.option_text),\r\n      pollOptionText: data.option_text,\r\n    });\r\n\r\n    setAttachmentName(\r\n      data.image_name !== null\r\n        ? data.image_name\r\n        : data.document_name !== null\r\n        ? data.document_name\r\n        : \"\"\r\n    );\r\n    const isImage =\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpeg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"png\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n    form.setFieldsValue({\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      pollQuestion: data.question,\r\n    });\r\n    isPollNameUnique(data.title);\r\n\r\n  }\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if(poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        }else{\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const CreateDuplicatePoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n\r\n    let data = {};\r\n    function convertImgToBase64(url, callback, outputFormat) {\r\n      var canvas = document.createElement(\"CANVAS\");\r\n      var ctx = canvas.getContext(\"2d\");\r\n      var img = new Image();\r\n      img.crossOrigin = \"Anonymous\";\r\n      img.onload = function () {\r\n        canvas.height = img.height;\r\n        canvas.width = img.width;\r\n        ctx.drawImage(img, 0, 0);\r\n        var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n        callback.call(this, dataURL);\r\n        // Clean up\r\n        canvas = null;\r\n      };\r\n      img.src = url;\r\n    }\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollStartDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios\r\n        .post(BASE_URL + \"poll/\", data, options)\r\n        .then(() => {\r\n          setLoader(false);\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: \"Poll has been created successfully.\",\r\n            placement,\r\n          });\r\n          window.location = \"/orgcc/pollsdirectory\";\r\n        });\r\n    } else {\r\n        if (isImage) {\r\n          data = {\r\n            create_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              image: poll.pollDocument[0].base64,\r\n              image_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        } else {\r\n          data = {\r\n            create_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              document:  poll.pollDocument[0].base64,\r\n              document_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type:poll.pollRatingType?parseInt(poll.pollRatingType):\"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        }\r\n        axios\r\n          .post(BASE_URL + \"poll/\", data, options)\r\n          .then(() => {\r\n            setLoader(false);\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: \"Poll has been created successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/orgcc/pollsdirectory\";\r\n          });\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    \r\n      if (value.file.status === \"removed\") {\r\n        showuploadError(true);\r\n      }\r\n      let fileList = value.fileList.slice(-1);\r\n      checkDoucmentType(value.file.type);\r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setAttachmentName(value.file.name);\r\n      setPoll({ ...poll, [name]: fileList });\r\n    \r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handlePollImagePreview = async file => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPoll({...poll, previewImage : file.url || file.preview, previewVisible: true, \r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n\r\n    })\r\n  };\r\n\r\n  const handleCancel = (value) =>  setPoll({...poll, previewVisible: false });\r\n\r\n  const getBase64=(file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n   if (e.target.value !== location.state.title) {\r\n      isPollNameUnique(e.target.value)\r\n    }\r\n  };\r\n\r\n  const isPollNameUnique=(value)=>{\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n      axios\r\n        .post(BASE_URL + \"checkpoll/\", { title:value }, options)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setpollError(res.data[0]);\r\n          }\r\n        });\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      initialValues={{\r\n                        remember: true,\r\n                      }}\r\n                      form={form}\r\n                    >\r\n                      <Row className=\"py-3\">\r\n                        <h1 className=\"mb-0\">\r\n                          {\"Duplicate Poll\"}\r\n                        </h1>\r\n                      </Row>\r\n                      <Spin spinning={loader} size=\"large\">\r\n                        <div className=\"mid-content\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Please fill the fields marked with asterisk(*)\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <Col span={24}>\r\n                                <Row>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label=\"Poll Title\"\r\n                                      value={poll.pollName}\r\n                                    >\r\n                                      <TextArea\r\n                                        showCount\r\n                                        maxLength={50}\r\n                                        htmlFor=\"polltitle\"\r\n                                        value={poll.pollName}\r\n                                        id=\"pollName\"\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        onBlur={(e) => isPollNameDuplicate(e, \"pollName\")}\r\n                                        autoComplete=\"off\"\r\n                                        className={`required ${styles.sm_textarea}`}\r\n                                      />\r\n\r\n                                      {pollError === \"status: false\" &&\r\n                                        poll.pollName\r\n                                          .replace(/^\\s*/, \"\")\r\n                                          .replace(/\\s*$/, \"\").length > 0 &&\r\n                                        poll.pollName.length > 0 && (\r\n                                          <CheckCircleTwoTone\r\n                                            className=\"successCheck\"\r\n                                            twoToneColor=\"#52c41a\"\r\n                                          />\r\n                                        )}\r\n                                      {pollError == \"status: true\" && (\r\n                                        <Alert\r\n                                          message=\"Sorry! This Poll title already exists in the system. Please use a different name.\"\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      )}\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label=\"Description\"\r\n                                      value={poll.pollHelpText}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"pollHelpText\"\r\n                                        id=\"pollHelpText\"\r\n                                        validateStatus=\"success\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"helptext\"\r\n                                          id=\"pollHelpText\"\r\n                                          name=\"pollHelpText\"\r\n                                          value={poll.pollHelpText}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"gutter-row mt-3\">\r\n                                      <h6>Upload</h6>\r\n                                    <Form.Item\r\n                                      name=\"upload\"\r\n                                      className=\"upload-list\"\r\n                                      valuePropName=\"fileList\"\r\n                                    >\r\n                                       <UploadImage\r\n                                        file={poll.pollDocument}\r\n                                        handleStepOneUpload={handleStepOneUpload}\r\n                                        handleBeforeUpload={handleBeforeUpload}\r\n                                        handleOnRemove={handleOnRemove}\r\n                                        handlePollImagePreview={handlePollImagePreview}\r\n                                        handleCancel={handleCancel}\r\n                                        poll={poll}\r\n                                        />\r\n                                      \r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row\">\r\n                                <Row className=\"align-items-center d-flex\">\r\n                                  <Col span={24} md={8} lg={8} xl={6}>\r\n                                    <Form.Item\r\n                                      name=\"showresult\"\r\n                                      label=\"Show result to users \"\r\n                                      className=\"mb-0\"\r\n                                    >\r\n                                      <Switch\r\n                                        id=\"showResult\"\r\n                                        checked={poll.showResult}\r\n                                        onChange={(checked, e) =>\r\n                                          onChange(checked, e)\r\n                                        }\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                  {poll.showResult ? (\r\n                                    <Col span={24} lg={6}>\r\n                                      <FloatLabel\r\n                                        label=\"Display final results as\"\r\n                                        value={poll.pollChartType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"result\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"input-control\"\r\n                                              htmlFor=\"result\"\r\n                                              className=\"required\"\r\n                                              value={\r\n                                                poll.pollChartType === \"2\"\r\n                                                  ? \"\"\r\n                                                  : poll.pollChartType\r\n                                              }\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollChartType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                Pie Chart\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                Bar Chart\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                Star Format\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                      {chartError && (\r\n                                        <Form.Item>\r\n                                          <Alert\r\n                                            message=\"Please select the chat type as star\"\r\n                                            type=\"error\"\r\n                                            showIcon\r\n                                          ></Alert>\r\n                                        </Form.Item>\r\n                                      )}\r\n                                    </Col>\r\n                                  ) : (\r\n                                    <Col></Col>\r\n                                  )}\r\n                                </Row>\r\n                              </Col>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mid-content mt-4\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              <Col span={24}>\r\n                                <Row className=\"d-block\">\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                    <Col\r\n                                      span={24}\r\n                                      md={8}\r\n                                      lg={8}\r\n                                      className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                                      >\r\n                                    <FloatLabel\r\n                                      label=\"Question Type\"\r\n                                      value={poll.pollQuestionType}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"questiontype\"\r\n                                      >\r\n                                        <>\r\n                                          <Select\r\n                                            className=\"\"\r\n                                            htmlFor=\"questiontype\"\r\n                                            className=\"required\"\r\n                                            id=\"pollQuestionType\"\r\n                                            value={poll.pollQuestionType}\r\n                                            onSelect={(value) =>\r\n                                              handlePollOnSelect(\r\n                                                value,\r\n                                                \"pollQuestionType\"\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <Select.Option value=\"1\">\r\n                                              Single Choice\r\n                                            </Select.Option>\r\n                                            <Select.Option value=\"2\">\r\n                                              Multiple Choice\r\n                                            </Select.Option>\r\n                                            <Select.Option value=\"3\">\r\n                                              Star Rating\r\n                                              {poll.status_id === 4}\r\n                                            </Select.Option>\r\n                                          </Select>\r\n                                        </>\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  {poll.pollQuestionType === \"3\" ? (\r\n                                   <Col\r\n                                  span={24} md={10} lg={8}\r\n                                  className=\"gutter-row\"\r\n                                  >\r\n                                <FloatLabel\r\n                                  label=\"Rating Type\"\r\n                                  value={poll.pollRatingType}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required mb-0\"\r\n                                    name=\"ratingtype\"\r\n                                  >\r\n                                    <>\r\n                                      <Select\r\n                                        className=\"\"\r\n                                        htmlFor=\"ratingtype\"\r\n                                        className=\"required\"\r\n                                        id=\"pollRatingType\"\r\n                                        value={poll.pollRatingType}\r\n                                        onSelect={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollRatingType\"\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <Select.Option\r\n                                          value=\"1\"\r\n                                        >\r\n                                          Stars\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"2\" \r\n                                        >\r\n                                          Smiley \r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"3\"\r\n                                        >\r\n                                          Thermometer\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"4\"\r\n                                          >\r\n                                          ThumbsUp\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"5\"\r\n                                        >\r\n                                          Ladder\r\n                                        </Select.Option>\r\n                                      </Select>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                                </Col>\r\n                                     ): (null)}\r\n                                   </Row>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n\r\n                                    <FloatLabel\r\n                                      label=\"Question\"\r\n                                      value={poll.pollQuestion}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control edit-input\"\r\n                                          name=\"pollQuestion\"\r\n                                          id=\"pollQuestion\"\r\n                                          htmlFor=\"pollQuestion\"\r\n                                          className=\"required\"\r\n                                          defaultValue={poll.pollQuestion}\r\n                                          value={poll.pollQuestion}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                              \r\n                              \r\n                                  </Col>\r\n                                  <Col span={24} className=\"mt-4\">\r\n                                    {poll.pollQuestionType === \"3\" && poll.pollRatingType ? (\r\n                                      poll.pollRatingType === \"1\" ? (\r\n                                        <ReactStars\r\n                                        {...starsRating}\r\n                                        value={poll.pollRatingResponse}\r\n                                        name=\"pollRatingResponse\"\r\n                                        onChange={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollRatingResponse\"\r\n                                          )\r\n                                        }\r\n                                        classNames=\"mt-3\"\r\n                                      />\r\n                                      ):\r\n                                      poll.pollRatingType === \"2\" ? (<img src={Smiley} alt=\"send message\" />):\r\n                                      poll.pollRatingType === \"3\" ? (<img src={Thermometer} alt=\"send message\" />):\r\n                                      poll.pollRatingType === \"4\" ? (<img src={Thumb} alt=\"send message\" />):\r\n                                      poll.pollRatingType === \"5\" ? (<img src={Steps} alt=\"send message\" />):\r\n                                      (null)\r\n                                      \r\n                                    ) : poll.pollQuestionType === \"1\" ? (\r\n                                      <div>\r\n                                        <MultiChoice\r\n                                          setSingleChoiceResponse={\r\n                                            setSingleChoiceResponse\r\n                                          }\r\n                                          pollResponse={poll.pollResponse}\r\n                                        />\r\n                                      </div>\r\n                                    ) : poll.pollQuestionType === \"2\" ? (\r\n                                      <MultiChoice\r\n                                        pollResponse={poll.pollResponse}\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                      />\r\n                                    ) : null}\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n\r\n                              <div className=\"mt-5\">\r\n                                <Button\r\n                                  type=\"primary\"\r\n                                  className=\"md mr-4\"\r\n                                  onClick={onPreview}\r\n                                >\r\n                                  Preview\r\n                                </Button>\r\n                                <Button\r\n                                  type=\"secondary\"\r\n                                  type=\"secondary\"\r\n                                  htmlType=\"submit\"\r\n                                  onClick={onCancel}\r\n                                >\r\n                                  Cancel\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Spin>\r\n                    </Form>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <DuplicatePreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            CreateDuplicatePoll={CreateDuplicatePoll}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DuplicatePoll;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Upload,\r\n  Modal,\r\n} from \"antd\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { CLOSE_TEXT_MODAL, NEXT, UPLOAD_IMAGE } from \"../../headings\";\r\nimport { DATE, DESCRIPTION, OPENLINE_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  UPLOAD_IMAGE_REQUIRED,\r\n} from \"../../errors\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenlineStepOne = ({\r\n  next,\r\n  imageError,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOpenLineInfo.openelineName &&\r\n      stepOneOpenLineInfo.openelineName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.description &&\r\n      stepOneOpenLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.file &&\r\n      stepOneOpenLineInfo.file.length > 0 &&\r\n      stepOneOpenLineInfo.status &&\r\n      stepOneOpenLineInfo.sDate\r\n    ) {\r\n      if (!imageError && hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOpenline/\",\r\n        { openline_name: stepOneOpenLineInfo.openelineName },\r\n\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <FloatLabel\r\n        label={OPENLINE_NAME}\r\n        value={stepOneOpenLineInfo.openelineName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"openelineName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DIRECTORY_NAME,\r\n            },\r\n          ]}\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneOpenLineInfo.openelineName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"openelineName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"openelineName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated == \"status: false\" &&\r\n            stepOneOpenLineInfo.openelineName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneOpenLineInfo.openelineName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={OPENLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneOpenLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DESCRIPTION,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneOpenLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneOpenLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: SELECT_DATE,\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneOpenLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneOpenLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control required\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <ImgCrop rotate modalOk=\"Upload\">\r\n            <Upload\r\n              listType=\"picture\"\r\n              fileList={stepOneOpenLineInfo.file}\r\n              onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n              onPreview={(value) => handleStepOnePreview(value)}\r\n              accept=\"image/png, image/jpeg, image/gif\"\r\n            >\r\n              {stepOneOpenLineInfo.file.length === 0 && (\r\n                <Button type=\"link\" className=\"link pl-0\">\r\n                  <span className=\"icon icon-upload pr-2\"></span>\r\n                  {UPLOAD_IMAGE}\r\n                </Button>\r\n              )}\r\n            </Upload>\r\n          </ImgCrop>\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLineInfo.previewVisible}\r\n            title={stepOneOpenLineInfo.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLineInfo.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      {imageError && (\r\n        <Form.Item>\r\n          <Alert message={UPLOAD_IMAGE_REQUIRED} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\nimport { ACCESS, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\n\r\nclass CreateOpenlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n          loader: false,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>\r\n            {STATUS_ACTIVE}\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <Spin spinning={this.state.loader} size=\"large\">\r\n          <div id=\"no-more-tables\">\r\n            <Table\r\n              rowSelection={rowSelection}\r\n              columns={columns}\r\n              dataSource={this.state.filterData}\r\n              rowKey=\"unique_identifier\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"steps-action mt-5\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              style={{ margin: \"0 8px\" }}\r\n              onClick={() => this.stepTwoPrev()}\r\n              data-test=\"steptwoPrev\"\r\n            >\r\n              {BACK}\r\n            </Button>\r\n            <Button\r\n              className=\"md\"\r\n              type=\"primary\"\r\n              onClick={() => this.stepTwoNext()}\r\n              data-test=\"steptwoNext\"\r\n            >\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Upload, Modal } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, CLOSE_TEXT_MODAL, CREATE } from \"../../headings\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control required\">\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture\"\r\n            disabled\r\n            fileList={stepOneOpenLine.file}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n          ></Upload>\r\n\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLine.previewVisible}\r\n            title={stepOneOpenLine.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLine.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, message, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateOpenlineStepOne from \"../openlineForm/CreateOpenlineStepOne\";\r\nimport CreateOpenlineStepTwo from \"../openlineForm/CreateOpenlineStepTwo\";\r\nimport CreateOpenlineStepThree from \"../openlineForm/CreateOpenlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  OPENLINE_CREATE_STEP1,\r\n  OPENLINE_CREATE_STEP2,\r\n  OPENLINE_CREATE_STEP3,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport {\r\n  CREATE_OPENLINE_DIRECTORY,\r\n  OPENLINE_DIRECTORY,\r\n  CREATE_OPENLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: OPENLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n    imagename: \"\",\r\n  });\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload = (value) => {\r\n    if (!value.type.includes(\"image\")) {\r\n      setImageError(true);\r\n      message.error(\r\n        `The file that you attemped to upload ${value.name} is not supported`\r\n      );\r\n      return false;\r\n    } else {\r\n      setImageError(false);\r\n    }\r\n    return value.type;\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      [name]: fileList,\r\n      imagename: filename,\r\n    });\r\n  };\r\n\r\n  const handleReaderloaded = (readerEvt) => {\r\n    let binaryString = readerEvt.target.result;\r\n    setStepOneOpenLine({ ...stepOneOpenLine, file: btoa(binaryString) });\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setStepOneOpenLine({ ...stepOneOpenLine, previewVisible: false });\r\n  const setNameValidHandle = (value) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_openline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        openline_image: stepOneOpenLine.file[0].base64,\r\n        openline_image_name: stepOneOpenLine.imagename,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>{OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_OPENLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content\">\r\n                        {current == 0 ? (\r\n                          <CreateOpenlineStepOne\r\n                            next={next}\r\n                            imageError={imageError}\r\n                            stepOneOpenLineInfo={stepOneOpenLine}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneUpload={handleStepOneUpload}\r\n                            handleBeforeUpload={handleBeforeUpload}\r\n                            handleStepOnePreview={handleStepOnePreview}\r\n                            handleCancel={handleCancel}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            addIcon={addIcon}\r\n                            getIconText={getIconText}\r\n                            setNameValidHandle={setNameValidHandle}\r\n                            hotlineErrorUpdated={hotlineErrorUpdated}\r\n                            data-test=\"CreateHotlineStepOne\"\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOpenlineStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepOneHotLine={stepOneOpenLine}\r\n                            stepTwoOpenLine={stepTwoOpenLine}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOpenlineStepThree\r\n                            prev={prev}\r\n                            createNewHotLine={createHotLine}\r\n                            stepOneOpenLine={stepOneOpenLine}\r\n                            stepTwoOpenLine={stepTwoOpenLine}\r\n                            getIconText={getIconText}\r\n                            handleStepOnePreview={handleStepOnePreview}\r\n                            handleCancel={handleCancel}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpenlineCreation from \"../../components/openlineCreation/OpenlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, OPENLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  CREATE_NEW_OPENLINE_TEXT_PART1,\r\n  CREATE_NEW_OPENLINE_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{OPENLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART1}\r\n                          <br />\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <OpenlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst OpenlinePermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: NAME,\r\n      dataIndex: \"first_name\",\r\n      key: \"first_name\",\r\n      width: \"30%\",\r\n      render: (record, response) => {\r\n        return {\r\n          children: response.user.first_name,\r\n          props: {\r\n            \"data-title\": \"Name\",\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlinePermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchEmployee = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this openline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchEmployee;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport OpenlinePermission from \"../table/OpenlinePermission\";\r\nimport SearchEmployee from \"../autocomplete/SearchEmployee\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, DONE, SHOW } from \"../../headings\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass OpenlinePermissioModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedOpenLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      openlineId: this.props.selectedRows.openline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineAssignEmpl/\" +\r\n          this.props.selectedRows.openline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedOpenLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedOpenLines = [...this.state.assignedOpenLines];\r\n    let index = assignedOpenLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedOpenLines[index] = {\r\n      ...assignedOpenLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedOpenLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL + \"getOpenlineAssignEmpl/\" + value.openline.openline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedOpenLines, assignedEmp } = this.state;\r\n    const x = {\r\n      user: {\r\n        user_id: parseInt(options.user_id),\r\n        first_name: options.value,\r\n      },\r\n      openline: {\r\n        openline_id: this.state.openlineId,\r\n      },\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n    };\r\n    const y = {\r\n      openline_id: this.state.openlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedOpenLines: [...assignedOpenLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <OpenlinePermission\r\n              data={this.state.assignedOpenLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchEmployee\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedOpenLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlinePermissioModal);\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NO_TEXT_MODAL, YES_TEXT_MODAL } from \"../../headings\";\r\nimport { DELETE_CONFIRM_OPENLINE } from \"../../messages\";\r\n\r\nclass DeleteOpenlineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"openline/\" + this.props.openlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/openlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Openline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_OPENLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteOpenlineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteOpenlineModal from \"../../components/modal/DeleteOpenlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/editopenline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/editopenline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteOpenlineModal openlineId={test.openline_id} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OpenlinePermissioModal from \"../modal/OpenlinePermissioModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport OpenlinePopover from \"../table/OpenlinePopover\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\nimport {\r\n  END_DATE,\r\n  OPENLINE_NAME,\r\n  PERMISSIONS,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { OPENLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpenlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    openlines?.forEach((openline) => {\r\n      openline.start_date = moment(openline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      openline.end_date = moment(openline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.openlines !== nextProps.openlines) {\r\n      nextProps.openlines?.forEach((openline) => {\r\n        openline.start_date = moment(openline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        openline.end_date = moment(openline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.openlines }, () => {\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(\r\n          BASE_URL + \"changeOpenlineStatus/\" + record.openline_id + \"/\",\r\n          data,\r\n          options\r\n        )\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: OPENLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Openline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <OpenlinePermissioModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <OpenlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{OPENLINE_DIRECTORY}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createopenline\">\r\n                        <Buttons value=\"Create Openline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"openline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOpenlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpenlines from \"./ShowAllOpenlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\n\r\nconst OpenlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.openlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.openlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.openlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.openlinesdata !== null &&\r\n    props.openlinesdata.length === 0 ? (\r\n    <OpenlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllOpenlines\r\n      statusOnClicked={statusOnClicked}\r\n      openlines={props.openlinesdata}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, EDIT_OPENLINE, UPDATE, UPLOAD_IMAGE } from \"../../headings\";\r\nimport {\r\n  STATUS_INACTIVE,\r\n  STATUS_ACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n} from \"../../errors\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditOpenline = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [openLineData, setOpenLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    openline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    openline_image: \"\",\r\n    openline_image_name: \"\",\r\n    status_id: \"\",\r\n    iconHtml: \"\",\r\n    ImgfileList: [],\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [openlineErrorUpdated, setopenlineErrorUpdated] = useState(\"\");\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date).format(\"YYYY-MM-DD\");\r\n    const eDate = moment(location.state.end_date).format(\"YYYY-MM-DD\");\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n\r\n    setOpenLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      openline_id: location.state.openline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      openline_image: location.state.openline_image,\r\n      openline_image_name: location.state.openline_image_name,\r\n      status_id: location.state.status_id.toString(),\r\n      ImgfileList: [\r\n        {\r\n          uid: \"1\",\r\n          name: location.state.openline_image_name,\r\n          status: \"done\",\r\n          url: location.state.openline_image,\r\n        },\r\n      ],\r\n    });\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setOpenLineData({ ...openLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: value });\r\n  };\r\n\r\n  function convertImgToBase64(url, callback, outputFormat) {\r\n    var canvas = document.createElement(\"CANVAS\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = new Image();\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.onload = function () {\r\n      canvas.height = img.height;\r\n      canvas.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n      callback.call(this, dataURL);\r\n      // Clean up\r\n      canvas = null;\r\n    };\r\n    img.src = url;\r\n  }\r\n\r\n  const editOpenline = (e) => {\r\n    if (\r\n      openLineData.name &&\r\n      openLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      openLineData.help_text &&\r\n      openLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      openLineData.openline_image.length > 0 &&\r\n      openLineData.status_id &&\r\n      openLineData.start_date\r\n    ) {\r\n      setLoader(true);\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n      let data = {};\r\n      if (openLineData.ImgfileList[0].uid === \"1\") {\r\n        convertImgToBase64(openLineData.openline_image, function (base64Img) {\r\n          data = {\r\n            end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n            help_text: openLineData.help_text,\r\n            openline_id: openLineData.openline_id,\r\n            openline_image: base64Img,\r\n            name: openLineData.name,\r\n            openline_image_name: openLineData.openline_image_name,\r\n            start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n            status_id: parseInt(openLineData.status_id),\r\n            updated_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n            created_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n          };\r\n\r\n          if (\r\n            openlineErrorUpdated == \"status: false\" ||\r\n            openLineData.name === location.state.name\r\n          ) {\r\n            updateOpenLine(data);\r\n          }\r\n        });\r\n      } else {\r\n        data = {\r\n          end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n          help_text: openLineData.help_text,\r\n          openline_id: openLineData.openline_id,\r\n          openline_image: openLineData.ImgfileList[0].base64,\r\n          name: openLineData.name,\r\n          openline_image_name: openLineData.openline_image_name,\r\n          start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n          status_id: parseInt(openLineData.status_id),\r\n          updated_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        };\r\n        if (\r\n          openlineErrorUpdated == \"status: false\" ||\r\n          openLineData.name === location.state.name\r\n        ) {\r\n          updateOpenLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/openlinedirectory\";\r\n  };\r\n\r\n  const updateOpenLine = (data) => {\r\n    const token = authHeader();\r\n    let openLineId = openLineData.openline_id;\r\n    delete openLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"openline/\" + openLineId + \"/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoader(false);\r\n          window.location = \"/orgcc/openlinedirectory\";\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    // setOpenLineData({ ...openLineData, [name]: fileList });\r\n    setOpenLineData({\r\n      ...openLineData,\r\n      ImgfileList: fileList,\r\n      openline_image: fileList,\r\n      openline_image_name: filename,\r\n    });\r\n\r\n    if (value.file.status === \"removed\") {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        ImgfileList: [],\r\n        openline_image: \"\",\r\n        openline_image_name: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      convertImgToBase64(file.url, function (base64Img) {\r\n        // await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setOpenLineData({\r\n          ...openLineData,\r\n          previewImage: base64Img,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setOpenLineData({ ...openLineData, fileList: [] });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setOpenLineData({ ...openLineData, previewVisible: false });\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckOpenlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOpenline/\",\r\n          { openline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setopenlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setopenlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_OPENLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n                    <FloatLabel\r\n                      label={DIRECTORY_NAME}\r\n                      value={openLineData.name}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DIRECTORY_NAME,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={openLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckOpenlineName(e)}\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {openlineErrorUpdated == \"status: false\" &&\r\n                          openLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          openLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {openlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={OPENLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={openLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={openLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            name=\"help_text\"\r\n                            id=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          value={openLineData.start_date}\r\n                          disabledDate={disabledDate}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: SELECT_DATE,\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={openLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={openLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control required\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <ImgCrop rotate modalOk=\"Upload\">\r\n                          <Upload\r\n                            listType=\"picture\"\r\n                            fileList={openLineData.ImgfileList}\r\n                            onChange={(value) =>\r\n                              handleStepOneUpload(value, \"openline_image\")\r\n                            }\r\n                            onPreview={(value) => handleStepOnePreview(value)}\r\n                            handleOnRemove={handleOnRemove}\r\n                            accept=\"image/png, image/jpeg, image/gif\"\r\n                          >\r\n                            {openLineData.openline_image.length === 0 && (\r\n                              <Button type=\"link\" className=\"link pl-0\">\r\n                                <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                                {UPLOAD_IMAGE}\r\n                              </Button>\r\n                            )}\r\n                          </Upload>\r\n                        </ImgCrop>\r\n                        <Modal\r\n                          visible={openLineData.previewVisible}\r\n                          title={openLineData.previewTitle}\r\n                          centered\r\n                          onOk={(value) => handleCancel(value)}\r\n                          okButtonProps={{\r\n                            children: \"Custom OK\",\r\n                          }}\r\n                          cancelButtonProps={{ style: { display: \"none\" } }}\r\n                          okText=\"Close\"\r\n                        >\r\n                          <img\r\n                            alt=\"example\"\r\n                            style={{ width: \"100%\" }}\r\n                            src={openLineData.previewImage}\r\n                          />\r\n                        </Modal>\r\n\r\n                        {getIconText(openLineData.openline_id) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(openLineData.iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      openLineData.openline_id\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(openLineData.openline_id)}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editOpenline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditOpenline;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from \"./components/login/ForgotPassword\";\r\nimport ResetPassword from \"./components/login/ResetPassword\";\r\nimport Login from \"./components/login/Login\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport OpenlineMessages from \"./components/openlineMessages/OpenlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport AddEmployee from \"./components/manageEmp/AddEmployee\";\r\nimport ImportFile from \"./components/manageEmp/ImportFile\";\r\nimport CreateManually from \"./components/manageEmp/CreateManually\";\r\nimport ManagePolls from \"./components/managePolls/ManagePolls\";\r\nimport CreatePoll from \"./components/managePolls/CreatePoll\";\r\nimport PreviewPoll from \"./components/managePolls/PreviewPoll\";\r\nimport PollsContainer from \"./components/managePolls/PollsContainer\";\r\n\r\nimport PollResponse from \"./components/managePolls/PollResponse\";\r\nimport EditPoll from \"./components/managePolls/EditPoll\";\r\nimport ExistingPolls from \"./components/managePolls/ExistingPolls\";\r\nimport DuplicatePoll from \"./components/managePolls/DuplicatePoll\";\r\n\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\nimport OpenlineCreation from \"./components/openlineCreation/OpenlineCreation\";\r\nimport EditOpenline from \"./components/openlineDirectory/EditOpenline\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_amcc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isorgcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_org_cc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isamweb =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_am_web_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <ProtectedRoute path=\"/changepassword\" component={ChangePassword} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route exact={true} path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route exact={true} path=\"/resetpassword\" component={ResetPassword} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/edithotline\" ||\r\n          url === \"/orgcc/editopenline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/orgcc/pollsdirectory\" ||\r\n          url === \"/orgcc/createpoll\" ||\r\n          url.includes(\"/orgcc/editpoll\") ||\r\n          url === \"/orgcc/previewpoll\" ||\r\n          url === \"/orgcc/pollresponse\" ||\r\n          url === \"/orgcc/existingpolls\" ||\r\n          url === \"/orgcc/duplicatepoll\" ||\r\n          url === \"/orgcc/addemployee\" ||\r\n          url === \"/orgcc/createemployee\" ||\r\n          url === \"/orgcc/importemployee\" ||\r\n          url === \"/\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/importemployee\"\r\n              amorg\r\n              component={ImportFile}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/addemployee\"\r\n              amorg\r\n              component={AddEmployee}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createemployee\"\r\n              amorg\r\n              component={CreateManually}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editopenline\"\r\n              amorg\r\n              component={EditOpenline}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollsdirectory\"\r\n              amorg\r\n              component={PollsContainer}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/previewpoll\"\r\n              amorg\r\n              component={PreviewPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createpoll\"\r\n              amorg\r\n              component={CreatePoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollresponse\"\r\n              amorg\r\n              component={PollResponse}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editpoll/:id\"\r\n              amorg\r\n              component={EditPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/existingpolls\"\r\n              amorg\r\n              component={ExistingPolls}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/duplicatepoll/:id\"\r\n              amorg\r\n              component={DuplicatePoll}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/amweb/openlinemessages\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/hotlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/openlinemessages\"\r\n                amweb\r\n                component={OpenlineMessages}\r\n              />\r\n            </Switch>\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url === \"/\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url.includes(\"/amcc/orgdetails\") ||\r\n            url === \"/login\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/orgdetails/:id\"\r\n                amcc\r\n                component={OrgDetails}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"current\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst userFName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.first_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userLName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.last_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userEmail = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.email, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userMobile = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.mobile_number, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst amweb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_am_web_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_amcc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amorgcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_org_cc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amidb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_idb_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amseeded = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_seeded_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amapp = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_app_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst userData = {\r\n  ...user,\r\n  user_data: {\r\n    ...user?.user_data,\r\n    email: userEmail,\r\n    mobile_number: userMobile,\r\n    is_am_web_user: amweb,\r\n    is_amcc_user: amcc,\r\n    is_app_user: amapp,\r\n    is_org_cc_user: amorgcc,\r\n    is_idb_user: amidb,\r\n    is_seeded_user: amseeded,\r\n  },\r\n  user_details: {\r\n    ...user?.user_details,\r\n    first_name: userFName,\r\n    last_name: userLName,\r\n  },\r\n};\r\n\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\nconst initialState = user\r\n  ? {\r\n      isLoggedIn: true,\r\n      user: userData,\r\n      current: password.replaceAll('^\"+|\"+$', \"\"),\r\n    }\r\n  : { isLoggedIn: false, user: null, current: null };\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        current: payload.current,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = null;\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { POLL_FAIL, POLL_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.pollsdata = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case POLL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pollsdata: payload.pollsdata,\r\n      };\r\n    case POLL_FAIL:\r\n      return {\r\n        ...state,\r\n        pollsdata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\nimport poll from \"./poll\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline,\r\n  poll\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { Modal } from \"antd\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport { ABOUT_TO_LOGOUT_TEXT, LOGGED_OUT_TEXT } from \"./messages\";\r\nimport { OK_TEXT_MODAL } from \"./headings\";\r\n\r\nfunction App() {\r\n  const timeOutIdle = 1200000; // 20 minutes\r\n  const timeOutLogout = 60000; // a minute\r\n  var idleTimer = null;\r\n  const [idleModal, showIdleModal] = useState(false);\r\n  const [logoutModal, showLogoutModal] = useState(false);\r\n  const [timedOut, setTimedOut] = useState(false);\r\n\r\n  const onIdle = (e) => {\r\n    if (AppStorage.get(\"user\")) {\r\n      const isTimedOut = timedOut;\r\n      if (isTimedOut) {\r\n        showIdleModal(false);\r\n        showLogoutModal(true);\r\n      } else {\r\n        showIdleModal(true);\r\n        idleTimer.reset();\r\n        setTimedOut(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIdleOk = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleIdleCancel = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleLogoutOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleLogoutCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const onActive = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  const onAction = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        ref={(ref) => {\r\n          idleTimer = ref;\r\n        }}\r\n        element={document}\r\n        onIdle={onIdle}\r\n        onAction={onAction}\r\n        onActive={onActive}\r\n        debounce={250}\r\n        timeout={!timedOut ? timeOutIdle : timeOutLogout}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n            <Modal\r\n              visible={idleModal}\r\n              onOk={handleIdleOk}\r\n              onCancel={handleIdleCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{ABOUT_TO_LOGOUT_TEXT}</p>\r\n            </Modal>\r\n            <Modal\r\n              visible={logoutModal}\r\n              onOk={handleLogoutOk}\r\n              onCancel={handleLogoutCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{LOGGED_OUT_TEXT}</p>\r\n            </Modal>\r\n            <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/emoji.0d8c3e70.svg\";","module.exports = __webpack_public_path__ + \"static/media/steps.677f415b.svg\";"],"sourceRoot":""}