{"version":3,"sources":["assets/icons/dots-icon.svg","assets/images/amcc-vector.svg","assets/images/create-hotline.svg","components/managePolls/managePoll.module.scss","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/icons/pencil.svg","assets/images/work-chart.svg","assets/icons/send.svg","assets/images/no-hotlines.svg","assets/images/manage-polls.svg","assets/icons/HotLine.svg","assets/icons/OpenLine.svg","assets/icons/Polls.svg","assets/icons/ManageEmp.svg","assets/icons/BroadcastMsg.svg","assets/icons/Help.svg","assets/icons/Info.svg","components/manageEmp/manageEmp.module.scss","utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","components/manageOrg/AccSidebar.js","assets/icons/Icon.js","containers/ShowDetails.js","components/table/Table.js","components/button/Button.js","services/auth-header.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","components/form/CreateOrgStepOne.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/modal/PrivacyPolicyModal.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/login/Login.js","components/hotlineMessages/AmWebSidebar.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/modal/AssignHotlineModal.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/HotlineMessages.js","containers/PermissionDenied.js","components/modal/ResetPwdModal.js","components/form/EditSeededUsers.js","components/form/AddNewSeededUser.js","components/form/OrgDetails.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/manageEmp/AddEmp.js","components/manageEmp/UploadFiles.js","components/manageEmp/ImportFile.js","components/manageEmp/CreateManually.js","components/managePolls/ManagePolls.js","components/managePolls/UploadImage.js","components/managePolls/MultipleChoice.js","components/managePolls/CreatePoll.js","components/modal/DateTimeModal.js","components/managePolls/PreviewPoll.js","components/openlineForm/CreateOpenHotlineStepOne.js","components/openlineForm/CreateOpenHotlineStepTwo.js","components/openlineForm/CreateOpenHotlineStepThree.js","components/openlineCreation/OpnelineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/table/OpenlinePermission.js","components/autocomplete/SearchEmployee.js","components/modal/OpenlinePermissioModal.js","components/modal/DeleteOpenlineModal.js","components/table/OpenlinePopover.js","components/openlineDirectory/ShowAllOpnlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/openlineDirectory/EditOpenline.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/index.js","services/stores.js","App.js","index.js"],"names":["module","exports","getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","email","password","page","axios","post","response","data","JSON","stringify","AES","encrypt","toString","clear","window","location","reload","login","dispatch","AuthService","then","type","payload","user","pwd","Promise","resolve","error","message","reject","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","user_data","is_am_web_user","is_amcc_user","is_org_cc_user","is_app_user","is_idb_user","is_seeded_user","user_details","name","first_name","last_name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","userType","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","Header","Content","collapsed","toggle","setState","defaultKey","createElement","MenuUnfoldOutlined","MenuFoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","AccSidebar","ShowDetails","history","useHistory","path","record","organization_id","showModal","push","orgName","orgId","identifier","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","authHeader","CommonAuthHeader","parse","tokens","access","ShowAllOrganizations","statusClicked","via","endDate","end_date","replaceAll","date","finalDate","Date","start_date","status_id","Authorization","put","notification","config","open","description","statusOnClicked","onSearch","filterDt","filterIt","filterData","searchBy","organizations","forEach","org","nextProps","arr","searchKey","filter","obj","Object","keys","some","title","dataIndex","width","render","children","Pencil","placeholder","Button","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","orgIdCount","orgNameCount","Form","useForm","form","showError","orgNameAlreadyExists","setOrgNameAlreadyExists","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","organization_name","res","CheckOrganizationName","autoComplete","maxLength","replace","CheckCircleTwoTone","twoToneColor","organizationId","validateStatus","status1","onSelect","Option","s1Date","disabledDate","current","moment","startOf","htmlType","preventDefault","DeleteModal","visible","show","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","userId","deleteOrg","handleCancel","delete","hotlineId","catch","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","lastName","mobile","status2","fromStepTwo","showAddSeededUserForm","addSeededUser","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleMobile","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","fNameCount","lNameCount","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","passwordValidationError","showPasswordValidationError","stepTwoPrev","s2Date","test","target","validateEmailAddress","country","userID","CreateOrgStepThree","loader","apiError","createNewOrganization","addSeededUserFromThirdStep","disabled","spinning","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","setLoader","setApiError","stepOneOrganization","setStepOneOrganization","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","setOrgNameCount","setOrgIDCount","setFNameCount","setLNameCount","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","format","mobile_number","organization","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","hotLineId","manageOrgData","manageOrg","setStatusClicked","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","flag","property","manageEmp","PrivacyPolicyModal","layout","wrapperCol","tailLayout","ForgotPassword","handleLogin","onChangeUsername","onChangePassword","loading","commonForAllUsers","isamcc","isorgcc","isamweb","canSubmit","Amccvector","onSubmit","ref","c","initialValues","remember","rules","required","ResetPassword","Login","isEnabled","AmWebSidebar","ChangePassword","currentPwd","newPwd","confirmPwd","setPwd","passwordChanged","setPasswordChanged","setError","handleOnChange","Password","validatePassword","getFieldValue","validator","_","dependencies","hasFeedback","old_password","new_password","confirm_password","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","iconText","setdisabledbtn","hotlineErrorUpdated","sethotlineErrorUpdated","directoryName","showCount","hotline_name","CheckHotlineName","sDate","status","valuePropName","iconHtml","hotlineIconId","ReactHtmlParser","AssignHotlineModal","handleCheck","selectedRow","stepOneHotLineValues","permissions","getCheckValues","setVisible","a","async","per","find","p","user_id","checked","can_respond","CreateHotlineStepTwo","employeeData","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","prevProps","rowSelection","selectedRowKeys","margin","TextArea","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setStepTwoHotLine","values","id1","reduce","accumulator","currentValue","can_view_reports","created_by","org_user_id","concat","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","HotlinePopover","DeleteHotlineModal","hotline_id","hotlineName","GridPermission","deleteRecord","permissionData","setPermissionaData","changeDataSource","editable","text","onDelete","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","ShowAllHotlines","updated_by","hotlines","hotline","utc","local","hotlinesdata","hotlinedata","getHotlines","setStatus","urgencyLevel","setUrgencyLevel","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","undefined","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalUrl","searchString","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","conversation_id","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","str","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","getHotlineMessages","document","getElementById","note","assigne","classList","lastMessage","getElementsByClassName","scrollIntoView","block","convID","onSendMessageClick","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","responder_conversation_name","RegExp","match","messageLength","unread_messages_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","textarea","querySelector","Send","HotlineMessages","conversations","setConversations","initialConv","setInitialConv","urgencyFilterData","setUrgencyFilterData","hotlineFilterData","setHotlineFilterData","statusFilterData","setStatusFilterData","setRemoveFilter","setConversation","setSearchString","setSocket","setNewState","unreadCount","setUnreadCount","allConversations","setAllConversations","showdiv","setShowDiv","setChatDiv","webSocket","useRef","getConversations","unSetFilters","allConversationIds","mergedConversations","convoID","increaseOverallCountDuringFilters","WebSocket","onopen","onmessage","newConvo","socketMethod","onclose","onerror","accessed_users","urgencyState","statusState","hotlineState","conversationIds","updatedNewConvo","conversationsToDisplay","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","totalFiltersApplied","urgency","filterSocket","toLowerCase","updatedConversations","increaseOverallCount","displayNewConvAtTop","dummyArray","splice","newConvFromDiffUser","incomingConversation","ele","totalConversations","itemMessage","updatedConversation","removeFilterLevel","allAppliedFilters","urlWithFilters","disabledCount","trim","statusFil","ugc","ht","filteredData","highlightText","LeftOutlined","tip","count","urgencyLevels","setAppliedFilters","search","closable","onClose","onConversationClick","fontWeight","receivedConversation","NoHotlines","opacity","PermissionDenied","justifyContent","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","EditSeededUser","handleEditOk","handleEditCancel","seededUserName","seededUserDetails","handleSeededUserOnChange","date2","handleSeededUserDatePickerChange","validateMobile","handleSeededUserOnSelect","AddNewSeededUser","handleAddSeededUser","handleAddSeededUserCancel","OrgDetails","modalError","showModalError","setEmailValidationError","setMobileValidationError","setSeededUserName","seededUserEmail","setSeededUserEmail","setSeededUserDetails","editVisible","setEditVisible","showAddSeededUser","setShowAddSeededUser","org_id","date1","organizationDetails","setOrganizationDetails","useNotification","api","contextHolder","orgID","computedMatch","appendedUsers","seeded_user","soft_delete","onSeededUserEditSubmit","info","editOrg","onFinish","handleOrganizationOnSelect","userName","orgDetails","EditSeededUsers","newSeededUser","EditOrg","setOrganizationName","deleteClick","setDeleteClick","orgStatus","setOrgStatus","handleOrganizationOnChange","handleOrganizationDatePickerChange","EditHotLine","hotLineData","sethotLineData","hotlineStatus","setHotlineStatus","seticonHtml","useLocation","eDate","dates","setIcon","saveHotLine","AddEmployee","styles","no_sidebar","xl","box_bordered","box_bordered_active","Dragger","Upload","multiple","action","file","fileList","success","UploadFiles","ImportFiles","CreateManually","ManagePoll","ManagePolls","UploadImage","listType","defaultFileList","MultiChoice","tags","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","tag","showInput","input","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","onPressEnter","isLongTag","tagElem","onDoubleClick","CreatePoll","sm_textarea","dateStrings","DatetimeModal","ranges","Today","endOf","showTime","PreviewPoll","poll_info","CreateOpenHotlineStepOne","imageError","stepOneOpenLineInfo","handleStepOneUpload","handleBeforeUpload","handleStepOnePreview","openelineName","openline_name","beforeUpload","UploadOutlined","CreateOpenHotlineStepTwo","stepTwoOpenLine","CreateOpenHotlineStepThree","stepOneOpenLine","OpenlineCreation","setImageError","setStepOneOpenLine","setStepTwoOpenLine","reader","FileReader","onload","base64","result","readAsDataURL","originFileObj","create_openline","openline_image","OpenlineDirectory","OpnelineCreation","OpenlinePermission","SearchEmployee","OpenlinePermissioModal","assignedOpenLines","openlineId","openline_id","openline","DeleteOpenlineModal","OpenlinePopover","ShowAllOpnlines","openlines","openlinesdata","getOpenlines","EditOpenline","openLineData","setOpenLineData","openlineErrorUpdated","setopenlineErrorUpdated","updateOpenLine","openLineId","CheckOpenlineName","url","callback","outputFormat","canvas","ctx","getContext","img","Image","crossOrigin","height","drawImage","dataURL","toDataURL","call","convertImgToBase64","base64Img","Routes","isAuthenticated","EditProfile","ImportFile","exact","amcc","OrganizationContainer","amweb","amorg","HotlineContainer","OpenlineContainer","decryptedPassword","localPwd","decrypt","enc","Utf8","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","idleTimer","idleModal","showIdleModal","logoutModal","showLogoutModal","timedOut","setTimedOut","onIdle","reset","onAction","onActive","debounce","timeout","ReactDOM"],"mappings":"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","file":"static/js/main.e7690284.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sm_textarea\":\"managePoll_sm_textarea__2gyc1\",\"poll_info\":\"managePoll_poll_info__35K0P\",\"circle_white\":\"managePoll_circle_white__1jSAt\",\"preview_que\":\"managePoll_preview_que__1Iqdf\",\"ant-radio-wrapper\":\"managePoll_ant-radio-wrapper__3vb0t\"};","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-polls.648b5bd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/HotLine.8e399cf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/OpenLine.19ed48f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Polls.797dc4b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/ManageEmp.b979556a.svg\";","module.exports = __webpack_public_path__ + \"static/media/BroadcastMsg.b628c864.svg\";","module.exports = __webpack_public_path__ + \"static/media/Help.1b17639f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Info.a71a0872.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_sidebar\":\"manageEmp_no_sidebar__2IV_7\",\"box_bordered\":\"manageEmp_box_bordered__1L9Kq\",\"icon\":\"manageEmp_icon__2NaGI\",\"box_bordered_active\":\"manageEmp_box_bordered_active__1hEvf\"};","const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  let;\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      AppStorage.set(\"user\", JSON.stringify(response.data));\r\n      AppStorage.set(\r\n        \"pwd\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          pwd: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser } = this.props.userRole;\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    if (amCCUser) {\r\n      AppStorage.set(\"userType\", \"AM CC\");\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\"userType\", \"Org CC\");\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\"userType\", \"AM WEB\");\r\n    }\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{AppStorage.get(\"userType\")}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">Edit Profile</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  AM WEB\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  AM CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  Org CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  AM CC\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  AM WEB\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  Org CC\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>Change Password</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>Sign Out</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{AppStorage.get(\"userType\")}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const userType = AppStorage.get(\"userType\");\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    }\r\n    const password = props.pwd.includes('\"')\r\n      ? props.pwd.slice(1, -1)\r\n      : props.pwd;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log('INTERVAL');\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Annonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, pwd } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    pwd,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"employees\")) {\r\n        defaultKey = \"3\";\r\n      } else if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/hotlinedirectory\">Hotlines</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/openlinedirectory\">Openlines</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n          key=\"3\"\r\n          icon={\r\n            <span className=\"icon-circle\">\r\n              <span className=\"icon icon-polls\" />\r\n            </span>\r\n          }\r\n        >\r\n          {\" \"}\r\n          Polls\r\n        </Menu.Item> */}\r\n            <Menu.Item\r\n              key=\"3\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/manageemployees\">Manage Employees</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Broadcast Messages\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-help\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Help\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Info\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              Info\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { manageemp } from \"../../assets/icons/Icon\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/amcc/manageorganizations\">Manage Organizations</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          {/* <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              Info\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              Help\r\n            </a>\r\n          </div> */}\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","\r\nexport const hotline = require('./HotLine.svg')\r\nexport const openline = require('./OpenLine.svg')\r\nexport const polls = require('./Polls.svg')\r\n// export const iconManageOrg = require('./ManageOrg.svg')\r\nexport const manageemp = require('./ManageEmp.svg')\r\nexport const broadcastmsg = require('./BroadcastMsg.svg')\r\nexport const help = require('./Help.svg')\r\nexport const info = require('./Info.svg')","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ShowDetails = (props) => {\r\n  const history = useHistory();\r\n  const path = `/amcc/orgdetails/${props.record.organization_id}`;\r\n\r\n  const showModal = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.orgName ? (\r\n        <a onClick={showModal}>{props.record.name}</a>\r\n      ) : props.orgId ? (\r\n        <a onClick={showModal}>{props.record.identifier}</a>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport ShowDetails from \"../../containers/ShowDetails\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport moment from \"moment\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      searchBy: \"\",\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations.forEach((org) => {\r\n      org.start_date = org.start_date.replaceAll(\"-\", \" / \");\r\n      org.end_date = org.end_date.replaceAll(\"-\", \" / \");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.organizations !== nextProps.organizations)\r\n    this.setState({ data: nextProps.organizations }, () => {\r\n      this.onSearch(this.state.searchBy);\r\n    });\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"-\");\r\n    const date = endDate.split(\"-\")[0];\r\n    const month = endDate.split(\"-\")[1];\r\n    const year = endDate.split(\"-\")[2];\r\n    const finalDate = month + \"-\" + date + \"-\" + year;\r\n    if (new Date() < new Date(finalDate)) {\r\n      const data = {\r\n        name: record.name,\r\n        identifier: record.identifier,\r\n        organization_id: record.organization_id,\r\n        start_date: record.start_date.replaceAll(\" / \", \"-\"),\r\n        end_date: record.end_date.replaceAll(\" / \", \"-\"),\r\n        status_id: via === \"Active\" ? 2 : 1,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: `Status of ${record.name} has been changed successfully.`,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Organization Name \",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgName />,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Organization Id\",\r\n        dataIndex: \"\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgId />,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date \",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n        // render: () => <div className=\"secondary-tag-rounded tag\">Inactive</div>,\r\n      },\r\n      {\r\n        title: \"Actions\",\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Organizations </h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value=\"Create Organization\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  key=\"manageOrg\"\r\n                  rowKey=\"identifier\"\r\n                  columns={columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  orgIdCount,\r\n  orgNameCount,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n  const [orgNameAlreadyExists, setOrgNameAlreadyExists] = useState(\"\");\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganization/\",\r\n        { organization_name: stepOneOrganizationInfo.organizationName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgNameAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      if (orgNameAlreadyExists === \"status: false\") {\r\n        showError(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Organization Name\"\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationName(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                />\r\n                {orgNameAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationName\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationName.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgNameAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message=\"Sorry! This organization already exists in the system. Please use a different name.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Organization Id\"\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={20}\r\n                />\r\n              </Form.Item>\r\n              {orgIdCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Status\" value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-100\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">Active</Option>\r\n                    <Option value=\"2\">Inactive</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Date\" value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.deleteOrg) this.props.handleCancel();\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg ? (\r\n          <Button onClick={this.showBothModals}>Delete</Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleOk}\r\n            centered\r\n            width={700}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Cancel\"\r\n            cancelText=\"Delete\"\r\n          >\r\n            <p>\r\n              You are about to Delete the Organization{\" \"}\r\n              <strong>{this.props.org}</strong>. Deleting Organization would\r\n              Delete all records associated with it. Are you sure you want to\r\n              Delete Organization <strong>{this.props.org}</strong>?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.user.firstName}?</p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <p>Are you sure you want to delete {this.props.user.firstName}?</p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length === 1 ? (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            <p>There should be at least one seeded user.</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            <p>Are you sure you want to delete this?</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              Edit\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              Edit\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <Button>Edit</Button>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Mobile\",\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile.includes(\"+\") ? mobile : \"+\"+mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status2\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (status2) => {\r\n          return {\r\n            children:\r\n              status2 === 1 || status2 === \"1\" ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">Inactive</div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Row className=\"content-center pt-0\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() =>\r\n                this.props.fromStepTwo\r\n                  ? this.props.showAddSeededUserForm()\r\n                  : this.props.addSeededUser()\r\n              }\r\n            >\r\n              Add Seeded User\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n        <Grid\r\n          rowKey=\"unique_identifier\"\r\n          columns={columns}\r\n          data={this.state.data}\r\n        />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport moment from \"moment\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleMobile,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n  fNameCount,\r\n  lNameCount,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n      showPasswordValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    // var reIndian = /^\\+\\d{12}$/;\r\n    // var reInternational = /^\\+\\d{11}$/;\r\n    if (stepTwoOrganizationInfo.mobile.length > 10) {\r\n      showMobileValidationError(false);\r\n    } else {\r\n      showMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"First Name\"\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {fNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Last Name\"\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {lNameCount && (\r\n                <Form.Item>\r\n                  <Alert\r\n                    message=\"Max Characters limit reached.\"\r\n                    type=\"error\"\r\n                  ></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validatePassword(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n                {passwordValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid password.\r\n                    It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Email Id\" value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid email address.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Date\" value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label=\"Status\" value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    placeholder=\"Status\"\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">Active</Option>\r\n                    <Option value=\"2\">Inactive</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <PhoneInput\r\n                  country={\"in\"}\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={handleMobile}\r\n                  onBlur={validateMobile}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid mobile number.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                Add User\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                Update\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            Back\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            Next\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              Back\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  loader,\r\n  apiError,\r\n  handleOk,\r\n  handleCancel,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">Organization Details</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Modal\r\n            visible={apiError}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            centered\r\n            width={500}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText=\"OK\"\r\n          >\r\n            {\" \"}\r\n            <p>There is some difficulty while creating this organization.</p>{\" \"}\r\n          </Modal>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Organization Name\"\r\n                value={stepOneOrganizationInfo.organizationName}\r\n              >\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Organization Id\"\r\n                value={stepOneOrganizationInfo.organizationId}\r\n              >\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={stepOneOrganizationInfo.status1}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      placeholder=\"Status\"\r\n                      className=\"input-control w-100 w-lg-100\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                      disabled\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Select Date\" value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Col\r\n            span={24}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <h6 className=\"py-3 mb-0\">Seeded Users Details </h6>\r\n            <div>\r\n              {\" \"}\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => addSeededUserFromThirdStep()}\r\n              >\r\n                Add Seeded User\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n\r\n          {/* <div className=\"avatar-wrapper pt-2 pb-4\">\r\n          <Avatar>{stepTwoOrganizationInfo.userName?.charAt(0)}</Avatar>\r\n          <span className=\"md-name\">{stepTwoOrganizationInfo.userName}</span>\r\n        </div> */}\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <AssignedUsers\r\n                seededUsers={seededUsers}\r\n                handleEditUser={handleEditUser}\r\n                handleDelete={handleDelete}\r\n                fromStepThree\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Form.Item>\r\n            <div className=\"steps-action mt-5\">\r\n              <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n                Back\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n                Create and Invite\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Spin>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Organization Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Seeded User Details\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Confirm Details\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n   // password: \"\",\r\n    s2Date: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = { ...stepTwoOrganization, userId: userID };\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n      //  password: \"\",\r\n        s2Date: \"\",\r\n        mobile: \"\",\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n     // password: \"\",\r\n      s2Date: \"\",\r\n      mobile: \"\",\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    if (e.target.id === \"organizationId\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (\r\n      e.target.id === \"organizationName\" &&\r\n      e.target.value.length === 80\r\n    ) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    setLoader(true);\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n       // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.s2Date[0]\r\n          ? moment(value.s2Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.s2Date[1]\r\n          ? moment(value.s2Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"saveOrganization/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/amcc/manageorganizations\";\r\n      })\r\n      .catch((error) => {\r\n        if (error.message.includes(\"500\")) {\r\n          setApiError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>Organizations</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Organization</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Organization</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            orgNameCount={orgNameCount}\r\n                            orgIdCount={orgIdCount}\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                            handleOk={handleOk}\r\n                            handleCancel={handleCancel}\r\n                            loader={loader}\r\n                            apiError={apiError}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Manage Organizations</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create a new Org Id for your client's organization\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            Create Organization\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from '../utils/AppStorage';\r\n\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get('user'));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      return orgcc_user.user_data.organization_id;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, [statusClicked]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return props.manageOrgData?.length > 0 ? (\r\n    <ShowAllOrganizations\r\n      organizations={props.manageOrgData}\r\n      statusOnClicked={statusOnClicked}\r\n    />\r\n  ) : (\r\n    <CreateOrg />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      // { title: \"Access\", dataIndex: [\"Access\",\"am_web\"], key: \"am_web \", width: \"21%\" },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        key: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag = false;\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n                flag = true;\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n                flag = true;\r\n              }\r\n              if (property == \"app_user\") {\r\n                if (!flag) {\r\n                  property = \"APP\";\r\n                }\r\n              }\r\n\r\n              if (test.length == 0) {\r\n                test += property;\r\n              } else if (property !== \"app_user\") {\r\n                if (test.includes(\"APP\")) {\r\n                  test = property;\r\n                } else {\r\n                  test += \", \" + property;\r\n                }\r\n              }\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: (\r\n              <div className=\"primary-tag-rounded tag\">\r\n                <span className=\"circle mr-1\"></span>Active\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n        // render: () => <div className=\"secondary-tag-rounded tag\">Inactive</div>,\r\n      },\r\n      {\r\n        title: \"Actions\",\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover />,\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>Manage Employees</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder=\"Search\"\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          lg={9}\r\n                          className=\"ml-0 ml-lg-4 mt-2 mt-lg-0\"\r\n                        >\r\n                          <Select\r\n                            className=\"w-100 w-md-75\"\r\n                            defaultValue=\"Permissions\"\r\n                            disabled\r\n                          >\r\n                            <Option value=\"1\" defaultValue>\r\n                              1\r\n                            </Option>\r\n                            <Option value=\"2\">2</Option>\r\n                          </Select>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Buttons value=\"Add Employee\" />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"unique_identifier\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        See\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          Privacy Policy\r\n        </Button>\r\n        <Modal\r\n          title=\"Privacy Policy\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND\r\n              PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR\r\n              SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY\r\n              POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF\r\n              YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR\r\n              INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR\r\n              ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF\r\n              THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY\r\n              POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Forgot Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Enter your registered email address to request a password\r\n                  reset link.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    REQUEST PASSWORD RESET LINK\r\n                  </Button>\r\n                </Form.Item>\r\n\r\n                <div className=\"justify-content-center d-flex\">\r\n                <Button\r\n                          type=\"link\"\r\n                          className=\"link\"\r\n                        >\r\n                          Back to <b className=\"pl-1\">Sign In</b>\r\n                        </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Reset Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Set a new password for your account.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Password\">\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <FloatLabel label=\"Confirm Password\">\r\n                  <Form.Item\r\n                    name=\"confirmpassword\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please confirm your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    RESET PASSWORD\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    const isamcc = commonForAllUsers?.user_data?.is_amcc_user;\r\n    const isorgcc = commonForAllUsers?.user_data?.is_org_cc_user;\r\n    const isamweb = commonForAllUsers?.user_data?.is_am_web_user;\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Annonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                Login to manage AnonyMoose eco-system. This includes employees\r\n                eligible to use the app and/or components such as Hotlines,\r\n                Openlines, Polls and Surveys, Broadcast Messages and access to\r\n                different features of the \"Insights Dashboard\", through set of\r\n                assignable permissions.\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Sign In</h2>\r\n              </Row>\r\n\r\n              <Form\r\n                className=\"floating-label\"\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\" value={this.state.email}>\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <FloatLabel label=\"Password\" value={this.state.password}>\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <div className=\"forgot-pwd\">\r\n                  <a href=\"#\">Forgot Password</a>\r\n                </div>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    disabled={!isEnabled}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={() => {\r\n                      this.handleLogin();\r\n                    }}\r\n                  >\r\n                    SIGN IN\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">Hotlines Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Hotline Reports\r\n            </Menu.Item> */}\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">Openline Messages</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Openline Reports\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Poll Results\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              Broadcast Messages\r\n            </Menu.Item> */}\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Info\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              Help\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, Modal, Alert } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport AmWebSidebar from \"../hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nconst { Content } = Layout;\r\n\r\nconst ChangePassword = () => {\r\n  const userType = AppStorage.get(\"userType\");\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n  const [passwordChanged, setPasswordChanged] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    showPasswordValidationError(false);\r\n  }, []);\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (pwd.newPwd === pwd.confirmPwd && !passwordValidationError) {\r\n      axios\r\n        .put(BASE_URL + \"changepassword/\", data, options)\r\n        .then(() => {\r\n          setError(false);\r\n          setPasswordChanged(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n            setError(true);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Change Password</h1>\r\n                  {/* <div className=\"d-block w-100 pl-1\">\r\n                    <small>\r\n                      Your password was last modified on{\" \"}\r\n                      <span className=\"font-weight-bold\">22/04/2020</span>{\" \"}\r\n                    </small>\r\n                  </div> */}\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Modal\r\n                    visible={passwordChanged}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    width={350}\r\n                    okButtonProps={{\r\n                      children: \"Custom OK\",\r\n                    }}\r\n                    cancelButtonProps={{ style: { display: \"none\" } }}\r\n                    okText=\"OK\"\r\n                  >\r\n                    <p>\r\n                      Your password has been changed successfully. Please login\r\n                      again with your new password.\r\n                    </p>\r\n                  </Modal>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Old Password is wrong.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <FloatLabel\r\n                                label=\"Current Password\"\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:\r\n                                        \"Please enter your current password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"New Password\"\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:\r\n                                        \"Please enter your new password!\",\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                    onBlur={(e) => validatePassword(e)}\r\n                                  />\r\n                                </Form.Item>\r\n                                {passwordValidationError && (\r\n                                  <Alert\r\n                                    message=\"Please enter a valid password.\r\n                                    It should be atleast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Confirm Password\"\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: \"Please confirm your password!\",\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                      validator(_, value) {\r\n                                        if (\r\n                                          !value ||\r\n                                          getFieldValue(\"newpassword\") === value\r\n                                        ) {\r\n                                          return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(\r\n                                          \"The two passwords that you entered do not match!\"\r\n                                        );\r\n                                      },\r\n                                    }),\r\n                                  ]}\r\n                                  dependencies={[\"newpassword\"]}\r\n                                  hasFeedback\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <> \r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          Add Icon\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title=\"Add Icon\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Add\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div className={this.state.ImageId === '1' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={1} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Sexual Harrasment\">\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div className={this.state.ImageId === '2' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={2} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Violence\">\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '3' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={3} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Racism\">\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '4' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={4} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Cyber Bullying\">\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '5' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={5} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Fight\">\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '6' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={6} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Discrimination\">\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div className={this.state.ImageId === '7' ? \"col-3 col-lg-2 selected\" : \"col-3 col-lg-2\"} id={7} onClick={this.onSelectIcon}>\r\n              <Tooltip title=\"Slap\">\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.directoryName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      if (hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          sethotlineErrorUpdated(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <FloatLabel\r\n        label=\"Directory Name\"\r\n        value={stepOneHotLineInfo.directoryName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"directoryName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter directory name\",\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneHotLineInfo.directoryName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"directoryName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"directoryName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated === \"status: false\" &&\r\n            stepOneHotLineInfo.directoryName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneHotLineInfo.directoryName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message=\"Sorry! This hotline already exists in the system. Please use a different name.\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Description\" value={stepOneHotLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter description\",\r\n            },\r\n          ]}\r\n        >\r\n          {/* {hotlineForm.description.length<15 &&\r\n        <Alert message=\"Please enter more the 15 characters in the description below\" type=\"info\"  showIcon></Alert>\r\n        } */}\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneHotLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Date\" value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneHotLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Status\" value={stepOneHotLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select status\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneHotLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">Active</Option>\r\n              <Option value=\"4\">Inactive</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          {console.log(stepOneHotLineInfo.iconHtml)}\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button, Table } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        Assign\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText=\"Done\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <div>\r\n          Assign Permissions for <b>{stepOneHotLineValues.directoryName}</b>{\" \"}Hotline\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n<div>\r\n        <Row className=\"mt-2 mt-lg-5\">\r\n          <Col span={6}></Col>\r\n          <Col span={14} className=\"small text-center\">\r\n            Reply to Messages, Add Notes, Status & Urgency level\r\n          </Col>\r\n        </Row>\r\n        {selectedRow &&\r\n          selectedRow.map((item) => {\r\n            let per = permissions.find((p) => p.user_id === item.user_id);\r\n            return (\r\n              <Row className=\"mt-3 d-flex justify-content-center\">\r\n                <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                <Col span={10}>\r\n                  <Checkbox\r\n                    checked={per && per.can_respond === 1 ? true : false} disabled\r\n                    onChange={(e) => handleCheck(item)}\r\n                  ></Checkbox>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n          </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState({\r\n        employeeData: manageEmpData,\r\n      },()=>{\r\n        this.onSearch(\"\");\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n    \r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n          <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n              <Col span={24} lg={9} className=\"search-box\">\r\n\r\n                  <Search placeholder=\"Search User\" onSearch={this.onSearch}></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert\r\n            message=\"Please select user(s) and assign required permission(s) using Assign button.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.filterData}\r\n          rowKey=\"unique_identifier\"\r\n        />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText\r\n}) => {\r\n  \r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test=\"createHotlineStepThree\" className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id={\"directoryName\"}\r\n            className=\"input-control textarea-input\"\r\n            placeholder=\"Directory Name\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n        {/* <DatePicker className=\"datepicker w-50\"\r\n          name=\"tDate\"\r\n          value={hotlineForm.tDate}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please select End Date date\",\r\n            },\r\n          ]}\r\n          //  onChange={(date, dateString) => handleDatePickerChange(date, dateString,'tDate')}\r\n          disabled /> */}\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                placeholder=\"Status\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">Active</Select.Option>\r\n                <Select.Option value=\"4\">Inactive</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                placeholder=\"Assigned to\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Add Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Assign Employee\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Create Directory\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst HotlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: user.user_details.org_user_id,\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by: user.user_details.org_user_id,\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>Hotline Directory</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>Create Hotline Directory</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Create Hotline Directory Entries</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          stepOneHotLineInfo={stepOneHotLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          getIconText={getIconText}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Hotline Directory</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create Hotline entries and assign them to managers,\r\n                          <br />\r\n                          head of departments or leadership.\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button>\r\n                          {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <HotlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Hotline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <p>Are you sure you want to delete this hotline?</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/edithotline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/edithotline\">Edit</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteHotlineModal\r\n          hotlineId={test.hotline_id}\r\n          hotlineName={test.name}\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\n\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource(); \r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [ \r\n    { title: \"Name\", dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: \"Respond\",\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => ( \r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox value=\"reports\" checked={res} onChange={(e)=> handleCheck(record)} disabled></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return ( \r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  //const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n     // setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        //value={value}\r\n        options={searchData}\r\n        placeholder=\"Search Employee\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL+\"getHotlineAssignEmpl/\" +\r\n          this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => { \r\n    \r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL+\"hotlineAssignEmpl/\",\r\n        this.state.assignedEmp,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(el => el.user_id === record.user_id);\r\n    assignedHotLines[index] = {...assignedHotLines[index], can_respond: !record.can_respond};\r\n    this.setState({ assignedHotLines});\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex(el => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {...assignedEmp[aindex], can_respond: !record.can_respond};\r\n    this.setState({ assignedEmp});\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray = this.state.assignedEmp && this.state.assignedEmp.filter(function (element) {\r\n      return element.user_id !== value.user_id;\r\n    });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL+\"getHotlineAssignEmpl/\" + value.hotline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: user.user_details.org_user_id,\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Show</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Done\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <div>Employees with permissions to {this.state.hotLineName}</div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>\r\n              Reply to Messages, Add Notes, Status & Urgency level\r\n            </Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <GridPermission\r\n            data={this.state.assignedHotLines}\r\n            deleteRecord={this.deleteRecord}\r\n            handleCheck={this.handleCheck}\r\n          />\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>Hit enter to add</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines?.forEach((hotline) => {\r\n      hotline.start_date = moment(hotline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"DD / MM / YYYY\");\r\n      // abc.start_date = abc.start_date.replaceAll(\"T00:00:00Z\", \"\");\r\n      hotline.end_date = moment(hotline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"DD / MM / YYYY\");\r\n      // abc.end_date = abc.end_date.replaceAll(\"T00:00:00Z\", \"\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.hotlines !== nextProps.hotlines) {\r\n      nextProps.hotlines?.forEach((hotline) => {\r\n        hotline.start_date = moment(hotline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"DD / MM / YYYY\");\r\n        hotline.end_date = moment(hotline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"DD / MM / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.hotlines }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"-\");\r\n    const date = endDate.split(\"-\")[0];\r\n    const month = endDate.split(\"-\")[1];\r\n    const year = endDate.split(\"-\")[2];\r\n    const finalDate = month + \"-\" + date + \"-\" + year;\r\n    if (new Date() < new Date(finalDate)) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        help_text: record.help_text,\r\n        hotline_icon_id: record.hotline_icon_id,\r\n        hotline_id: record.hotline_id,\r\n        name: record.name,\r\n        start_date: record.start_date.replaceAll(\" / \", \"-\"),\r\n        end_date: record.end_date.replaceAll(\" / \", \"-\"),\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n        updated_by: user.user_details.org_user_id,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"hotline/\" + data.hotline_id, data, options)\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description: `Status of ${record.name} has been changed successfully.`,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Hotline Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Hotline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      //{ title: \"Permissions\", dataIndex: \"\", key: \"\", width: \"20%\" },\r\n      {\r\n        title: \"Permissions\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <PermissionModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  Inactive\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <HotlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Spin spinning={this.props.loader} size=\"large\">\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={this.props.data} />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1>Hotline Directory</h1>\r\n                  </Row>\r\n                  <Col span={24}>\r\n                    <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"search-row mt-2 mt-lg-0\"\r\n                      >\r\n                        <Row>\r\n                          <Col span={24} lg={9} className=\"search-box\">\r\n                            <Search\r\n                              placeholder=\"Search\"\r\n                              onSearch={this.onSearch}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col\r\n                        span={24}\r\n                        lg={6}\r\n                        className=\"d-flex align-items-center justify-content-end\"\r\n                      >\r\n                        <Link to=\"/orgcc/createhotline\">\r\n                          <Buttons value=\"Create Hotline\" />\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </Spin>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.hotlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.hotlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.hotlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.hotlinesdata !== null &&\r\n    props.hotlinesdata.length === 0 ? (\r\n    <HotlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllHotlines\r\n      hotlines={props.hotlinesdata}\r\n      statusOnClicked={statusOnClicked}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { hotline } from \"../../assets/icons/Icon\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(BASE_URL + \"getUserallHotlines/\" + user.user_data.user_id, options)\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: \"Low\", value: 1 },\r\n    { label: \"Medium\", value: 2 },\r\n    { label: \"High\", value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: \"New\", value: 1 },\r\n    { label: \"Open\", value: 2 },\r\n    { label: \"Closed\", value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allCheckedOnes)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allCheckedOnes) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.loadFilteredConversations(\r\n        res.data,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    axios.get(baseUrl, options).then((res) => {\r\n      props.loadFilteredConversations(res.data, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>Filter</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Urgency level</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Status</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>Hotline</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\n\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state={\r\n      visible: false, \r\n      noteText:\"\"\r\n    } \r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by: user.user_details.org_user_id,\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"addNotes/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({noteText:\"\"})\r\n          this.formRef.current.resetFields()\r\n          this.props.getNoteData(res.data.conversation_id);\r\n        }\r\n      });\r\n\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,noteText:\"\"\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n   handleChange = (e) => {\r\n    this.setState({  noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          Take a note..\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title=\"Take a Note\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Add\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n          <Form  className=\"input-md w-100\" name=\"validate-other\" ref={this.formRef}>\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder=\"Add note here...\"\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\"\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData:[],\r\n    conversationId:\"\"\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter} >\r\n        <span className=\"note-user\">{moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")} {item.first_name} {item.last_name}</span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n         {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     this.props.addedNote.map((item)=>(\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item) }\r\n        {this.state.expand && (\r\n          <a data-test=\"showLess\" className=\"d-flex justify-content-end\" onClick={this.typoClose}>\r\n            Show less\r\n          </a>\r\n        )}\r\n       </div>\r\n     ))\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddedNotes;","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Notes</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: \"Updated the Status to\" },\r\n  { id: 2, name: \"Updated the Urgency level to\" },\r\n  { id: 3, name: \"Added new Note\" },\r\n  { id: 4, name: \"View Hotline Converations\" },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Activity</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  // onScroll={handleScroll}\r\n                  // onScrollFrame={handleScrollFrame}\r\n                  // onScrollStart={handleScrollStart}\r\n                  // onScrollStop={handleScrollStop}\r\n                  // onUpdate={handleUpdate}\r\n                  // renderView={renderView}\r\n                  // renderTrackHorizontal={renderTrackHorizontal}\r\n                  // renderTrackVertical={renderTrackVertical}\r\n                  // renderThumbHorizontal={renderThumbHorizontal}\r\n                  // renderThumbVertical={renderThumbVertical}\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on).utc().local().format(\r\n                              \"MM:DD:YY • hh:mm A•\"\r\n                            )}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>Assigned To</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: \"New\" },\r\n  { id: 2, name: \"Open\" },\r\n  { id: 3, name: \"Closed\" },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: \"Low\" },\r\n  { id: 2, name: \"Medium\" },\r\n  { id: 3, name: \"High\" },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n        document.getElementsByClassName(\"hotline_message\").length - 1\r\n      ];\r\n      if (lastMessage) lastMessage.scrollIntoView(false, { block: \"end\" });\r\n    }\r\n  }, [convoMessages]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: user.user_details.org_user_id,\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if (e.altKey && e.keyCode === 13) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: user.user_details.org_user_id,\r\n        hotline_id: conversation.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: user.user_details.org_user_id,\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (\r\n              res.data.status_id === 1 ||\r\n              res.data.status_id === 3\r\n            ) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline_name.includes(\"</mark>\")) {\r\n      conversation.hotline_name = conversation.hotline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline_name = conversation.hotline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline_name = conversation.hotline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Urgency level</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>Status</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>Last Read</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg hotline_message mb-3\"\r\n                            : \"incoming-msg hotline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            // className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD:YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.first_name} ${msg.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Hotline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength = {10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Typography,\r\n  Badge,\r\n  Tag,\r\n  Spin,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport Messages from \"./Messages\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\n\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Paragraph } = Typography;\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst HotlineMessages = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    unSetFilters();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   var element = document.getElementsByClassName(\"inbox-messages\");\r\n  //   if (element && element[0]) {\r\n  //     element[0].scrollIntoView(false);\r\n  //   }\r\n  // }, [initialConv]);\r\n\r\n  // CURRENTLY NOT IN USE.\r\n  /* useEffect(() => {\r\n     handleOverallCount();\r\n   }, [conversations, unreadCount]); */\r\n\r\n  useEffect(() => {\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    increaseOverallCountDuringFilters(newState, allConversations);\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    webSocket.current = new WebSocket(\r\n      \"ws://10.0.6.10:8000/ws/hotlineMessages/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      socketMethod(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const socketMethod = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (newConvo.accessed_users.includes(user.user_data.user_id)) {\r\n      setConversations((conversations) => {\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        var data = {\r\n          conversation_id: newConvo.conversation_id,\r\n          user_id: user.user_details.org_user_id,\r\n        };\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        // let hasMessagesWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n          /* let convoMessages = [];\r\n          const token = authHeader();\r\n          const options = {\r\n            headers: {\r\n              Authorization: token,\r\n              Accept: \"application/json, text/plain\",\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n          };\r\n          axios\r\n            .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n            .then(async (res) => {\r\n              convoMessages = res.data.map((value) => value.message);\r\n            });\r\n          hasMessagesWithSearchedWord = convoMessages.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          ); */\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((x) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !== user.user_data.user_id\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (x.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: x.responder_conversation_name,\r\n              };\r\n            }\r\n            if (x.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: x.conversation_id,\r\n              };\r\n            }\r\n            if (x.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: x.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: x.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by === user.user_data.user_id\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (x.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: x.responder_conversation_name,\r\n              };\r\n            }\r\n            if (x.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: x.conversation_id,\r\n              };\r\n            }\r\n            if (x.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: x.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return x;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          increaseOverallCount(newConvo, conversationsToDisplay);\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(\r\n            newConvo.urgency_level_id.toString()\r\n          )\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // append the new incoming conversation at the top of the existing list of conversations.\r\n  const displayNewConvAtTop = (\r\n    updatedConversations,\r\n    newConvo,\r\n    updatedNewConvo\r\n  ) => {\r\n    let index = 0;\r\n    // create a replica of updatedConversations\r\n    const dummyArray = updatedConversations;\r\n    // return the index of the new incoming conversation from the list of all conversations.\r\n    updatedConversations.map((value) => {\r\n      if (\r\n        value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n      ) {\r\n        return (index = updatedConversations.indexOf(value));\r\n      }\r\n    });\r\n    // remove that new conversation from the dummy list temporarily.\r\n    dummyArray.splice(index, 1);\r\n    // push that removed incoming conversation on top of the list.\r\n    const finalConversations = [updatedNewConvo, ...dummyArray];\r\n    return finalConversations;\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n  const increaseOverallCount = (newConvo, conversationsToDisplay) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = conversationsToDisplay.filter(\r\n      (filter) =>\r\n        filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvo?.conversation_id &&\r\n        newConvo.created_by !== user.user_data.user_id\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = conversationsToDisplay.filter(\r\n      (ele) =>\r\n        ele?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n    );\r\n    for (var i = 0; i < newConvFromDiffUser.length; i++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[i]?.conversation_id\r\n            .toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0].unread_messages_count === 0\r\n      ) {\r\n        setUnreadCount((unreadCount) => unreadCount + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n  const increaseOverallCountDuringFilters = (newState, allConversations) => {\r\n    if (\r\n      urgencyFilterData.length > 0 ||\r\n      statusFilterData.length > 0 ||\r\n      hotlineFilterData.length > 0 ||\r\n      searchString.length > 0\r\n    ) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      // return only that new incoming message which comes from a user other than logged in user.\r\n      const newConvFromDiffUser = allConversations?.filter(\r\n        (filter) =>\r\n          filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState?.conversation_id &&\r\n          newState.created_by !== user.user_data.user_id\r\n      );\r\n      // return the new incoming message irrespective of any user.\r\n      const incomingConversation = allConversations?.filter(\r\n        (ele) =>\r\n          ele?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id\r\n      );\r\n      for (var i = 0; i < newConvFromDiffUser.length; i++) {\r\n        if (\r\n          incomingConversation[0]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newConvFromDiffUser[i]?.conversation_id\r\n              ?.toString()\r\n              .replace(/(<([^>]+)>)/gi, \"\") &&\r\n          incomingConversation[0]?.unread_messages_count === 0\r\n        ) {\r\n          setUnreadCount((unreadCount) => unreadCount + 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // remove filters when component loads.\r\n  const unSetFilters = () => {\r\n    AppStorage.remove(\"urgencyLevels\");\r\n    AppStorage.remove(\"status\");\r\n    AppStorage.remove(\"hotline\");\r\n    AppStorage.remove(\"searchBy\");\r\n  };\r\n\r\n  // return those conversations which have matched filters or search.\r\n  const filterSocket = (\r\n    totalFiltersApplied,\r\n    newConvo,\r\n    conversations,\r\n    conversationIds\r\n  ) => {\r\n    let totalConversations = [];\r\n    if (\r\n      (totalFiltersApplied.status?.includes(\r\n        newConvo.status_id.toString()\r\n      ) &&\r\n        totalFiltersApplied.urgency?.includes(\r\n          newConvo.urgency_level_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.hotline?.includes(\r\n          newConvo.hotline_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.searchBy?.length > 0 &&\r\n        newConvo.conversation_id\r\n          .toLowerCase()\r\n          .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n      newConvo.responder_conversation_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.hotline_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.message\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n    ) {\r\n      let conversation_id = newConvo.conversation_id.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = newConvo.hotline_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = newConvo.message.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      const updatedConversation = {\r\n        ...newConvo,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: newConvo.hotline_id,\r\n        },\r\n      };\r\n      if (\r\n        !conversationIds.includes(\r\n          updatedConversation.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n        )\r\n      ) {\r\n        totalConversations = [...conversations, updatedConversation];\r\n      } else {\r\n        totalConversations = conversations;\r\n      }\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n    return totalConversations;\r\n  };\r\n\r\n  // set state values of applied filters.\r\n  function setAppliedFilters(urgencyLevels, status, hotline) {\r\n    setUrgencyFilterData(urgencyLevels);\r\n    setStatusFilterData(status);\r\n    setHotlineFilterData(hotline);\r\n    AppStorage.set(\r\n      \"urgencyLevels\",\r\n      Object.values(urgencyLevels)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"status\",\r\n      Object.values(status)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(hotline)?.map((data) => data.value)\r\n    );\r\n  }\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    setAppliedFilters(selectedUrgency, selectedStatus, selectedHotline);\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          setLoader(false);\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((x) =>\r\n        x.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : x\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var i = 0; i < conversations.length - 1; i++) {\r\n      if (\r\n        conversations[i].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[i].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  // CURRENTLY NOT IN USE.\r\n  // set an overall count of unread conversations depending on the filters and search applied.\r\n  /* const handleOverallCount = () => {\r\n    const unreadConversations = conversations.filter(\r\n      (value) => value.unread_count > 0\r\n    );\r\n    setUnreadCount(unreadConversations.length);\r\n  }; */\r\n\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: user.user_details.org_user_id,\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          getConversations();\r\n          setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: user.user_details.org_user_id,\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          getConversations();\r\n          setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  // highlight the text found during search.\r\n  const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.hotline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let hotlineName = item.hotline_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          hotline: {\r\n            name: hotlineName,\r\n            hotline_id: item.hotline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    const statusFil = statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(urgencyFilterData.length > 0 && {\r\n        urgency_level_id: urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(hotlineFilterData.length > 0 && {\r\n        hotline_id: hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      user.user_details.org_user_id;\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allCheckedOnes)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allCheckedOnes) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      setSearchString(str);\r\n      AppStorage.set(\"searchBy\", str);\r\n      let filteredData = [];\r\n      if (str.length > 0) {\r\n        filteredData = highlightText(res.data, str);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  Hotline Messages\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <Spin\r\n                      size=\"large\"\r\n                      tip=\"Loading...\"\r\n                      spinning={loader}\r\n                    ></Spin>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <div className=\"mid-content p-0\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className={\r\n                        showdiv\r\n                          ? \"message-section py-4 d-none\"\r\n                          : \"message-section py-4\"\r\n                      }\r\n                    >\r\n                      <Col\r\n                        span={24}\r\n                        className=\" d-flex justify-content-between px-3\"\r\n                      >\r\n                        <h6>\r\n                          Conversations{\" \"}\r\n                          <Badge className=\"pl-1\" count={unreadCount} />\r\n                        </h6>\r\n\r\n                        <FilterPopover\r\n                          searchString={searchString}\r\n                          removeFilter={removeFilter}\r\n                          loadFilteredConversations={loadFilteredConversations}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col span={24} className=\"mt-4 px-3 d-block\">\r\n                        <Scrollbars\r\n                          autoHeight\r\n                          autoHeightMin={0}\r\n                          autoHeightMax={150}\r\n                          thumbMinSize={30}\r\n                          universal={true}\r\n                        >\r\n                          <>\r\n                            {urgencyFilterData.map((data, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  key={index}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyLevel\",\r\n                                      data.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                >\r\n                                  Urgency: <span>{data.label}</span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                            {hotlineFilterData.map((hotline, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyHotline\",\r\n                                      hotline.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                  key={index}\r\n                                >\r\n                                  Hotline: <span>{hotline.label} </span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                            {statusFilterData.map((status, index) => (\r\n                              <>\r\n                                <Tag\r\n                                  visible={true}\r\n                                  closable\r\n                                  onClose={() =>\r\n                                    removeFilterLevel(\r\n                                      \"urgencyStatus\",\r\n                                      status.value\r\n                                    )\r\n                                  }\r\n                                  className=\"mb-2\"\r\n                                  key={index}\r\n                                >\r\n                                  Status: <span>{status.label} </span>\r\n                                </Tag>\r\n                              </>\r\n                            ))}\r\n                          </>\r\n                        </Scrollbars>\r\n                      </Col>\r\n                      <Col span={24} className=\"search-box mt-3 px-3\">\r\n                        <Form form={form}>\r\n                          <Form.Item name=\"search\" id=\"search\">\r\n                            <Search\r\n                              name=\"search\"\r\n                              id=\"search\"\r\n                              placeholder=\"Search\"\r\n                              onChange={(e) => onSearch(e.target.value)}\r\n                              onSearch={onSearch}\r\n                              autoComplete=\"off\"\r\n                            />\r\n                          </Form.Item>\r\n                        </Form>\r\n                      </Col>\r\n                      <Scrollbars\r\n                        autoHeight\r\n                        autoHeightMin={0}\r\n                        autoHeightMax={450}\r\n                        thumbMinSize={30}\r\n                        universal={true}\r\n                      >\r\n                        <Col span={24} className=\"inbox-messages\">\r\n                          {conversations.length > 0 ? (\r\n                            conversations.map((item, key) => {\r\n                              return (\r\n                                <div\r\n                                  key={key}\r\n                                  className={\r\n                                    conversation.conversation_id\r\n                                      ?.toString()\r\n                                      .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                                    item.conversation_id\r\n                                      ?.toString()\r\n                                      .replace(/(<([^>]+)>)/gi, \"\")\r\n                                      ? \"msg-wrapper active\"\r\n                                      : \"msg-wrapper\"\r\n                                  }\r\n                                  onClick={() => onConversationClick(item)}\r\n                                >\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <p\r\n                                      ellipsis=\"true\"\r\n                                      style={{ fontWeight: \"bold\" }}\r\n                                      className=\"w-75 pr-2 mb-1\"\r\n                                      dangerouslySetInnerHTML={createMarkup(\r\n                                        item.responder_conversation_name\r\n                                      )}\r\n                                    />\r\n                                    <span className=\"small\">\r\n                                      {\" \"}\r\n                                      {moment(item.created_on).isSame(\r\n                                        moment(),\r\n                                        \"day\"\r\n                                      )\r\n                                        ? moment(item.created_on)\r\n                                            .utc()\r\n                                            .local()\r\n                                            .format(\"hh:mm\")\r\n                                        : moment(item.created_on)\r\n                                            .utc()\r\n                                            .local()\r\n                                            .format(\"MM:DD:YY\")}\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <Paragraph\r\n                                      ellipsis\r\n                                      className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                                    >\r\n                                      <span\r\n                                        className=\"ellipsisText\"\r\n                                        dangerouslySetInnerHTML={createMarkup(\r\n                                          item.hotline_name\r\n                                        )}\r\n                                      />\r\n                                      &nbsp; |&nbsp;\r\n                                      <span\r\n                                        className=\"ellipsisText\"\r\n                                        dangerouslySetInnerHTML={createMarkup(\r\n                                          item.conversation_id\r\n                                        )}\r\n                                      />\r\n                                    </Paragraph>\r\n                                    <span className=\"small\">\r\n                                      {\" \"}\r\n                                      <Badge count={item.unread_messages_count} />\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          ) : (\r\n                            <div className=\"msg-wrapper\">No messages found</div>\r\n                          )}\r\n                        </Col>\r\n                      </Scrollbars>\r\n                    </Col>\r\n                    {conversation ? (\r\n                      <Messages\r\n                        conversation={conversation}\r\n                        urgencyLevel={urgencyLevel}\r\n                        status={status}\r\n                        onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n                        onChangeStatus={onChangeStatus}\r\n                        searchString={searchString}\r\n                        newState={newState}\r\n                        socket={socket}\r\n                        setCounter={setCounter}\r\n                        data-test=\"Messages\"\r\n                        chatdiv={chatdiv}\r\n                      />\r\n                    ) : (\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                      >\r\n                        <Row className=\"justify-content-center my-3\">\r\n                          <img\r\n                            src={NoHotlines}\r\n                            alt=\"No Conversation Selected\"\r\n                            style={{ opacity: \"0.8\" }}\r\n                          />\r\n                        </Row>\r\n                        <h5>No Conversation Selected</h5>\r\n                        <small>Select a hotline to view</small>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </div>\r\n              ) : (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <img\r\n                      src={CreateHotline}\r\n                      alt=\"No Hotlines Selected\"\r\n                      style={{ opacity: \"0.8\" }}\r\n                    />\r\n                  </Row>\r\n                  <h5>\r\n                    No conversations are initiated for the hotlines assigned to\r\n                    you\r\n                  </h5>\r\n                  {/* <small>Select a hotline to view</small> */}\r\n                </Col>\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n    const userType = AppStorage.get(\"userType\");\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">\r\n                    You don't have access rights! Please contact your\r\n                    administrator.\r\n                  </h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionDenied;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>Reset password for this user</span>\r\n        </Button>\r\n        <Modal\r\n          title=\"Reset Password\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Reset and Invite\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                Reset password for{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label=\"New Password\" value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your new password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label=\"Confirm Password\" value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter your confirmed password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst EditSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleEditOk}\r\n      onCancel={props.handleEditCancel}\r\n      centered\r\n      width={900}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText=\"Update\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n        <div>Edit Seeded User</div>\r\n        <br />\r\n        <div className=\"avatar-wrapper pt-2 pb-4\">\r\n          <Avatar>{props.seededUserName.charAt(0)}</Avatar>\r\n          <span className=\"md-name\">{props.seededUserName}</span>\r\n        </div>\r\n        {props.error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"First Name\"\r\n                value={props.seededUserDetails.firstName}\r\n              >\r\n                <Form.Item name=\"firstName\" className=\"required\">\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    className=\"input-control\"\r\n                    defaultValue={props.seededUserDetails.firstName}\r\n                    htmlFor=\"firstName\"\r\n                    value={props.seededUserDetails.firstName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.fNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Last Name\"\r\n                value={props.seededUserDetails.lastName}\r\n              >\r\n                <Form.Item name=\"lastName\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"lastName\"\r\n                    htmlFor=\"lastName\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.lastName}\r\n                    value={props.seededUserDetails.lastName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.lNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Email Id\"\r\n                value={props.seededUserDetails.email}\r\n              >\r\n                <Form.Item name=\"email\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"email\"\r\n                    htmlFor=\"email\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.email}\r\n                    value={props.seededUserDetails.email}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateEmailAddress(e)}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                  {props.emailValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid email address.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Date\" value=\"date2\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"new w-100\"\r\n                    name=\"date2\"\r\n                    className=\"required\"\r\n                    value={props.seededUserDetails.date2}\r\n                    onChange={(date) =>\r\n                      props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                    }\r\n                    disabledDate={props.disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Mobile\" value={props.seededUserDetails.mobile}>\r\n                <Form.Item name=\"mobile\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"mobile\"\r\n                    htmlFor=\"mobile\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.mobile}\r\n                    value={props.seededUserDetails.mobile}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateMobile(e)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.mobileValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid mobile number.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={props.seededUserDetails.status2}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status2\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={props.seededUserDetails.status2}\r\n                      htmlFor=\"status2\"\r\n                      className=\"required\"\r\n                      onSelect={(value) =>\r\n                        props.handleSeededUserOnSelect(value, \"status2\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Form>\r\n      <ResetPwdModal\r\n        user={props.seededUserDetails.firstName}\r\n        handleResetPasswordOk={props.handleResetPasswordOk}\r\n        handleResetPasswordCancel={props.handleResetPasswordCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSeededUser;\r\n","import React from \"react\";\r\nimport { Row, Col, Input, Form, Select, Modal, Alert, DatePicker } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleAddSeededUser}\r\n      onCancel={props.handleAddSeededUserCancel}\r\n      centered\r\n      width={1200}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText=\"Add\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n        {props.error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message=\"Please fill the fields marked with asterisk(*)\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <div>Add New Seeded User</div>\r\n          <br />\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"First Name\"\r\n                value={props.seededUserDetails.firstName}\r\n              >\r\n                <Form.Item name=\"firstName\" className=\"required\">\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    className=\"input-control\"\r\n                    defaultValue={props.seededUserDetails.firstName}\r\n                    htmlFor=\"firstName\"\r\n                    value={props.seededUserDetails.firstName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.fNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Last Name\"\r\n                value={props.seededUserDetails.lastName}\r\n              >\r\n                <Form.Item name=\"lastName\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"lastName\"\r\n                    htmlFor=\"lastName\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.lastName}\r\n                    value={props.seededUserDetails.lastName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.lNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message=\"Max Characters limit reached.\"\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            {/* <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Temporary Password\"\r\n                value={props.seededUserDetails.password}\r\n              >\r\n                <Form.Item name=\"password\" className=\"pwd required\">\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"password\"\r\n                    className=\"required\"\r\n                    id=\"password\"\r\n                    defaultValue={props.seededUserDetails.password}\r\n                    value={props.seededUserDetails.password}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validatePassword(e)}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {props.passwordValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid password.\r\n                      It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col> */}\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Email Id\"\r\n                value={props.seededUserDetails.email}\r\n              >\r\n                <Form.Item name=\"email\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"email\"\r\n                    htmlFor=\"email\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.email}\r\n                    value={props.seededUserDetails.email}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateEmailAddress(e)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.emailValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid email address.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label=\"Date\" value=\"date2\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"new w-100\"\r\n                    name=\"date2\"\r\n                    className=\"required\"\r\n                    value={props.seededUserDetails.date2}\r\n                    onChange={(date) =>\r\n                      props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                    }\r\n                    disabledDate={props.disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n              <FloatLabel label=\"Mobile\" value={props.seededUserDetails.mobile}>\r\n                <Form.Item name=\"mobile\" className=\"required\">\r\n                  <PhoneInput\r\n                    country={\"in\"}\r\n                    id=\"mobile\"\r\n                    htmlFor=\"mobile\"\r\n                    value={props.seededUserDetails.mobile}\r\n                    onChange={props.handleMobile}\r\n                    onBlur={props.validateMobile}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.mobileValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid mobile number.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Status\"\r\n                value={props.seededUserDetails.status2}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status2\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={props.seededUserDetails.status2}\r\n                      htmlFor=\"status2\"\r\n                      className=\"required\"\r\n                      onSelect={(value) =>\r\n                        props.handleSeededUserOnSelect(value, \"status2\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">Active</Option>\r\n                      <Option value=\"2\">Inactive</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewSeededUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrgDetails = (props) => {\r\n  const history = useHistory();\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, []);\r\n\r\n  const onFinish = (values) => {};\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const editOrg = () => {\r\n    const path = `/amcc/editorg/${orgID}`;\r\n    history.push(path, \"viaOrgDetails\");\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `Details for ${seededUserName} have been changed successfully.`,\r\n        placement,\r\n      });\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      // password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: `${seededUserDetails.firstName} has been added successfully.`,\r\n            placement,\r\n          });\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `${userName} has been deleted successfully.`,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Organization Details</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">Organization Details </h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3\"\r\n                          onClick={() => editOrg()}\r\n                        >\r\n                          <span className=\"icon icon-pencil\" />\r\n                          <span className=\"pl-2 d-none d-block-md\">\r\n                            Edit Details\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationDetails.name.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">\r\n                        {organizationDetails.name}\r\n                      </span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      onFinish={onFinish}\r\n                      form={form}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Name\"\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  htmlFor=\"organization name\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Id\"\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter organization id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"identifier\"\r\n                                  name=\"identifier\"\r\n                                  htmlFor=\"organization name\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Status\"\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status1\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-100\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                    disabled\r\n                                  >\r\n                                    <Option value=\"1\">Active</Option>\r\n                                    <Option value=\"2\">Inactive</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\" value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <Row className=\"w-100\">\r\n                      <Col span={24} md={12}>\r\n                        <h6 className=\"py-3 mb-0\">Seeded Users Details </h6>\r\n                      </Col>\r\n                      <Col\r\n                        span={24}\r\n                        md={12}\r\n                        className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                      >\r\n                        <Button\r\n                          className=\"mr-4\"\r\n                          type=\"secondary\"\r\n                          onClick={() => addSeededUser()}\r\n                        >\r\n                          Add Seeded User\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                      {seededUsers.length > 0 ? (\r\n                        <AssignedUsers\r\n                          seededUsers={seededUsers}\r\n                          handleEditUser={handleEditSeededUser}\r\n                          handleDelete={handleDeleteSeededUser}\r\n                          addSeededUser={addSeededUser}\r\n                          viaEdit\r\n                          orgDetails\r\n                          seededUser\r\n                        />\r\n                      ) : (\r\n                        <Col span={24} lg={18}>\r\n                          <Row className=\"justify-content-center\">\r\n                            No Seeded User\r\n                          </Row>\r\n                        </Col>\r\n                      )}\r\n                      {editVisible ? (\r\n                        <EditSeededUsers\r\n                          error={modalError}\r\n                          handleEditOk={handleEditOk}\r\n                          handleEditCancel={handleEditCancel}\r\n                          seededUsers={seededUsers}\r\n                          fNameCount={fNameCount}\r\n                          lNameCount={lNameCount}\r\n                          seededUserName={seededUserName}\r\n                          seededUserDetails={seededUserDetails}\r\n                          disabledDate={disabledDate}\r\n                          handleSeededUserOnChange={handleSeededUserOnChange}\r\n                          handleSeededUserDatePickerChange={\r\n                            handleSeededUserDatePickerChange\r\n                          }\r\n                          handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                          validateEmailAddress={validateEmailAddress}\r\n                          emailValidationError={emailValidationError}\r\n                          validateMobile={validateMobile}\r\n                          mobileValidationError={mobileValidationError}\r\n                          handleResetPasswordOk={handleResetPasswordOk}\r\n                          handleResetPasswordCancel={handleResetPasswordCancel}\r\n                        />\r\n                      ) : showAddSeededUser ? (\r\n                        <AddNewSeededUser\r\n                          error={modalError}\r\n                          handleAddSeededUser={handleAddSeededUser}\r\n                          handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                          seededUsers={seededUsers}\r\n                          fNameCount={fNameCount}\r\n                          lNameCount={lNameCount}\r\n                          seededUserDetails={seededUserDetails}\r\n                          disabledDate={disabledDate}\r\n                          handleSeededUserOnChange={handleSeededUserOnChange}\r\n                          handleSeededUserDatePickerChange={\r\n                            handleSeededUserDatePickerChange\r\n                          }\r\n                          handleMobile={handleMobile}\r\n                          handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                          validateEmailAddress={validateEmailAddress}\r\n                          emailValidationError={emailValidationError}\r\n                          validateMobile={validateMobile}\r\n                          mobileValidationError={mobileValidationError}\r\n                          validatePassword={validatePassword}\r\n                          passwordValidationError={passwordValidationError}\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrgDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [orgNameAlreadyExists, setOrgNameAlreadyExists] = useState(\"\");\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    //  password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [orgStatus, setOrgStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      setOrgStatus(data.organization.status_id.toString());\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, []);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationName) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganization/\",\r\n          { organization_name: organizationDetails.name },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgNameAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgNameAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleOrganizationOnChange = (e) => {\r\n    if (e.target.id === \"identifier\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (e.target.id === \"name\" && e.target.value.length === 80) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setOrganizationDetails({\r\n      ...organizationDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteClick(false);\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      name: organizationDetails.name,\r\n      identifier: organizationDetails.identifier,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(organizationDetails.status),\r\n    };\r\n    const endDate = moment(organizationDetails.date1[1]).format(\"MM-DD-YYYY\");\r\n    if (organizationDetails.status !== orgStatus) {\r\n      if (new Date() < new Date(endDate)) {\r\n        if (organizationDetails.name && organizationDetails.identifier) {\r\n          if (\r\n            orgNameAlreadyExists === \"status: false\" ||\r\n            organizationDetails.name === organizationName\r\n          ) {\r\n            showError(false);\r\n            axios\r\n              .put(BASE_URL + \"saveOrganization/\", data, options)\r\n              .then(() => {\r\n                // const placement = \"bottomLeft\";\r\n                // api.info({\r\n                //   description:\r\n                //     \"Organization details have been changed successfully.\",\r\n                //   placement,\r\n                // });\r\n                window.location = \"/amcc/manageorganizations\";\r\n              });\r\n          }\r\n        } else {\r\n          showError(true);\r\n        }\r\n      } else {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description:\r\n            \"Status can't be changed as the end date has been passed.\",\r\n          placement,\r\n        });\r\n      }\r\n    } else {\r\n      if (organizationDetails.name && organizationDetails.identifier) {\r\n        showError(false);\r\n        axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n          // const placement = \"bottomLeft\";\r\n          // api.info({\r\n          //   description: \"Organization details have been changed successfully.\",\r\n          //   placement,\r\n          // });\r\n          window.location = \"/amcc/manageorganizations\";\r\n        });\r\n      } else {\r\n        showError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `Details for ${seededUserName} have been changed successfully.`,\r\n        placement,\r\n      });\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    if (props.location.state) {\r\n      const path = `/amcc/orgdetails/${orgID}`;\r\n      history.push(path);\r\n    } else {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: `${seededUserDetails.firstName} has been added successfully.`,\r\n            placement,\r\n          });\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `${userName} has been deleted successfully.`,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Organization</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">Edit Organization</h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3 deleteOrg\"\r\n                          onClick={onDelete}\r\n                        >\r\n                          <span className=\"icon icon-delete\" />\r\n                          <span className=\"d-none d-md-inline-flex deleteOrg\">\r\n                            Delete\r\n                          </span>\r\n                        </Button>\r\n                        {deleteClick ? (\r\n                          <DeleteModal\r\n                            org={organizationName}\r\n                            handleDelete={handleDeleteOrganization}\r\n                            handleCancel={handleCancelDelete}\r\n                            deleteOrg\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">{organizationName}</span>\r\n                    </div>\r\n                    <Form className=\"input-md floating-label w-100\" form={form}>\r\n                      {error && (\r\n                        <Form.Item>\r\n                          <Alert\r\n                            message=\"Please fill the fields marked with asterisk(*)\"\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        </Form.Item>\r\n                      )}\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Name\"\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  onChange={(e) =>\r\n                                    handleOrganizationOnChange(e)\r\n                                  }\r\n                                  onBlur={(e) => CheckOrganizationName(e)}\r\n                                  htmlFor=\"name\"\r\n                                  autoComplete=\"off\"\r\n                                  maxLength={80}\r\n                                />\r\n                                {orgNameAlreadyExists === \"status: false\" &&\r\n                                  organizationDetails.name\r\n                                    .replace(/^\\s*/, \"\")\r\n                                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                                  organizationDetails.name.length > 0 && (\r\n                                    <CheckCircleTwoTone\r\n                                      className=\"successCheck\"\r\n                                      twoToneColor=\"#52c41a\"\r\n                                    />\r\n                                  )}\r\n                                {orgNameAlreadyExists == \"status: true\" && (\r\n                                  <Alert\r\n                                    message=\"Sorry! This organization already exists in the system. Please use a different name.\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </Form.Item>\r\n                              {orgNameCount && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Max Characters limit reached.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Id\"\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  htmlFor=\"identifier\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  onChange={(e) =>\r\n                                    handleOrganizationOnChange(e)\r\n                                  }\r\n                                  autoComplete=\"off\"\r\n                                  maxLength={20}\r\n                                />\r\n                              </Form.Item>\r\n                              {orgIdCount && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Max Characters limit reached.\"\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Status\"\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"status\"\r\n                              >\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-100\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">Active</Option>\r\n                                    <Option value=\"2\">Inactive</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Date\" value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  onChange={(date) =>\r\n                                    handleOrganizationDatePickerChange(\r\n                                      date,\r\n                                      \"date1\"\r\n                                    )\r\n                                  }\r\n                                  disabledDate={disabledDate}\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            onClick={onOrgEditSubmit}\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                          <Button\r\n                            className=\"ml-4\"\r\n                            type=\"secondary\"\r\n                            onClick={cancelEditing}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    md={12}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <h6 className=\"py-3 mb-0\">Edit Seeded Users </h6>\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    md={12}\r\n                    className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                  >\r\n                    <Button\r\n                      className=\"mr-4\"\r\n                      type=\"secondary\"\r\n                      onClick={() => addSeededUser()}\r\n                    >\r\n                      Add Seeded User\r\n                    </Button>\r\n                  </Col>\r\n                  {seededUsers.length > 0 ? (\r\n                    <AssignedUsers\r\n                      seededUsers={seededUsers}\r\n                      handleEditUser={handleEditSeededUser}\r\n                      handleDelete={handleDeleteSeededUser}\r\n                      addSeededUser={addSeededUser}\r\n                      viaEdit\r\n                      seededUser\r\n                    />\r\n                  ) : (\r\n                    <Col span={24} lg={18}>\r\n                      <Row className=\"justify-content-center\">\r\n                        No Seeded User\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                  {editVisible ? (\r\n                    <EditSeededUsers\r\n                      error={modalError}\r\n                      handleEditOk={handleEditOk}\r\n                      handleEditCancel={handleEditCancel}\r\n                      seededUsers={seededUsers}\r\n                      seededUserName={seededUserName}\r\n                      fNameCount={fNameCount}\r\n                      lNameCount={lNameCount}\r\n                      seededUserDetails={seededUserDetails}\r\n                      disabledDate={disabledDate}\r\n                      handleSeededUserOnChange={handleSeededUserOnChange}\r\n                      handleSeededUserDatePickerChange={\r\n                        handleSeededUserDatePickerChange\r\n                      }\r\n                      handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                      validateEmailAddress={validateEmailAddress}\r\n                      emailValidationError={emailValidationError}\r\n                      validateMobile={validateMobile}\r\n                      mobileValidationError={mobileValidationError}\r\n                      handleResetPasswordOk={handleResetPasswordOk}\r\n                      handleResetPasswordCancel={handleResetPasswordCancel}\r\n                    />\r\n                  ) : showAddSeededUser ? (\r\n                    <AddNewSeededUser\r\n                      error={modalError}\r\n                      handleAddSeededUser={handleAddSeededUser}\r\n                      handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                      seededUsers={seededUsers}\r\n                      fNameCount={fNameCount}\r\n                      lNameCount={lNameCount}\r\n                      seededUserDetails={seededUserDetails}\r\n                      disabledDate={disabledDate}\r\n                      handleSeededUserOnChange={handleSeededUserOnChange}\r\n                      handleSeededUserDatePickerChange={\r\n                        handleSeededUserDatePickerChange\r\n                      }\r\n                      handleMobile={handleMobile}\r\n                      handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                      validateEmailAddress={validateEmailAddress}\r\n                      emailValidationError={emailValidationError}\r\n                      validatePassword={validatePassword}\r\n                      passwordValidationError={passwordValidationError}\r\n                      validateMobile={validateMobile}\r\n                      mobileValidationError={mobileValidationError}\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  notification,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = (props) => {\r\n  const [hotLineData, sethotLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    hotline_icon_id: \"\",\r\n    hotline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [hotlineStatus, setHotlineStatus] = useState(\"\");\r\n  const [iconHtml, seticonHtml] = useState(\"\");\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [error, showError] = useState(false);\r\n\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n\r\n  const addIcon = (values, id) => {\r\n    sethotLineData({\r\n      ...hotLineData,\r\n      hotline_icon_id: id,\r\n    });\r\n    seticonHtml(values);\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setIcon = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return '<span class=\"icon icon-sexual-harassment-1 ant-tooltip-open\"></span>';\r\n      case \"2\":\r\n        return '<span class=\"icon icon-violence ant-tooltip-open\"></span>';\r\n      case \"3\":\r\n        return '<span class=\"icon icon-racism ant-tooltip-open\"></span>';\r\n      case \"4\":\r\n        return '<span class=\"icon icon-cyber-bullying ant-tooltip-open\"></span>';\r\n      case \"5\":\r\n        return '<span class=\"icon icon-fight ant-tooltip-open\"></span>';\r\n      case \"6\":\r\n        return '<span class=\"icon icon-discrimination ant-tooltip-open\"></span>';\r\n      case \"7\":\r\n        return '<span class=\"icon icon-slap ant-tooltip-open\"></span>';\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date, \"DD / MM / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const eDate = moment(location.state.end_date, \"DD / MM / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    sethotLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      hotline_icon_id: location.state.hotline_icon_id,\r\n      hotline_id: location.state.hotline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    setHotlineStatus(location.state.status_id.toString());\r\n    const test = setIcon(location.state.hotline_icon_id.toString());\r\n    seticonHtml(test);\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: value });\r\n  };\r\n\r\n  const editHotline = (e) => {\r\n    if (\r\n      hotLineData.name &&\r\n      hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      hotLineData.help_text &&\r\n      hotLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      hotLineData.status_id &&\r\n      hotLineData.hotline_icon_id &&\r\n      hotLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const endDate = moment(hotLineData.start_date[1]).format(\"MM-DD-YYYY\");\r\n      const data = {\r\n        end_date: moment(hotLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: hotLineData.help_text,\r\n        hotline_icon_id: hotLineData.hotline_icon_id,\r\n        hotline_id: hotLineData.hotline_id,\r\n        name: hotLineData.name,\r\n        start_date: moment(hotLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(hotLineData.status_id),\r\n        updated_by: user.user_details.org_user_id,\r\n      };\r\n      if (\r\n        hotlineErrorUpdated == \"status: false\" ||\r\n        hotLineData.name === location.state.name\r\n      ) {\r\n        if (hotlineStatus !== hotLineData.status_id) {\r\n          if (new Date() < new Date(endDate)) {\r\n            saveHotLine(data);\r\n          } else {\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description:\r\n                \"Status can't be changed as the end date has been passed.\",\r\n              placement,\r\n            });\r\n          }\r\n        } else {\r\n          saveHotLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  const saveHotLine = (data) => {\r\n    const token = authHeader();\r\n    let hotLineId = hotLineData.hotline_id;\r\n    delete hotLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"hotline/\" + hotLineId, data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: \"Hotline details have been changed successfully.\",\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkhotline/\",\r\n          { hotline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            sethotlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      sethotlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>Edit Hotline</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Form\r\n                  data-test=\"createHotlineStepOne\"\r\n                  className=\"input-md w-md-100 w-75 floating-label\"\r\n                  name=\"validate_other\"\r\n                  form={form}\r\n                >\r\n                  {error && (\r\n                    <Form.Item>\r\n                      <Alert\r\n                        message=\"Please fill the fields marked with asterisk(*)\"\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n\r\n                  <FloatLabel label=\"Directory Name\" value={hotLineData.name}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter directory name\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <TextArea\r\n                        showCount\r\n                        maxLength={80}\r\n                        value={hotLineData.name}\r\n                        onChange={(e) => handleStepOneOnChange(e)}\r\n                        onBlur={(e) => CheckHotlineName(e)}\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        className=\"input-control textarea-input\"\r\n                        htmlFor=\"name\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                      {hotlineErrorUpdated == \"status: false\" &&\r\n                        hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n                          .length > 0 &&\r\n                        hotLineData.name.length > 0 && (\r\n                          <CheckCircleTwoTone\r\n                            className=\"successCheck\"\r\n                            twoToneColor=\"#52c41a\"\r\n                          />\r\n                        )}\r\n                      {hotlineErrorUpdated == \"status: true\" && (\r\n                        <Alert\r\n                          message=\"Sorry! This hotline already exists in the system. Please use a different name.\"\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n\r\n                  <FloatLabel label=\"Description\" value={hotLineData.help_text}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"help_text\"\r\n                      id=\"help_text\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter description\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <TextArea\r\n                          className=\"input-control textarea-input\"\r\n                          value={hotLineData.help_text}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          id=\"help_text\"\r\n                          name=\"help_text\"\r\n                          htmlFor=\"help_text\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label=\"Date\" value=\"start_date\">\r\n                    <Form.Item className=\"input-control datepicker-wrapper\">\r\n                      <RangePicker\r\n                        className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                        name=\"start_date\"\r\n                        disabledDate={disabledDate}\r\n                        value={hotLineData.start_date}\r\n                        onChange={(date) =>\r\n                          handleStepOneDatePickerChange(date, \"start_date\")\r\n                        }\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please select start date\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label=\"Status\" value={hotLineData.status_id}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"status\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select status\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <Select\r\n                          className=\"input-control w-100 w-lg-50\"\r\n                          value={hotLineData.status_id}\r\n                          htmlFor=\"status\"\r\n                          onSelect={(value) =>\r\n                            handleStepOneOnSelect(value, \"status_id\")\r\n                          }\r\n                        >\r\n                          <Select.Option value=\"5\">Active</Select.Option>\r\n                          <Select.Option value=\"4\">Inactive</Select.Option>\r\n                        </Select>\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <Form.Item className=\"\">\r\n                    <Form.Item\r\n                      className=\"upload-control\"\r\n                      name=\"upload\"\r\n                      valuePropName=\"fileList\"\r\n                    >\r\n                      <AddIcoModal\r\n                        data-test=\"addIconComponent\"\r\n                        addIcon={addIcon}\r\n                      />\r\n                      {getIconText(hotLineData.hotline_icon_id.toString()) && (\r\n                        <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                          <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                            <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                              <span className=\"d-inline-flex align-items-center\">\r\n                                <a className=\"ant-upload-list-item-thumbnail\">\r\n                                  {ReactHtmlParser(iconHtml)}\r\n                                </a>\r\n\r\n                                <span\r\n                                  className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                  title={getIconText(\r\n                                    hotLineData.hotline_icon_id.toString()\r\n                                  )}\r\n                                >\r\n                                  {getIconText(\r\n                                    hotLineData.hotline_icon_id.toString()\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n                  <div className=\"steps-action mt-5\">\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={editHotline}\r\n                      data-test=\"stepOneNext\"\r\n                      style={{ margin: \"0 8px\" }}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={cancelHotline}\r\n                      data-test=\"stepOneNext\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditHotLine;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\n\r\nconst AddEmployee = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Add Employee</h1>\r\n                  <div className=\"d-block w-100 pl-3 pl-lg-0 pt-1\">\r\n                    <small>\r\n                      Please create all employees for your organization who are\r\n                      eligible to use the app. You can either integrate with\r\n                      existing system, import through CSV or add each employee\r\n                      manually.\r\n                    </small>\r\n                  </div>\r\n                </Row>\r\n                <div className=\"mid-content mt-0 mt-md-4 no-bg px-3 px-md-0\">\r\n                  <Row>\r\n                    <Col span={24} className=\"mt-5\">\r\n                      <Row className=\"d-flex justify-content-center\" gutter={{ xs: 8, sm: 32, md: 32, lg: 100 }}>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered} ${styles.box_bordered_active}`}>\r\n                            <span className={`icon-integrate ${styles.icon}`}></span>\r\n                            <div className=\"font-weight-bold text-center\">Integrate with existing system</div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered}`}>\r\n                          <span className={`icon-csv ${styles.icon}`}></span>\r\n                          <div className=\"font-weight-bold text-center\">Import through CSV</div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered}`}>\r\n                          <span className={`icon-add-user ${styles.icon}`}></span>\r\n                          <div className=\"font-weight-bold text-center\">Create manually</div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Upload, message } from 'antd';\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\nconst UploadFiles = () => {\r\n  return (\r\n    <Dragger {...props}>\r\n    <p className=\"ant-upload-drag-icon\">\r\n    <span className=\"icon icon-upload\" />\r\n    </p>\r\n    <p className=\"ant-upload-text\">Drop files to upload or Browse</p>\r\n  </Dragger>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Breadcrumb, Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport UploadFiles from \"./UploadFiles\";\r\n\r\nconst ImportFiles = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/addemployee\">\r\n                      <Breadcrumb.Item>Add Employee</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Import CSV file</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Import CSV file </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Col span={20} className=\"mt-3 dragdrop\">\r\n                      <UploadFiles />\r\n                    </Col>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"justify-content-center d-flex mt-5\"\r\n                    >\r\n                      <Button type=\"link\" className=\"link pl-0\">\r\n                        <span className=\"icon icon-download-icon\" />\r\n                        Download Sample File\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mt-3 btn-row\">\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"mr-4 mb-4\"\r\n                      type=\"secondary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button type=\"primary\" className=\"md\">\r\n                      Upload\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImportFiles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\n\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport \"../form/form.scss\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst CreateManually = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n              <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/addemployee\">\r\n                      <Breadcrumb.Item>Add Employee</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Manually</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Manually</h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                  <Form className=\"input-md floating-label w-100\" name=\"\">\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"First Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"fname\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your first name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"fname\"\r\n                                  htmlFor=\"fname\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Last Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"lname\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your last name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"lname\"\r\n                                  htmlFor=\"lname\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"emailid\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your email id\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  type=\"email\"\r\n                                  className=\"input-control\"\r\n                                  id=\"emailid\"\r\n                                  htmlFor=\"emailid\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                            <FloatLabel label=\"Mobile Number\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"mobile\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your mobile number\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <PhoneInput country={\"us\"} />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Employee id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"empid\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your employee id\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"empid\"\r\n                                  htmlFor=\"empid\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Department\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"department\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your department\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">dept1</Option>\r\n                                  <Option value=\"0\">dept2</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">1</Option>\r\n                                  <Option value=\"0\">2</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item\r\n                                className=\"input-control datepicker-wrapper required\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select start and end date\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <RangePicker className=\"w-100 \" name=\"s1Date\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Make Super User\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select user type\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">Make Super User</Option>\r\n                                  <Option value=\"0\">Make User</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F1\">\r\n                              <Form.Item name=\"f1\">\r\n                                <Input className=\"input-control\" htmlFor=\"f1\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F2\">\r\n                              <Form.Item name=\"f2\">\r\n                                <Input className=\"input-control\" htmlFor=\"f3\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F3\">\r\n                              <Form.Item name=\"f3\">\r\n                                <Input className=\"input-control\" htmlFor=\"f3\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F4\">\r\n                              <Form.Item name=\"f4\">\r\n                                <Input className=\"input-control\" htmlFor=\"f4\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F5\">\r\n                              <Form.Item name=\"f5\">\r\n                                <Input className=\"input-control\" htmlFor=\"f5\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateManually;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./managePoll.module.scss\";\r\nimport ManagePolls from \"../../assets/images/manage-polls.svg\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ManagePoll = () => {\r\n  return (\r\n    <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser />\r\n                <Content data-test=\"Polls\" className=\"\">\r\n\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Manage Polls</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={ManagePolls}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                        Create polls and publish them for all employees from here \r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            type=\"primary\"\r\n                          >\r\n                            Create Poll\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagePoll;\r\n","import React from \"react\";\r\nimport { Upload, message, Button } from \"antd\";\r\n\r\nconst fileList = [];\r\n\r\nconst UploadImage = () => {\r\n  return (\r\n    <>\r\n      <Upload\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        listType=\"picture\"\r\n        defaultFileList={[...fileList]}\r\n        className=\"upload-list-inline\"\r\n      >\r\n        <Button type=\"link\" className=\"link pl-0\">\r\n          <span className=\"icon icon-doc\"></span> Document\r\n        </Button>\r\n      </Upload>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from 'react';\r\nimport { Tag, Input, Tooltip, Col, Button } from 'antd';\r\n\r\nclass MultiChoice extends Component {\r\n  state = {\r\n    tags: [],\r\n   \r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    console.log(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    console.log(tags);\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        <Col span={12} className=\"mb-4\">\r\n        {!inputVisible && (\r\n          <Tag onClick={this.showInput} className=\"mt-3\">\r\n                    <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          Add Option\r\n        </Button>\r\n          </Tag>\r\n        )}\r\n        </Col>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiChoice","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n}\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst CreatePoll = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser />\r\n              <Content>\r\n              <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/managepolls\">\r\n                      <Breadcrumb.Item>Manage Poll</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Poll</h1>\r\n                </Row>\r\n                <div className=\"mid-content\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                      >\r\n                        <Col span={24}>\r\n                          <Row>\r\n                            <Col span={24} md={18} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Poll Title\">\r\n                                <TextArea\r\n                                  showCount\r\n                                  maxLength={80}\r\n                                  htmlFor=\"polltitle\"\r\n                                  className={`required ${styles.sm_textarea}`}\r\n                                />\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={18} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Help Text\">\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"help text\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"helptext\"\r\n                                    htmlFor=\"helptext\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} className=\"gutter-row mt-3\">\r\n                              <h6>Upload</h6>\r\n                              <Form.Item\r\n                                name=\"help text\"\r\n                                className=\"upload-list\"\r\n                              >\r\n                                <UploadImage />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Col span={24} className=\"gutter-row\">\r\n                          <Row className=\"align-items-center d-flex\">\r\n                            <Col span={24} md={8} lg={8} xl={6}>\r\n                              <Form.Item\r\n                                name=\"showresult\"\r\n                                label=\"Show result to users \"\r\n                                className=\"mb-0\"\r\n                              >\r\n                                <Switch onChange={onChange} />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={24} lg={6}>\r\n                              <FloatLabel label=\"Display final results as\">\r\n                                <Form.Item\r\n                                  className=\"required mb-0\"\r\n                                  name=\"result\"\r\n                                >\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"result\"\r\n                                      className=\"required\"\r\n                                    >\r\n                                      <Option value=\"1\">Pie Chart</Option>\r\n                                      <Option value=\"3\">\r\n                                        Horizontal Bar Chart\r\n                                      </Option>\r\n                                      <Option value=\"4\">\r\n                                        Vertical Bar Chart\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                      >\r\n                        <Col span={24}>\r\n                          <Row className=\"d-block\">\r\n                            <Col span={24} md={18} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Question\">\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"question\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"question\"\r\n                                    htmlFor=\"question\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={6} className=\"gutter-row\">\r\n                              <FloatLabel label=\"Question Type\">\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"questiontype\"\r\n                                >\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"\"\r\n                                      htmlFor=\"questiontype\"\r\n                                      className=\"required\"\r\n                                    >\r\n                                      <Option value=\"1\">Single Choice</Option>\r\n                                      <Option value=\"2\">Multiple Choice</Option>\r\n                                      <Option value=\"3\">Star Rating</Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} className=\"mt-4\">\r\n                              {/* <ReactStars {...starsRating} classNames=\"mt-3\" /> */}\r\n                              {/* <Radio>Single Choice</Radio> */}\r\n                              <div className=\"d-flex flex-column flex-gap chk-opt w-25 w-md-100\">\r\n                                <span className=\"opts\">\r\n                                  <Checkbox onChange={onChange}>\r\n                                    Option 1\r\n                                  </Checkbox>\r\n                                  <span className=\"icon icon-close font-12\"></span>\r\n                                </span>\r\n                                \r\n                              </div>\r\n\r\n                              <Row>\r\n                                <Col span={24} md={6} className=\"add-opt\">\r\n                                  <MultiChoice />\r\n                                </Col>\r\n                              </Row>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <div className=\"mt-5\">\r\n                          <Button type=\"primary\" className=\"md mr-4\">\r\n                            Preview\r\n                          </Button>\r\n                          <Button\r\n                            type=\"secondary\"\r\n                            type=\"secondary\"\r\n                            htmlType=\"submit\"\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input, DatePicker } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction onChange(dates, dateStrings) {\r\n  console.log(\"From: \", dates[0], \", to: \", dates[1]);\r\n  console.log(\"From: \", dateStrings[0], \", to: \", dateStrings[1]);\r\n}\r\n\r\nclass DatetimeModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          Publish\r\n        </Button>\r\n        <Modal\r\n          title=\"Publish Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Publish\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md font-weight-md6\">\r\n                Select Date and Time to <span className=\"pr-1\">publish the Impact of Microaggressions</span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label=\"Select date and time\" value=\"\">\r\n                <Form.Item\r\n                  name=\"date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select date\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <RangePicker\r\n                    ranges={{\r\n                      Today: [moment(), moment()],\r\n                      \"This Month\": [\r\n                        moment().startOf(\"month\"),\r\n                        moment().endOf(\"month\"),\r\n                      ],\r\n                    }}\r\n                    showTime\r\n                    format=\"YYYY/MM/DD HH:mm:ss\"\r\n                    onChange={onChange}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Tooltip,\r\n  Input,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DatetimeModal from \"../modal/DateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n}\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst PreviewPoll = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser />\r\n              <Content>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/managepolls\">\r\n                      <Breadcrumb.Item>Manage Poll</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <NavLink to=\"/createpoll\">\r\n                      <Breadcrumb.Item>Create Poll</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Preview Poll</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3 justify-content-between\">\r\n                  <h1 className=\"mb-0\">Preview Poll</h1>\r\n\r\n                  <Col\r\n                    span={24}\r\n                    lg={18}\r\n                    className=\"d-flex align-items-center justify-content-end\"\r\n                  >\r\n                    <Button type=\"primary\" className=\"md mr-4\">\r\n                      Back to Edit\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Col span={24} className={`mb-3 px-3 ${styles.poll_info}`}>\r\n                  <h6>\r\n                    Impact of Microagressions\r\n                    <Tooltip\r\n                      placement=\"top\"\r\n                      title=\"Info related to Impact of Microagressions\"\r\n                    >\r\n                      <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                    </Tooltip>\r\n                  </h6>\r\n                </Col>\r\n                <div className=\"mid-content\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <p className=\"font-weight-md6\">\r\n                        How much do you think this behavior impacts your ability\r\n                        to contribute at work?\r\n                      </p>\r\n                      <Row className=\"preview-que\">\r\n                        {/* <ReactStars {...starsRating} /> */}\r\n                        {/* <Radio>Your choice here</Radio> */}\r\n                        <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                          <Checkbox onChange={onChange}>Option 1</Checkbox>\r\n                          <Checkbox onChange={onChange}>Option 2</Checkbox>\r\n                          <Checkbox onChange={onChange}>Option 3</Checkbox>\r\n                        </div>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <div className=\"mt-5 px-3\">\r\n                  <DatetimeModal />\r\n                  <Button type=\"secondary\" type=\"secondary\" htmlType=\"submit\">\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PreviewPoll;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert, Upload } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone, UploadOutlined } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenHotlineStepOne = ({\r\n  next,\r\n  imageError,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOpenLineInfo.openelineName &&\r\n      stepOneOpenLineInfo.openelineName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.description &&\r\n      stepOneOpenLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.file &&\r\n      stepOneOpenLineInfo.file.length > 0 &&\r\n      stepOneOpenLineInfo.status &&\r\n      stepOneOpenLineInfo.sDate\r\n    ) {\r\n      if (!imageError && hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOpenline/\",\r\n        { openline_name: stepOneOpenLineInfo.openelineName },\r\n\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          sethotlineErrorUpdated(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please fill the fields marked with asterisk(*)\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <FloatLabel\r\n        label=\"Openeline Name\"\r\n        value={stepOneOpenLineInfo.openelineName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"openelineName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter directory name\",\r\n            },\r\n          ]}\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneOpenLineInfo.openelineName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"openelineName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"openelineName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated == \"status: false\" &&\r\n            stepOneOpenLineInfo.openelineName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneOpenLineInfo.openelineName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message=\"Sorry! This openline already exists in the system. Please use a different name.\"\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Description\" value={stepOneOpenLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter description\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneOpenLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label=\"Date\" value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneOpenLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label=\"Status\" value={stepOneOpenLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select status\",\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneOpenLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">Active</Option>\r\n              <Option value=\"4\">Inactive</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control required\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture\"\r\n            fileList={stepOneOpenLineInfo.file}\r\n            beforeUpload={(value) => handleBeforeUpload(value)}\r\n            onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n          >\r\n            {stepOneOpenLineInfo.file.length === 0 && (\r\n              <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n            )}\r\n          </Upload>\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      {imageError && (\r\n        <Form.Item>\r\n          <Alert\r\n            message=\"Please upload an image.\"\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\n\r\nclass CreateOpenHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState({\r\n        employeeData: manageEmpData,\r\n      }, ()=>{\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n    \r\n    const columns = [\r\n      {\r\n        title: \"First Name\",\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: \"Mobile Number\",\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: \"Access\",\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n              //test += property + \" \";\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>Active\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n          <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n              <Col span={24} lg={9} className=\"search-box\">\r\n\r\n                  <Search placeholder=\"Search User\" onSearch={this.onSearch} ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert\r\n            message=\"Please select user(s) and assign required permission(s) using Assign button.\"\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.filterData}\r\n          rowKey=\"unique_identifier\"\r\n        />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenHotlineStepTwo);\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Upload\r\n} from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  getIconText\r\n}) => {\r\n  \r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form data-test=\"createHotlineStepThree\" className=\"input-md w-md-100 w-75\" name=\"validate_other\" form={form}>\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            placeholder=\"Openline Name\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            placeholder=\"Description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: \"Please select start date\",\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n        {/* <DatePicker className=\"datepicker w-50\"\r\n          name=\"tDate\"\r\n          value={hotlineForm.tDate}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please select End Date date\",\r\n            },\r\n          ]}\r\n          //  onChange={(date, dateString) => handleDatePickerChange(date, dateString,'tDate')}\r\n          disabled /> */}\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                placeholder=\"Status\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">Active</Select.Option>\r\n                <Select.Option value=\"4\">Inactive</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                placeholder=\"Assigned to\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n        <Upload\r\n             action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n             listType=\"picture\"\r\n             disabled\r\n             fileList={stepOneOpenLine.file}\r\n\r\n          >\r\n                {/* <Button icon={<UploadOutlined />}>Upload</Button> */}\r\n            </Upload>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, message } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../openlineForm/CreateOpenHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../openlineForm/CreateOpenHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../openlineForm/CreateOpenHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Add Details\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Assign Employee\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Review Details\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst OpenlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n  });\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload = (value) => {\r\n    if (!value.type.includes(\"image\")) {\r\n      setImageError(true);\r\n      message.error(\r\n        `The file that you attemped to upload ${value.name} is not supported`\r\n      );\r\n      return false;\r\n    } else {\r\n      setImageError(false);\r\n    }\r\n    return value.type;\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: fileList });\r\n  };\r\n\r\n  const handleReaderloaded = (readerEvt) => {\r\n    let binaryString = readerEvt.target.result;\r\n    setStepOneOpenLine({ ...stepOneOpenLine, file: btoa(binaryString) });\r\n  };\r\n\r\n  const handleStepOnePreview = (value) => {};\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: user.user_details.org_user_id,\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_openline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        openline_image: stepOneOpenLine.file[0].base64,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        created_by: user.user_details.org_user_id,\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>Openline Directory</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>Create Openline Directory</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Create Openline Directory Entries</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          imageError={imageError}\r\n                          stepOneOpenLineInfo={stepOneOpenLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneUpload={handleStepOneUpload}\r\n                          handleBeforeUpload={handleBeforeUpload}\r\n                          handleStepOnePreview={handleStepOnePreview}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneOpenLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          getIconText={getIconText}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpnelineCreation from \"../../components/openlineCreation/OpnelineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">Openline Directory</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          Create Hotline entries and assign them to managers,\r\n                          <br />\r\n                          head of departments or leadership.\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button>\r\n                          {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <OpnelineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\n\r\n\r\nconst OpenlinePermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource(); \r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [ \r\n    { \r\n        title: \"Name\",\r\n         dataIndex: \"first_name\",\r\n          key: \"first_name\", \r\n          width: \"30%\",\r\n          render: (record,response) => {\r\n            return {\r\n              children: response.user.first_name,\r\n              props: {\r\n                'data-title': 'Name',\r\n              },\r\n            };\r\n          }\r\n         \r\n    },\r\n    {\r\n      title: \"Respond\",\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => ( \r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox value=\"reports\" checked={res} onChange={(e)=> handleCheck(record)} disabled></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return ( \r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlinePermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\n\r\nconst SearchEmployee = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this openline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        options={searchData}\r\n        placeholder=\"Search Employee\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchEmployee;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport OpenlinePermission from \"../table/OpenlinePermission\";\r\nimport SearchEmployee from \"../autocomplete/SearchEmployee\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from '../../utils/AppStorage';\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nclass OpenlinePermissioModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedOpenLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      openlineId: this.props.selectedRows.openline_id,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL+\"getOpenlineAssignEmpl/\" +\r\n          this.props.selectedRows.openline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n            assignedOpenLines: res.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => { \r\n    \r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL+\"openlineAssignEmpl/\",\r\n        this.state.assignedEmp,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedOpenLines = [...this.state.assignedOpenLines];\r\n    let index = assignedOpenLines.findIndex(el => el.user_id === record.user_id);\r\n    assignedOpenLines[index] = {...assignedOpenLines[index], can_respond: !record.can_respond};\r\n    this.setState({ assignedOpenLines});\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex(el => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {...assignedEmp[aindex], can_respond: !record.can_respond};\r\n    this.setState({ assignedEmp});\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user.user_id,\r\n    };\r\n    const newArray = this.state.assignedEmp && this.state.assignedEmp.filter(function (element) {\r\n      return element.user_id !== value.user.user_id;\r\n    });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL+\"getOpenlineAssignEmpl/\" + value.openline.openline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedOpenLines, assignedEmp } = this.state;\r\n    const x = {\r\n     user:{\r\n         user_id: parseInt(options.user_id),\r\n         first_name: options.value\r\n     },\r\n     openline:{\r\n        openline_id: this.state.openlineId,\r\n      },\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n    };\r\n    const y = {\r\n      openline_id: this.state.openlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: user.user_details.org_user_id,\r\n    };\r\n\r\n    this.setState({\r\n      assignedOpenLines: [...assignedOpenLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Show</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText=\"Done\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          <div>Employees with permissions to {this.state.hotLineName}</div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>\r\n              Reply to Messages, Add Notes, Status & Urgency level\r\n            </Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <OpenlinePermission\r\n            data={this.state.assignedOpenLines}\r\n            deleteRecord={this.deleteRecord}\r\n            handleCheck={this.handleCheck}\r\n          />\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchEmployee\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedOpenLines}\r\n              />\r\n              <small>Hit enter to add</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlinePermissioModal);\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nclass DeleteOpenlineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"openline/\" + this.props.openlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/openlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Openline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <p>Are you sure you want to delete this Openline?</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteOpenlineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteOpenlineModal from \"../../components/modal/DeleteOpenlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/editopenline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/editopenline\">Edit</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteOpenlineModal openlineId={test.openline_id} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OpenlinePermissioModal from \"./../modal/OpenlinePermissioModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport OpenlinePopover from \"../table/OpenlinePopover\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpnlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: \"Openline Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Openline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date\",\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date\",\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Permissions\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <OpenlinePermissioModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>Active\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">Inactive</div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <OpenlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    openlines?.forEach((openline) => {\r\n      openline.start_date = moment(openline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      // abc.start_date = abc.start_date.replaceAll(\"T00:00:00Z\", \"\");\r\n      openline.end_date = moment(openline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      // abc.end_date = abc.end_date.replaceAll(\"T00:00:00Z\", \"\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.openlines !== nextProps.openlines) {\r\n      nextProps.openlines?.forEach((openline) => {\r\n        openline.start_date = moment(openline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        openline.end_date = moment(openline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.openlines }, () => {\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Spin spinning={this.props.loader} size=\"large\">\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={this.props.data} />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1>Openline Directory</h1>\r\n                  </Row>\r\n                  <Col span={24}>\r\n                    <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"search-row mt-2 mt-lg-0\"\r\n                      >\r\n                        <Row>\r\n                          <Col span={24} lg={9} className=\"search-box\">\r\n                            <Search\r\n                              placeholder=\"Search\"\r\n                              onSearch={this.onSearch}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col\r\n                        span={24}\r\n                        lg={6}\r\n                        className=\"d-flex align-items-center justify-content-end\"\r\n                      >\r\n                        <Link to=\"/orgcc/createopenline\">\r\n                          <Buttons value=\"Create Openline\" />\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Grid\r\n                    rowKey=\"openline_id\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </Spin>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOpnlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpnlines from \"./ShowAllOpnlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\n\r\nconst OpenlineContainer = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.openlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.openlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.openlinesdata]);\r\n\r\n  return !loader &&\r\n    props.openlinesdata !== null &&\r\n    props.openlinesdata.length === 0 ? (\r\n    <OpenlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllOpnlines\r\n      openlines={props.openlinesdata}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Upload,\r\n  Spin,\r\n} from \"antd\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\n\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone, UploadOutlined } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditOpenline = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [openLineData, setOpenLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    openline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    openline_image: \"\",\r\n    status_id: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [openlineErrorUpdated, setopenlineErrorUpdated] = useState(\"\");\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date).format(\"YYYY-MM-DD\");\r\n    const eDate = moment(location.state.end_date).format(\"YYYY-MM-DD\");\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n\r\n    setOpenLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      openline_id: location.state.openline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      openline_image: location.state.openline_image,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setOpenLineData({ ...openLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: value });\r\n  };\r\n\r\n  const editOpenline = (e) => {\r\n    setLoader(true);\r\n    if (\r\n      openLineData.name &&\r\n      openLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      openLineData.help_text &&\r\n      openLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      openLineData.openline_image &&\r\n      openLineData.status_id &&\r\n      openLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      function convertImgToBase64(url, callback, outputFormat) {\r\n        var canvas = document.createElement(\"CANVAS\");\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var img = new Image();\r\n        img.crossOrigin = \"Anonymous\";\r\n        img.onload = function () {\r\n          canvas.height = img.height;\r\n          canvas.width = img.width;\r\n          ctx.drawImage(img, 0, 0);\r\n          var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n          callback.call(this, dataURL);\r\n          // Clean up\r\n          canvas = null;\r\n        };\r\n        img.src = url;\r\n      }\r\n      convertImgToBase64(location.state.openline_image, function (base64Img) {\r\n        const data = {\r\n          end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n          help_text: openLineData.help_text,\r\n          openline_id: openLineData.openline_id,\r\n          openline_image: base64Img,\r\n          name: openLineData.name,\r\n          start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n          status_id: parseInt(openLineData.status_id),\r\n          updated_by: user.user_details.org_user_id,\r\n          created_by: user.user_details.org_user_id,\r\n        };\r\n        if (\r\n          openlineErrorUpdated == \"status: false\" ||\r\n          openLineData.name === location.state.name\r\n        ) {\r\n          updateOpenLine(data);\r\n        }\r\n      });\r\n    } else {\r\n      showError(false);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/openlinedirectory\";\r\n  };\r\n\r\n  const updateOpenLine = (data) => {\r\n    const token = authHeader();\r\n    let openLineId = openLineData.openline_id;\r\n    delete openLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"openline/\" + openLineId + \"/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoader(true);\r\n          window.location = \"/orgcc/openlinedirectory\";\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setOpenLineData({ ...openLineData, [name]: fileList });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return \"Sexual Harassment\";\r\n      case \"2\":\r\n        return \"Violence\";\r\n      case \"3\":\r\n        return \"Racism\";\r\n      case \"4\":\r\n        return \"Cyber Bullying\";\r\n      case \"5\":\r\n        return \"Fight\";\r\n      case \"6\":\r\n        return \"Discrimination\";\r\n      case \"7\":\r\n        return \"Slap\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckOpenlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOpenline/\",\r\n          { openline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setopenlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setopenlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>Edit Openline</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message=\"Please fill the fields marked with asterisk(*)\"\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n                    <FloatLabel\r\n                      label=\"Directory Name\"\r\n                      value={openLineData.name}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please enter directory name\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={openLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckOpenlineName(e)}\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {openlineErrorUpdated == \"status: false\" &&\r\n                          openLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          openLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {openlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message=\"Sorry! This openline already exists in the system. Please use a different name.\"\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel\r\n                      label=\"Description\"\r\n                      value={openLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please enter description\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={openLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            name=\"help_text\"\r\n                            id=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label=\"Date\" value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          value={openLineData.start_date}\r\n                          disabledDate={disabledDate}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Please select start date\",\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label=\"Status\" value={openLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            placeholder=\"Status\"\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={openLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">Active</Select.Option>\r\n                            <Select.Option value=\"4\">Inactive</Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <Upload\r\n                          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                          listType=\"picture\"\r\n                          defaultFileList={[\r\n                            {\r\n                              status: \"done\",\r\n                              url: openLineData.openline_image,\r\n                            },\r\n                          ]}\r\n                          onChange={(value) =>\r\n                            handleStepOneUpload(value, \"openline_image\")\r\n                          }\r\n                        >\r\n                          {openLineData.openline_image.length === 0 && (\r\n                            <Button icon={<UploadOutlined />}>\r\n                              Upload Image\r\n                            </Button>\r\n                          )}\r\n                        </Upload>\r\n\r\n                        {getIconText(openLineData.openline_id) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(openLineData.iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      openLineData.openline_id\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(openLineData.openline_id)}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editOpenline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditOpenline;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from \"./components/login/ForgotPassword\";\r\nimport ResetPassword from \"./components/login/ResetPassword\";\r\nimport Login from \"./components/login/Login\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport AddEmployee from \"./components/manageEmp/AddEmp\";\r\nimport ImportFile from \"./components/manageEmp/ImportFile\";\r\nimport CreateManually from \"./components/manageEmp/CreateManually\";\r\nimport ManagePolls from \"./components/managePolls/ManagePolls\";\r\nimport CreatePoll from \"./components/managePolls/CreatePoll\";\r\nimport PreviewPoll from \"./components/managePolls/PreviewPoll\";\r\n\r\n\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\n//fonts\r\nimport OpenlineCreation from \"./components/openlineCreation/OpnelineCreation\";\r\nimport EditOpenline from \"./components/openlineDirectory/EditOpenline\";\r\n\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc = commonForAllUsers.user_data.is_amcc_user;\r\n    isorgcc = commonForAllUsers.user_data.is_org_cc_user;\r\n    isamweb = commonForAllUsers.user_data.is_am_web_user;\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <Route path=\"/addemployee\" component={AddEmployee} />\r\n        <Route path=\"/importfile\" component={ImportFile} />\r\n        <Route path=\"/createmanually\" component={CreateManually} />\r\n        <Route path=\"/managepolls\" component={ManagePolls} />\r\n        <Route path=\"/createpoll\" component={CreatePoll} />\r\n        <Route path=\"/previewpoll\" component={PreviewPoll} />\r\n        <ProtectedRoute path=\"/changepassword\" component={ChangePassword} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route path=\"/resetpassword\" component={ResetPassword} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/edithotline\" ||\r\n          url === \"/orgcc/editopenline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editopenline\"\r\n              amorg\r\n              component={EditOpenline}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/amweb/openlinemessages\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/hotlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/openlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n            </Switch>\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url === \"/\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url.includes(\"/amcc/orgdetails\") ||\r\n            url === \"/login\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/orgdetails/:id\"\r\n                amcc\r\n                component={OrgDetails}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"pwd\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user, pwd: password.replaceAll('^\"+|\"+$', \"\") }\r\n  : { isLoggedIn: false, user: null, pwd: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        pwd: payload.pwd,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        pwd: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        pwd: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = null;\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { Modal } from \"antd\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nfunction App() {\r\n  const timeOutIdle = 1200000; // 20 minutes\r\n  const timeOutLogout = 60000; // a minute\r\n  var idleTimer = null;\r\n  const [idleModal, showIdleModal] = useState(false);\r\n  const [logoutModal, showLogoutModal] = useState(false);\r\n  const [timedOut, setTimedOut] = useState(false);\r\n\r\n  const onIdle = (e) => {\r\n    if (AppStorage.get(\"user\")) {\r\n      const isTimedOut = timedOut;\r\n      if (isTimedOut) {\r\n        showIdleModal(false);\r\n        showLogoutModal(true);\r\n      } else {\r\n        showIdleModal(true);\r\n        idleTimer.reset();\r\n        setTimedOut(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIdleOk = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleIdleCancel = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleLogoutOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleLogoutCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const onActive = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  const onAction = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        ref={(ref) => {\r\n          idleTimer = ref;\r\n        }}\r\n        element={document}\r\n        onIdle={onIdle}\r\n        onAction={onAction}\r\n        onActive={onActive}\r\n        debounce={250}\r\n        timeout={!timedOut ? timeOutIdle : timeOutLogout}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n            <Modal\r\n              visible={idleModal}\r\n              onOk={handleIdleOk}\r\n              onCancel={handleIdleCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText=\"Ok\"\r\n            >\r\n              <p>\r\n                You are about to log out. Click Ok to keep yourself logged in.\r\n              </p>\r\n            </Modal>\r\n            <Modal\r\n              visible={logoutModal}\r\n              onOk={handleLogoutOk}\r\n              onCancel={handleLogoutCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText=\"Ok\"\r\n            >\r\n              <p>You are logged out. Click Ok to log in again.</p>\r\n            </Modal>\r\n            <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}