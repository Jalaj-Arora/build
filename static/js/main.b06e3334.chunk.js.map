{"version":3,"sources":["utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","values.js","headings.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","components/manageOrg/AccSidebar.js","containers/ShowDetails.js","components/table/Table.js","components/button/Button.js","services/auth-header.js","labels.js","messages.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","errors.js","components/form/CreateOrgStepOne.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/modal/PrivacyPolicyModal.js","components/login/Login.js","components/hotlineMessages/AmWebSidebar.js","components/reports/IdbSidebar.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","components/modal/AssignHotlineModal.js","utils/HighlightTextHotline.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/SearchHotlineMessages.js","components/hotlineMessages/HotlineMessagesLeftSection.js","components/hotlineMessages/NoHotlineMessages.js","components/hotlineMessages/Spinner.js","utils/MessagesUtil.js","components/hotlineMessages/HotlineMessages.js","components/openlineMessages/AmWebSidebar.js","utils/HighlightTextOpenline.js","components/openlineMessages/FilterPopover.js","components/openlineMessages/AddedNotes.js","components/openlineMessages/Note.js","components/openlineMessages/Activity.js","components/openlineMessages/Assigned.js","components/openlineMessages/Messages.js","components/openlineMessages/SearchOpenlineMessages.js","components/openlineMessages/OpenlineMessagesLeftSection.js","components/openlineMessages/NoOpenlineMessages.js","components/openlineMessages/OpenlineMessages.js","containers/PermissionDenied.js","components/modal/ResetPwdModal.js","components/form/EditSeededUsers.js","components/form/AddNewSeededUser.js","components/form/OrgDetails.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/manageEmp/AddEmployee.js","components/manageEmp/UploadFiles.js","components/manageEmp/ImportFile.js","components/manageEmp/MultiRoleSelection.js","components/manageEmp/CreateManually.js","components/managePolls/UploadImage.js","components/managePolls/MultipleChoice.js","components/modal/DateTimeModal.js","utils/momentUtil.js","components/managePolls/PreviewPoll.js","components/managePolls/CreatePoll.js","components/modal/ExtendEndDate.js","components/modal/DeletePollModal.js","components/table/PollPopover.js","components/managePolls/MultiSelection.js","components/managePolls/ShowAllPolls.js","utils/defaultpoll.js","actions/poll.js","components/managePolls/PollsContainer.js","components/managePolls/BarChart.js","components/managePolls/PieChart.js","components/managePolls/PollResponsePopover.js","components/managePolls/PollResponse.js","components/modal/EditDateTimeModal.js","components/managePolls/EditPreviewPoll.js","components/managePolls/EditPoll.js","components/managePolls/ExistingPolls.js","components/modal/DuplicateDateTimeModal.js","components/managePolls/DuplicatePreviewPoll.js","components/managePolls/DuplicatePoll.js","components/reports/VerticalChart.js","components/reports/PieChart.js","components/reports/DoughNutChart.js","components/reports/MultiSelection.js","components/reports/ReportsPopover.js","components/reports/Reports.js","components/openlineForm/CreateOpenlineStepOne.js","components/openlineForm/CreateOpenlineStepTwo.js","components/openlineForm/CreateOpenlineStepThree.js","components/openlineCreation/OpenlineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/table/OpenlinePermission.js","components/autocomplete/SearchEmployee.js","components/modal/OpenlinePermissioModal.js","components/modal/DeleteOpenlineModal.js","components/table/OpenlinePopover.js","components/openlineDirectory/ShowAllOpenlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/openlineDirectory/EditOpenline.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/poll.js","reducers/index.js","services/stores.js","App.js","index.js","assets/icons/dots-icon.svg","components/manageEmp/manageEmp.module.scss","assets/images/amcc-vector.svg","assets/images/create-hotline.svg","assets/icons/send.svg","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/icons/pencil.svg","assets/images/work-chart.svg","assets/images/no-hotlines.svg","assets/images/no-openlines.svg","assets/images/create-openline.svg","components/managePolls/managePoll.module.scss","assets/images/thermometer.svg","assets/images/Thumb.svg","assets/images/emoji.svg","assets/images/steps.svg"],"names":["getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","AuthService","email","password","page","axios","post","response","data","userFName","AES","encrypt","user_details","first_name","toString","userLName","last_name","departmentId","department_id","orgUserId","org_user_id","endDate","end_date","startDate","start_date","userEmail","user_data","userMobile","mobile_number","orgId","organization_id","userId","user_id","amweb","is_am_web_user","amsuper","is_super_user","amcc","is_amcc_user","amorgcc","is_org_cc_user","amidb","is_idb_user","amseeded","is_seeded_user","amapp","is_app_user","userData","JSON","stringify","clear","window","location","reload","login","dispatch","then","type","payload","user","current","Promise","resolve","error","message","reject","STATUS_ACTIVE","STATUS_INACTIVE","AM_WEB","ORG_CC","SUPER_USER","IDB_USER","APP_USER","ALL","OK_TEXT_MODAL","NEXT","BACK","CANCEL","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","amIDBUser","userType","decrypt","enc","Utf8","name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","collapsed","toggle","setState","defaultKey","createElement","MenuFoldOutlined","MenuUnfoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","AccSidebar","ShowDetails","history","useHistory","path","record","showModal","push","orgName","identifier","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","authHeader","CommonAuthHeader","parse","tokens","access","FIRST_NAME","LAST_NAME","DATE","MOBILE","STATUS","ACCESS","ACTIONS","DELETE_CONFIRM","LOGIN_PART1","LOGIN_PART2","POLL_DATES_TEXT","EXTEND_END_DATE_TEXT_PART3","ASSIGN_HOTLINE_TEXT_PART2","STATUS_CHANGED_NOTIFICATION_PART1","STATUS_CHANGED_NOTIFICATION_PART2","STATUS_CHANGED_NOTIFICATION_PART3","STATUS_CHANGED_NOTIFICATION_PART4","ABOUT_TO_LOGOUT_TEXT","LOGGED_OUT_TEXT","TO","Content","ShowAllOrganizations","statusClicked","via","replaceAll","Date","moment","format","status_id","Authorization","put","notification","config","open","description","statusOnClicked","onSearch","filterDt","filterIt","filterData","searchBy","organizations","forEach","org","utc","local","nextProps","arr","searchKey","filter","obj","Object","keys","some","title","dataIndex","width","render","children","Pencil","placeholder","Button","spinning","loader","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","REQUIRED_MESSAGE","MAX_CHAR_LIMIT","VALID_EMAIL","VALID_MOBILE","PASSWORD_RULES","HOTLINE_ALREADY_EXISTS","SELECT_DATE","STATUS_NOT_CHANGED","PAST_TIME","OPENLINE_ALREADY_EXISTS","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","orgIdCount","orgNameCount","setOrgNameAlreadyExists","setOrgIDAlreadyExists","orgIDAlreadyExists","orgNameAlreadyExists","Form","useForm","form","showError","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","organization_name","res","CheckOrganizationName","autoComplete","maxLength","replace","CheckCircleTwoTone","twoToneColor","organizationId","validateStatus","orgID","CheckOrganizationID","status1","onSelect","Option","s1Date","date","disabledDate","startOf","htmlType","preventDefault","DeleteModal","visible","show","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","deleteOrg","handleCancel","delete","hotlineId","catch","manageEmp","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","isValid","lastName","mobile","status2","fromStepTwo","showAddSeededUserForm","addSeededUser","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleMobile","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","fNameCount","lNameCount","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","passwordValidationError","showPasswordValidationError","stepTwoPrev","test","target","validateEmailAddress","country","userID","CreateOrgStepThree","apiError","createNewOrganization","addSeededUserFromThirdStep","disabled","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","setLoader","setApiError","stepOneOrganization","setStepOneOrganization","setOrgNameExists","setOrgIDExists","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","setOrgNameCount","setOrgIDCount","setFNameCount","setLNameCount","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","organization","mobile_authentication_key_id","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","filterStatus","search","undefined","hotLineId","manageOrgData","manageOrg","setStatusClicked","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","flag","property","status","layout","wrapperCol","tailLayout","ForgotPassword","onChangeUsername","sendEmail","emailSent","incorrectEMail","Amccvector","ref","c","initialValues","remember","ResetPassword","onChangePassword","onChangeConfirmPassword","confirm_password","resetPassword","uidb64","URLSearchParams","resetDone","resetFailed","setTimeout","validatePassword","rules","required","Password","getFieldValue","validator","_","dependencies","hasFeedback","PrivacyPolicyModal","Login","handleLogin","loading","isamcc","isorgcc","isamweb","isidb","isAuthenticated","commonForAllUsers","isEnabled","canSubmit","onSubmit","AmWebSidebar","IdbSidebar","ChangePassword","currentPwd","newPwd","confirmPwd","pwd","setPwd","passwordChanged","setPasswordChanged","setError","userName","setUserName","handleOnChange","old_password","new_password","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","setNameValidHandle","hotlineErrorUpdated","iconText","setdisabledbtn","directoryName","ENTER_DIRECTORY_NAME","showCount","hotline_name","CheckHotlineName","ENTER_DESCRIPTION","sDate","valuePropName","hotlineIconId","ReactHtmlParser","iconHtml","CreateHotlineStepTwo","employeeData","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","prevProps","rowSelection","selectedRowKeys","Mobile_Number","margin","TextArea","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setHotlineErrorUpdated","setStepTwoHotLine","values","permissions","per","id1","reduce","accumulator","currentValue","can_respond","can_view_reports","created_by","concat","a","async","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","HotlinePopover","DeleteHotlineModal","hotline_id","hotlineName","GridPermission","deleteRecord","handleCheck","permissionData","setPermissionaData","changeDataSource","editable","checked","text","onDelete","locale","emptyText","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","ShowAllHotlines","updated_by","hotlines","hotline","hotlinesdata","hotlinedata","getHotlines","AssignHotlineModal","selectedRow","stepOneHotLineValues","getCheckValues","setVisible","ASSIGN_HOTLINE_TEXT_PART1","find","p","highlightText","str","conversation_id","toLowerCase","responder_conversation_name","RegExp","match","itemMessage","setStatus","urgencyLevel","setUrgencyLevel","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalInput","finalUrl","searchString","filteredData","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","convMsg","setConvMsg","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","setSearchBy","getHotlineMessages","document","getElementById","note","assigne","classList","count","highlightedMessage","getElementsByTagName","scrollIntoView","block","lastMessage","getElementsByClassName","messagevalue","convID","onSendMessageClick","attachment_type","latitude","longitude","attachments","attach","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","messageLength","unread_messages_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","ctrlKey","textarea","querySelector","shiftKey","Send","SearchHotlineMessages","useRef","trim","statusFil","statusFilterData","urgencyFilterData","ugc","hotlineFilterData","ht","setSearchString","setConversations","HoltineMessagesLeftSection","showdiv","unreadCount","closable","onClose","removeFilterLevel","conversations","onConversationClick","fontWeight","dataForReceiveAPI","getConversations","NoHotlines","opacity","NoHotlineMessages","Spinner","tip","displayNewConvAtTop","updatedConversations","newConvo","updatedNewConvo","dummyArray","splice","increaseOverallCount","conversationsToDisplay","selectedConv","setUnreadCount","newConvFromDiffUser","incomingConversation","increaseOverallCountDuringFilters","allConversations","lineFilterData","newInitiatedConv","setAllConversations","unSetFilters","filterSocket","totalFiltersApplied","conversationIds","hotlineOrOpenlineFilter","openline","hotlineOrOpenlineConvoId","openline_id","hotlineOrOpenlineConvoName","openline_name","totalConversations","urgency","lineName","updatedConversation","setAppliedFilters","urgencyLevels","line","setUrgencyFilterData","setStatusFilterData","setLineFilterData","HotlineMessages","initialConv","setInitialConv","setHotlineFilterData","setRemoveFilter","setConversation","setSocket","setNewState","setShowDiv","setChatDiv","showBack","setshowBack","webSocket","close","allConversationIds","mergedConversations","convoID","WebSocket","onopen","onmessage","sendSocketMessage","lastWord","words","onclose","onerror","accessed_users","urgencyState","statusState","hotlineState","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","allAppliedFilters","urlWithFilters","disabledCount","LeftOutlined","receivedConversation","openlineName","setOpenline","openlinesData","setOpenlinesData","oldOpenline","setOldOpenline","selectedOldOpenline","setSelectedOldOpenline","selectedOpenline","setSelectedOpenline","removeOpenline","rmOpen","openlineOptions","openlineId","listOfAssignedUsers","getOpenlineMessages","SearchOpenlineMessages","openlineFilterData","OpenlineMessagesLeftSection","NoOpenlines","NoOpenlineMessages","CreateOpenline","OpenlineMessages","setOpenlineFilterData","openlineState","openlineFilter","PermissionDenied","justifyContent","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","ENTER_NEW_PASSWORD","CONFIRM_YOUR_PASSWORD","EditSeededUser","handleEditOk","handleEditCancel","seededUserName","seededUserDetails","handleSeededUserOnChange","handleSeededUserDatePickerChange","validateMobile","handleSeededUserOnSelect","AddNewSeededUser","handleAddSeededUser","handleAddSeededUserCancel","OrgDetails","modalError","showModalError","setEmailValidationError","setMobileValidationError","setSeededUserName","seededUserEmail","setSeededUserEmail","setSeededUserDetails","editVisible","setEditVisible","showAddSeededUser","setShowAddSeededUser","org_id","date1","organizationDetails","setOrganizationDetails","useNotification","api","contextHolder","computedMatch","appendedUsers","seeded_user","soft_delete","finalUsers","onSeededUserEditSubmit","info","editOrg","onFinish","handleOrganizationOnSelect","orgDetails","EditSeededUsers","newSeededUser","EditOrg","setOrganizationName","organizationIdentifier","setOrganizationIdentifier","deleteClick","setDeleteClick","orgStatus","setOrgStatus","handleOrganizationOnChange","handleOrganizationDatePickerChange","EditHotLine","hotLineData","sethotLineData","hotlineStatus","setHotlineStatus","seticonHtml","sethotlineErrorUpdated","useLocation","eDate","dates","setIcon","saveHotLine","AddEmployee","xl","styles","box_bordered","Dragger","Upload","UploadFiles","accept","fileList","file","ImportFiles","uploadMessage","SetUploadMessage","uploaderror","Setuploaderror","setFile","reader","FileReader","onload","base64","result","readAsDataURL","originFileObj","formData","FormData","append","SHOW_PARENT","TreeSelect","treeData","MultiRoleSelection","tProps","handleRoleOnSelect","treeCheckable","showCheckedStrategy","CreateManually","empId","department","role","userDetails","setUserDetails","handleUserOnChange","handleUserDatePickerChange","handleUserOnSelect","DownOutlined","UploadImage","handleStepOneUpload","handleBeforeUpload","handleOnRemove","handlePollImagePreview","poll","listType","beforeUpload","onRemove","onPreview","previewVisible","previewTitle","previewImage","MultiChoice","tags","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","tag","setSingleChoiceResponse","showInput","input","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","tagsOption","pollResponse","onPressEnter","isLongTag","tagElem","edit_tag","onDoubleClick","add_tag","DatetimeModal","pollData","pollStartDate","pollEndDate","onPublish","disabledStartDate","disabledEndDate","range","end","onChangeStartDate","handlePollStartDatePickerChange","onChangeEndDate","handlePollEndDatePickerChange","onChangeStartTime","startTime","startTimeError","onBlurStartTime","pollStartTime","handlePollStartTimePickerChange","onChangeEndTime","endTime","endTimeError","onBlurEndTime","pollEndTime","handlePollEndTimePickerChange","pollName","formatAsYYYYMMDDHHmmss","formatAsHHmmss","formatAsMMMDDYYYY","formatAsHHmm","formatAsYYYYMMDD","formatAsDDMMYYYY","starsRating","isHalf","activeColor","newValue","PreviewPoll","setPollsDate","backtoEdit","isImage","attachmentName","pollHelpText","pollDocument","pollChartType","pollQuestion","pollQuestionType","pollRatingResponse","pollImageValidation","pollRatingType","pollState","setPollState","getBase64","poll_info","handlePollOnSelect","classNames","Smiley","Thermometer","Thumb","PaperClipOutlined","preview","url","substring","lastIndexOf","DateTimeModal","time","optionsData","option_text","create_poll","image","show_result_to_users","poll_result_chart_type","image_name","poll_question_type","question","poll_question_rating_type","momentUtil","start_time","end_time","document_name","emptyIcon","fullIcon","CreatePoll","setPoll","pollError","setpollError","previewPoll","setPreviewPoll","chartError","showChartError","uploadError","showuploadError","setIsImage","setAttachmentName","onCreateChange","checkChartType","checkDoucmentType","fileType","isPollNameDuplicate","sm_textarea","xlsxfileExt","pptxfileExt","docfileExt","csvfileExt","isValidDoc","isDocument","isLt5M","isLt10M","ExtendEndDate","poll_id","pollsData","extendPollDate","formattedEndDate","edate","emonth","eyear","minutes","getMinutes","hours","getHours","final_endTime","getTime","DeletePollModal","deletePoll","pollId","OpenlinePopover","MultiSelection","handlePollStatusOnSelect","ShowAllPolls","setSearchValue","setFilterOptions","sdate","smonth","syear","finalStartDate","currentDate","startTimeWithDate","polls","PollPopover","getDefaultPoll","is_out_of_the_box","update_on","getPollAsync","getPolls","pollsdata","setFilter","setSearch","setChecked","totalPolls","setTotalPolls","isInactivePollPresent","pollObject","mergePoll","BarChart","labels","datasets","setData","chartTitle","setOptions","scales","xAxes","yAxes","finalData","sets","labelsData","yAxisData","poll_option_id","finalYAxisData","backgroundColor","random_hex_color_code","borderWidth","sendBackData","string","hash","charCodeAt","colour","substr","PieChart","recordData","colors","borderColors","percentage","borderColor","PollResponsePopover","showDownloadOptions","PollResponse","chartType","setChartType","dataPoints","setDataPoints","resData","finalResData","downloadCSV","filename","link","points","y_index","xpoint","ypoint","csv","ctr","convertChartDataToCSV","encodeURI","setAttribute","body","appendChild","click","removeChild","x_data","y_data","total_employee_count","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","downloadPDF","total_response","POLL_RESULTS","formattedStartDate","final_startTime","pastStartTimeError","pastEndTimeError","EditPreviewPoll","editPoll","download","EditDateTimeModal","EditPoll","pollOptionText","pollID","uid","convertImgToBase64","callback","outputFormat","ctx","getContext","img","Image","crossOrigin","height","drawImage","dataURL","call","finalOptions","assign","isMoment","update_poll","base64Img","atb","btoa","base64Blob","Blob","POLL_ALREADY_EXISTS","ExistingPolls","DuplicateDateTimeModal","dateError","valueOf","finalEndDate","DuplicatePreviewPoll","CreateDuplicatePoll","DuplicatePoll","setDefaultPollDetails","setPollDetails","isPollNameUnique","VerticalBar","xAxisData","reportData","entries","report","nestedReportData","dataInMonths","dateRange","dataInYears","dataItem","months","month","yearsArray","years","difference","loop","year","selectedLines","line_name","totalMessages","resolvedMessages","DoughNutChart","high","medium","low","line_id","setSelectedLines","lines","linesData","ReportsPopover","Reports","setDate","period","setPeriod","setLines","setDateRange","setYears","totalMessagesCount","setTotalMessagesCount","closedConversationsCount","setClosedConversationsCount","averageResolvedTime","setAverageResolvedTime","setUrgencyLevels","setReport","Messages_From","Messages_Reporting","setChartTitle","line_ids","yearValue","monthValue","dayValue","now","past90DaysTimeStamp","getDate","past90Days","days","defaultFormat","hotline_ids","openline_ids","total_conversation_count","avg_time_to_resolve_conversation","round","closed_conversation_count","urgency_level","downloadChartImage","url_base64jp","x_index","startMonth","startDay","startYear","endMonth","endDay","endYear","differenceInDates","abs","diff","handleDatePickerChange","DownloadOutlined","CreateOpenlineStepOne","imageError","stepOneOpenLineInfo","handleStepOnePreview","openelineName","rotate","modalOk","CreateOpenlineStepTwo","stepTwoOpenLine","CreateOpenlineStepThree","stepOneOpenLine","action","OpenlineCreation","setImageError","imagename","setStepOneOpenLine","setStepTwoOpenLine","create_openline","openline_image","openline_image_name","OpenlineDirectory","OpenlinePermission","SearchEmployee","OpenlinePermissioModal","assignedOpenLines","DeleteOpenlineModal","ShowAllOpenlines","openlines","openlinesdata","getOpenlines","EditOpenline","ImgfileList","openLineData","setOpenLineData","openlineErrorUpdated","setopenlineErrorUpdated","updateOpenLine","openLineId","CheckOpenlineName","Routes","EditProfile","exact","amorg","ImportFile","HotlineContainer","OpenlineContainer","PollsContainer","OrganizationContainer","decryptedPassword","localPwd","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","idleTimer","idleModal","showIdleModal","logoutModal","showLogoutModal","timedOut","setTimedOut","onIdle","reset","onAction","onActive","debounce","timeout","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.b06e3334.chunk.js","sourcesContent":["const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";\r\nexport const WEBSOCKET_HOTLINE_URL = \"ws://10.0.6.10:8000/ws/hotlineMessages/\";\r\nexport const WEBSOCKET_OPENLINE_URL =\r\n  \"ws://10.0.6.10:8000/ws/openlineMessages/\";\r\n","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      const data = response.data;\r\n      const userFName = CryptoJS.AES.encrypt(\r\n        data.user_details?.first_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userLName = CryptoJS.AES.encrypt(\r\n        data.user_details?.last_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const departmentId = CryptoJS.AES.encrypt(\r\n        data.user_details?.department_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgUserId = CryptoJS.AES.encrypt(\r\n        data.user_details?.org_user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const endDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.end_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const startDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.start_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userEmail = CryptoJS.AES.encrypt(\r\n        data.user_data?.email,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userMobile = CryptoJS.AES.encrypt(\r\n        data.user_data?.mobile_number,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgId = CryptoJS.AES.encrypt(\r\n        data.user_data?.organization_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userId = CryptoJS.AES.encrypt(\r\n        data.user_data?.user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amweb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_am_web_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amsuper = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_super_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_amcc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amorgcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_org_cc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amidb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_idb_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amseeded = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_seeded_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amapp = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_app_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userData = {\r\n        ...data,\r\n        user_data: {\r\n          ...data.user_data,\r\n          email: userEmail,\r\n          mobile_number: userMobile,\r\n          organization_id: orgId,\r\n          user_id: userId,\r\n          is_am_web_user: amweb,\r\n          is_amcc_user: amcc,\r\n          is_super_user: amsuper,\r\n          is_app_user: amapp,\r\n          is_org_cc_user: amorgcc,\r\n          is_idb_user: amidb,\r\n          is_seeded_user: amseeded,\r\n        },\r\n        user_details: {\r\n          ...data.user_details,\r\n          first_name: userFName,\r\n          last_name: userLName,\r\n          department_id: departmentId,\r\n          org_user_id: orgUserId,\r\n          end_date: endDate,\r\n          start_date: startDate,\r\n        },\r\n      };\r\n      AppStorage.set(\"user\", JSON.stringify(userData));\r\n      AppStorage.set(\r\n        \"current\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          current: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\nexport const POLL_SUCCESS = \"POLL_SUCCESS\";\r\nexport const POLL_FAIL = \"POLL_FAIL\";\r\n\r\n\r\n\r\n\r\n","export const STATUS_ACTIVE = \"Active\";\r\nexport const STATUS_INACTIVE = \"Inactive\";\r\nexport const AM_WEB = \"AM Web\";\r\nexport const AM_CC = \"AM CC\";\r\nexport const IDB = \"IDB\";\r\nexport const ORG_CC = \"Control Center\";\r\nexport const PIE_CHART = \"Pie Chart\";\r\nexport const BAR_CHART = \"Bar Chart\";\r\nexport const STAR_FORMAT = \"Star Format\";\r\nexport const SELECT_SINGLE = \"Select Single\";\r\nexport const SELECT_MULTIPLE = \"Select Multiple\";\r\nexport const STAR_RATING = \"Rating Type\";\r\nexport const MAKE_SUPER_USER = \"Super User\";\r\nexport const MAKE_CONTROL_CENTER = \"Control Center\";\r\nexport const MAKE_IDB_USER = \"IDB\";\r\nexport const OPENLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const OPENLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const OPENLINE_CREATE_STEP3 = \"Review Details\";\r\nexport const HOTLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const HOTLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const HOTLINE_CREATE_STEP3 = \"Create Directory\";\r\nexport const URGENCY_LEVEL_LOW = \"Low\";\r\nexport const URGENCY_LEVEL_MEDIUM = \"Medium\";\r\nexport const URGENCY_LEVEL_HIGH = \"High\";\r\nexport const STATUS_OPEN = \"Open\";\r\nexport const STATUS_CLOSED = \"Closed\";\r\nexport const STATUS_NEW = \"New\";\r\nexport const AUDIT_LOG1 = \"Updated the Status to\";\r\nexport const AUDIT_LOG2 = \"Updated the Urgency level to\";\r\nexport const AUDIT_LOG3 = \"Added new Note\";\r\nexport const AUDIT_LOGH4 = \"View Hotline Converations\";\r\nexport const AUDIT_LOGO4 = \"View Openline Converations\";\r\nexport const SEXUAL_HARRASMENT = \"Sexual Harrasment\";\r\nexport const VIOLENCE = \"Violence\";\r\nexport const RACISM = \"Racism\";\r\nexport const CYBER_BULLYING = \"Cyber Bullying\";\r\nexport const FIGHT = \"Fight\";\r\nexport const DISCRIMINATION = \"Discrimination\";\r\nexport const SLAP = \"Slap\";\r\nexport const SCHEDULED = \"Scheduled\";\r\nexport const COMPLETED = \"Completed\";\r\nexport const SUPER_USER = \"Super User\";\r\nexport const IDB_USER = \"IDB\";\r\nexport const APP_USER = \"APP\";\r\nexport const STARS = \"Stars\";\r\nexport const SMILEY = \"Smiley\";\r\nexport const THERMOMETER = \"Thermometer\";\r\nexport const THUMBSUP = \"ThumbsUp\";\r\nexport const LADDER = \"Ladder\";\r\nexport const ALL = \"All\";\r\nexport const SUNDAY = \"Sunday\";\r\nexport const MONDAY = \"Monday\";\r\nexport const TUESDAY = \"Tuesday\";\r\nexport const WEDNESDAY = \"Wednesday\";\r\nexport const THURSDAY = \"Thursday\";\r\nexport const FRIDAY = \"Friday\";\r\nexport const SATURDAY = \"Saturday\";\r\nexport const JANUARY = \"January\";\r\nexport const FEBRUARY = \"February\";\r\nexport const MARCH = \"March\";\r\nexport const APRIL = \"April\";\r\nexport const MAY = \"May\";\r\nexport const JUNE = \"June\";\r\nexport const JULY = \"July\";\r\nexport const AUGUST = \"August\";\r\nexport const SEPTEMBER = \"September\";\r\nexport const OCTOBER = \"October\";\r\nexport const NOVEMBER = \"November\";\r\nexport const DECEMBER = \"December\";\r\nexport const MONTH = \"Month\";\r\nexport const YEAR = \"Year\";\r\nexport const DAY = \"Day\";\r\nexport const DEFINITELY_NOT = \"Definitely Not\";\r\nexport const BETTER_IF_NOT = \"Better If Not\";\r\nexport const DOES_NOT_MATTER = \"Does Not Matter\";\r\nexport const I_AM_OK = \"I am Ok\";\r\nexport const EXCITED = \"Excited\";\r\nexport const MAKE_APP_USER = \"APP\"\r\n","export const POLLS = \"Polls\";\r\nexport const OPENLINES = \"Openlines\";\r\nexport const HOTLINES = \"Hotlines\";\r\nexport const HOTLINE = \"Hotline\";\r\nexport const OPENLINE = \"Openline\";\r\nexport const ORGANIZATIONS = \"Organizations\";\r\nexport const BROADCAST_MESSAGES = \"Broadcast Messages\";\r\nexport const HELP = \"Help\";\r\nexport const INFO = \"Info\";\r\nexport const ORGANIZATION_DETAILS = \"Organization Details\";\r\nexport const EDIT_DETAILS = \"Edit Details\";\r\nexport const MANAGE_POLLS = \"Manage Polls\";\r\nexport const PREVIEW_POLL = \"Preview Poll\";\r\nexport const SCHEDULE = \"Schedule\";\r\nexport const RESCHEDULE = \"Reschedule\";\r\nexport const OOTB_POLL = \"OOTB Poll\";\r\nexport const POLL_RESULTS = \"Poll Results\";\r\nexport const SHOW_INTRIM_RESULT = \"Show Intrim Results\";\r\nexport const SHOW_FINAL_RESULT = \"Show Final Results\";\r\nexport const SHOW_ALL_POLLS =\r\n  \"Show All Polls (includes Completed and Inactive Polls)\";\r\nexport const PUBLISH_POLL = \"Publish Poll\";\r\nexport const PUBLISH = \"Publish\";\r\nexport const MANAGE_EMPLOYEES = \"Manage Employees\";\r\nexport const MANAGE_HOTLINES = \"Manage Hotlines\";\r\nexport const CREATE_POLL = \"Create Poll\";\r\nexport const CREATE_ORGANIZATION = \"Create Organization\";\r\nexport const EDIT_ORGANIZATION = \"Edit Organization\";\r\nexport const EDIT_POLL = \"Edit Poll\";\r\nexport const VIEW_POLL = \"View Poll\";\r\nexport const VIEW = \"View\";\r\nexport const SEARCH_EMPLOYEE = \"Search Employee\";\r\nexport const SEARCH_USER = \"Search User\";\r\nexport const SEARCH = \"Search\";\r\nexport const ADD_USER = \"Add User\";\r\nexport const ADD_SEEDED_USER = \"Add Seeded User\";\r\nexport const EDIT_SEEDED_USERS = \"Edit Seeded Users\";\r\nexport const EDIT_SEEDED_USER = \"Edit Seeded User\";\r\nexport const EDIT_HOTLINE = \"Edit Hotline\";\r\nexport const NO_SEEDED_USERS = \"No Seeded User\";\r\nexport const CANCEL_MODAL = \"Cancel\";\r\nexport const UPDATE_MODAL = \"Update\";\r\nexport const ADD_TEXT_MODAL = \"Add\";\r\nexport const DELETE_TEXT_MODAL = \"Delete\";\r\nexport const OK_TEXT_MODAL = \"OK\";\r\nexport const YES_TEXT_MODAL = \"Yes\";\r\nexport const NO_TEXT_MODAL = \"No\";\r\nexport const CHANGE_PASSWORD_FOR = \"Change Password for\";\r\nexport const CHANGE_PASSWORD = \"Change Password\";\r\nexport const RESET_PASSWORD_LINK = \"Reset password for this user\";\r\nexport const RESET_PASSWORD = \"Reset Password\";\r\nexport const SET_NEW_PASSWORD = \"Set a new password for your account.\";\r\nexport const RESET_INVITE = \"Reset and Invite\";\r\nexport const RESET_PASSWORD_FOR = \"Reset password for \";\r\nexport const SUBMIT = \"Submit\";\r\nexport const NEXT = \"Next\";\r\nexport const BACK = \"Back\";\r\nexport const SAVE = \"Save\";\r\nexport const UPDATE = \"Update\";\r\nexport const CANCEL = \"Cancel\";\r\nexport const CREATE = \"Create\";\r\nexport const EDIT = \"Edit\";\r\nexport const DELETE = \"Delete\";\r\nexport const CREATE_INVITE = \"Create and Invite\";\r\nexport const ADD_ICON = \"Add Icon\";\r\nexport const SEEDED_USERS_DETAILS = \"Seeded Users Details\";\r\nexport const HOTLINE_DIRECTORY = \"Hotline Directory\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const CREATE_HOTLINE_DIRECTORY = \"Create Hotline Directory\";\r\nexport const CREATE_OPENLINE_DIRECTORY = \"Create Openline Directory\";\r\nexport const CREATE_HOTLINE_DIRECTORY_ENTRIES =\r\n  \"Create Hotline Directory Entries\";\r\nexport const CREATE_OPENLINE_DIRECTORY_ENTRIES =\r\n  \"Create Openline Directory Entries\";\r\nexport const DELETE_HOTLINE = \"Delete Hotline\";\r\nexport const ASSIGN = \"Assign\";\r\nexport const DONE = \"Done\";\r\nexport const ORGANIZATION_CREATE_STEP3 = \"Confirm Details\";\r\nexport const ACTIVITY = \"Activity\";\r\nexport const SHOW_LESS = \"Show less\";\r\nexport const SHOW = \"Show\";\r\nexport const OPENLINE_MESSAGES = \"Openline Messages\";\r\nexport const HOTLINE_MESSAGES = \"Hotline Messages\";\r\nexport const HOTLINE_REPORTS = \"Hotline Reports\";\r\nexport const OPENLINE_REPORTS = \"Openline Reports\";\r\nexport const CHOOSE_DATE_RANGE = \"Choose Date Range\";\r\nexport const CHOOSE_DURATION = \"Choose Duration\";\r\nexport const DOWNLOAD = \"Download\";\r\nexport const DOWNLOAD_AS_PDF = \"Download PDF\";\r\nexport const DOWNLOAD_AS_CSV = \"Download CSV\";\r\nexport const SHOW_AS_BAR = \"Bar Chart\";\r\nexport const SHOW_AS_PIE = \"Pie Chart\";\r\nexport const WEEKLY = \"Weekly\";\r\nexport const MONTHLY = \"Monthly\";\r\nexport const YEARLY = \"Yearly\";\r\nexport const TOTAL_MESSAGES = \"Total Messages\";\r\nexport const MESSAGES_BASED_ON_URGENCY_LEVEL =\r\n  \"Messages based on Urgency Level\";\r\nexport const MESSAGES_RESOLVED = \"Messages Resolved\";\r\nexport const AVERAGE_RESOLVED_TIME = \"Average Resolved Time\";\r\nexport const RESOLVED_MESSAGES = \"Resolved Messages\";\r\nexport const ASSIGNED_TO = \"Assigned To\";\r\nexport const FILTER = \"Filter\";\r\nexport const RESET = \"Reset\";\r\nexport const URGENCY_LEVEL = \"Urgency level\";\r\nexport const APPLY = \"Apply\";\r\nexport const CONVERSATIONS = \"Conversations\";\r\nexport const URGENCY = \"Urgency\";\r\nexport const NO_MESSAGES_FOUND = \"No messages found\";\r\nexport const NO_CONVERSATION_SELECETD = \"No Conversation Selected\";\r\nexport const SELECT_CONVERSATION = \"Select a Conversation to view\";\r\nexport const LAST_READ = \"Last Read\";\r\nexport const URGENCY_LEVEL_CHANGED = \"Urgency Level has been changed to\";\r\nexport const STATUS_CHANGED = \"Status has been changed to\";\r\nexport const SEND_MESSAGE_TEXT = \"Replying as Hotline representative\";\r\nexport const NOTES = \"Notes\";\r\nexport const TAKE_NOTE = \"Take a note\";\r\nexport const ADD_NOTE = \"Add note here\";\r\nexport const LOADING = \"Loading...\";\r\nexport const SIGN_IN = \"Sign In\";\r\nexport const SIGN_OUT = \"Sign Out\";\r\nexport const FORGOT_PASSWORD = \"Forgot Password\";\r\nexport const ADD_EMPLOYEE = \"Add Employee\";\r\nexport const MANAGE_ORGANIZATIONS = \"Manage Organizations\";\r\nexport const POLL_TITLE = \"Poll Title\";\r\nexport const POLL = \"Poll\";\r\nexport const UPLOAD = \"Upload\";\r\nexport const DOCUMENT_IMAGE = \" Document Or Image\";\r\nexport const CLOSE_TEXT_MODAL = \"Close\";\r\nexport const ADD_OPTION = \"Add Option\";\r\nexport const PREVIEW = \"Preview\";\r\nexport const EXTEND_END_DATE = \"Extend End Date\";\r\nexport const EXTEND_TEXT_MODAL = \"Extend Date\";\r\nexport const EDIT_OPENLINE = \"Edit Openline\";\r\nexport const UPLOAD_IMAGE = \"Upload Image\";\r\nexport const OPENLINE_DIRECTORY = \"Openline Directory\";\r\nexport const EDIT_PROFILE = \"Edit Profile\";\r\nexport const APPLY_FILTER = \"Apply Filter\";\r\nexport const SELECT_CHART_TYPE = \"Select Chart Type\";\r\nexport const POLL_TOTAL_AUDIENCE = \"Total audience\";\r\nexport const POLL_RESPONSES = \"Response(s)\";\r\nexport const POLL_OPTION_TEXT = \"Poll Option Text\";\r\nexport const COUNT = \"Count\";\r\nexport const PERCENTAGE = \"Percentage\";\r\nexport const CONVERSATION_COUNT = \"Conversation Count\";\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { AM_CC, AM_WEB, IDB, ORG_CC } from \"../../values\";\r\nimport { CHANGE_PASSWORD, EDIT_PROFILE, SIGN_OUT } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    } else if (type === \"idb\") {\r\n      window.location.href = \"/idb/hotlinereports\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser, amIDBUser } = this.props.userRole;\r\n    if (amCCUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"Org CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM WEB\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amIDBUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"IDB\", \"anonymoose\").toString()\r\n      );\r\n    }\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{userType}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">{EDIT_PROFILE}</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_idb_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"idb\")}>\r\n                  {IDB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_idb_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"idb\")}>\r\n                  {IDB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_idb_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"idb\")}>\r\n                  {IDB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amIDBUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amIDBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amIDBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>{CHANGE_PASSWORD}</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>{SIGN_OUT}</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{userType}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    } else if (userType === \"IDB\") {\r\n      page = \"is_idb_user\";\r\n    }\r\n    const password = props.current.includes('\"')\r\n      ? props.current.slice(1, -1)\r\n      : props.current;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log(\"INTERVAL\");\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Anonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, current } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    current,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  MANAGE_EMPLOYEES,\r\n  HOTLINES,\r\n  OPENLINES,\r\n  HELP,\r\n  INFO,\r\n  BROADCAST_MESSAGES,\r\n  POLLS,\r\n} from \"../headings\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"employee\")) {\r\n        defaultKey = \"4\";\r\n      } else if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      } else if (this.props.data.location.pathname.includes(\"poll\")) {\r\n        defaultKey = \"3\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuFoldOutlined: MenuUnfoldOutlined ,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \" d-lg-block w-md-100 sider-width\"\r\n              : \"d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/hotlinedirectory\">{HOTLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/openlinedirectory\">{OPENLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/pollsdirectory\">{POLLS}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/manageemployees\">{MANAGE_EMPLOYEES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {BROADCAST_MESSAGES}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-help\" />\r\n                </span>\r\n              }\r\n            >\r\n              {HELP}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {INFO}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              {INFO}\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport { MANAGE_ORGANIZATIONS } from \"../../headings\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ?MenuFoldOutlined : MenuUnfoldOutlined  ,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-lg-block w-md-100 sider-width\"\r\n              : \" d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/amcc/manageorganizations\">{MANAGE_ORGANIZATIONS}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ShowDetails = (props) => {\r\n  const history = useHistory();\r\n  const path = `/amcc/orgdetails/${props.record.organization_id}`;\r\n\r\n  const showModal = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.orgName ? (\r\n        <a onClick={showModal}>{props.record.name}</a>\r\n      ) : props.orgId ? (\r\n        <a onClick={showModal}>{props.record.identifier}</a>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export const FIRST_NAME = \"First Name\";\r\nexport const LAST_NAME = \"Last Name\";\r\nexport const NAME = \"Name\";\r\nexport const RESPOND = \"Respond\";\r\nexport const EMAIL = \"Email\";\r\nexport const PASSWORD = \"Password\";\r\nexport const DATE = \"Date\";\r\nexport const MOBILE = \"Mobile\";\r\nexport const STATUS = \"Status\";\r\nexport const SELECT_STATUS = \"Select Status\";\r\nexport const SELECT_ROLE = \"Select Role\";\r\nexport const CURRENT_PASSWORD = \"Current Password\";\r\nexport const NEW_PASSWORD = \"New Password\";\r\nexport const CONFIRM_PASSWORD = \"Confirm Password\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const DESCRIPTION = \"Description\";\r\nexport const ACCESS = \"Access\";\r\nexport const ACTIONS = \"Actions\";\r\nexport const ORGANIZATION_NAME = \"Organization Name\";\r\nexport const ORGANIZATION_ID = \"Organization Id\";\r\nexport const HOTLINE_NAME = \"Hotline Name\";\r\nexport const OPENLINE_NAME = \"Openline Name\";\r\nexport const START_DATE = \"Start Date\";\r\nexport const END_DATE = \"End Date\";\r\nexport const SELECT_START_DATE = \"Select Start Date\";\r\nexport const SELECT_END_DATE = \"Select End Date\";\r\nexport const SELECT_START_TIME = \"Select Start Time\";\r\nexport const SELECT_END_TIME = \"Select End Time\";\r\nexport const PERMISSIONS = \"Permissions\";\r\nexport const DISPLAY_RESULTS_AS = \"Display final results as\";\r\nexport const QUESTION_TYPE = \"Question Type\";\r\nexport const QUESTION = \"Question\";\r\nexport const SHOW_RESULTS_POLL = \"Show result to users\";\r\nexport const SEE = \"See\";\r\nexport const PRIVACY_POLICY = \"Privacy Policy\";\r\nexport const RATING_TYPE = \"Rating Type\";\r\nexport const URGENCY_LEVEL_HIGH = \"Urgency Level High\";\r\nexport const URGENCY_LEVEL_LOW = \"Urgency Level Low\";\r\nexport const URGENCY_LEVEL_MEDIUM = \"Urgency Level Medium\";\r\n","export const PASSWORD_CHANGED =\r\n  \"Your password has been changed successfully. Please login again with your new password.\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART1 =\r\n  \"You are about to delete the organization\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART2 =\r\n  \"Deleting organization would delete all records associated with it. Are you sure you want to delete organization\";\r\nexport const DELETE_CONFIRM = \"Are you sure you want to delete\";\r\nexport const ATLEAST_ONE_SEEDED_USER =\r\n  \"There should be at least one seeded user.\";\r\nexport const HOTLINE_UPDATED =\r\n  \"Hotline details have been changed successfully.\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART1 =\r\n  \"Create Hotline entries and assign them to managers,\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const DELETE_CONFIRM_HOTLINE =\r\n  \"Are you sure you want to delete this hotline?\";\r\nexport const DELETE_CONFIRM_OPENLINE =\r\n  \"Are you sure you want to delete this Openline?\";\r\n  export const DELETE_CONFIRM_POLL =\r\n    \"Are you sure you want to delete this Poll?\";\r\nexport const NO_CONVERSATION_INITIATED =\r\n  \"No conversations are initiated for the hotlines assigned to you\";\r\nexport const NO_CONVERSATION_INITIATED_OPENLINE =\r\n  \"No conversations are initiated for the openlines assigned to you\";\r\nexport const LOGIN_PART1 = \"Control Center and Insights Dashboard\";\r\nexport const LOGIN_PART2 = \"Raising Voice Anonymously Made Easy\";\r\nexport const LOGIN_PART3 =\r\n  \"Login to manage AnonyMoose eco-system. This includes employees eligible to use the app and/or components such as Hotlines, Openlines, Polls and Surveys, Broadcast Messages and access to different features of the Insights Dashboard, through set of assignable permissions.\";\r\nexport const CREATE_NEW_ORGANIZATION_TEXT =\r\n  \"Create a new Org Id for your client's organization\";\r\nexport const POLL_DATES_TEXT = \"Select Date and Time to publish the\";\r\nexport const EXTEND_END_DATE_TEXT_PART1 = \"Select Date and Time to \";\r\nexport const EXTEND_END_DATE_TEXT_PART2 = \"extend the\";\r\nexport const EXTEND_END_DATE_TEXT_PART3 =\r\n  \" date has been extended successfully.\";\r\nexport const OOTB_TEXT = \"Out Of The Box (OOTB) Poll\";\r\nexport const CREATE_NEW_POLL_TEXT =\r\n  \"Create polls and publish them for all employees from here\";\r\nexport const ASSIGN_HOTLINE_TEXT_PART1 = \"Assign Permissions for \";\r\nexport const ASSIGN_HOTLINE_TEXT_PART2 =\r\n  \"Reply to Messages, Add Notes, Status & Urgency level\";\r\nexport const OPENLINE_PERMISSION_TEXT_PART1 = \"Employees with permissions to \";\r\nexport const HIT_ENTER_TO_ADD = \"Hit enter to add\";\r\nexport const PRIVACY_POLICY_TEXT_PART1 =\r\n  \"THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART1 =\r\n  \"Create Openline entries and assign them to managers,\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART1 = \"Status of \";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART2 =\r\n  \" has been changed successfully.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART3 =\r\n  \" can't be changed as the end date has been passed.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART4 =\r\n  \" can't be changed as this poll is completed.\";\r\nexport const ABOUT_TO_LOGOUT_TEXT =\r\n  \"You are about to log out. Click Ok to keep yourself logged in.\";\r\nexport const LOGGED_OUT_TEXT = \"You are logged out. Click Ok to log in again.\";\r\nexport const PERMISSION_DENIED =\r\n  \"You don't have access rights! Please contact your administrator.\";\r\nexport const ADD_SEEDED_USER_NOTIFICATION = \" has been added successfully.\";\r\nexport const EDIT_SEEDED_USER_NOTIFICATION_PART1 = \"Details for\";\r\nexport const EDIT_SEEDED_USER_NOTIFICATION_PART2 =\r\n  \" have been changed successfully.\";\r\nexport const DELETE_SEEDED_USER_NOTIFICATION =\r\n  \" has been deleted successfully.\";\r\nexport const EDIT_POLL_NOTIFICATION =\r\n  \"Poll details have been changed successfully.\";\r\nexport const POLL_RESULTS_NOT_AVAILABLE =\r\n  \"Results for this poll are not available at this moment.\";\r\nexport const ADD_EMPLOYEE_TEXT_PART1 =\r\n  \"Please create all employees for your organization who are eligible to use the app. You can either integrate with existing system, import through CSV or add each employee manually.\";\r\nexport const ADD_EMPLOYEE_TEXT_PART2 = \"Integrate with existing system\";\r\nexport const ADD_EMPLOYEE_TEXT_PART3 = \"Import through CSV\";\r\nexport const ADD_EMPLOYEE_TEXT_PART4 = \"Create Manually\";\r\nexport const IMPORT_CSV = \"Import CSV file\";\r\nexport const DOWNLOAD_SAMPLE_FILE = \"Download Sample File\";\r\nexport const DROP_FILES_TO_UPLOAD = \"Drop files to upload or Browse\";\r\nexport const REQUEST_PASSWORD_RESET = \"Request Password Reset Link\";\r\nexport const BACK_TO = \"Back to \";\r\nexport const FORGOT_PASSWORD_TEXT1 =\r\n  \" Enter your registered email address to request a password reset link.\";\r\nexport const RESET_EMAIL_SENT = \"Reset Password email has been sent to \";\r\nexport const PASSWORD_RESET_DONE =\r\n  \"Password has been reset successfully. Please login with your new password\";\r\nexport const HOTLINE_MESSAGES_FROM = \"Hotline messages from \";\r\nexport const TO = \" to \";\r\nexport const HOTLINE_MESSAGES_REPORTING =\r\n  \"Hotline messages from the last 90 days.\";\r\nexport const OPENLINE_MESSAGES_FROM = \"Openline messages from \";\r\nexport const OPENLINE_MESSAGES_REPORTING =\r\n  \"Openline messages from the last 90 days.\";\r\nexport const SELECT_HOTLINE = \"Select hotline\";\r\nexport const SELECT_OPENLINE = \"Select openline\";\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, notification, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport ShowDetails from \"../../containers/ShowDetails\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport moment from \"moment\";\r\nimport {\r\n  ACTIONS,\r\n  END_DATE,\r\n  ORGANIZATION_ID,\r\n  ORGANIZATION_NAME,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { CREATE_ORGANIZATION, ORGANIZATIONS, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      searchBy: \"\",\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations?.forEach((org) => {\r\n      org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.organizations !== nextProps.organizations) {\r\n      nextProps.organizations.forEach((org) => {\r\n        org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.organizations }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        name: record.name,\r\n        identifier: record.identifier,\r\n        organization_id: record.organization_id,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 2 : 1,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description:\r\n            STATUS_CHANGED_NOTIFICATION_PART1 +\r\n            record.name +\r\n            STATUS_CHANGED_NOTIFICATION_PART2,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: ORGANIZATION_NAME,\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgName />,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ORGANIZATION_ID,\r\n        dataIndex: \"\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgId />,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{ORGANIZATIONS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value={CREATE_ORGANIZATION} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    key=\"manageOrg\"\r\n                    rowKey=\"identifier\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","export const REQUIRED_MESSAGE =\r\n  \"Please fill the fields marked with asterisk(*)\";\r\nexport const MAX_CHAR_LIMIT = \"Max Characters limit reached.\";\r\nexport const VALID_EMAIL = \"Please enter a valid email address.\";\r\nexport const VALID_MOBILE = \"Please enter a valid mobile number.\";\r\nexport const VALID_DATE = \"Please select a valid date.\";\r\nexport const OLD_PASSWORD = \"Old Password is wrong.\";\r\nexport const ENTER_CURRENT_PASSWORD = \"Please enter your current password!\";\r\nexport const ENTER_NEW_PASSWORD = \"Please enter your new password!\";\r\nexport const ENTER_PASSWORD = \"Please enter your password\";\r\nexport const PASSWORD_RULES =\r\n  \"Please enter a valid password. It should be atleast 8 characters long with atleast 1 each of Capital letter, small letter, numeric and special character.\";\r\nexport const CONFIRM_YOUR_PASSWORD = \"Please confirm your password!\";\r\nexport const PASSWORD_NOT_MATCH =\r\n  \"The two passwords that you entered do not match!\";\r\nexport const ENTER_DIRECTORY_NAME = \"Please enter directory name\";\r\nexport const UPLOAD_IMAGE_REQUIRED = \"Please upload an image.\";\r\nexport const HOTLINE_ALREADY_EXISTS =\r\n  \"Sorry! This hotline already exists in the system. Please use a different name.\";\r\nexport const ENTER_DESCRIPTION = \"Please enter description\";\r\nexport const SELECT_DATE = \"Please select date\";\r\nexport const SELECT_STATUS = \"Please select status\";\r\nexport const ASSIGN_USERS_HOTLINES = \"Please select user(s).\";\r\nexport const ORGANIZATION_NAME_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different name.\";\r\nexport const ORGANIZATION_ID_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different Id.\";\r\nexport const CREATE_ORGANIZATION_ERROR =\r\n  \"There is some difficulty while creating this organization.\";\r\nexport const STATUS_NOT_CHANGED =\r\n  \"Status can't be changed as the end date has been passed.\";\r\nexport const POLL_ALREADY_EXISTS =\r\n  \"Sorry! This Poll title already exists in the system. Please use a different name.\";\r\nexport const STAR_CHART_TYPE = \"Please select the Chart type as Star\";\r\nexport const PAST_TIME = \"Past Time can not be selected\";\r\nexport const END_TIME = \"End Time can not be lesser than Start Time\";\r\nexport const OPENLINE_ALREADY_EXISTS =\r\n  \"Sorry! This openline already exists in the system. Please use a different name.\";\r\nexport const SELECT_USER_TYPE = \"Please select user type\";\r\nexport const UPLOAD_CSV_FILE = \"Please upload a csv file.\";\r\nexport const RESET_EMAIL_INCORRECT =\r\n  \"This email address is incorrect. Please enter a valid email address.\";\r\nexport const PASSWORD_NOT_RESET =\r\n  \"Password can not be reset at this moment. Please try again\";\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  orgIdCount,\r\n  orgNameCount,\r\n  setOrgNameAlreadyExists,\r\n  setOrgIDAlreadyExists,\r\n  orgIDAlreadyExists,\r\n  orgNameAlreadyExists,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganization/\",\r\n        { organization_name: stepOneOrganizationInfo.organizationName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgNameAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganizationID/\",\r\n        { orgID: stepOneOrganizationInfo.organizationId },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgIDAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      if (\r\n        orgNameAlreadyExists === \"status: false\" &&\r\n        orgIDAlreadyExists === \"status: false\"\r\n      ) {\r\n        showError(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_NAME}\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationName(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                />\r\n                {orgNameAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationName\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationName.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgNameAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_ID}\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationID(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={20}\r\n                />\r\n                {orgIDAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationId\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationId.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgIDAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgIdCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-100\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  DELETE,\r\n  DELETE_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n  NO_TEXT_MODAL,\r\n  OK_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport {\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART1,\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART2,\r\n  ATLEAST_ONE_SEEDED_USER,\r\n  DELETE_CONFIRM,\r\n} from \"../../messages\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.deleteOrg) this.props.handleCancel();\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg && !this.props.data.manageEmp ? (\r\n          <Button onClick={this.showBothModals}>{DELETE}</Button>\r\n        ) : this.props.data.manageEmp ? (\r\n          <a onClick={this.showModal}>{DELETE}</a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleOk}\r\n            centered\r\n            width={700}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={CANCEL_MODAL}\r\n            cancelText={DELETE_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART1}{\" \"}\r\n              <strong>{this.props.org}</strong>.{\" \"}\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART2}{\" \"}\r\n              <strong>{this.props.org}</strong>?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length === 1 ? (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            <p>{ATLEAST_ONE_SEEDED_USER}</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={OK_TEXT_MODAL}\r\n            cancelText={CANCEL_MODAL}\r\n          >\r\n            <p>{DELETE_CONFIRM}</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              {EDIT}\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              {EDIT}\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <a href=\"\">{EDIT}</a>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            data={props}\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal data={props} />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button, notification } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { EMAIL, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { ADD_SEEDED_USER } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n} from \"../../messages\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const data = moment(record.endDate).isValid() ? {\r\n      first_name: record.firstName,\r\n      last_name: record.lastName,\r\n      email: record.email,\r\n      mobile_number: record.mobile,\r\n      status_id: via === \"Active\" ? 2 : 1,\r\n      start_date: record.startDate\r\n        ? moment(record.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: record.endDate\r\n        ? moment(record.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: this.props.orgID,\r\n    } : {\r\n      first_name: record.firstName,\r\n      last_name: record.lastName,\r\n      email: record.email,\r\n      mobile_number: record.mobile,\r\n      status_id: via === \"Active\" ? 2 : 1,\r\n      start_date: record.startDate\r\n        ? moment(record.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: this.props.orgID,\r\n    };\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.firstName +\r\n          STATUS_CHANGED_NOTIFICATION_PART2,\r\n      });\r\n      this.props.statusOnClicked();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile.includes(\"+\") ? mobile : \"+\" + mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: EMAIL,\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status2 === 1 || record.status2 === \"1\" ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"w-100\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() =>\r\n                this.props.fromStepTwo\r\n                  ? this.props.showAddSeededUserForm()\r\n                  : this.props.addSeededUser()\r\n              }\r\n            >\r\n              {ADD_SEEDED_USER}\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n           <Grid\r\n            rowKey=\"unique_identifier\"\r\n            columns={columns}\r\n            data={this.state.data}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport moment from \"moment\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport { DATE, EMAIL, FIRST_NAME, LAST_NAME, STATUS, START_DATE, END_DATE } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, ADD_USER, UPDATE, NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleMobile,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n  fNameCount,\r\n  lNameCount,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n      showPasswordValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.startDate &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.startDate &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    if (stepTwoOrganizationInfo.mobile.length > 10) {\r\n      showMobileValidationError(false);\r\n    } else {\r\n      showMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={FIRST_NAME}\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {fNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={LAST_NAME}\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {lNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validatePassword(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n                {passwordValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid password.\r\n                    It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={EMAIL} value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={4} className=\"gutter-row\">\r\n              <FloatLabel label={START_DATE} value=\"date\">\r\n                <Form.Item\r\n                  className=\"input-control datepicker-wrapper required\"\r\n                >\r\n                  <DatePicker\r\n                    className=\"w-100 \"\r\n                    name=\"startDate\"\r\n                    value={stepTwoOrganizationInfo.startDate}\r\n                    onChange={(date) =>\r\n                      handleStepTwoDatePickerChange(date, \"startDate\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={4} className=\"gutter-row\">\r\n            <FloatLabel label={END_DATE} value=\"date\">\r\n              <Form.Item\r\n                className=\"input-control datepicker-wrapper\"\r\n              >\r\n                <DatePicker\r\n                  className=\"w-100 \"\r\n                  name=\"endDate\"\r\n                  value={stepTwoOrganizationInfo.endDate}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"endDate\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <PhoneInput\r\n                  country={\"us\"}\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={handleMobile}\r\n                  onBlur={validateMobile}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert message={VALID_MOBILE} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                {ADD_USER}\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                {UPDATE}\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            {BACK}\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            {NEXT}\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              {BACK}\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport { CREATE_ORGANIZATION_ERROR, REQUIRED_MESSAGE } from \"../../errors\";\r\nimport {\r\n  ADD_SEEDED_USER,\r\n  BACK,\r\n  CREATE_INVITE,\r\n  OK_TEXT_MODAL,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  loader,\r\n  apiError,\r\n  handleOk,\r\n  handleCancel,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Modal\r\n            visible={apiError}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            centered\r\n            width={500}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            {\" \"}\r\n            <p>{CREATE_ORGANIZATION_ERROR}</p>{\" \"}\r\n          </Modal>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_NAME}\r\n                value={stepOneOrganizationInfo.organizationName}\r\n              >\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_ID}\r\n                value={stepOneOrganizationInfo.organizationId}\r\n              >\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={STATUS}\r\n                value={stepOneOrganizationInfo.status1}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-100\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                      disabled\r\n                    >\r\n                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                      <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label={DATE} value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Col\r\n            span={24}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n            <div>\r\n              {\" \"}\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => addSeededUserFromThirdStep()}\r\n              >\r\n                {ADD_SEEDED_USER}\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <AssignedUsers\r\n                seededUsers={seededUsers}\r\n                handleEditUser={handleEditUser}\r\n                handleDelete={handleDelete}\r\n                fromStepThree\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Form.Item>\r\n            <div className=\"steps-action mt-5\">\r\n              <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n                {CREATE_INVITE}\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Spin>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CREATE_ORGANIZATION,\r\n  ORGANIZATIONS,\r\n  ORGANIZATION_CREATE_STEP3,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: ORGANIZATION_DETAILS,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: SEEDED_USERS_DETAILS,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: ORGANIZATION_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [orgNameAlreadyExists, setOrgNameExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDExists] = useState(\"\");\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    //s2Date: \"\",\r\n    mobile: \"\",\r\n    startDate:\"\",\r\n    endDate:\"\"\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = { ...stepTwoOrganization, userId: userID };\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n        //  password: \"\",\r\n        //s2Date: \"\",\r\n        mobile: \"\",\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      //s2Date: \"\",\r\n      mobile: \"\",\r\n      startDate:\"\",\r\n      endDate:\"\"\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const setOrgNameAlreadyExists = (value) => {\r\n    setOrgNameExists(value);\r\n  };\r\n\r\n  const setOrgIDAlreadyExists = (value) => {\r\n    setOrgIDExists(value);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    if (e.target.id === \"organizationId\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (\r\n      e.target.id === \"organizationName\" &&\r\n      e.target.value.length === 80\r\n    ) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    setLoader(true);\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = value.endDate ? {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n        // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.startDate  \r\n          ? moment(value.startDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.endDate\r\n          ? moment(value.endDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      } : {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n        // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.startDate  \r\n          ? moment(value.startDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_authentication_key_id:1\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"saveOrganization/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/amcc/manageorganizations\";\r\n      })\r\n      .catch((error) => {\r\n        if (error.message.includes(\"500\")) {\r\n          setApiError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>{ORGANIZATIONS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{CREATE_ORGANIZATION}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{CREATE_ORGANIZATION}</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            orgNameCount={orgNameCount}\r\n                            orgIdCount={orgIdCount}\r\n                            setOrgNameAlreadyExists={setOrgNameAlreadyExists}\r\n                            orgNameAlreadyExists={orgNameAlreadyExists}\r\n                            setOrgIDAlreadyExists={setOrgIDAlreadyExists}\r\n                            orgIDAlreadyExists={orgIDAlreadyExists}\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                            handleOk={handleOk}\r\n                            handleCancel={handleCancel}\r\n                            loader={loader}\r\n                            apiError={apiError}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nimport { CREATE_ORGANIZATION, MANAGE_ORGANIZATIONS } from \"../../headings\";\r\nimport { CREATE_NEW_ORGANIZATION_TEXT } from \"../../messages\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_ORGANIZATIONS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_ORGANIZATION_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            {CREATE_ORGANIZATION}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      const orgId = CryptoJS.AES.decrypt(\r\n        orgcc_user.user_data.organization_id,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8);\r\n      return parseInt(orgId);\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n  getPolls(filterStatus, search) {\r\n    if (filterStatus.status_id?.length > 0 && search.length > 0) {\r\n      return axios.get(\r\n        BASE_URL +\r\n          \"poll/?filter=\" +\r\n          JSON.stringify(filterStatus) +\r\n          \"&search=\" +\r\n          search,\r\n        options\r\n      );\r\n    } else if (filterStatus.status_id?.length > 0 && search.length === 0) {\r\n      return axios.get(\r\n        BASE_URL + \"poll/?filter=\" + JSON.stringify(filterStatus),\r\n        options\r\n      );\r\n    } else if (\r\n      (filterStatus.status_id?.length === undefined ||\r\n        filterStatus.status_id?.length === 0) &&\r\n      search.length > 0\r\n    ) {\r\n      return axios.get(BASE_URL + \"poll/?search=\" + search, options);\r\n    } else {\r\n      return axios.get(BASE_URL + \"poll/\", options);\r\n    }\r\n  }\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.manageOrgData === null) {\r\n      setLoader(true);\r\n    } else if (props.manageOrgData !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.manageOrgData]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.manageOrgData !== null &&\r\n    props.manageOrgData.length === 0 ? (\r\n    <CreateOrg />\r\n  ) : (\r\n    <ShowAllOrganizations\r\n      organizations={props.manageOrgData}\r\n      statusOnClicked={statusOnClicked}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { ADD_EMPLOYEE, MANAGE_EMPLOYEES, SEARCH } from \"../../../src/headings\";\r\nimport {\r\n  ACCESS,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  ACTIONS,\r\n} from \"../../labels\";\r\nimport {\r\n  IDB_USER,\r\n  ORG_CC,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n  SUPER_USER,\r\n  APP_USER,\r\n  AM_WEB,\r\n} from \"../../values\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        key: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag = false;\r\n          for (let property in res) {\r\n            if (res[property] === true) {\r\n              if (property === \"am_web\") {\r\n                property = AM_WEB;\r\n                flag = true;\r\n              }\r\n              if (property === \"org_cc_user\") {\r\n                property = ORG_CC;\r\n                flag = true;\r\n              }\r\n              if (property === \"idb_user\") {\r\n                property = IDB_USER;\r\n                flag = true;\r\n              }\r\n              if (property === \"super_user\") {\r\n                property = SUPER_USER;\r\n                flag = true;\r\n              }\r\n              if (property === \"app_user\") {\r\n                if (!flag) {\r\n                  property = APP_USER;\r\n                }\r\n              }\r\n\r\n              if (test.length === 0) {\r\n                test += property;\r\n              } else if (property !== \"app_user\") {\r\n                if (test.includes(\"APP\")) {\r\n                  test = property;\r\n                } else {\r\n                  test += \", \" + property;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status === 1 ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover manageEmp />,\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n      loader: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData, loader: false }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_EMPLOYEES}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/addemployee\">\r\n                        <Buttons value={ADD_EMPLOYEE} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.state.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"unique_identifier\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { VALID_EMAIL, RESET_EMAIL_INCORRECT } from \"../../errors\";\r\nimport { EMAIL } from \"../../labels\";\r\nimport {\r\n  BACK_TO,\r\n  FORGOT_PASSWORD_TEXT1,\r\n  LOGIN_PART1,\r\n  LOGIN_PART2,\r\n  REQUEST_PASSWORD_RESET,\r\n  RESET_EMAIL_SENT,\r\n} from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      error: false,\r\n      emailSent: false,\r\n      incorrectEMail: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  sendEmail = (e) => {\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (this.state.email !== \"\") {\r\n      const data = {\r\n        email: this.state.email,\r\n      };\r\n      this.setState({ error: false, loader: true });\r\n      axios\r\n        .post(BASE_URL + \"request-reset-email/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            this.setState({\r\n              emailSent: true,\r\n              loader: false,\r\n              incorrectEMail: false,\r\n            });\r\n          }\r\n        })\r\n        .catch(() =>\r\n          this.setState({\r\n            emailSent: false,\r\n            loader: false,\r\n            incorrectEMail: true,\r\n          })\r\n        );\r\n    } else {\r\n      this.setState({ error: true, emailSent: false, incorrectEMail: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.emailSent\r\n                ? RESET_EMAIL_SENT + this.state.email\r\n                : null}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{FORGOT_PASSWORD}</h2>\r\n                <p className=\"mt-3 font-weight-bold\">{FORGOT_PASSWORD_TEXT1}</p>\r\n              </Row>\r\n              <Form\r\n                {...layout}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <Spin spinning={this.state.loader} size=\"large\">\r\n                  {this.state.error && (\r\n                    <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  {this.state.incorrectEMail && (\r\n                    <Form.Item>\r\n                      <Alert\r\n                        message={RESET_EMAIL_INCORRECT}\r\n                        type=\"error\"\r\n                      ></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                  <FloatLabel label={EMAIL} value={this.state.email}>\r\n                    <Form.Item name=\"email\" className=\"required\">\r\n                      <Input\r\n                        type=\"Email\"\r\n                        className=\"input-control\"\r\n                        placeholder=\" \"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeUsername}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"primary-btn-lg w-100 mt-4\"\r\n                      onClick={(e) => this.sendEmail()}\r\n                    >\r\n                      {REQUEST_PASSWORD_RESET}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Spin>\r\n                <div className=\"justify-content-center d-flex\">\r\n                  <Button type=\"link\" className=\"link\">\r\n                    <Link to=\"/login\">\r\n                      {\" \"}\r\n                      {BACK_TO} <b className=\"pl-1\">{SIGN_IN}</b>\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Alert, Modal, Spin } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport {\r\n  OK_TEXT_MODAL,\r\n  RESET_PASSWORD,\r\n  SET_NEW_PASSWORD,\r\n} from \"../../headings\";\r\nimport { LOGIN_PART1, LOGIN_PART2 } from \"../../messages\";\r\nimport {\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n  PASSWORD_NOT_RESET,\r\n} from \"../../errors\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CONFIRM_PASSWORD, PASSWORD } from \"../../labels\";\r\nimport { PASSWORD_RESET_DONE } from \"../../messages\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      error: \"false\",\r\n      passwordValidationError: \"\",\r\n      resetDone: false,\r\n      resetFailed: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  onChangePassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeConfirmPassword = (e) => {\r\n    this.setState({\r\n      confirm_password: e.target.value,\r\n    });\r\n  };\r\n\r\n  resetPassword = (e) => {\r\n    const uidb64 = new URLSearchParams(this.props.location.search).get(\r\n      \"uidb64\"\r\n    );\r\n    const token = new URLSearchParams(this.props.location.search).get(\"token\");\r\n    const data = {\r\n      password: this.state.password,\r\n      token: token,\r\n      uidb64: uidb64,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (\r\n      this.state.password === this.state.confirm_password &&\r\n      !this.state.passwordValidationError\r\n    ) {\r\n      this.setState({ loader: true });\r\n      axios\r\n        .put(BASE_URL + \"password-reset-complete/\", data, options)\r\n        .then(() => {\r\n          this.setState({ resetDone: true, resetFailed: false, loader: false });\r\n        })\r\n        .catch(() => {\r\n          this.setState({ resetFailed: true, resetDone: false, loader: false });\r\n          setTimeout(() => {\r\n            this.handleOk();\r\n          }, 5000);\r\n        });\r\n    }\r\n  };\r\n\r\n  validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      this.setState({ passwordValidationError: true });\r\n    } else {\r\n      this.setState({ passwordValidationError: false });\r\n    }\r\n  };\r\n\r\n  handleOk = () => {\r\n    window.location = \"/login\";\r\n  };\r\n\r\n  handleCancel = () => {\r\n    window.location = \"/login\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{RESET_PASSWORD}</h2>\r\n                <p className=\"mt-3 font-weight-bold\">{SET_NEW_PASSWORD}</p>\r\n              </Row>\r\n              <Modal\r\n                visible={this.state.resetDone}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n                centered\r\n                width={350}\r\n                okButtonProps={{\r\n                  children: \"Custom OK\",\r\n                }}\r\n                cancelButtonProps={{ style: { display: \"none\" } }}\r\n                okText={OK_TEXT_MODAL}\r\n              >\r\n                <p>{PASSWORD_RESET_DONE}</p>\r\n              </Modal>\r\n              <Form>\r\n                <Spin spinning={this.state.loader} size=\"large\">\r\n                  {this.state.resetFailed && (\r\n                    <Alert\r\n                      message={PASSWORD_NOT_RESET}\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                  <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                    <Form.Item\r\n                      name=\"newpassword\"\r\n                      className=\"pwd required\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: ENTER_NEW_PASSWORD,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input.Password\r\n                        htmlFor=\"newpassword\"\r\n                        id=\"newPwd\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        onBlur={(e) => this.validatePassword(e)}\r\n                      />\r\n                    </Form.Item>\r\n                    {this.state.passwordValidationError && (\r\n                      <Alert\r\n                        message={PASSWORD_RULES}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </FloatLabel>\r\n\r\n                  <FloatLabel\r\n                    label={CONFIRM_PASSWORD}\r\n                    value={this.state.confirm_password}\r\n                  >\r\n                    <Form.Item\r\n                      name=\"confirmpassword\"\r\n                      className=\"pwd confirpwd required\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: CONFIRM_YOUR_PASSWORD,\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                          validator(_, value) {\r\n                            if (\r\n                              !value ||\r\n                              getFieldValue(\"newpassword\") === value\r\n                            ) {\r\n                              return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject(PASSWORD_NOT_MATCH);\r\n                          },\r\n                        }),\r\n                      ]}\r\n                      dependencies={[\"newpassword\"]}\r\n                      hasFeedback\r\n                    >\r\n                      <Input.Password\r\n                        htmlFor=\"confirmpassword\"\r\n                        id=\"confirmPwd\"\r\n                        value={this.state.confirm_password}\r\n                        onChange={this.onChangeConfirmPassword}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"primary-btn-lg w-100 mt-4\"\r\n                      onClick={(e) => this.resetPassword(e)}\r\n                    >\r\n                      {RESET_PASSWORD}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Spin>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { PRIVACY_POLICY, SEE } from \"../../labels\";\r\nimport { PRIVACY_POLICY_TEXT_PART1 } from \"../../messages\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {SEE}\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          {PRIVACY_POLICY}\r\n        </Button>\r\n        <Modal\r\n          title={PRIVACY_POLICY}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              {PRIVACY_POLICY_TEXT_PART1}\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Spin, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\nimport { LOGIN_PART1, LOGIN_PART2, LOGIN_PART3 } from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\nimport { EMAIL, PASSWORD } from \"../../labels\";\r\nimport { ENTER_PASSWORD, VALID_EMAIL } from \"../../errors\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n      loading: false,\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    let isidb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n      isidb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isidb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_idb_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n    //  const checkSoftDelete = JSON.parse(AppStorage.get(\"user\"));\r\n    //  console.log(\"checkSoftDelete\",checkSoftDelete)\r\n\r\n    //  if(checkSoftDelete.user_data.soft_delete){\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isidb) {\r\n        return <Redirect to=\"/idb/hotlinereports\" />;\r\n      }\r\n    }\r\n    //  }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                {LOGIN_PART3}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              <Spin spinning={this.state.loading} size=\"large\">\r\n                {this.state.error == \"true\" && (\r\n                  <Alert\r\n                    message=\"Invalid Login! Please try again\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n                <Row className=\"mb-4 d-none d-lg-block\">\r\n                  <h2>{SIGN_IN}</h2>\r\n                </Row>\r\n\r\n                <Form\r\n                  className=\"floating-label\"\r\n                  {...layout}\r\n                  onSubmit={this.handleLogin}\r\n                  ref={(c) => {\r\n                    this.form = c;\r\n                  }}\r\n                  name=\"basic\"\r\n                  initialValues={{\r\n                    remember: true,\r\n                  }}\r\n                >\r\n                  <FloatLabel label={EMAIL} value={this.state.email}>\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: VALID_EMAIL,\r\n                          type: \"email\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"Email\"\r\n                        className=\"input-control\"\r\n                        placeholder=\" \"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeUsername}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: ENTER_PASSWORD,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"password\"\r\n                        className=\"input-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <div className=\"forgot-pwd\">\r\n                    <Link to=\"/forgotpassword\"> {FORGOT_PASSWORD}</Link>\r\n                  </div>\r\n\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button\r\n                      disabled={!isEnabled}\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"primary-btn-lg w-100 mt-4\"\r\n                      onClick={() => {\r\n                        this.handleLogin();\r\n                      }}\r\n                    >\r\n                      {SIGN_IN}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </Spin>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  HOTLINE_MESSAGES,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n  HOTLINE_REPORTS,\r\n  OPENLINE_REPORTS,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  HOTLINE_REPORTS,\r\n  MANAGE_ORGANIZATIONS,\r\n  OPENLINE_REPORTS,\r\n} from \"../../headings\";\r\n\r\nclass IdbSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotlinereports\")) {\r\n        defaultKey = \"1\";\r\n      } else if (\r\n        this.props.data.location.pathname.includes(\"openlinereports\")\r\n      ) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuFoldOutlined : MenuUnfoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-lg-block w-md-100 sider-width\"\r\n              : \" d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/idb/hotlinereports\">{HOTLINE_REPORTS}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/idb/openlinereports\">{OPENLINE_REPORTS}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IdbSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, Modal, Alert } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport AmWebSidebar from \"../hotlineMessages/AmWebSidebar\";\r\nimport IdbSidebar from \"../reports/IdbSidebar\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CHANGE_PASSWORD_FOR, OK_TEXT_MODAL, SUBMIT } from \"../../headings\";\r\nimport { PASSWORD_CHANGED } from \"../../messages\";\r\nimport {\r\n  OLD_PASSWORD,\r\n  ENTER_CURRENT_PASSWORD,\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n} from \"../../errors\";\r\nimport { CURRENT_PASSWORD, NEW_PASSWORD, CONFIRM_PASSWORD } from \"../../labels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst ChangePassword = (props) => {\r\n  const type = AppStorage.get(\"userType\");\r\n  const userType = type\r\n    ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n    : \"\";\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n  const [passwordChanged, setPasswordChanged] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    showPasswordValidationError(false);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const userName = user\r\n      ? CryptoJS.AES.decrypt(\r\n          user.user_details.first_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) +\r\n        \" \" +\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.last_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    setUserName(userName);\r\n  }, []);\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (pwd.newPwd === pwd.confirmPwd && !passwordValidationError) {\r\n      axios\r\n        .put(BASE_URL + \"changepassword/\", data, options)\r\n        .then(() => {\r\n          setError(false);\r\n          setPasswordChanged(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n            setError(true);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : userType === \"IDB\" ? (\r\n            <LoggedinHeader amIDBUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : userType === \"IDB\" ? (\r\n                <IdbSidebar />\r\n              ) : null}\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">\r\n                    {CHANGE_PASSWORD_FOR} {userName}\r\n                  </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Modal\r\n                    visible={passwordChanged}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    width={350}\r\n                    okButtonProps={{\r\n                      children: \"Custom OK\",\r\n                    }}\r\n                    cancelButtonProps={{ style: { display: \"none\" } }}\r\n                    okText={OK_TEXT_MODAL}\r\n                  >\r\n                    <p>{PASSWORD_CHANGED}</p>\r\n                  </Modal>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={24} lg={8} className=\"gutter-row\">\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={OLD_PASSWORD}\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <FloatLabel\r\n                                label={CURRENT_PASSWORD}\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: ENTER_CURRENT_PASSWORD,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} lg={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={NEW_PASSWORD}\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: ENTER_NEW_PASSWORD,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                    onBlur={(e) => validatePassword(e)}\r\n                                  />\r\n                                </Form.Item>\r\n                                {passwordValidationError && (\r\n                                  <Alert\r\n                                    message={PASSWORD_RULES}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} lg={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={CONFIRM_PASSWORD}\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: CONFIRM_YOUR_PASSWORD,\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                      validator(_, value) {\r\n                                        if (\r\n                                          !value ||\r\n                                          getFieldValue(\"newpassword\") === value\r\n                                        ) {\r\n                                          return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(\r\n                                          PASSWORD_NOT_MATCH\r\n                                        );\r\n                                      },\r\n                                    }),\r\n                                  ]}\r\n                                  dependencies={[\"newpassword\"]}\r\n                                  hasFeedback\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              {SUBMIT}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ADD_ICON, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          {ADD_ICON}\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title={ADD_ICON}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"1\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={1}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SEXUAL_HARRASMENT}>\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"2\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={2}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={VIOLENCE}>\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"3\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={3}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={RACISM}>\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"4\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={4}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={CYBER_BULLYING}>\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"5\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={5}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={FIGHT}>\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"6\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={6}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={DISCRIMINATION}>\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"7\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={7}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SLAP}>\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport {\r\n  ENTER_DIRECTORY_NAME,\r\n  REQUIRED_MESSAGE,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  ENTER_DESCRIPTION,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n} from \"../../errors\";\r\nimport { DIRECTORY_NAME, DESCRIPTION, DATE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.directoryName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      if (hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0], \"hotlineErrorUpdated\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <FloatLabel\r\n        label={DIRECTORY_NAME}\r\n        value={stepOneHotLineInfo.directoryName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"directoryName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DIRECTORY_NAME },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneHotLineInfo.directoryName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"directoryName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"directoryName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated === \"status: false\" &&\r\n            stepOneHotLineInfo.directoryName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneHotLineInfo.directoryName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={HOTLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneHotLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DESCRIPTION },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            className=\"input-control\"\r\n            value={stepOneHotLineInfo.description}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneHotLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneHotLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneHotLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { FIRST_NAME, LAST_NAME, STATUS, ACCESS, MOBILE } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n          loader: false,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n        render: (Mobile_Number) => {\r\n          return {\r\n            children: Mobile_Number,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return {\r\n            children: <span>{test}</span>,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status === 1 ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <Spin spinning={this.state.loader} size=\"large\">\r\n          <div id=\"no-more-tables\">\r\n            <Table\r\n              rowSelection={rowSelection}\r\n              columns={columns}\r\n              dataSource={this.state.filterData}\r\n              rowKey=\"unique_identifier\"\r\n            />\r\n          </div>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              style={{ margin: \"0 8px\" }}\r\n              onClick={() => this.stepTwoPrev()}\r\n              data-test=\"steptwoPrev\"\r\n            >\r\n              {BACK}\r\n            </Button>\r\n            <Button\r\n              className=\"md\"\r\n              type=\"primary\"\r\n              onClick={() => this.stepTwoNext()}\r\n              data-test=\"steptwoNext\"\r\n            >\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\nimport { SELECT_DATE } from \"../../errors\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { BACK, CREATE } from \"../../headings\";\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id=\"directoryName\"\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CREATE_HOTLINE_DIRECTORY,\r\n  HOTLINE_DIRECTORY,\r\n  CREATE_HOTLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n  HOTLINE_CREATE_STEP1,\r\n  HOTLINE_CREATE_STEP2,\r\n  HOTLINE_CREATE_STEP3,\r\n} from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: HOTLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const setNameValidHandle = (value, name) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>{HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_HOTLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content\">\r\n                        {current == 0 ? (\r\n                          <CreateHotlineStepOne\r\n                            next={next}\r\n                            stepOneHotLineInfo={stepOneHotLine}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            setNameValidHandle={setNameValidHandle}\r\n                            addIcon={addIcon}\r\n                            getIconText={getIconText}\r\n                            hotlineErrorUpdated={hotlineErrorUpdated}\r\n                            data-test=\"CreateHotlineStepOne\"\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateHotlineStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepOneHotLine={stepOneHotLine}\r\n                            stepTwoHotLine={stepTwoHotLine}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateHotlineStepThree\r\n                            prev={prev}\r\n                            createNewHotLine={createHotLine}\r\n                            stepOneHotLine={stepOneHotLine}\r\n                            stepTwoHotLine={stepTwoHotLine}\r\n                            getIconText={getIconText}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, HOTLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  HOTLINE_DIRECTORY_TEXT_PART1,\r\n  HOTLINE_DIRECTORY_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{HOTLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {HOTLINE_DIRECTORY_TEXT_PART1}\r\n                          <br />\r\n                          {HOTLINE_DIRECTORY_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <HotlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DELETE,\r\n  DELETE_HOTLINE,\r\n  NO_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport { DELETE_CONFIRM_HOTLINE } from \"../../messages\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{DELETE}</a>\r\n        <Modal\r\n          title={DELETE_HOTLINE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_HOTLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/edithotline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/edithotline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteHotlineModal\r\n          hotlineId={test.hotline_id}\r\n          hotlineName={test.name}\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    { title: NAME, dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  //const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n      // setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        //value={value}\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\nimport { CANCEL, SHOW, DONE } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getHotlineAssignEmpl/\" + this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedHotLines[index] = {\r\n      ...assignedHotLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedHotLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"getHotlineAssignEmpl/\" + value.hotline_id, options)\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <GridPermission\r\n              data={this.state.assignedHotLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  HOTLINE_NAME,\r\n  END_DATE,\r\n  START_DATE,\r\n  PERMISSIONS,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { HOTLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines?.forEach((hotline) => {\r\n      hotline.start_date = moment(hotline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      hotline.end_date = moment(hotline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.hotlines !== nextProps.hotlines) {\r\n      nextProps.hotlines?.forEach((hotline) => {\r\n        hotline.start_date = moment(hotline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        hotline.end_date = moment(hotline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.hotlines }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        help_text: record.help_text,\r\n        hotline_icon_id: record.hotline_icon_id,\r\n        hotline_id: record.hotline_id,\r\n        name: record.name,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"hotline/\" + data.hotline_id, data, options)\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: HOTLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Hotline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <PermissionModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <HotlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{HOTLINE_DIRECTORY}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create Hotline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.hotlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.hotlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.hotlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.hotlinesdata !== null &&\r\n    props.hotlinesdata.length === 0 ? (\r\n    <HotlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllHotlines\r\n      hotlines={props.hotlinesdata}\r\n      statusOnClicked={statusOnClicked}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React, { useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ASSIGN, CANCEL, DONE, HOTLINE } from \"../../headings\";\r\nimport { ASSIGN_HOTLINE_TEXT_PART2 } from \"../../messages\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        {ASSIGN}\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText={DONE}\r\n        cancelText={CANCEL}\r\n      >\r\n        <div>\r\n          {ASSIGN_HOTLINE_TEXT_PART1}{\" \"}\r\n          <b>{stepOneHotLineValues.directoryName}</b> {HOTLINE}\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          <Row className=\"mt-2 mt-lg-5\">\r\n            <Col span={6}></Col>\r\n            <Col span={14} className=\"small text-center\">\r\n              {ASSIGN_HOTLINE_TEXT_PART2}\r\n            </Col>\r\n          </Row>\r\n          {selectedRow &&\r\n            selectedRow.map((item) => {\r\n              let per = permissions.find((p) => p.user_id === item.user_id);\r\n              return (\r\n                <Row className=\"mt-3 d-flex justify-content-center\">\r\n                  <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                  <Col span={10}>\r\n                    <Checkbox\r\n                      checked={per && per.can_respond === 1 ? true : false}\r\n                      disabled\r\n                      onChange={(e) => handleCheck(item)}\r\n                    ></Checkbox>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","export const highlightText = (data, str) => {\r\n  let highlightedObject = {};\r\n  highlightedObject = data\r\n    .filter(\r\n      (item) =>\r\n        item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.responder_conversation_name\r\n          .toLowerCase()\r\n          .includes(str.toLowerCase()) ||\r\n        item.hotline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.message.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n    .map((item) => {\r\n      let conversation_id = item.conversation_id.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = item.responder_conversation_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = item.hotline_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = item.message.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      return {\r\n        ...item,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: item.hotline_id,\r\n        },\r\n      };\r\n    });\r\n  return highlightedObject;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  FILTER,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n  HOTLINE,\r\n  CANCEL,\r\n  APPLY,\r\n} from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n} from \"../../values\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserallHotlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{HOTLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  ADD_NOTE,\r\n  ADD_TEXT_MODAL,\r\n  CANCEL_MODAL,\r\n  TAKE_NOTE,\r\n} from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state = {\r\n      visible: false,\r\n      noteText: \"\",\r\n    };\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios.post(BASE_URL + \"addNotes/\", data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        this.setState({ noteText: \"\" });\r\n        this.formRef.current.resetFields();\r\n        this.props.getNoteData(res.data.conversation_id);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      noteText: \"\",\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          {TAKE_NOTE}\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title={TAKE_NOTE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n            <Form\r\n              className=\"input-md w-100\"\r\n              name=\"validate-other\"\r\n              ref={this.formRef}\r\n            >\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder={ADD_NOTE}\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { ACTIVITY } from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGH4,\r\n} from \"../../values\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: AUDIT_LOG1 },\r\n  { id: 2, name: AUDIT_LOG2 },\r\n  { id: 3, name: AUDIT_LOG3 },\r\n  { id: 4, name: AUDIT_LOGH4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport { STATUS } from \"../../labels\";\r\nimport {\r\n  LAST_READ,\r\n  URGENCY_LEVEL,\r\n  SEND_MESSAGE_TEXT,\r\n} from \"../../headings\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n          document.getElementsByClassName(\"hotline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if ((e.altKey && e.keyCode === 13) || (e.ctrlKey && e.keyCode === 13)) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message.length > 0) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        hotline_id: conversation.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        attachment_type: \"\",\r\n        latitude: \"\",\r\n        longitude: \"\",\r\n        attachments: [\r\n          {\r\n            name: \"\",\r\n            attach: \"\",\r\n          },\r\n          {\r\n            name: \"\",\r\n            attach: \"\",\r\n          },\r\n        ],\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline_name.includes(\"</mark>\")) {\r\n      conversation.hotline_name = conversation.hotline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline_name = conversation.hotline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline_name = conversation.hotline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-start justify-content-lg-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ? (\r\n                        <Divider plain>{msg.message}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\"Status has been changed to\") ? (\r\n                        <Divider plain>{msg.message}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ||\r\n                      msg.message.includes(\r\n                        \"Status has been changed to\"\r\n                      ) ? null : (\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"outgoing-msg hotline_message mb-3\"\r\n                              : \"incoming-msg hotline_message mb-2\"\r\n                          }\r\n                        >\r\n                          <div\r\n                            className={\r\n                              msg.is_responder_message\r\n                                ? \"sent-msg\"\r\n                                : \"received-msg\"\r\n                            }\r\n                          >\r\n                            <p\r\n                              ellipsis\r\n                              // className=\"w-75 pr-2 mb-1\"\r\n                              dangerouslySetInnerHTML={createMarkup(\r\n                                msg.message\r\n                              )}\r\n                            />\r\n\r\n                            <span className=\"time-date\">\r\n                              {\" \"}\r\n                              {moment(msg.created_on).isSame(moment(), \"day\")\r\n                                ? moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"hh:mm A\")\r\n                                : moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"MM:DD:YY | hh:mm A \")}\r\n                              {msg.is_responder_message &&\r\n                                ` | ${msg.first_name} ${msg.last_name}`}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    name={conversation.conversation_id}\r\n                    placeholder={SEND_MESSAGE_TEXT}\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchHotlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.hotlineFilterData.length > 0 && {\r\n        hotline_id: props.hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchHotlineMessages from \"./SearchHotlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  HOTLINE,\r\n  NO_MESSAGES_FOUND,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\nimport {\r\n  NO_CONVERSATION_SELECETD,\r\n  SELECT_CONVERSATION,\r\n  URGENCY_LEVEL_CHANGED,\r\n  STATUS_CHANGED,\r\n} from \"../../headings\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HoltineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `${URGENCY_LEVEL_CHANGED} ${\r\n        event === 1\r\n          ? URGENCY_LEVEL_LOW\r\n          : event === 2\r\n          ? URGENCY_LEVEL_MEDIUM\r\n          : URGENCY_LEVEL_HIGH\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      attachment_type: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      attachments: [\r\n        {\r\n          name: \"\",\r\n          attach: \"\",\r\n        },\r\n        {\r\n          name: \"\",\r\n          attach: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `${STATUS_CHANGED} ${\r\n        event === 1 ? STATUS_NEW : event === 2 ? STATUS_OPEN : STATUS_CLOSED\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      attachment_type: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      attachments: [\r\n        {\r\n          name: \"\",\r\n          attach: \"\",\r\n        },\r\n        {\r\n          name: \"\",\r\n          attach: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.hotlineFilterData.map((hotline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyHotline\", hotline.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {HOTLINE}: <span>{hotline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchHotlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  hotlineFilterData={props.hotlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.hotline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoHotlines}\r\n                alt=\"No Hotlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoltineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED } from \"../../messages\";\r\n\r\nconst NoHotlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateHotline}\r\n        alt=\"No Hotlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED}</h5>\r\n    {/* <small>Select a hotline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Spin } from \"antd\";\r\nimport { LOADING } from \"../../headings\";\r\n\r\nconst Spinner = (loader) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <Spin size=\"large\" tip={LOADING} spinning={loader}></Spin>\r\n    </Row>\r\n  </Col>\r\n);\r\n\r\nexport default Spinner;\r\n","import * as AppStorage from \"./AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nexport const displayNewConvAtTop = (\r\n  updatedConversations,\r\n  newConvo,\r\n  updatedNewConvo\r\n) => {\r\n  let index = 0;\r\n  // create a replica of updatedConversations\r\n  const dummyArray = updatedConversations;\r\n  // return the index of the new incoming conversation from the list of all conversations.\r\n  updatedConversations.map((value) => {\r\n    if (\r\n      value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n      newConvo?.conversation_id\r\n    ) {\r\n      return (index = updatedConversations.indexOf(value));\r\n    }\r\n  });\r\n  // remove that new conversation from the dummy list temporarily.\r\n  dummyArray.splice(index, 1);\r\n  // push that removed incoming conversation on top of the list.\r\n  const finalConversations = [updatedNewConvo, ...dummyArray];\r\n  return finalConversations;\r\n};\r\n\r\nexport const increaseOverallCount = (\r\n  newConvo,\r\n  conversationsToDisplay,\r\n  selectedConv,\r\n  setUnreadCount\r\n) => {\r\n  const user = JSON.parse(AppStorage.get(\"user\"));\r\n  // return only that new incoming message which comes from a user other than logged in user.\r\n  const newConvFromDiffUser = conversationsToDisplay.filter(\r\n    (filter) =>\r\n      filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id &&\r\n      newConvo.created_by !==\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        ) &&\r\n      newConvo.conversation_id !== selectedConv\r\n  );\r\n  // return the new incoming message irrespective of any user.\r\n  const incomingConversation = conversationsToDisplay.filter(\r\n    (item) =>\r\n      item?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n      newConvo?.conversation_id\r\n  );\r\n  for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n    if (\r\n      incomingConversation[0]?.conversation_id\r\n        .toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvFromDiffUser[item]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") &&\r\n      incomingConversation[0].unread_messages_count === 0\r\n    ) {\r\n      setUnreadCount((unreadCount) => unreadCount + 1);\r\n    }\r\n  }\r\n};\r\n\r\nexport const increaseOverallCountDuringFilters = (\r\n  newState,\r\n  allConversations,\r\n  urgencyFilterData,\r\n  statusFilterData,\r\n  lineFilterData,\r\n  searchString,\r\n  newInitiatedConv,\r\n  setUnreadCount,\r\n  setAllConversations,\r\n  conversation\r\n) => {\r\n  if (\r\n    urgencyFilterData.length > 0 ||\r\n    statusFilterData.length > 0 ||\r\n    lineFilterData.length > 0 ||\r\n    searchString.length > 0\r\n  ) {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = allConversations?.filter(\r\n      (filter) =>\r\n        filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id &&\r\n        newState.created_by !==\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ) &&\r\n        newState?.conversation_id !== conversation.conversation_id\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = allConversations?.filter(\r\n      (item) =>\r\n        item?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newState?.conversation_id\r\n    );\r\n    for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[item]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0]?.unread_messages_count === 0\r\n      ) {\r\n        if (!newInitiatedConv.current) {\r\n          setUnreadCount((unreadCount) => unreadCount + 1);\r\n        }\r\n        const updatedAllConversations = allConversations.map((item) =>\r\n          item.conversation_id === newState?.conversation_id\r\n            ? {\r\n                ...item,\r\n                unread_messages_count: item.unread_messages_count + 1,\r\n              }\r\n            : item\r\n        );\r\n        setAllConversations(updatedAllConversations);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const unSetFilters = (via) => {\r\n  AppStorage.remove(\"urgencyLevels\");\r\n  AppStorage.remove(\"status\");\r\n  if (via === \"hotline\") {\r\n    AppStorage.remove(\"hotline\");\r\n  } else {\r\n    AppStorage.remove(\"openline\");\r\n  }\r\n  AppStorage.remove(\"searchBy\");\r\n  AppStorage.remove(\"ConvID\");\r\n};\r\n\r\nexport const filterSocket = (\r\n  totalFiltersApplied,\r\n  newConvo,\r\n  conversations,\r\n  conversationIds,\r\n  via\r\n) => {\r\n  const hotlineOrOpenlineFilter =\r\n    via === \"hotline\"\r\n      ? totalFiltersApplied.hotline\r\n      : totalFiltersApplied.openline;\r\n  const hotlineOrOpenlineConvoId =\r\n    via === \"hotline\" ? newConvo.hotline_id : newConvo.openline_id;\r\n  const hotlineOrOpenlineConvoName =\r\n    via === \"hotline\" ? newConvo.hotline_name : newConvo.openline_name;\r\n  let totalConversations = [];\r\n  if (\r\n    (totalFiltersApplied.status?.includes(newConvo.status_id.toString()) &&\r\n      totalFiltersApplied.urgency?.includes(\r\n        newConvo.urgency_level_id.toString()\r\n      ) &&\r\n      hotlineOrOpenlineFilter?.includes(hotlineOrOpenlineConvoId.toString()) &&\r\n      totalFiltersApplied.searchBy?.length > 0 &&\r\n      newConvo.conversation_id\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n    newConvo.responder_conversation_name\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n    hotlineOrOpenlineConvoName\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n    newConvo.message\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n  ) {\r\n    let conversation_id = newConvo.conversation_id.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let lineName = hotlineOrOpenlineConvoName.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let itemMessage = newConvo.message.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    const updatedConversation =\r\n      via === \"hotline\"\r\n        ? {\r\n            ...newConvo,\r\n            conversation_id: conversation_id,\r\n            responder_conversation_name: responder_conversation_name,\r\n            message: itemMessage,\r\n            hotline: {\r\n              name: lineName,\r\n              hotline_id: hotlineOrOpenlineConvoId,\r\n            },\r\n          }\r\n        : {\r\n            ...newConvo,\r\n            conversation_id: conversation_id,\r\n            responder_conversation_name: responder_conversation_name,\r\n            message: itemMessage,\r\n            openline: {\r\n              name: lineName,\r\n              openline_id: hotlineOrOpenlineConvoId,\r\n            },\r\n          };\r\n    if (\r\n      !conversationIds.includes(\r\n        updatedConversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      )\r\n    ) {\r\n      totalConversations = [...conversations, updatedConversation];\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n  } else {\r\n    totalConversations = conversations;\r\n  }\r\n  return totalConversations;\r\n};\r\n\r\nexport function setAppliedFilters(\r\n  urgencyLevels,\r\n  status,\r\n  line,\r\n  setUrgencyFilterData,\r\n  setStatusFilterData,\r\n  setLineFilterData,\r\n  via\r\n) {\r\n  setUrgencyFilterData(urgencyLevels);\r\n  setStatusFilterData(status);\r\n  setLineFilterData(line);\r\n  AppStorage.set(\r\n    \"urgencyLevels\",\r\n    Object.values(urgencyLevels)?.map((data) => data.value)\r\n  );\r\n  if (via === \"hotline\") {\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(line)?.map((data) => data.value)\r\n    );\r\n  } else {\r\n    AppStorage.set(\r\n      \"openline\",\r\n      Object.values(line)?.map((data) => data.value)\r\n    );\r\n  }\r\n  AppStorage.set(\r\n    \"status\",\r\n    Object.values(status)?.map((data) => data.value)\r\n  );\r\n}\r\n\r\nexport const createMarkup = (html) => {\r\n  return { __html: html };\r\n};\r\n","import { LeftOutlined } from \"@ant-design/icons\";\r\nimport { Form, Layout, Row } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport { HOTLINE_MESSAGES } from \"../../headings\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL, WEBSOCKET_HOTLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport \"./hotlineMessages.scss\";\r\nimport HoltineMessagesLeftSection from \"./HotlineMessagesLeftSection\";\r\nimport NoHotlineMessages from \"./NoHotlineMessages\";\r\nimport Spinner from \"./Spinner\";\r\nimport {\r\n  displayNewConvAtTop,\r\n  increaseOverallCount,\r\n  increaseOverallCountDuringFilters,\r\n  unSetFilters,\r\n  filterSocket,\r\n  setAppliedFilters,\r\n  createMarkup,\r\n} from \"../../utils/MessagesUtil\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const [showBack, setshowBack] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    // remove filters when component loads.\r\n    unSetFilters(\"hotline\");\r\n    return () => {\r\n      webSocket.current.close();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n    increaseOverallCountDuringFilters(\r\n      newState,\r\n      mergedConversations,\r\n      urgencyFilterData,\r\n      statusFilterData,\r\n      hotlineFilterData,\r\n      searchString,\r\n      newInitiatedConv,\r\n      setUnreadCount,\r\n      setAllConversations,\r\n      conversation\r\n    );\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_HOTLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n      if (newConvo.message.includes(\"Urgency Level has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const urgency =\r\n          lastWord.trim() === \"Low\" ? 1 : lastWord.trim() === \"Medium\" ? 2 : 3;\r\n        setUrgencyLevel(urgency);\r\n      } else if (newConvo.message.includes(\"Status has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const status =\r\n          lastWord.trim() === \"New\" ? 1 : lastWord.trim() === \"Open\" ? 2 : 3;\r\n        setStatus(status);\r\n      }\r\n    };\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        // return those conversations which have matched filters or search.\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds,\r\n            \"hotline\"\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n          increaseOverallCount(\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            selectedConv,\r\n            setUnreadCount\r\n          );\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          // append the new incoming conversation at the top of the existing list of conversations.\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    // set state values of applied filters.\r\n    setAppliedFilters(\r\n      selectedUrgency,\r\n      selectedStatus,\r\n      selectedHotline,\r\n      setUrgencyFilterData,\r\n      setStatusFilterData,\r\n      setHotlineFilterData,\r\n      \"hotline\"\r\n    );\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   hotline_id:\r\n    //     allAppliedFilters.hotline_id && allAppliedFilters.hotline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n    setshowBack(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n      setshowBack(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  {showBack ? (\r\n                    <span>\r\n                      <LeftOutlined\r\n                        className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                        title=\"Back to Messages\"\r\n                        onClick={() => onBackClick()}\r\n                      />\r\n                    </span>\r\n                  ) : null}\r\n                  {HOTLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Spinner loader={loader} />\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <HoltineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoHotlines={NoHotlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  hotlineFilterData={hotlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoHotlineMessages CreateHotline={CreateHotline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  HOTLINE_MESSAGES,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n  HOTLINE_REPORTS,\r\n  OPENLINE_REPORTS,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","export const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.openline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let openlineName = item.openline_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          openline: {\r\n            name: openlineName,\r\n            openline_id: item.openline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport {\r\n  APPLY,\r\n  CANCEL,\r\n  FILTER,\r\n  OPENLINE,\r\n  OPENLINES,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [openline, setOpenline] = useState([]);\r\n  const [openlinesData, setOpenlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldOpenline, setOldOpenline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldOpenline, setSelectedOldOpenline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedOpenline, setSelectedOpenline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserAllOpenlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.openline.name,\r\n            value: value.openline.openline_id,\r\n          })\r\n        );\r\n        setOpenlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, openline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyOpenline\") {\r\n      const removeOpenline = selectedOpenline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmOpen = openline.filter((ur) => ur !== props.removeFilter.value);\r\n      setOpenline(rmOpen);\r\n      setSelectedOpenline(removeOpenline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const openlineOptions = openlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setOpenline(oldOpenline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedOpenline(selectedOldOpenline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(openline.length > 0 && { openline_id: openline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldOpenline(openline);\r\n    setSelectedOldOpenline(selectedOpenline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedOpenline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleOpenline(checkedValues) {\r\n    let selected = selectedOpenline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(openlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedOpenline(selected);\r\n    setOpenline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedOpenline([]);\r\n      setOpenline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{OPENLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"openline\"\r\n                    options={openlineOptions}\r\n                    value={openline}\r\n                    onChange={handleOpenline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGO4,\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { ACTIONS } from \"../../labels\";\r\nimport { ACTIVITY } from \"../../headings\";\r\n\r\nconst audit_log = [\r\n  { id: 5, name: AUDIT_LOG1 },\r\n  { id: 6, name: AUDIT_LOG2 },\r\n  { id: 7, name: AUDIT_LOG3 },\r\n  { id: 8, name: AUDIT_LOGO4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineConversationActivity/?conversation_id=\" +\r\n          conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.openline_id);\r\n  }\r\n\r\n  getAssigne(openlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getOpenlineAssignEmpl/\" + openlineId, options)\r\n      .then((res) => {\r\n        let listOfAssignedUsers = [];\r\n        res.data.map((value) => {\r\n          const user = value.user.first_name + \" \" + value.user.last_name;\r\n          listOfAssignedUsers.push({ \"Assigned User_name\": user });\r\n          return listOfAssignedUsers;\r\n        });\r\n        this.setState({ assigneEmp: listOfAssignedUsers });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./openlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { LAST_READ, URGENCY_LEVEL } from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getOpenlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"openline_message\")[\r\n          document.getElementsByClassName(\"openline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getOpenlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if ((e.altKey && e.keyCode === 13) || (e.ctrlKey && e.keyCode === 13)) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        openline_id: conversation.openline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        attachment_type: \"\",\r\n        latitude: \"\",\r\n        longitude: \"\",\r\n        attachments: [\r\n          {\r\n            name: \"\",\r\n            attach: \"\",\r\n          },\r\n          {\r\n            name: \"\",\r\n            attach: \"\",\r\n          },\r\n        ],\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveOpenlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.openline_name.includes(\"</mark>\")) {\r\n      conversation.openline_name = conversation.openline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.openline_name = conversation.openline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.openline_name = conversation.openline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.openline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg openline_message mb-3\"\r\n                            : \"incoming-msg openline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            // className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD:YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.first_name} ${msg.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Openline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                openline_id={conversation.openline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchOpenlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.openlineFilterData.length > 0 && {\r\n        openline_id: props.openlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchOpenlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchOpenlineMessages from \"./SearchOpenlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  NO_CONVERSATION_SELECETD,\r\n  NO_MESSAGES_FOUND,\r\n  OPENLINE,\r\n  SELECT_CONVERSATION,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.openlineFilterData.map((openline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\r\n                          \"urgencyOpenline\",\r\n                          openline.value\r\n                        )\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {OPENLINE}: <span>{openline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchOpenlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  openlineFilterData={props.openlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.openline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoOpenlines}\r\n                alt=\"No Openlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED_OPENLINE } from \"../../messages\";\r\n\r\nconst NoOpenlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateOpenline}\r\n        alt=\"No Openlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED_OPENLINE}</h5>\r\n    {/* <small>Select a openline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoOpenlineMessages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Layout, Row, Col, Form, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./openlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport NoOpenlines from \"../../assets/images/no-openlines.svg\";\r\nimport { BASE_URL, WEBSOCKET_OPENLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport CreateOpenline from \"../../assets/images/create-openline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport OpenlineMessagesLeftSection from \"./OpenlineMessagesLeftSection\";\r\nimport NoOpenlineMessages from \"./NoOpenlineMessages\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\nimport { OPENLINE_MESSAGES } from \"../../headings\";\r\nimport {\r\n  displayNewConvAtTop,\r\n  increaseOverallCount,\r\n  increaseOverallCountDuringFilters,\r\n  unSetFilters,\r\n  filterSocket,\r\n  setAppliedFilters,\r\n  createMarkup,\r\n} from \"../../utils/MessagesUtil\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [openlineFilterData, setOpenlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    // remove filters when component loads.\r\n    unSetFilters(\"openline\");\r\n    return () => {\r\n      webSocket.current.close();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n    increaseOverallCountDuringFilters(\r\n      newState,\r\n      mergedConversations,\r\n      urgencyFilterData,\r\n      statusFilterData,\r\n      openlineFilterData,\r\n      searchString,\r\n      newInitiatedConv,\r\n      setUnreadCount,\r\n      setAllConversations,\r\n      conversation\r\n    );\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_OPENLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const openlineState =\r\n          AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let openlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          openline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (openlineState !== null && openlineState?.length > 0) {\r\n          openlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            openline: openlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        // return those conversations which have matched filters or search.\r\n        if (urgencyFilter || statusFilter || openlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds,\r\n            \"openline\"\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.openline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n          increaseOverallCount(\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            selectedConv,\r\n            setUnreadCount\r\n          );\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          openlineFilter &&\r\n          !openlineState.includes(newConvo.openline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          // append the new incoming conversation at the top of the existing list of conversations.\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedOpenline\r\n  ) => {\r\n    // set state values of applied filters.\r\n    setAppliedFilters(\r\n      selectedUrgency,\r\n      selectedStatus,\r\n      selectedOpenline,\r\n      setUrgencyFilterData,\r\n      setStatusFilterData,\r\n      setOpenlineFilterData,\r\n      \"openline\"\r\n    );\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const openlineState =\r\n      AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(openlineState &&\r\n        openlineState.length > 0 && { openline_id: openlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   openline_id:\r\n    //     allAppliedFilters.openline_id && allAppliedFilters.openline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      openlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"openlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  {OPENLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <Spin\r\n                      size=\"large\"\r\n                      tip=\"Loading...\"\r\n                      spinning={loader}\r\n                    ></Spin>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <OpenlineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoOpenlines={NoOpenlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  openlineFilterData={openlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoOpenlineMessages CreateOpenline={CreateOpenline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport IdbSidebar from \"../components/reports/IdbSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\nimport { PERMISSION_DENIED } from \"../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : userType === \"IDB\" ? (\r\n            <LoggedinHeader amIDBUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={this.props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={this.props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : userType === \"IDB\" ? (\r\n                <IdbSidebar />\r\n              ) : null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">{PERMISSION_DENIED}</h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionDenied;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  RESET_INVITE,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_FOR,\r\n  RESET_PASSWORD_LINK,\r\n} from \"../../headings\";\r\nimport { CONFIRM_PASSWORD, NEW_PASSWORD } from \"../../labels\";\r\nimport {ENTER_NEW_PASSWORD, CONFIRM_YOUR_PASSWORD} from \"../../errors\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>{RESET_PASSWORD_LINK}</span>\r\n        </Button>\r\n        <Modal\r\n          title={RESET_PASSWORD}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={RESET_INVITE}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                {RESET_PASSWORD_FOR}{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label={NEW_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {ENTER_NEW_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={CONFIRM_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {CONFIRM_YOUR_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n  Spin,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\nimport { CANCEL_MODAL, EDIT_SEEDED_USER, UPDATE_MODAL } from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  DATE,\r\n  EMAIL,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  START_DATE,\r\n  END_DATE\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst EditSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleEditOk}\r\n      onCancel={props.handleEditCancel}\r\n      centered\r\n      width={900}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={UPDATE_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Spin spinning={props.loader} size=\"large\">\r\n        <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n          <div>{EDIT_SEEDED_USER}</div>\r\n          <br />\r\n          <div className=\"avatar-wrapper pt-2 pb-4\">\r\n            <Avatar>{props.seededUserName.charAt(0)}</Avatar>\r\n            <span className=\"md-name\">{props.seededUserName}</span>\r\n          </div>\r\n          {props.error && (\r\n            <Form.Item>\r\n              <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n            </Form.Item>\r\n          )}\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={FIRST_NAME}\r\n                  value={props.seededUserDetails.firstName}\r\n                >\r\n                  <Form.Item name=\"firstName\" className=\"required\">\r\n                    <Input\r\n                      id=\"firstName\"\r\n                      className=\"input-control\"\r\n                      defaultValue={props.seededUserDetails.firstName}\r\n                      htmlFor=\"firstName\"\r\n                      value={props.seededUserDetails.firstName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.fNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={LAST_NAME}\r\n                  value={props.seededUserDetails.lastName}\r\n                >\r\n                  <Form.Item name=\"lastName\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"lastName\"\r\n                      htmlFor=\"lastName\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.lastName}\r\n                      value={props.seededUserDetails.lastName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.lNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={EMAIL} value={props.seededUserDetails.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"email\"\r\n                      htmlFor=\"email\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.email}\r\n                      value={props.seededUserDetails.email}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      onBlur={(e) => props.validateEmailAddress(e)}\r\n                      autoComplete=\"off\"\r\n                      disabled\r\n                    />\r\n                    {props.emailValidationError && (\r\n                      <Alert\r\n                        message={VALID_EMAIL}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              {/* <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={DATE} value=\"date2\">\r\n                  <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                    <RangePicker\r\n                      className=\"new w-100\"\r\n                      name=\"date2\"\r\n                      className=\"required\"\r\n                      value={props.seededUserDetails.date2}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col> */}\r\n              <Col span={24} md={4} className=\"gutter-row\">\r\n                  <FloatLabel label={START_DATE} value=\"date\">\r\n                    <Form.Item\r\n                      className=\"input-control datepicker-wrapper required\"\r\n                    >\r\n                      <DatePicker\r\n                        className=\"w-100 \"\r\n                        name=\"startDate\"\r\n                        value={props.seededUserDetails.startDate}\r\n                        onChange={(date) =>\r\n                          props.handleSeededUserDatePickerChange(date, \"startDate\")\r\n                        }\r\n                        disabledDate={props.disabledDate}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={4} className=\"gutter-row\">\r\n                <FloatLabel label={END_DATE} value=\"date\">\r\n                  <Form.Item\r\n                    className=\"input-control datepicker-wrapper\"\r\n                  >\r\n                    <DatePicker\r\n                      className=\"w-100 \"\r\n                      name=\"endDate\"\r\n                      value={props.seededUserDetails.endDate}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"endDate\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                <FloatLabel\r\n                  label={MOBILE}\r\n                  value={props.seededUserDetails.mobile}\r\n                >\r\n                  <Form.Item name=\"mobile\" className=\"required\">\r\n                    <PhoneInput\r\n                      country={\"us\"}\r\n                      id=\"mobile\"\r\n                      htmlFor=\"mobile\"\r\n                      defaultValue={props.seededUserDetails.mobile}\r\n                      value={props.seededUserDetails.mobile}\r\n                      onChange={props.handleMobile}\r\n                      onBlur={(e) => props.validateMobile(e)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.mobileValidationError && (\r\n                      <Alert\r\n                        message={VALID_MOBILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={STATUS}\r\n                  value={props.seededUserDetails.status2}\r\n                >\r\n                  <Form.Item className=\"required\" name=\"status2\">\r\n                    <>\r\n                      <Select\r\n                        className=\"input-control w-100 w-lg-50\"\r\n                        value={props.seededUserDetails.status2}\r\n                        htmlFor=\"status2\"\r\n                        className=\"required\"\r\n                        onSelect={(value) =>\r\n                          props.handleSeededUserOnSelect(value, \"status2\")\r\n                        }\r\n                      >\r\n                        <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                        <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                      </Select>\r\n                    </>\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n      <ResetPwdModal\r\n        user={props.seededUserDetails.firstName}\r\n        handleResetPasswordOk={props.handleResetPasswordOk}\r\n        handleResetPasswordCancel={props.handleResetPasswordCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSeededUser;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n  Spin,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { ADD_SEEDED_USER, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  MAX_CHAR_LIMIT,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  EMAIL,\r\n  DATE,\r\n  MOBILE,\r\n  STATUS,\r\n  START_DATE,\r\n  END_DATE\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleAddSeededUser}\r\n      onCancel={props.handleAddSeededUserCancel}\r\n      centered\r\n      width={1200}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={ADD_TEXT_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Spin spinning={props.loader} size=\"large\">\r\n        <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n          {props.error && (\r\n            <Form.Item>\r\n              <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n            </Form.Item>\r\n          )}\r\n          <Col span={24}>\r\n            <div>{ADD_SEEDED_USER}</div>\r\n            <br />\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={FIRST_NAME}\r\n                  value={props.seededUserDetails.firstName}\r\n                >\r\n                  <Form.Item name=\"firstName\" className=\"required\">\r\n                    <Input\r\n                      id=\"firstName\"\r\n                      className=\"input-control\"\r\n                      defaultValue={props.seededUserDetails.firstName}\r\n                      htmlFor=\"firstName\"\r\n                      value={props.seededUserDetails.firstName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.fNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={LAST_NAME}\r\n                  value={props.seededUserDetails.lastName}\r\n                >\r\n                  <Form.Item name=\"lastName\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"lastName\"\r\n                      htmlFor=\"lastName\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.lastName}\r\n                      value={props.seededUserDetails.lastName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.lNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              {/* <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Temporary Password\"\r\n                value={props.seededUserDetails.password}\r\n              >\r\n                <Form.Item name=\"password\" className=\"pwd required\">\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"password\"\r\n                    className=\"required\"\r\n                    id=\"password\"\r\n                    defaultValue={props.seededUserDetails.password}\r\n                    value={props.seededUserDetails.password}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validatePassword(e)}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {props.passwordValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid password.\r\n                      It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col> */}\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={EMAIL} value={props.seededUserDetails.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"email\"\r\n                      htmlFor=\"email\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.email}\r\n                      value={props.seededUserDetails.email}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      onBlur={(e) => props.validateEmailAddress(e)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.emailValidationError && (\r\n                      <Alert\r\n                        message={VALID_EMAIL}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              {/* <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={DATE} value=\"date2\">\r\n                  <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                    <RangePicker\r\n                      className=\"new w-100\"\r\n                      name=\"date2\"\r\n                      className=\"required\"\r\n                      value={props.seededUserDetails.date2}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col> */}\r\n              <Col span={24} md={4} className=\"gutter-row\">\r\n                  <FloatLabel label={START_DATE} value=\"date\">\r\n                    <Form.Item\r\n                      className=\"input-control datepicker-wrapper required\"\r\n                    >\r\n                      <DatePicker\r\n                        className=\"w-100 \"\r\n                        name=\"startDate\"\r\n                        value={props.seededUserDetails.startDate}\r\n                        onChange={(date) =>\r\n                          props.handleSeededUserDatePickerChange(date, \"startDate\")\r\n                        }\r\n                        disabledDate={props.disabledDate}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={4} className=\"gutter-row\">\r\n                <FloatLabel label={END_DATE} value=\"date\">\r\n                  <Form.Item\r\n                    className=\"input-control datepicker-wrapper\"\r\n                  >\r\n                    <DatePicker\r\n                      className=\"w-100 \"\r\n                      name=\"endDate\"\r\n                      value={props.seededUserDetails.endDate}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"endDate\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                <FloatLabel\r\n                  label={MOBILE}\r\n                  value={props.seededUserDetails.mobile}\r\n                >\r\n                  <Form.Item name=\"mobile\" className=\"required\">\r\n                    <PhoneInput\r\n                      country={\"us\"}\r\n                      id=\"mobile\"\r\n                      htmlFor=\"mobile\"\r\n                      value={props.seededUserDetails.mobile}\r\n                      onChange={props.handleMobile}\r\n                      onBlur={props.validateMobile}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.mobileValidationError && (\r\n                      <Alert\r\n                        message={VALID_MOBILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={STATUS}\r\n                  value={props.seededUserDetails.status2}\r\n                >\r\n                  <Form.Item className=\"required\" name=\"status2\">\r\n                    <>\r\n                      <Select\r\n                        className=\"input-control w-100 w-lg-50\"\r\n                        value={props.seededUserDetails.status2}\r\n                        htmlFor=\"status2\"\r\n                        className=\"required\"\r\n                        onSelect={(value) =>\r\n                          props.handleSeededUserOnSelect(value, \"status2\")\r\n                        }\r\n                      >\r\n                        <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                        <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                      </Select>\r\n                    </>\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewSeededUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  ORGANIZATION_DETAILS,\r\n  EDIT_DETAILS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport {\r\n  ADD_SEEDED_USER_NOTIFICATION,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART1,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n  DELETE_SEEDED_USER_NOTIFICATION,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrgDetails = (props) => {\r\n  const history = useHistory();\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    //date2: \"\",\r\n    mobile: \"\",\r\n    startDate:\"\",\r\n    endDate:\"\"\r\n  });\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              startDate : moment(value.start_date, \"YYYY-MM-DD\"),\r\n              endDate :  moment(value.end_date).isValid() && moment(value.end_date, \"YYYY-MM-DD\"), \r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n      setLoader(false);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onFinish = (values) => {};\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.startDate &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            startDate : moment(value.startDate, \"YYYY-MM-DD\"),\r\n            endDate : moment(value.endDate).isValid() && moment(value.endDate, \"YYYY-MM-DD\"),\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const editOrg = () => {\r\n    const path = `/amcc/editorg/${orgID}`;\r\n    history.push(path, \"viaOrgDetails\");\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = seededUserDetails.endDate ? {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.endDate\r\n        ? moment(seededUserDetails.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    } : {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description:\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART1 +\r\n          seededUserName +\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n        placement,\r\n      });\r\n      setLoader(false);\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      //date2: \"\",\r\n      mobile: \"\",\r\n      startDate:\"\",\r\n      endDate:\"\"\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      // password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.endDate\r\n        ? moment(seededUserDetails.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        startDate : moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n        endDate :  moment(newSeededUser.end_date).isValid() && moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.startDate &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        setLoader(true);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              seededUserDetails.firstName + ADD_SEEDED_USER_NOTIFICATION,\r\n            placement,\r\n          });\r\n          setLoader(false);\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: userName + DELETE_SEEDED_USER_NOTIFICATION,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{ORGANIZATION_DETAILS}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"d-flex justify-content-between align-items-center\"\r\n                      >\r\n                        <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n                        <div>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3\"\r\n                            onClick={() => editOrg()}\r\n                          >\r\n                            <span className=\"icon icon-pencil\" />\r\n                            <span className=\"pl-2 d-none d-block-md\">\r\n                              {EDIT_DETAILS}\r\n                            </span>\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                        <Avatar>{organizationDetails.name.charAt(0)}</Avatar>\r\n                        <span className=\"md-name\">\r\n                          {organizationDetails.name}\r\n                        </span>\r\n                      </div>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                        onFinish={onFinish}\r\n                        form={form}\r\n                      >\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_NAME}\r\n                                value={organizationDetails.name}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    htmlFor=\"organization name\"\r\n                                    defaultValue={organizationDetails.name}\r\n                                    value={organizationDetails.name}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_ID}\r\n                                value={organizationDetails.identifier}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"identifier\"\r\n                                    name=\"identifier\"\r\n                                    htmlFor=\"organization name\"\r\n                                    defaultValue={\r\n                                      organizationDetails.identifier\r\n                                    }\r\n                                    value={organizationDetails.identifier}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={organizationDetails.status}\r\n                              >\r\n                                <Form.Item className=\"required\" name=\"status1\">\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-100\"\r\n                                      value={organizationDetails.status}\r\n                                      htmlFor=\"status\"\r\n                                      onSelect={(value) =>\r\n                                        handleOrganizationOnSelect(\r\n                                          value,\r\n                                          \"status\"\r\n                                        )\r\n                                      }\r\n                                      disabled\r\n                                    >\r\n                                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                      <Option value=\"2\">\r\n                                        {STATUS_INACTIVE}\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date1\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date1\"\r\n                                    value={organizationDetails.date1}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <Row className=\"w-100\">\r\n                        <Col span={24} md={12}>\r\n                          <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          md={12}\r\n                          className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                        >\r\n                          <Button\r\n                            className=\"mr-4\"\r\n                            type=\"secondary\"\r\n                            onClick={() => addSeededUser()}\r\n                          >\r\n                            {ADD_SEEDED_USER}\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        {seededUsers.length > 0 ? (\r\n                          <AssignedUsers\r\n                            seededUsers={seededUsers}\r\n                            orgID={parseInt(orgID)}\r\n                            statusOnClicked={statusOnClicked}\r\n                            handleEditUser={handleEditSeededUser}\r\n                            handleDelete={handleDeleteSeededUser}\r\n                            addSeededUser={addSeededUser}\r\n                            viaEdit\r\n                            orgDetails\r\n                            seededUser\r\n                          />\r\n                        ) : (\r\n                          <Col span={24} lg={18}>\r\n                            <Row className=\"justify-content-center\">\r\n                              {NO_SEEDED_USERS}\r\n                            </Row>\r\n                          </Col>\r\n                        )}\r\n                        {editVisible ? (\r\n                          <EditSeededUsers\r\n                            error={modalError}\r\n                            handleEditOk={handleEditOk}\r\n                            handleEditCancel={handleEditCancel}\r\n                            seededUsers={seededUsers}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                            seededUserName={seededUserName}\r\n                            seededUserDetails={seededUserDetails}\r\n                            disabledDate={disabledDate}\r\n                            handleSeededUserOnChange={handleSeededUserOnChange}\r\n                            handleSeededUserDatePickerChange={\r\n                              handleSeededUserDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                            validateEmailAddress={validateEmailAddress}\r\n                            emailValidationError={emailValidationError}\r\n                            validateMobile={validateMobile}\r\n                            mobileValidationError={mobileValidationError}\r\n                            handleResetPasswordOk={handleResetPasswordOk}\r\n                            handleResetPasswordCancel={\r\n                              handleResetPasswordCancel\r\n                            }\r\n                            loader={loader}\r\n                          />\r\n                        ) : showAddSeededUser ? (\r\n                          <AddNewSeededUser\r\n                            error={modalError}\r\n                            handleAddSeededUser={handleAddSeededUser}\r\n                            handleAddSeededUserCancel={\r\n                              handleAddSeededUserCancel\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                            seededUserDetails={seededUserDetails}\r\n                            disabledDate={disabledDate}\r\n                            handleSeededUserOnChange={handleSeededUserOnChange}\r\n                            handleSeededUserDatePickerChange={\r\n                              handleSeededUserDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                            validateEmailAddress={validateEmailAddress}\r\n                            emailValidationError={emailValidationError}\r\n                            validateMobile={validateMobile}\r\n                            mobileValidationError={mobileValidationError}\r\n                            validatePassword={validatePassword}\r\n                            passwordValidationError={passwordValidationError}\r\n                            loader={loader}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrgDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport {\r\n  DELETE,\r\n  EDIT_ORGANIZATION,\r\n  UPDATE,\r\n  CANCEL,\r\n  EDIT_SEEDED_USERS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n} from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport {\r\n  ADD_SEEDED_USER_NOTIFICATION,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART1,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n  DELETE_SEEDED_USER_NOTIFICATION,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [orgNameAlreadyExists, setOrgNameAlreadyExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDAlreadyExists] = useState(\"\");\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [organizationIdentifier, setOrganizationIdentifier] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    //  password: \"\",\r\n    //date2: \"\",\r\n    mobile: \"\",\r\n    startDate:\"\",\r\n    endDate:\"\"\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [orgStatus, setOrgStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      setOrganizationIdentifier(data.organization.identifier);\r\n      setOrgStatus(data.organization.status_id.toString());\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              startDate: moment(value.start_date, \"YYYY-MM-DD\"),\r\n              endDate : moment(value.end_date).isValid() && moment(value.end_date, \"YYYY-MM-DD\"),\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setLoader(false);\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationName) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganization/\",\r\n          { organization_name: organizationDetails.name },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgNameAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgNameAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationIdentifier) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganizationID/\",\r\n          { orgId: organizationDetails.identifier },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgIDAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgIDAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.startDate &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            startDate : moment(value.startDate, \"YYYY-MM-DD\"),\r\n            endDate : moment(value.endDate).isValid() && moment(value.endDate, \"YYYY-MM-DD\")\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleOrganizationOnChange = (e) => {\r\n    if (e.target.id === \"identifier\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (e.target.id === \"name\" && e.target.value.length === 80) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setOrganizationDetails({\r\n      ...organizationDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteClick(false);\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      name: organizationDetails.name,\r\n      identifier: organizationDetails.identifier,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(organizationDetails.status),\r\n    };\r\n    const endDate = moment(organizationDetails.date1[1]).format(\"MM-DD-YYYY\");\r\n    if (organizationDetails.status !== orgStatus) {\r\n      if (new Date() < new Date(endDate)) {\r\n        if (organizationDetails.name && organizationDetails.identifier) {\r\n          if (\r\n            (orgNameAlreadyExists === \"status: false\" ||\r\n              organizationDetails.name === organizationName) &&\r\n            (orgIDAlreadyExists === \"status: false\" ||\r\n              organizationDetails.identifier === organizationIdentifier)\r\n          ) {\r\n            showError(false);\r\n            axios\r\n              .put(BASE_URL + \"saveOrganization/\", data, options)\r\n              .then(() => {\r\n                window.location = \"/amcc/manageorganizations\";\r\n              });\r\n          }\r\n        } else {\r\n          showError(true);\r\n        }\r\n      } else {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: STATUS_NOT_CHANGED,\r\n          placement,\r\n        });\r\n      }\r\n    } else {\r\n      if (organizationDetails.name && organizationDetails.identifier) {\r\n        showError(false);\r\n        setLoader(true);\r\n        axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n          window.location = \"/amcc/manageorganizations\";\r\n        });\r\n      } else {\r\n        showError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = seededUserDetails.endDate ? {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.endDate\r\n        ? moment(seededUserDetails.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    } : {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description:\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART1 +\r\n          seededUserName +\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n        placement,\r\n      });\r\n      setLoader(false);\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    if (props.location.state) {\r\n      const path = `/amcc/orgdetails/${orgID}`;\r\n      history.push(path);\r\n    } else {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      //date2: \"\",\r\n      mobile: \"\",\r\n      startDate:\"\",\r\n      endDate:\"\"\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = seededUserDetails.endDate ? {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.endDate\r\n        ? moment(seededUserDetails.endDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    } : {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.startDate\r\n        ? moment(seededUserDetails.startDate).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        startDate : moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n        endDate : moment(newSeededUser.end_date).isValid() && moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.startDate &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        setLoader(true);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              seededUserDetails.firstName + ADD_SEEDED_USER_NOTIFICATION,\r\n            placement,\r\n          });\r\n          setLoader(false);\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: userName + DELETE_SEEDED_USER_NOTIFICATION,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{EDIT_ORGANIZATION}</h1>\r\n              </Row>\r\n\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"d-flex justify-content-between align-items-center\"\r\n                      >\r\n                        <h6 className=\"py-3 mb-0\">{EDIT_ORGANIZATION}</h6>\r\n                        <div>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3 deleteOrg\"\r\n                            onClick={onDelete}\r\n                          >\r\n                            <span className=\"icon icon-delete\" />\r\n                            <span className=\"d-none d-md-inline-flex deleteOrg\">\r\n                              {DELETE}\r\n                            </span>\r\n                          </Button>\r\n                          {deleteClick ? (\r\n                            <DeleteModal\r\n                              org={organizationName}\r\n                              handleDelete={handleDeleteOrganization}\r\n                              handleCancel={handleCancelDelete}\r\n                              deleteOrg\r\n                            />\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </Col>\r\n                      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                        <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                        <span className=\"md-name\">{organizationName}</span>\r\n                      </div>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        form={form}\r\n                      >\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message={REQUIRED_MESSAGE}\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Organization Name\"\r\n                                value={organizationDetails.name}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    className=\"required\"\r\n                                    defaultValue={organizationDetails.name}\r\n                                    value={organizationDetails.name}\r\n                                    onChange={(e) =>\r\n                                      handleOrganizationOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => CheckOrganizationName(e)}\r\n                                    htmlFor=\"name\"\r\n                                    autoComplete=\"off\"\r\n                                    maxLength={80}\r\n                                  />\r\n                                  {orgNameAlreadyExists === \"status: false\" &&\r\n                                    organizationDetails.name\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    organizationDetails.name.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {orgNameAlreadyExists == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                                {orgNameCount && (\r\n                                  <Form.Item>\r\n                                    <Alert\r\n                                      message={MAX_CHAR_LIMIT}\r\n                                      type=\"error\"\r\n                                    ></Alert>\r\n                                  </Form.Item>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_ID}\r\n                                value={organizationDetails.identifier}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control edit-input\"\r\n                                    name=\"identifier\"\r\n                                    id=\"identifier\"\r\n                                    htmlFor=\"identifier\"\r\n                                    className=\"required\"\r\n                                    defaultValue={\r\n                                      organizationDetails.identifier\r\n                                    }\r\n                                    value={organizationDetails.identifier}\r\n                                    onChange={(e) =>\r\n                                      handleOrganizationOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => CheckOrganizationID(e)}\r\n                                    autoComplete=\"off\"\r\n                                    maxLength={20}\r\n                                  />\r\n                                  {orgIDAlreadyExists === \"status: false\" &&\r\n                                    organizationDetails.identifier\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    organizationDetails.identifier.length >\r\n                                      0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {orgIDAlreadyExists == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                                {orgIdCount && (\r\n                                  <Form.Item>\r\n                                    <Alert\r\n                                      message={MAX_CHAR_LIMIT}\r\n                                      type=\"error\"\r\n                                    ></Alert>\r\n                                  </Form.Item>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={organizationDetails.status}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"status\"\r\n                                >\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-100\"\r\n                                      value={organizationDetails.status}\r\n                                      htmlFor=\"status\"\r\n                                      onSelect={(value) =>\r\n                                        handleOrganizationOnSelect(\r\n                                          value,\r\n                                          \"status\"\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                      <Option value=\"2\">\r\n                                        {STATUS_INACTIVE}\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date1\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date1\"\r\n                                    value={organizationDetails.date1}\r\n                                    onChange={(date) =>\r\n                                      handleOrganizationDatePickerChange(\r\n                                        date,\r\n                                        \"date1\"\r\n                                      )\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Form.Item>\r\n                          <div className=\"steps-action mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onOrgEditSubmit}\r\n                            >\r\n                              {UPDATE}\r\n                            </Button>\r\n                            <Button\r\n                              className=\"ml-4\"\r\n                              type=\"secondary\"\r\n                              onClick={cancelEditing}\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      md={12}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">{EDIT_SEEDED_USERS}</h6>\r\n                    </Col>\r\n                    <Col\r\n                      span={24}\r\n                      md={12}\r\n                      className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                    >\r\n                      <Button\r\n                        className=\"mr-4\"\r\n                        type=\"secondary\"\r\n                        onClick={() => addSeededUser()}\r\n                      >\r\n                        {ADD_SEEDED_USER}\r\n                      </Button>\r\n                    </Col>\r\n                    {seededUsers.length > 0 ? (\r\n                      <AssignedUsers\r\n                        seededUsers={seededUsers}\r\n                        statusOnClicked={statusOnClicked}\r\n                        orgID={parseInt(orgID)}\r\n                        handleEditUser={handleEditSeededUser}\r\n                        handleDelete={handleDeleteSeededUser}\r\n                        addSeededUser={addSeededUser}\r\n                        viaEdit\r\n                        seededUser\r\n                      />\r\n                    ) : (\r\n                      <Col span={24} lg={18}>\r\n                        <Row className=\"justify-content-center\">\r\n                          {NO_SEEDED_USERS}\r\n                        </Row>\r\n                      </Col>\r\n                    )}\r\n                    {editVisible ? (\r\n                      <EditSeededUsers\r\n                        error={modalError}\r\n                        handleEditOk={handleEditOk}\r\n                        handleEditCancel={handleEditCancel}\r\n                        seededUsers={seededUsers}\r\n                        seededUserName={seededUserName}\r\n                        fNameCount={fNameCount}\r\n                        lNameCount={lNameCount}\r\n                        seededUserDetails={seededUserDetails}\r\n                        disabledDate={disabledDate}\r\n                        handleSeededUserOnChange={handleSeededUserOnChange}\r\n                        handleSeededUserDatePickerChange={\r\n                          handleSeededUserDatePickerChange\r\n                        }\r\n                        handleMobile={handleMobile}\r\n                        handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                        validateEmailAddress={validateEmailAddress}\r\n                        emailValidationError={emailValidationError}\r\n                        validateMobile={validateMobile}\r\n                        mobileValidationError={mobileValidationError}\r\n                        handleResetPasswordOk={handleResetPasswordOk}\r\n                        handleResetPasswordCancel={handleResetPasswordCancel}\r\n                        loader={loader}\r\n                      />\r\n                    ) : showAddSeededUser ? (\r\n                      <AddNewSeededUser\r\n                        error={modalError}\r\n                        handleAddSeededUser={handleAddSeededUser}\r\n                        handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                        seededUsers={seededUsers}\r\n                        fNameCount={fNameCount}\r\n                        lNameCount={lNameCount}\r\n                        seededUserDetails={seededUserDetails}\r\n                        disabledDate={disabledDate}\r\n                        handleSeededUserOnChange={handleSeededUserOnChange}\r\n                        handleSeededUserDatePickerChange={\r\n                          handleSeededUserDatePickerChange\r\n                        }\r\n                        handleMobile={handleMobile}\r\n                        handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                        validateEmailAddress={validateEmailAddress}\r\n                        emailValidationError={emailValidationError}\r\n                        validatePassword={validatePassword}\r\n                        passwordValidationError={passwordValidationError}\r\n                        validateMobile={validateMobile}\r\n                        mobileValidationError={mobileValidationError}\r\n                        loader={loader}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n  ENTER_DIRECTORY_NAME,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  SELECT_DATE,\r\n  ENTER_DESCRIPTION,\r\n} from \"../../errors\";\r\nimport { HOTLINE_UPDATED } from \"../../messages\";\r\nimport { CANCEL, EDIT_HOTLINE, UPDATE } from \"../../headings\";\r\nimport {\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = (props) => {\r\n  const [hotLineData, sethotLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    hotline_icon_id: \"\",\r\n    hotline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [hotlineStatus, setHotlineStatus] = useState(\"\");\r\n  const [iconHtml, seticonHtml] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [error, showError] = useState(false);\r\n\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n\r\n  const addIcon = (values, id) => {\r\n    sethotLineData({\r\n      ...hotLineData,\r\n      hotline_icon_id: id,\r\n    });\r\n    seticonHtml(values);\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setIcon = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return '<span class=\"icon icon-sexual-harassment-1 ant-tooltip-open\"></span>';\r\n      case \"2\":\r\n        return '<span class=\"icon icon-violence ant-tooltip-open\"></span>';\r\n      case \"3\":\r\n        return '<span class=\"icon icon-racism ant-tooltip-open\"></span>';\r\n      case \"4\":\r\n        return '<span class=\"icon icon-cyber-bullying ant-tooltip-open\"></span>';\r\n      case \"5\":\r\n        return '<span class=\"icon icon-fight ant-tooltip-open\"></span>';\r\n      case \"6\":\r\n        return '<span class=\"icon icon-discrimination ant-tooltip-open\"></span>';\r\n      case \"7\":\r\n        return '<span class=\"icon icon-slap ant-tooltip-open\"></span>';\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const eDate = moment(location.state.end_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    sethotLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      hotline_icon_id: location.state.hotline_icon_id,\r\n      hotline_id: location.state.hotline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    setHotlineStatus(location.state.status_id.toString());\r\n    const test = setIcon(location.state.hotline_icon_id.toString());\r\n    seticonHtml(test);\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: value });\r\n  };\r\n\r\n  const editHotline = (e) => {\r\n    if (\r\n      hotLineData.name &&\r\n      hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      hotLineData.help_text &&\r\n      hotLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      hotLineData.status_id &&\r\n      hotLineData.hotline_icon_id &&\r\n      hotLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const endDate = moment(hotLineData.start_date[1]).format(\"MM-DD-YYYY\");\r\n      const data = {\r\n        end_date: moment(hotLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: hotLineData.help_text,\r\n        hotline_icon_id: hotLineData.hotline_icon_id,\r\n        hotline_id: hotLineData.hotline_id,\r\n        name: hotLineData.name,\r\n        start_date: moment(hotLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(hotLineData.status_id),\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      if (\r\n        hotlineErrorUpdated == \"status: false\" ||\r\n        hotLineData.name === location.state.name\r\n      ) {\r\n        if (hotlineStatus !== hotLineData.status_id) {\r\n          if (new Date() < new Date(endDate)) {\r\n            saveHotLine(data);\r\n          } else {\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: STATUS_NOT_CHANGED,\r\n              placement,\r\n            });\r\n          }\r\n        } else {\r\n          saveHotLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  const saveHotLine = (data) => {\r\n    const token = authHeader();\r\n    let hotLineId = hotLineData.hotline_id;\r\n    delete hotLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"hotline/\" + hotLineId, data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: HOTLINE_UPDATED,\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkhotline/\",\r\n          { hotline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            sethotlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      sethotlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_HOTLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n\r\n                    <FloatLabel label={DIRECTORY_NAME} value={hotLineData.name}>\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: { ENTER_DIRECTORY_NAME },\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={hotLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckHotlineName(e)}\r\n                          id=\"name\"\r\n                          name=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {hotlineErrorUpdated == \"status: false\" &&\r\n                          hotLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          hotLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {hotlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={HOTLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={hotLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={hotLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            id=\"help_text\"\r\n                            name=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          disabledDate={disabledDate}\r\n                          value={hotLineData.start_date}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: { SELECT_DATE },\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={hotLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={hotLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <AddIcoModal\r\n                          data-test=\"addIconComponent\"\r\n                          addIcon={addIcon}\r\n                        />\r\n                        {getIconText(\r\n                          hotLineData.hotline_icon_id.toString()\r\n                        ) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      hotLineData.hotline_icon_id.toString()\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(\r\n                                      hotLineData.hotline_icon_id.toString()\r\n                                    )}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editHotline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditHotLine;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport { ADD_EMPLOYEE, BACK } from \"../../headings\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport {\r\n  ADD_EMPLOYEE_TEXT_PART1,\r\n  ADD_EMPLOYEE_TEXT_PART2,\r\n  ADD_EMPLOYEE_TEXT_PART3,\r\n  ADD_EMPLOYEE_TEXT_PART4,\r\n} from \"../../messages\";\r\n\r\nconst AddEmployee = (props) => {\r\n  const history = useHistory();\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/manageemployees\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content className=\"w-100\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{ADD_EMPLOYEE}</h1>\r\n                  <div className=\"d-block w-100 pl-3 pl-lg-0 pt-1\">\r\n                    {ADD_EMPLOYEE_TEXT_PART1}\r\n                  </div>\r\n                </Row>\r\n                <div className=\"mid-content mt-0 mt-md-4 no-bg px-3 px-md-0\">\r\n                  <Row>\r\n                    <Col span={24} className=\"mt-5\">\r\n                      <Row\r\n                        className=\"d-flex justify-content-center\"\r\n                        gutter={{ xs: 8, sm: 32, md: 32, lg: 100 }}\r\n                      >\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div\r\n                            className={`d-flex flex-column ${styles.box_bordered}`}\r\n                          >\r\n                            <span\r\n                              className={`icon-integrate ${styles.icon}`}\r\n                            ></span>\r\n                            <div className=\"font-weight-bold text-center\">\r\n                              {ADD_EMPLOYEE_TEXT_PART2}\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <Link to=\"/orgcc/importemployee\">\r\n                            <div\r\n                              className={`d-flex flex-column ${styles.box_bordered}`}\r\n                            >\r\n                              <span\r\n                                className={`icon-csv ${styles.icon}`}\r\n                              ></span>\r\n                              <div className=\"font-weight-bold text-center\">\r\n                                {ADD_EMPLOYEE_TEXT_PART3}\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <Link to=\"/orgcc/createemployee\">\r\n                            <div\r\n                              className={`d-flex flex-column ${styles.box_bordered}`}\r\n                            >\r\n                              <span\r\n                                className={`icon-add-user ${styles.icon}`}\r\n                              ></span>\r\n                              <div className=\"font-weight-bold text-center\">\r\n                                {ADD_EMPLOYEE_TEXT_PART4}\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <Button type=\"primary\" onClick={onCancel}>\r\n                  {BACK}\r\n                </Button>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Upload, message } from \"antd\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport { DROP_FILES_TO_UPLOAD } from \"../../messages\";\r\nconst { Dragger } = Upload;\r\n\r\nconst UploadFiles = (props) => {\r\n  return (  \r\n    <Dragger\r\n      accept=\".csv\"\r\n      name=\"file\"\r\n      fileList={props.file}\r\n      onChange={(value) => props.onChange(value)}\r\n    >\r\n      <p className=\"ant-upload-drag-icon\">\r\n        <span className=\"icon icon-upload\" />\r\n      </p>\r\n      <p className=\"ant-upload-text\">{DROP_FILES_TO_UPLOAD}</p>\r\n    </Dragger>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Breadcrumb, Button, Alert, Spin } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport UploadFiles from \"./UploadFiles\";\r\nimport { ADD_EMPLOYEE, CANCEL, UPLOAD } from \"../../headings\";\r\nimport { IMPORT_CSV, DOWNLOAD_SAMPLE_FILE } from \"../../messages\";\r\nimport { UPLOAD_CSV_FILE } from \"../../errors\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst { Content } = Layout;\r\nconst ImportFiles = (props) => {\r\n  const [error, showError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [uploadMessage, SetUploadMessage] = useState(\"\");\r\n  const [uploaderror, Setuploaderror] = useState(\"\");\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/addemployee\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    let fileList = e.fileList.slice(-1);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setFile(fileList);\r\n  };\r\n\r\n  const onUpload = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": `multipart/form-data`,\r\n      },\r\n    };\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file[0].originFileObj);\r\n      showError(false);\r\n      setLoader(true);\r\n      axios\r\n        .post(BASE_URL + \"uploadCsv/\", formData, options)\r\n        .then(() => {\r\n          window.location = \"/orgcc/manageemployees\";\r\n        })\r\n        .catch((error) => {\r\n          setLoader(false);\r\n          if (error.message.includes(\"400\")) {\r\n            Setuploaderror(true);\r\n            SetUploadMessage(error.response.data);\r\n          }\r\n        });\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content className=\"w-100\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/addemployee\">\r\n                      <Breadcrumb.Item>{ADD_EMPLOYEE}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{IMPORT_CSV}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{IMPORT_CSV} </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    {error && (\r\n                      <Alert\r\n                        message={UPLOAD_CSV_FILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                    {uploaderror && (\r\n                      <Alert\r\n                        message={uploadMessage}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                    <Row className=\"d-flex justify-content-center align-items-center\">\r\n                      <Col span={20} className=\"mt-3 dragdrop\">\r\n                        <UploadFiles onChange={onChange} file={file} />\r\n                      </Col>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"justify-content-center d-flex mt-5\"\r\n                      >\r\n                        <Button\r\n                          type=\"link\"\r\n                          href=\"https://amstagingresources.s3-us-west-1.amazonaws.com/upload-data/Sample_Employees.csv\"\r\n                          className=\"link pl-0\"\r\n                        >\r\n                          <span className=\"icon icon-download-icon\" />\r\n                          {DOWNLOAD_SAMPLE_FILE}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"mt-3 btn-row\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"mr-4 mb-4\"\r\n                        onClick={onUpload}\r\n                      >\r\n                        {UPLOAD}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        className=\"md\"\r\n                        onClick={onCancel}\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Spin>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImportFiles;\r\n","import React from \"react\";\r\nimport { TreeSelect } from \"antd\";\r\n\r\nimport {\r\n    MAKE_APP_USER,\r\n    MAKE_SUPER_USER,\r\n    MAKE_CONTROL_CENTER,\r\n    MAKE_IDB_USER\r\n  } from \"../../values\";\r\n  import { SELECT_ROLE } from \"../../labels\";\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\nconst treeData = [\r\n  {\r\n    title: MAKE_APP_USER,\r\n    value: \"0\",\r\n    key: \"0\",\r\n    disabled:true\r\n  },\r\n  {\r\n    title: MAKE_SUPER_USER,\r\n    value: \"1\",\r\n    key: \"1\",\r\n  },\r\n  {\r\n    title: MAKE_CONTROL_CENTER,\r\n    value: \"2\",\r\n    key: \"2\",\r\n  },\r\n  {\r\n    title: MAKE_IDB_USER,\r\n    value: \"3\",\r\n    key: \"3\",\r\n  }\r\n];\r\n\r\nclass MultiRoleSelection extends React.Component {\r\n  \r\n  render() {\r\n    const tProps = {\r\n      defaultValue:'0',\r\n      treeData,\r\n      onChange: this.props.handleRoleOnSelect,\r\n      treeCheckable: true,\r\n      showCheckedStrategy: SHOW_PARENT,\r\n      placeholder: SELECT_ROLE,\r\n      style: {\r\n        width: \"100%\",\r\n      },\r\n    };\r\n    return <TreeSelect {...tProps} />;\r\n  }\r\n}\r\n\r\nexport default MultiRoleSelection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport \"../form/form.scss\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ADD_EMPLOYEE, SAVE, CANCEL } from \"../../headings\";\r\nimport { ADD_EMPLOYEE_TEXT_PART4 } from \"../../messages\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  SELECT_USER_TYPE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  EMAIL,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  DATE,\r\n  SELECT_ROLE,\r\n  START_DATE,\r\n  END_DATE\r\n} from \"../../labels\";\r\nimport {\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\nimport MultiRoleSelection from './MultiRoleSelection';\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Content } = Layout;\r\nconst { RangePicker } = DatePicker;\r\nconst CreateManually = (props) => {\r\n  const [userDetails, setUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status: \"\",\r\n    email: \"\",\r\n    //date: \"\",\r\n    mobile: \"\",\r\n    empId: \"\",\r\n    department: \"\",\r\n    role: \"\",\r\n    startDate:\"\",\r\n    endDate : \"\"\r\n  });\r\n  const history = useHistory();\r\n  const [error, showError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n\r\n  const handleUserOnChange = (e) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleUserOnSelect = (value, name) => {\r\n    setUserDetails({ ...userDetails, [name]: value });\r\n  };\r\n\r\n  const handleUserDatePickerChange = (date, name) => {\r\n    setUserDetails({ ...userDetails, [name]: date });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (userDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (\r\n      userDetails.firstName &&\r\n      userDetails.lastName &&\r\n      userDetails.email &&\r\n      userDetails.mobile &&\r\n      userDetails.status &&\r\n      //userDetails.role &&\r\n      userDetails.startDate\r\n    ) {\r\n      const data = userDetails.endDate ? {\r\n        first_name: userDetails.firstName,\r\n        last_name: userDetails.lastName,\r\n        email: userDetails.email,\r\n        mobile_number: \"+\" + userDetails.mobile,\r\n        is_org_cc_user: userDetails.role.includes('2') ? 1 : 0,\r\n        is_idb_user: userDetails.role.includes('3') ? 1 : 0,\r\n        is_super_user: userDetails.role.includes('1') ? 1 : 0,\r\n        start_date: userDetails.startDate\r\n          ? moment(userDetails.startDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: userDetails.endDate\r\n          ? moment(userDetails.endDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: parseInt(userDetails.status),\r\n      } : {\r\n        first_name: userDetails.firstName,\r\n        last_name: userDetails.lastName,\r\n        email: userDetails.email,\r\n        mobile_number: \"+\" + userDetails.mobile,\r\n        is_org_cc_user: userDetails.role.includes('2') ? 1 : 0,\r\n        is_idb_user: userDetails.role.includes('3') ? 1 : 0,\r\n        is_super_user: userDetails.role.includes('1') ? 1 : 0,\r\n        start_date: userDetails.startDate\r\n          ? moment(userDetails.startDate).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: parseInt(userDetails.status),\r\n      };\r\n      showError(false);\r\n      setLoader(true);\r\n      axios.post(BASE_URL + \"createUser/\", data, options).then(() => {\r\n        window.location = \"/orgcc/manageemployees\";\r\n      });\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/addemployee\");\r\n  };\r\n\r\n  const handleRoleOnSelect = (value) => {\r\n    setUserDetails({ ...userDetails, role: value });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content className=\"w-100\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/addemployee\">\r\n                      <Breadcrumb.Item>{ADD_EMPLOYEE}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{ADD_EMPLOYEE_TEXT_PART4}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{ADD_EMPLOYEE_TEXT_PART4}</h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <Form className=\"input-md floating-label w-100\" name=\"\">\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message={REQUIRED_MESSAGE}\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={FIRST_NAME}\r\n                                value={userDetails.firstName}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"firstName\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"firstName\"\r\n                                    htmlFor=\"firstName\"\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={LAST_NAME}\r\n                                value={userDetails.lastName}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"lastName\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"lastName\"\r\n                                    htmlFor=\"lastName\"\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={EMAIL}\r\n                                value={userDetails.email}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"email\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    type=\"email\"\r\n                                    className=\"input-control\"\r\n                                    id=\"email\"\r\n                                    htmlFor=\"email\"\r\n                                    value={userDetails.email}\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    onBlur={(e) => validateEmailAddress(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {emailValidationError && (\r\n                                    <Alert\r\n                                      message={VALID_EMAIL}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col\r\n                              span={24}\r\n                              md={8}\r\n                              className=\"gutter-row phone-field\"\r\n                            >\r\n                              <FloatLabel\r\n                                label={MOBILE}\r\n                                value={userDetails.mobile}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"mobile\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <PhoneInput\r\n                                    country=\"us\"\r\n                                    id=\"mobile\"\r\n                                    htmlFor=\"mobile\"\r\n                                    value={userDetails.mobile}\r\n                                    onChange={handleMobile}\r\n                                    onBlur={validateMobile}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {mobileValidationError && (\r\n                                    <Alert\r\n                                      message={VALID_MOBILE}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={userDetails.status}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"status\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_STATUS,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Select\r\n                                    className=\"input-control w-100\"\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleUserOnSelect(value, \"status\")\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            {/* <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date\">\r\n                                <Form.Item\r\n                                  className=\"input-control datepicker-wrapper required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_DATE,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date\"\r\n                                    value={userDetails.date}\r\n                                    onChange={(date) =>\r\n                                      handleUserDatePickerChange(date, \"date\")\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col> */}\r\n                            <Col span={24} md={4} className=\"gutter-row\">\r\n                              <FloatLabel label={START_DATE} value=\"date\">\r\n                                <Form.Item\r\n                                  className=\"input-control datepicker-wrapper required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_DATE,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <DatePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"startDate\"\r\n                                    value={userDetails.startDate}\r\n                                    onChange={(date) =>\r\n                                      handleUserDatePickerChange(date, \"startDate\")\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={4} className=\"gutter-row\">\r\n                              <FloatLabel label={END_DATE} value=\"date\">\r\n                                <Form.Item\r\n                                  className=\"input-control datepicker-wrapper\"\r\n                                >\r\n                                  <DatePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"endDate\"\r\n                                    value={userDetails.endDate}\r\n                                    onChange={(date) =>\r\n                                      handleUserDatePickerChange(date, \"endDate\")\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            {/* <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={SELECT_ROLE}\r\n                                value={userDetails.role}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"role\"\r\n                                >\r\n                                  <Select\r\n                                    className=\"input-control w-100\"\r\n                                    htmlFor=\"role\"\r\n                                    onSelect={(value) =>\r\n                                      handleUserOnSelect(value, \"role\")\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{MAKE_SUPER_USER}</Option>\r\n                                    <Option value=\"2\">{MAKE_ORG_USER}</Option>\r\n                                    <Option value=\"3\">{MAKE_IDB_USER}</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col> */}\r\n\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <MultiRoleSelection\r\n                                handleRoleOnSelect={handleRoleOnSelect}\r\n                              />\r\n                              <DownOutlined className=\"down-arrow-ico\" />\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"mr-4\"\r\n                            onClick={onSubmit}\r\n                          >\r\n                            {SAVE}\r\n                          </Button>\r\n                          <Button type=\"secondary\" onClick={onCancel}>\r\n                            {CANCEL}\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Spin>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateManually;\r\n","import React from \"react\";\r\nimport { Upload, Button, Modal } from \"antd\";\r\nimport { CLOSE_TEXT_MODAL, DOCUMENT_IMAGE } from \"../../headings\";\r\n\r\nconst UploadImage = ({\r\n  file,\r\n  handleStepOneUpload,\r\n  handleBeforeUpload,\r\n  handleOnRemove,\r\n  handlePollImagePreview,\r\n  handleCancel,\r\n  poll,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Upload\r\n        listType=\"picture\"\r\n        fileList={file}\r\n        onChange={(value) => handleStepOneUpload(value, \"pollDocument\")}\r\n        beforeUpload={(value) => handleBeforeUpload(value, \"pollDocument\")}\r\n        onRemove={(value) => handleOnRemove(value, \"pollImageValidation\")}\r\n        onPreview={(value) => handlePollImagePreview(value)}\r\n        className=\"upload-list-inline c-upload\"\r\n        accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n      >\r\n        <Button type=\"link\" className=\"link pl-0\">\r\n          <span className=\"icon icon-upload pr-2\"></span>\r\n          {DOCUMENT_IMAGE}\r\n        </Button>\r\n      </Upload>\r\n      <Modal\r\n        className=\"modal-openline\"\r\n        visible={poll.previewVisible}\r\n        title={poll.previewTitle}\r\n        centered\r\n        onOk={(value) => handleCancel(value)}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{ style: { display: \"none\" } }}\r\n        okText={CLOSE_TEXT_MODAL}\r\n      >\r\n        <img alt=\"image\" style={{ width: \"100%\" }} src={poll.previewImage} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nimport { Tag, Input, Tooltip, Col, Button } from \"antd\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport { ADD_OPTION } from \"../../headings\";\r\n\r\nclass MultiChoice extends Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: \"\",\r\n    editInputIndex: -1,\r\n    editInputValue: \"\",\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter((tag) => tag !== removedTag);\r\n    this.props.setSingleChoiceResponse(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const tagsOption = this.props.pollResponse;\r\n    this.setState({ tags: tagsOption });\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: \"\",\r\n    });\r\n    this.props.setSingleChoiceResponse(tags);\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tags,\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className={`${styles.edit_tag}`}\r\n              key={tag}\r\n              closable={!this.props.disabled}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={(e) => {\r\n                  // if (index ) {\r\n                  this.setState(\r\n                    { editInputIndex: index, editInputValue: tag },\r\n                    () => {\r\n                      this.editInput.focus();\r\n                    }\r\n                  );\r\n                  e.preventDefault();\r\n                  // }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        <Col span={12} className=\"mb-4\">\r\n          <Tag onClick={this.showInput} className={`${styles.add_tag}`}>\r\n            <Button\r\n              type=\"link\"\r\n              className=\"link pl-0\"\r\n              onClick={this.showModal}\r\n              disabled={this.props.disabled}\r\n            >\r\n              <span className=\"icon icon-add-filled\" />\r\n              {ADD_OPTION}\r\n            </Button>\r\n          </Tag>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiChoice;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Row, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport \"date-fns\";\r\nimport { TimePicker } from \"@progress/kendo-react-dateinputs\";\r\nimport {\r\n  PUBLISH_POLL,\r\n  PUBLISH,\r\n  SCHEDULE,\r\n  POLL,\r\n  CANCEL_MODAL,\r\n} from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport { SELECT_END_DATE, SELECT_START_DATE } from \"../../labels\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n      startTime: new Date(),\r\n      endTime: new Date(),\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.props.pollData.pollStartDate ||\r\n      !this.props.pollData.pollEndDate\r\n    ) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return current && current < moment(this.props.pollData.pollStartDate);\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (event) => {\r\n    const startTime = event.target.value;\r\n    this.setState({ startTimeError: false, startTime: startTime });\r\n  };\r\n\r\n  onBlurStartTime = (event) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > this.state.startTime) {\r\n      this.setState({\r\n        startTimeError: true,\r\n        startTime: this.props.pollData.pollStartTime,\r\n      });\r\n    } else {\r\n      this.setState({ startTimeError: false });\r\n      this.props.handlePollStartTimePickerChange(\r\n        this.state.startTime,\r\n        \"pollStartTime\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (event) => {\r\n    const endTime = event.target.value;\r\n    this.setState({ endTimeError: false, endTime: endTime });\r\n  };\r\n\r\n  onBlurEndTime = (event) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > this.state.endTime) {\r\n      this.setState({\r\n        endTimeError: true,\r\n        endTime: this.props.pollData.pollEndTime,\r\n      });\r\n    } else {\r\n      this.setState({ endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(\r\n        this.state.endTime,\r\n        \"pollEndTime\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {\" \"}\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                {POLL}\r\n              </div>\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span=\"24\" lg={12} className=\"gutter-row\">\r\n                      <DatePicker\r\n                        value={this.props.pollData.pollStartDate}\r\n                        disabledDate={this.disabledStartDate}\r\n                        onChange={(date) => this.onChangeStartDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"sDate\"\r\n                        className=\"required mb-3\"\r\n                      />\r\n                      {this.state.startTimeError && (\r\n                        <Alert\r\n                          message={PAST_TIME}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                    </Col>\r\n                    <Col span=\"24\" lg={12}>\r\n                      <TimePicker\r\n                        value={this.state.startTime}\r\n                        onChange={this.onChangeStartTime}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span=\"24\" lg={12} className=\"gutter-row\">\r\n                      <DatePicker\r\n                        value={this.props.pollData.pollEndDate}\r\n                        disabledDate={this.disabledEndDate}\r\n                        onChange={(date) => this.onChangeEndDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"eDate\"\r\n                        className=\"required mb-3\"\r\n                      />\r\n                      {this.state.endTimeError && (\r\n                        <Alert\r\n                          message={PAST_TIME}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                    </Col>\r\n                    <Col span=\"24\" lg={12}>\r\n                      <TimePicker\r\n                        value={this.state.endTime}\r\n                        onChange={this.onChangeEndTime}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import moment from 'moment-timezone';\r\n//#region Formats\r\n\r\nconst formatAsYYYYMMDDHHmmss = date => moment(date, \"MM/DD/YYYY\").format('YYYY-MM-DD[T]HH:mm:ss');\r\nconst formatAsHHmmss = date => moment(date).format('HH:mm:ss');\r\nconst formatAsMMMDDYYYY = date => moment(date).format('MM-DD-YYYY');\r\nconst formatAsHHmm = date => moment(date).format('HH:mm');\r\nconst formatAsYYYYMMDD = date => moment(date).format('YYYY-MM-DD');\r\nconst formatAsDDMMYYYY = date => moment(date).format('DD-MM-YYYY');\r\n\r\n\r\nconst format = date => moment(date).format();\r\nexport default{\r\n    formatAsYYYYMMDDHHmmss,\r\n    formatAsHHmmss,\r\n    formatAsMMMDDYYYY,\r\n    formatAsHHmm,\r\n    formatAsYYYYMMDD,\r\n    formatAsDDMMYYYY,\r\n    format\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  Spin,\r\n  Upload,\r\n  Modal,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DateTimeModal from \"../modal/DateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport { BACK, PREVIEW_POLL, POLLS, CLOSE_TEXT_MODAL } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst PreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  isImage,\r\n  data,\r\n  attachmentName,\r\n  showError,\r\n  error,\r\n}) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollState, setPollState] = useState({\r\n    pollName: poll.pollName,\r\n    pollHelpText: poll.pollHelpText,\r\n    pollDocument: poll.pollDocument,\r\n    showResult: poll.showResult,\r\n    pollChartType: poll.pollChartType,\r\n    pollQuestion: poll.pollQuestion,\r\n    pollQuestionType: poll.pollQuestionType,\r\n    pollRatingResponse: poll.pollRatingResponse,\r\n    pollStartDate: poll.pollStartDate,\r\n    pollEndDate: poll.pollEndDate,\r\n    attachmentName: poll.attachmentName,\r\n    pollStartTime: poll.pollStartTime,\r\n    pollEndTime: poll.pollEndTime,\r\n    pollResponse: poll.pollResponse,\r\n    pollImageValidation: poll.pollImageValidation,\r\n    previewVisible: poll.previewVisible,\r\n    previewImage: poll.previewImage,\r\n    previewTitle: poll.previewTitle,\r\n    pollRatingType: poll.pollRatingType,\r\n  });\r\n\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const handlePollImagePreview = async (file) => {\r\n    if (\r\n      file.name?.includes(\"jpeg\") ||\r\n      file.name?.includes(\"jpg\") ||\r\n      file.name?.includes(\"png\") ||\r\n      file.name?.includes(\"gif\") ||\r\n      file.name?.includes(\"jfif\") ||\r\n      file.name?.includes(\"tiff\")\r\n    ) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n      setPollState({\r\n        ...pollState,\r\n        previewImage: file.url || file.preview,\r\n        previewVisible: true,\r\n        previewTitle:\r\n          file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleCancel = () =>\r\n    setPollState({ ...pollState, previewVisible: false });\r\n\r\n  const onPublish = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    setLoader(true);\r\n    const optionsData = [];\r\n    let data = {};\r\n    poll.pollResponse.map((value) => {\r\n      optionsData.push({ option_text: value });\r\n    });\r\n    if (isImage) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          image:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          image_name: attachmentName,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          document:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          document_name: attachmentName,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    }\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"poll/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{PREVIEW_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    <Col\r\n                      span={24}\r\n                      className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                    >\r\n                      <h6>\r\n                        {poll.pollName}\r\n                        <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                          <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                        </Tooltip>\r\n                      </h6>\r\n                    </Col>\r\n\r\n                    <div className=\"mid-content\">\r\n                      <Row>\r\n                        <Col span={24}>\r\n                          <p className=\"font-weight-md6\">{poll.pollQuestion}</p>\r\n                          <Row className=\"preview-que\" disabled={true}>\r\n                            <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                              {poll.pollQuestionType === \"1\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Radio>{value}</Radio>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"2\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Checkbox>{value}</Checkbox>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"3\" ? (\r\n                                poll.pollRatingType === \"1\" ? (\r\n                                  <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                ) : poll.pollRatingType === \"2\" ? (\r\n                                  <img src={Smiley} alt=\"send message\" />\r\n                                ) : poll.pollRatingType === \"3\" ? (\r\n                                  <img src={Thermometer} alt=\"send message\" />\r\n                                ) : poll.pollRatingType === \"4\" ? (\r\n                                  <img src={Thumb} alt=\"send message\" />\r\n                                ) : poll.pollRatingType === \"5\" ? (\r\n                                  <img src={Steps} alt=\"send message\" />\r\n                                ) : null\r\n                              ) : null}\r\n                            </div>\r\n                          </Row>\r\n                          <Row className=\"mt-2\">\r\n                            <div class=\"ant-upload-list-item\">\r\n                              <div class=\"ant-upload-list-item-info\">\r\n                                <span class=\"ant-upload-span\">\r\n                                  <div class=\"ant-upload-text-icon\">\r\n                                    <PaperClipOutlined />\r\n                                  </div>\r\n                                  <span\r\n                                    class=\"ant-upload-list-item-name\"\r\n                                    title=\"add-user-doc\"\r\n                                  >\r\n                                    <Upload\r\n                                      listType=\"picture\"\r\n                                      fileList={pollState.pollDocument}\r\n                                      onPreview={(value) =>\r\n                                        handlePollImagePreview(value)\r\n                                      }\r\n                                    ></Upload>\r\n                                    <Modal\r\n                                      visible={pollState.previewVisible}\r\n                                      title={pollState.previewTitle}\r\n                                      centered\r\n                                      onOk={(value) => handleCancel(value)}\r\n                                      okButtonProps={{\r\n                                        children: \"Custom OK\",\r\n                                      }}\r\n                                      cancelButtonProps={{\r\n                                        style: { display: \"none\" },\r\n                                      }}\r\n                                      okText={CLOSE_TEXT_MODAL}\r\n                                    >\r\n                                      <img\r\n                                        alt=\"image\"\r\n                                        style={{ width: \"100%\" }}\r\n                                        src={pollState.previewImage}\r\n                                      />\r\n                                    </Modal>\r\n                                  </span>\r\n                                  <span class=\"ant-upload-list-item-card-actions\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"ant-btn\"\r\n                                    ></button>\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 px-3\">\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        type=\"secondary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"mr-4\"\r\n                        onClick={onBackCreatePoll}\r\n                      >\r\n                        {BACK}\r\n                      </Button>\r\n                      <DateTimeModal\r\n                        pollData={poll}\r\n                        handlePollStartDatePickerChange={\r\n                          handlePollStartDatePickerChange\r\n                        }\r\n                        handlePollEndDatePickerChange={\r\n                          handlePollEndDatePickerChange\r\n                        }\r\n                        handlePollStartTimePickerChange={\r\n                          handlePollStartTimePickerChange\r\n                        }\r\n                        handlePollEndTimePickerChange={\r\n                          handlePollEndTimePickerChange\r\n                        }\r\n                        onPublish={onPublish}\r\n                        showError={showError}\r\n                        error={error}\r\n                      />\r\n                    </div>\r\n                  </Spin>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewPoll;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Breadcrumb,\r\n  Alert,\r\n  message,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport PreviewPoll from \"./PreviewPoll\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\n\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  RATING_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  CANCEL,\r\n  CREATE_POLL,\r\n  POLLS,\r\n  POLL_TITLE,\r\n  PREVIEW,\r\n  UPLOAD,\r\n} from \"../../headings\";\r\nimport {\r\n  POLL_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STAR_CHART_TYPE,\r\n} from \"../../errors\";\r\nimport {\r\n  BAR_CHART,\r\n  LADDER,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  SMILEY,\r\n  STARS,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n  THERMOMETER,\r\n  THUMBSUP,\r\n} from \"../../values\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  emptyIcon: <i class=\"far fa-smile\"></i>,\r\n  fullIcon: <i class=\"fa fa-smile\"></i>,\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst CreatePoll = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    attachmentName: \"\",\r\n    pollStartTime: new Date(),\r\n    pollEndTime: new Date(),\r\n    pollResponse: [],\r\n    pollImageValidation: true,\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n    pollRatingType: \"\",\r\n  });\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion &&\r\n      poll.pollResponse.length > 0\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if (poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    if (name === \"pollRatingType\") {\r\n      setPoll({\r\n        ...poll,\r\n        [name]: value,\r\n        [\"pollResponse\"]: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n      });\r\n    } else {\r\n      setPoll({ ...poll, [name]: value });\r\n    }\r\n  };\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (value.file.status === \"removed\") {\r\n      showuploadError(true);\r\n    }\r\n    let fileList = value.fileList.slice(-1);\r\n    checkDoucmentType(value.file.type);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setAttachmentName(value.file.name);\r\n    setPoll({ ...poll, [name]: fileList });\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handlePollImagePreview = async (file) => {\r\n    if (\r\n      file.name?.includes(\"jpeg\") ||\r\n      file.name?.includes(\"jpg\") ||\r\n      file.name?.includes(\"png\") ||\r\n      file.name?.includes(\"gif\") ||\r\n      file.name?.includes(\"jfif\") ||\r\n      file.name?.includes(\"tiff\")\r\n    ) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n      setPoll({\r\n        ...poll,\r\n        previewImage: file.url || file.preview,\r\n        previewVisible: true,\r\n        previewTitle:\r\n          file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setPoll({ ...poll, pollImageValidation: true });\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    let xlsxfileExt = file.name.includes(\".xls\");\r\n    let pptxfileExt = file.name.includes(\".pptx\");\r\n    let docfileExt = file.name.includes(\".doc\");\r\n    let csvfileExt = file.name.includes(\".csv\");\r\n\r\n    const isValidDoc =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\" ||\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    if (!isValidDoc) {\r\n      showuploadError(false);\r\n      message.error(`${file.name} is not a supported format file type.`);\r\n    } else {\r\n      showuploadError(true);\r\n    }\r\n    const isImage =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\";\r\n    const isDocument =\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    const isLt10M = file.size / 1024 / 1024 < 10;\r\n    if (isImage) {\r\n      if (!isLt5M && isImage) {\r\n        showuploadError(false);\r\n        message.error(\"Image must smaller than 5MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n\r\n    if (isDocument) {\r\n      if (!isLt10M && isDocument) {\r\n        showuploadError(false);\r\n        message.error(\"Document must smaller than 10MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n    return (isValidDoc && isLt5M) || isLt10M;\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setpollError(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!previewPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{CREATE_POLL}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                          form={form}\r\n                        >\r\n                          {error && (\r\n                            <Form.Item>\r\n                              <Alert\r\n                                message={REQUIRED_MESSAGE}\r\n                                type=\"error\"\r\n                                showIcon\r\n                              ></Alert>\r\n                            </Form.Item>\r\n                          )}\r\n                          <Col span={24}>\r\n                            <Row>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={POLL_TITLE}\r\n                                  value={poll.pollName}\r\n                                >\r\n                                  <TextArea\r\n                                    showCount\r\n                                    maxLength={50}\r\n                                    htmlFor=\"polltitle\"\r\n                                    value={poll.pollName}\r\n                                    id=\"pollName\"\r\n                                    onChange={(e) => onCreateChange(e)}\r\n                                    onBlur={(e) => isPollNameDuplicate(e)}\r\n                                    autoComplete=\"off\"\r\n                                    className={`required ${styles.sm_textarea}`}\r\n                                  />\r\n\r\n                                  {pollError === \"status: false\" &&\r\n                                    poll.pollName\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    poll.pollName.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {pollError == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={POLL_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={DESCRIPTION}\r\n                                  value={poll.pollHelpText}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollHelpText\"\r\n                                    id=\"pollHelpText\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"helptext\"\r\n                                      id=\"pollHelpText\"\r\n                                      name=\"pollHelpText\"\r\n                                      value={poll.pollHelpText}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row mt-3\">\r\n                                <h6>{UPLOAD}</h6>\r\n                                <Form.Item\r\n                                  name=\"upload\"\r\n                                  className=\"upload-list\"\r\n                                >\r\n                                  <UploadImage\r\n                                    file={poll.pollDocument}\r\n                                    handleStepOneUpload={handleStepOneUpload}\r\n                                    handleBeforeUpload={handleBeforeUpload}\r\n                                    handleOnRemove={handleOnRemove}\r\n                                    handlePollImagePreview={\r\n                                      handlePollImagePreview\r\n                                    }\r\n                                    handleCancel={handleCancel}\r\n                                    poll={poll}\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                          <Col span={24} className=\"gutter-row\">\r\n                            <Row>\r\n                              <Col\r\n                                span={24}\r\n                                md={8}\r\n                                lg={8}\r\n                                xl={6}\r\n                                className=\"mb-3 t-2 mb-y-0\"\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"showresult\"\r\n                                  label={SHOW_RESULTS_POLL}\r\n                                  className=\"mb-0\"\r\n                                >\r\n                                  <Switch\r\n                                    id=\"showResult\"\r\n                                    checked={poll.showResult}\r\n                                    onChange={(checked, e) =>\r\n                                      onChange(checked, e)\r\n                                    }\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                              {poll.showResult ? (\r\n                                <Col span={24} md={10} lg={8}>\r\n                                  <FloatLabel\r\n                                    label={DISPLAY_RESULTS_AS}\r\n                                    value={poll.pollChartType}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required mb-0\"\r\n                                      name=\"result\"\r\n                                    >\r\n                                      <>\r\n                                        <Select\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"result\"\r\n                                          className=\"required\"\r\n                                          value={poll.pollChartType}\r\n                                          onSelect={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollChartType\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <Select.Option value=\"1\">\r\n                                            {PIE_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"3\">\r\n                                            {BAR_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"4\">\r\n                                            {STAR_FORMAT}\r\n                                          </Select.Option>\r\n                                        </Select>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                  {chartError && (\r\n                                    <Form.Item>\r\n                                      <Alert\r\n                                        message={STAR_CHART_TYPE}\r\n                                        type=\"error\"\r\n                                        showIcon\r\n                                      ></Alert>\r\n                                    </Form.Item>\r\n                                  )}\r\n                                </Col>\r\n                              ) : (\r\n                                <Col></Col>\r\n                              )}\r\n                            </Row>\r\n                          </Col>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"mid-content mt-4\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                        >\r\n                          <Col span={24}>\r\n                            <Row className=\"d-block\">\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                                  <Col\r\n                                    span={24}\r\n                                    md={8}\r\n                                    lg={8}\r\n                                    className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                                  >\r\n                                    <FloatLabel\r\n                                      label={QUESTION_TYPE}\r\n                                      value={poll.pollQuestionType}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required mb-0\"\r\n                                        name=\"questiontype\"\r\n                                      >\r\n                                        <>\r\n                                          <Select\r\n                                            className=\"\"\r\n                                            htmlFor=\"questiontype\"\r\n                                            className=\"required\"\r\n                                            id=\"pollQuestionType\"\r\n                                            value={poll.pollQuestionType}\r\n                                            onSelect={(value) =>\r\n                                              handlePollOnSelect(\r\n                                                value,\r\n                                                \"pollQuestionType\"\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <Select.Option\r\n                                              value=\"1\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType === \"4\"\r\n                                              }\r\n                                            >\r\n                                              {SELECT_SINGLE}\r\n                                            </Select.Option>\r\n                                            <Select.Option\r\n                                              value=\"2\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType === \"4\"\r\n                                              }\r\n                                            >\r\n                                              {SELECT_MULTIPLE}\r\n                                            </Select.Option>\r\n                                            <Select.Option\r\n                                              value=\"3\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType !== \"4\"\r\n                                              }\r\n                                            >\r\n                                              {STAR_RATING}\r\n                                            </Select.Option>\r\n                                          </Select>\r\n                                        </>\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n\r\n                                  {poll.pollQuestionType === \"3\" ? (\r\n                                    <Col\r\n                                      span={24}\r\n                                      md={10}\r\n                                      lg={8}\r\n                                      className=\"gutter-row\"\r\n                                    >\r\n                                      <FloatLabel\r\n                                        label={RATING_TYPE}\r\n                                        value={poll.pollRatingType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"ratingtype\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"\"\r\n                                              htmlFor=\"ratingtype\"\r\n                                              className=\"required\"\r\n                                              id=\"pollRatingType\"\r\n                                              value={poll.pollRatingType}\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollRatingType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                {STARS}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"2\">\r\n                                                {SMILEY}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                {THERMOMETER}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                {THUMBSUP}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"5\">\r\n                                                {LADDER}\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                    </Col>\r\n                                  ) : null}\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={QUESTION}\r\n                                  value={poll.pollQuestion}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollQuestion\"\r\n                                    id=\"pollQuestion\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"pollQuestion\"\r\n                                      id=\"pollQuestion\"\r\n                                      name=\"pollQuestion\"\r\n                                      defaultValue={poll.pollQuestion}\r\n                                      value={poll.pollQuestion}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={12} className=\"mt-4\">\r\n                                {poll.pollQuestionType === \"3\" &&\r\n                                poll.pollRatingType ? (\r\n                                  poll.pollRatingType === \"1\" ? (\r\n                                    <ReactStars\r\n                                      {...starsRating}\r\n                                      value={poll.pollRatingResponse}\r\n                                      name=\"pollRatingResponse\"\r\n                                      onChange={(value) =>\r\n                                        handlePollOnSelect(\r\n                                          value,\r\n                                          \"pollRatingResponse\"\r\n                                        )\r\n                                      }\r\n                                      classNames=\"mt-3\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"2\" ? (\r\n                                    <img\r\n                                      className=\"font-size\"\r\n                                      src={Smiley}\r\n                                      alt=\"send message\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"3\" ? (\r\n                                    <img\r\n                                      className=\"font-size\"\r\n                                      src={Thermometer}\r\n                                      alt=\"send message\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"4\" ? (\r\n                                    <img\r\n                                      className=\"font-size\"\r\n                                      src={Thumb}\r\n                                      alt=\"send message\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"5\" ? (\r\n                                    <img\r\n                                      className=\"font-size\"\r\n                                      src={Steps}\r\n                                      alt=\"send message\"\r\n                                    />\r\n                                  ) : null\r\n                                ) : poll.pollQuestionType === \"1\" ? (\r\n                                  <div>\r\n                                    <MultiChoice\r\n                                      setSingleChoiceResponse={\r\n                                        setSingleChoiceResponse\r\n                                      }\r\n                                      pollResponse={poll.pollResponse}\r\n                                    />\r\n                                  </div>\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  <MultiChoice\r\n                                    pollResponse={poll.pollResponse}\r\n                                    setSingleChoiceResponse={\r\n                                      setSingleChoiceResponse\r\n                                    }\r\n                                  />\r\n                                ) : null}\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n\r\n                          <div className=\"mt-5\">\r\n                            \r\n                            <Button\r\n                              type=\"secondary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onCancel}\r\n                              className=\"mr-4\"\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                            <Button\r\n                              type=\"primary\"\r\n                              className=\"md\"\r\n                              onClick={onPreview}\r\n                            >\r\n                              {PREVIEW}\r\n                            </Button>\r\n                          </div>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <PreviewPoll\r\n          poll={poll}\r\n          setPollsDate={setPollsDate}\r\n          backtoEdit={backtoEdit}\r\n          showError={showError}\r\n          isImage={isImage}\r\n          attachmentName={attachmentName}\r\n          data={props}\r\n          error={error}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport \"date-fns\";\r\nimport { TimePicker } from \"@progress/kendo-react-dateinputs\";\r\nimport {\r\n  CANCEL,\r\n  EXTEND_END_DATE,\r\n  EXTEND_TEXT_MODAL,\r\n  POLL,\r\n} from \"../../headings\";\r\nimport {\r\n  EXTEND_END_DATE_TEXT_PART1,\r\n  EXTEND_END_DATE_TEXT_PART2,\r\n} from \"../../messages\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { SELECT_END_DATE, SELECT_END_TIME } from \"../../labels\";\r\nimport { SELECT_DATE, PAST_TIME } from \"../../errors\";\r\n\r\nclass ExtendEndDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      endDate: \"\",\r\n      error: false,\r\n      endTime: new Date(),\r\n      end_time: new Date(),\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { end_date, end_time } = this.props.pollsData;\r\n    const edate = end_date.split(\"/\")[1];\r\n    const emonth = end_date.split(\"/\")[0];\r\n    const eyear = end_date.split(\"/\")[2];\r\n    const formattedEndDate = momentUtil.formatAsDDMMYYYY(end_date);\r\n    this.setState({\r\n      endDate: moment(formattedEndDate, \"DD-MM-YYYY\"),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + end_time),\r\n      end_time: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + end_time),\r\n    });\r\n  }\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.state.endDate ||\r\n      this.state.endDate === null ||\r\n      !this.state.endTime\r\n    ) {\r\n      this.setState({ error: true });\r\n    } else {\r\n      this.setState({ error: false, visible: false });\r\n      let obj = {\r\n        poll_id: this.props.pollsData.poll_id,\r\n        pollName: this.props.pollsData.title,\r\n      };\r\n      this.props.extendPollDate(obj, this.state);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    window.location = \"/orgcc/pollsdirectory\";\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n\r\n  onChangeEndTime = (event) => {\r\n    const endTime = event.target.value;\r\n    const formattedEndDate = momentUtil.formatAsDDMMYYYY(this.state.endDate);\r\n    const edate = formattedEndDate.split(\"-\")[0];\r\n    const emonth = formattedEndDate.split(\"-\")[1];\r\n    const eyear = formattedEndDate.split(\"-\")[2];\r\n    let minutes = endTime.getMinutes();\r\n    let hours = endTime.getHours();\r\n    if (minutes.toString().length === 1) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString() === \"0\") {\r\n      hours = \"00\";\r\n    }\r\n    const extractedTime = hours + \":\" + minutes + \":\" + \"00\";\r\n    const final_endTime = new Date(\r\n      eyear + \"-\" + emonth + \"-\" + edate + \"T\" + extractedTime\r\n    );\r\n    this.setState({ endTimeError: false, endTime: final_endTime });\r\n  };\r\n\r\n  onBlurEndTime = (event) => {\r\n    const currentTime = new Date();\r\n    if (\r\n      currentTime > this.state.endTime &&\r\n      this.state.endTime.getTime() !== this.state.end_time.getTime()\r\n    ) {\r\n      this.setState({\r\n        endTimeError: true,\r\n        endTime: this.state.end_time,\r\n      });\r\n    } else {\r\n      this.setState({ endTimeError: false });\r\n    }\r\n  };\r\n\r\n  disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{EXTEND_END_DATE}</a>\r\n        <Modal\r\n          title={EXTEND_END_DATE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={EXTEND_TEXT_MODAL}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.state.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md font-weight-md6\">\r\n                {EXTEND_END_DATE_TEXT_PART1}{\" \"}\r\n                <span className=\"pr-1\"> {EXTEND_END_DATE_TEXT_PART2}</span>\r\n                {this.props.pollsData.title} {POLL}\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.endDate}\r\n                    disabledDate={this.disabledDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <TimePicker\r\n                    value={this.state.endTime}\r\n                    onChange={this.onChangeEndTime}\r\n                    onBlur={this.onBlurEndTime}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExtendEndDate;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { DELETE, NO_TEXT_MODAL, YES_TEXT_MODAL } from \"../../headings\";\r\nimport { DELETE_CONFIRM_POLL } from \"../../messages\";\r\n\r\nclass DeletePollModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deletePoll();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deletePoll() {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"poll/\" + this.props.pollId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{DELETE}</a>\r\n        <Modal\r\n          title=\"Delete Poll\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_POLL}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeletePollModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport ExtendEndDate from \"../../components/modal/ExtendEndDate\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  EDIT,\r\n  SHOW_FINAL_RESULT,\r\n  SHOW_INTRIM_RESULT,\r\n  VIEW,\r\n} from \"../../headings\";\r\nimport DeletePollModal from \"../modal/DeletePollModal\";\r\n\r\nconst content = (data, extendPollDate) => (\r\n  <div>\r\n    <ul>\r\n      <Link\r\n        to={{ pathname: `/orgcc/duplicatepoll/${data.poll_id}`, state: data }}\r\n      >\r\n        <li>\r\n          <a href={`/orgcc/duplicatepoll/${data.poll_id}`}>Create Duplicate</a>{\" \"}\r\n        </li>{\" \"}\r\n      </Link>\r\n      {data.poll_id != 1 && data.poll_id != 2 ? (\r\n        <Link to={{ pathname: `/orgcc/editpoll/${data.poll_id}`, state: data }}>\r\n          <li>\r\n            <a href={`/orgcc/editpoll/${data.poll_id}`}>\r\n              {data.status_id === 8 || data.status_id === 5 ? VIEW : EDIT}\r\n            </a>{\" \"}\r\n          </li>\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 8 ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">{SHOW_FINAL_RESULT}</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 5 ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">{SHOW_INTRIM_RESULT}</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n\r\n      {(data.status_id === 5 || data.status_id === 4 || data.status_id === 7) &&\r\n      data.poll_id != 1 &&\r\n      data.poll_id != 2 ? (\r\n        <li>\r\n          <ExtendEndDate extendPollDate={extendPollDate} pollsData={data} />\r\n        </li>\r\n      ) : null}\r\n\r\n      {data.poll_id != 1 &&\r\n      data.poll_id != 2 &&\r\n      (data.status_id === 4 || data.status_id === 7) ? (\r\n        <li>\r\n          <DeletePollModal pollId={data.poll_id} />\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data, this.props.extendPollDate)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { TreeSelect } from \"antd\";\r\n\r\nimport {\r\n  COMPLETED,\r\n  SCHEDULED,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\nimport { APPLY_FILTER } from \"../../headings\";\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\nconst treeData = [\r\n  {\r\n    title: STATUS_ACTIVE,\r\n    value: \"5\",\r\n    key: \"1\",\r\n  },\r\n  {\r\n    title: STATUS_INACTIVE,\r\n    value: \"4\",\r\n    key: \"2\",\r\n  },\r\n  {\r\n    title: SCHEDULED,\r\n    value: \"7\",\r\n    key: \"3\",\r\n  },\r\n  {\r\n    title: COMPLETED,\r\n    value: \"8\",\r\n    key: \"4\",\r\n  },\r\n];\r\n\r\nclass MultiSelection extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  onChange = (value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const tProps = {\r\n      treeData,\r\n      onChange: this.props.handlePollStatusOnSelect,\r\n      treeCheckable: true,\r\n      showCheckedStrategy: SHOW_PARENT,\r\n      placeholder: APPLY_FILTER,\r\n      style: {\r\n        width: \"100%\",\r\n      },\r\n    };\r\n    return <TreeSelect {...tProps} />;\r\n  }\r\n}\r\n\r\nexport default MultiSelection;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport {\r\n  AudioOutlined,\r\n  PaperClipOutlined,\r\n  DownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport PollPopover from \"../table/PollPopover\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport MultiSelection from \"./MultiSelection\";\r\nimport { CREATE_POLL, MANAGE_POLLS, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART4,\r\n  EXTEND_END_DATE_TEXT_PART3,\r\n} from \"../../messages\";\r\nimport {\r\n  COMPLETED,\r\n  SCHEDULED,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { polls } = this.props;\r\n    polls?.forEach((poll) => {\r\n      poll.start_date = moment(poll.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM/DD/YYYY\");\r\n      poll.end_date = moment(poll.start_date).isValid()\r\n        ? moment(poll.end_date).utc().local().format(\"MM/DD/YYYY\")\r\n        : \"\";\r\n    });\r\n    this.setState({ data: polls });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.polls !== nextProps.polls) {\r\n      nextProps.polls?.forEach((poll) => {\r\n        poll.start_date = moment(poll.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n        poll.end_date = moment(poll.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.polls });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  extendPollDate = (value, date) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      end_date: momentUtil.formatAsDDMMYYYY(date.endDate),\r\n      end_time: momentUtil.formatAsHHmmss(date.endTime),\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"extendEndDate/\" + value.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: value.pollName + EXTEND_END_DATE_TEXT_PART3,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      });\r\n  };\r\n\r\n  onSearch = (value) => {\r\n    this.props.setSearchValue(value);\r\n  };\r\n\r\n  handlePollStatusOnSelect = (value) => {\r\n    let newArray = value.map((item) => parseInt(item));\r\n    const data = {\r\n      status_id: newArray,\r\n    };\r\n    this.props.setFilterOptions(data);\r\n  };\r\n\r\n  handleCheck = (e) => {\r\n    let data = {};\r\n    if (e.target.checked) {\r\n      data = {\r\n        status_id: [5, 4, 7, 8],\r\n      };\r\n    } else {\r\n      data = {\r\n        status_id: [5, 7],\r\n      };\r\n    }\r\n    this.props.handleCheck(data);\r\n  };\r\n\r\n  statusClicked = (record, via) => {\r\n    let data = {};\r\n    if (via.length === 0) {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.title +\r\n          STATUS_CHANGED_NOTIFICATION_PART4,\r\n      });\r\n    } else if (via === \"Scheduled\" || via === \"Active\") {\r\n      data = {\r\n        status_id: 4,\r\n      };\r\n    } else if (via === \"inActive\") {\r\n      const startDate = record.start_date;\r\n      const sdate = startDate.split(\"/\")[1];\r\n      const smonth = startDate.split(\"/\")[0];\r\n      const syear = startDate.split(\"/\")[2];\r\n      const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n      const currentDate = new Date();\r\n      if (finalStartDate > currentDate) {\r\n        data = {\r\n          status_id: 7,\r\n        };\r\n      } else if (finalStartDate < currentDate) {\r\n        data = {\r\n          status_id: 5,\r\n        };\r\n      } else if (finalStartDate === currentDate) {\r\n        const startTime = record.start_time;\r\n        const SFullDate = smonth + \"-\" + sdate + \"-\" + syear;\r\n        const startTimeWithDate = new Date(SFullDate + startTime);\r\n        if (startTimeWithDate > new Date()) {\r\n          data = {\r\n            status_id: 7,\r\n          };\r\n        } else if (startTimeWithDate <= new Date()) {\r\n          data = {\r\n            status_id: 5,\r\n          };\r\n        }\r\n      }\r\n    }\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"changePollStatus/\" + record.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description:\r\n            STATUS_CHANGED_NOTIFICATION_PART1 +\r\n            record.title +\r\n            STATUS_CHANGED_NOTIFICATION_PART2,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { polls, loader } = this.props;\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.image || record.document ? <PaperClipOutlined /> : null,\r\n            props: {\r\n              \"data-title\": \"\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name, record) => {\r\n          return {\r\n            children:\r\n              record.poll_id != 2 && record.poll_id != 1 ? (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/orgcc/editpoll/${record.poll_id}`,\r\n                    state: record,\r\n                  }}\r\n                >\r\n                  <li>\r\n                    <a href={`/orgcc/editpoll/${record.poll_id}`}>{name}</a>{\" \"}\r\n                  </li>\r\n                </Link>\r\n              ) : (\r\n                name\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.start_date + \" \" + record.start_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.end_date + \" \" + record.end_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.poll_id != 1 && record.poll_id != 2 ? (\r\n                record.status_id === 4 ? (\r\n                  <div\r\n                    className=\"secondary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"inActive\")}\r\n                  >\r\n                    {STATUS_INACTIVE}\r\n                  </div>\r\n                ) : record.status_id === 5 ? (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"Active\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    {STATUS_ACTIVE}\r\n                  </div>\r\n                ) : record.status_id === 7 ? (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"Scheduled\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    {SCHEDULED}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"primary-tag-rounded tag\"\r\n                    onClick={() => this.statusClicked(record, \"\")}\r\n                  >\r\n                    <span className=\"circle mr-1\"></span>\r\n                    {COMPLETED}\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">\r\n                  {\"Sample\"}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: (\r\n              <PollPopover extendPollDate={this.extendPollDate} data={record} />\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_POLLS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          lg={9}\r\n                          className=\"ml-0 ml-lg-4 mt-2 mt-lg-0\"\r\n                        >\r\n                          <MultiSelection\r\n                            handlePollStatusOnSelect={\r\n                              this.handlePollStatusOnSelect\r\n                            }\r\n                          />\r\n                          <DownOutlined className=\"down-arrow-ico\" />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      {/* <CreatePollPopover polls={polls} /> */}\r\n                      <Link to=\"/orgcc/createpoll\">\r\n                        <Buttons value={CREATE_POLL} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={loader} size=\"large\">\r\n                  {/* <Checkbox onChange={(e) => this.handleCheck(e)}>\r\n                    {SHOW_ALL_POLLS}\r\n                  </Checkbox> */}\r\n                  <Grid\r\n                    rowKey=\"poll_id\"\r\n                    columns={columns}\r\n                    data={this.state.data}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllPolls;\r\n","import moment from \"moment\";\r\n\r\nlet getDefaultPoll = [\r\n  {\r\n    title: \"Impact of Microaggressions\",\r\n    help_text: \"Description of what a Harbinger is\",\r\n    start_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    end_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    start_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    created_by: 12,\r\n    created_on: \"2021-02-09T07:39:50.743345Z\",\r\n    document: null,\r\n    document_name: null,\r\n    end_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    image: null,\r\n    image_name: null,\r\n    is_out_of_the_box: false,\r\n    option_text: [],\r\n    poll_id: 1,\r\n    poll_question_rating_type: null,\r\n    poll_question_type: 3,\r\n    poll_result_chart_type: 2,\r\n    question: \"1. The technique for selecting a new point depends upon\",\r\n    show_result_to_users: false,\r\n    status_id: 4,\r\n    update_on: null,\r\n  },\r\n  {\r\n    created_by: 12,\r\n    created_on: \"2021-02-09T07:39:50.743345Z\",\r\n    document: null,\r\n    document_name: null,\r\n    end_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    end_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    help_text: \"Description of what a Harbinger is\",\r\n    image: null,\r\n    image_name: null,\r\n    is_out_of_the_box: false,\r\n    option_text: [],\r\n    poll_id: 2,\r\n    poll_question_rating_type: null,\r\n    poll_question_type: 3,\r\n    poll_result_chart_type: 2,\r\n    question: \"1. The technique for selecting a new point depends upon\",\r\n    show_result_to_users: false,\r\n    start_date: moment().utc().local().format(\"MM/DD/YYYY\"),\r\n    start_time: moment().utc().local().format(\"hh:mm:ss\"),\r\n    status_id: 4,\r\n    title: \"Experience of Work From Home (WFH)\",\r\n    update_on: null,\r\n  },\r\n];\r\n\r\nexport const mergePoll = (data) => {\r\n  let pollObject = [];\r\n  pollObject = data;\r\n  for (var i = 0; i < getDefaultPoll.length; i++) {\r\n    pollObject.push(getDefaultPoll[i]);\r\n  }\r\n  return pollObject;\r\n};\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    POLL_SUCCESS,\r\n    POLL_FAIL,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getPollAsync=(filterStatus, search)=>(dispatch)=>{\r\n        return UserService.getPolls(filterStatus,search).then((data)=>{\r\n            dispatch({\r\n                type:POLL_SUCCESS,\r\n                payload:{pollsdata:data.data},\r\n                \r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:POLL_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllPolls from \"./ShowAllPolls\";\r\nimport { mergePoll } from \"../../utils/defaultpoll\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\n\r\nconst PollsContainer = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [filter, setFilter] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [checked, setChecked] = useState(false);\r\n  const [totalPolls, setTotalPolls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getPollAsync(filter, search));\r\n  }, [statusClicked, filter, search]);\r\n\r\n  useEffect(() => {\r\n    if (props.pollsdata === null) {\r\n      setLoader(true);\r\n    } else if (props.pollsdata !== null) {\r\n      setLoader(false);\r\n    }\r\n    const polls = props.pollsdata !== null ? props.pollsdata : [];\r\n    const isInactivePollPresent = filter?.status_id?.includes(4);\r\n    if (\r\n      search.length > 0 ||\r\n      (filter?.status_id?.length > 0 && !isInactivePollPresent)\r\n    ) {\r\n      setTotalPolls(polls);\r\n    } else {\r\n      setTotalPolls(mergePoll(polls));\r\n    }\r\n  }, [props.pollsdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const setSearchValue = (value) => {\r\n    setSearch(value);\r\n  };\r\n\r\n  const setFilterOptions = (value) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const handleCheck = (data) => {\r\n    setChecked(!checked);\r\n    setFilter(data);\r\n  };\r\n\r\n  return (\r\n    <ShowAllPolls\r\n      polls={totalPolls}\r\n      data={props}\r\n      loader={loader}\r\n      checked={checked}\r\n      setLoader={setLoader}\r\n      statusOnClicked={statusOnClicked}\r\n      setFilterOptions={setFilterOptions}\r\n      setSearchValue={setSearchValue}\r\n      handleCheck={handleCheck}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollsContainer);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"@reactchartjs/react-chart.js\";\r\n\r\nconst BarChart = (props) => {\r\n  const [data, setData] = useState({\r\n    labels: [],\r\n    datasets: [],\r\n  });\r\n  const [options, setOptions] = useState({\r\n    title: {\r\n      display: true,\r\n      text: props.chartTitle,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setOptions({\r\n      title: {\r\n        display: true,\r\n        text: props.chartTitle,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            title: {\r\n              display: true,\r\n              text: props.chartTitle,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            title: {\r\n              display: true,\r\n              text: props.chartTitle,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    });\r\n    let finalData = {};\r\n    let sets = [];\r\n    let labelsData = [];\r\n    let yAxisData = [];\r\n    let recordData = [];\r\n    let count = [];\r\n    props.data?.forEach((value) => {\r\n      yAxisData.push({ [value.poll_option_id.toString()]: 0 });\r\n      count.push(value.count);\r\n    });\r\n    props.data?.map((value, key) => {\r\n      let finalYAxisData = [];\r\n      yAxisData.map((item, index) => {\r\n        if (JSON.parse(Object.keys(item)) === value.poll_option_id) {\r\n          yAxisData[index] = { [value.poll_option_id]: value.count };\r\n          finalYAxisData.push(value.count);\r\n        } else {\r\n          finalYAxisData.push(0);\r\n        }\r\n      });\r\n      let set = {\r\n        label: value.option_text,\r\n        data: finalYAxisData,\r\n        backgroundColor: random_hex_color_code(\r\n          value.option_text + \"randomColor\"\r\n        ),\r\n        borderWidth: 0,\r\n      };\r\n      labelsData.push(value.option_text);\r\n      sets.push(set);\r\n      recordData = finalYAxisData;\r\n    });\r\n    finalData = {\r\n      ...data,\r\n      labels: labelsData,\r\n      datasets: sets,\r\n    };\r\n    setData(finalData);\r\n    props.sendBackData(labelsData, count);\r\n  }, [props.data]);\r\n\r\n  const random_hex_color_code = (string) => {\r\n    var hash = 0;\r\n    for (var i = 0; i < string.length; i++) {\r\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    var colour = \"#\";\r\n    for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xff;\r\n      colour += (\"00\" + value.toString(16)).substr(-2);\r\n    }\r\n    return colour;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Bar id=\"barChart\" data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"@reactchartjs/react-chart.js\";\r\n\r\nconst PieChart = (props) => {\r\n  const [data, setData] = useState({\r\n    labels: [],\r\n    datasets: [],\r\n  });\r\n\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: props.chartTitle,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    let finalData = {};\r\n    let labelsData = [];\r\n    let set = [];\r\n    let recordData = [];\r\n    let colors = [];\r\n    let borderColors = [];\r\n    let percentage = [];\r\n    props.data.map((value) => {\r\n      labelsData.push(value.option_text);\r\n      recordData.push(\r\n        parseInt(value.percentage.substring(0, value.percentage.length - 1))\r\n      );\r\n      colors.push(\r\n        random_hex_color_code(\r\n          value.option_text + \"value_percentage_option_text\"\r\n        )\r\n      );\r\n      borderColors.push(\"rgba(255, 255, 255)\");\r\n      percentage.push(value.percentage);\r\n    });\r\n    set = [\r\n      {\r\n        label: \"\",\r\n        data: recordData,\r\n        backgroundColor: colors,\r\n        borderColor: borderColors,\r\n        borderWidth: 0,\r\n      },\r\n    ];\r\n    finalData = {\r\n      ...data,\r\n      labels: labelsData,\r\n      datasets: set,\r\n    };\r\n    setData(finalData);\r\n    props.sendBackData(labelsData, percentage);\r\n  }, [props.data]);\r\n\r\n  const random_hex_color_code = (string) => {\r\n    var hash = 0;\r\n    for (var i = 0; i < string.length; i++) {\r\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    var colour = \"#\";\r\n    for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xff;\r\n      colour += (\"00\" + value.toString(16)).substr(-2);\r\n    }\r\n    return colour;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pie id=\"pieChart\" data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { DOWNLOAD, DOWNLOAD_AS_CSV, DOWNLOAD_AS_PDF } from \"../../headings\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        <Button onClick={() => props.showDownloadOptions(\"pdf\")}>\r\n          {DOWNLOAD_AS_PDF}\r\n        </Button>\r\n      </li>\r\n      <li>\r\n        <Button onClick={() => props.showDownloadOptions(\"csv\")}>\r\n          {DOWNLOAD_AS_CSV}\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass PollResponsePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <Button type=\"primary\" className=\"w-md-100 mt-3 mt-lg-0\">\r\n            {DOWNLOAD}\r\n          </Button>\r\n          <DownOutlined className=\"down-arrow-ico white btn-arrow\" />\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PollResponsePopover;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Breadcrumb, Spin, Select } from \"antd\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  COUNT,\r\n  PERCENTAGE,\r\n  POLLS,\r\n  POLL_OPTION_TEXT,\r\n  POLL_RESPONSES,\r\n  POLL_RESULTS,\r\n  POLL_TOTAL_AUDIENCE,\r\n} from \"../../headings\";\r\nimport { POLL_RESULTS_NOT_AVAILABLE } from \"../../messages\";\r\nimport BarChart from \"./BarChart\";\r\nimport PieChart from \"./PieChart\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport {\r\n  BAR_CHART,\r\n  BETTER_IF_NOT,\r\n  DEFINITELY_NOT,\r\n  DOES_NOT_MATTER,\r\n  EXCITED,\r\n  I_AM_OK,\r\n  PIE_CHART,\r\n} from \"../../values\";\r\nimport PollResponsePopover from \"./PollResponsePopover\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst PollResponse = (props) => {\r\n  let location = useLocation();\r\n  const [loader, setLoader] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [chartType, setChartType] = useState(\"1\");\r\n  const [dataPoints, setDataPoints] = useState([]);\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    const data = {\r\n      poll_id: location.state.poll_id,\r\n    };\r\n    axios.post(BASE_URL + \"pollResult/\", data, options).then((res) => {\r\n      let resData = {};\r\n      let finalResData = [];\r\n      res.data.map((value) => {\r\n        resData = {\r\n          ...value,\r\n          option_text:\r\n            value.option_text === \"1\"\r\n              ? DEFINITELY_NOT\r\n              : value.option_text === \"2\"\r\n              ? BETTER_IF_NOT\r\n              : value.option_text === \"3\"\r\n              ? DOES_NOT_MATTER\r\n              : value.option_text === \"4\"\r\n              ? I_AM_OK\r\n              : value.option_text === \"5\"\r\n              ? EXCITED\r\n              : value.option_text,\r\n        };\r\n        finalResData.push(resData);\r\n      });\r\n      setData(finalResData);\r\n      setLoader(false);\r\n    });\r\n  }, []);\r\n\r\n  const downloadPDF = () => {\r\n    let element =\r\n      chartType === \"1\"\r\n        ? document.getElementById(\"barChart\")\r\n        : document.getElementById(\"pieChart\");\r\n    html2canvas(element).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF();\r\n      pdf.addImage(imgData, \"JPEG\", 0, 0, 200, 100);\r\n      const filename = \"poll-result.pdf\";\r\n      pdf.save(filename);\r\n    });\r\n  };\r\n\r\n  function convertChartDataToCSV(data) {\r\n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\r\n    data = data || null;\r\n    if (data == null || !data.length) {\r\n      return null;\r\n    }\r\n    columnDelimiter = \",\";\r\n    lineDelimiter = \"\\n\";\r\n    keys = Object.keys(data[0]);\r\n    result = \"\";\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n    data.forEach(function (item) {\r\n      ctr = 0;\r\n      keys.forEach(function (key) {\r\n        if (ctr > 0) result += columnDelimiter;\r\n        result += item[key];\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  const downloadCSV = () => {\r\n    let points = [];\r\n    let x_index = POLL_OPTION_TEXT;\r\n    let y_index = \"\";\r\n    dataPoints[0].forEach((xpoint, index) => {\r\n      dataPoints[1].forEach((ypoint, key) => {\r\n        if (index === key) {\r\n          if (chartType === \"1\") {\r\n            y_index = COUNT;\r\n          } else {\r\n            y_index = PERCENTAGE;\r\n          }\r\n          points.push({ [x_index]: xpoint, [y_index]: ypoint });\r\n        }\r\n      });\r\n    });\r\n    var data, filename, link;\r\n    var csv = \"\";\r\n    csv += convertChartDataToCSV(points);\r\n    if (csv == null) return;\r\n    filename = location.state.title + \".csv\";\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = \"data:text/csv;charset=utf-8,\" + csv;\r\n    }\r\n    data = encodeURI(csv);\r\n    link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", data);\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const sendBackData = (x_data, y_data) => {\r\n    setDataPoints([x_data, y_data]);\r\n  };\r\n\r\n  const showChartOptions = (type) => {\r\n    setChartType(type);\r\n  };\r\n\r\n  const showDownloadOptions = (value) => {\r\n    if (value === \"pdf\") {\r\n      downloadPDF();\r\n    } else {\r\n      downloadCSV();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{POLL_RESULTS}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Spin spinning={loader} size=\"large\">\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{location.state.title}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      md={24}\r\n                      lg={12}\r\n                      className=\"search-row column d-block d-lg-flex align-items-center justify-content-start justify-content-lg-end px-3 px-lg-0 my-4 my-lg-0\"\r\n                    >\r\n                      {data[0]?.total_employee_count ? (\r\n                        <span className=\"pr-3 w-md-100\">\r\n                          {POLL_TOTAL_AUDIENCE}: {data[0]?.total_employee_count}\r\n                        </span>\r\n                      ) : null}\r\n                      {data[0]?.total_employee_count ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <Col\r\n                            span={24}\r\n                            lg={6}\r\n                            className=\"ml-0 ml-lg-4 mt-2 mt-lg-0 mr-3\"\r\n                          >\r\n                            <Select\r\n                              className=\"w-100\"\r\n                              defaultValue=\"1\"\r\n                              onSelect={(value) => showChartOptions(value)}\r\n                            >\r\n                              <Option value=\"1\" defaultValue>\r\n                                {BAR_CHART}\r\n                              </Option>\r\n                              <Option value=\"2\">{PIE_CHART}</Option>\r\n                            </Select>\r\n                          </Col>\r\n                          <Col\r\n                            span={24}\r\n                            lg={6}\r\n                            className=\"d-flex align-items-center justify-content-end\"\r\n                          >\r\n                            <PollResponsePopover\r\n                              showDownloadOptions={showDownloadOptions}\r\n                            />\r\n                          </Col>\r\n                        </>\r\n                      ) : null}\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <p className=\"font-weight-md6\">\r\n                          {location.state.question}\r\n                        </p>\r\n                        {data[0]?.total_response ? (\r\n                          <span className=\"font-weight-md6 pt-3 d-flex\">\r\n                            {data[0]?.total_response} {POLL_RESPONSES}\r\n                          </span>\r\n                        ) : null}\r\n                        <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                          <h1 className=\"text-center pt-3\">\r\n                            {data &&\r\n                              data.length === 0 &&\r\n                              POLL_RESULTS_NOT_AVAILABLE}\r\n                          </h1>\r\n                          {data && data.length > 0 ? (\r\n                            chartType === \"1\" ? (\r\n                              <BarChart\r\n                                data={data}\r\n                                chartTitle={\r\n                                  POLL_RESULTS + \" for \" + location.state.title\r\n                                }\r\n                                sendBackData={sendBackData}\r\n                              />\r\n                            ) : (\r\n                              <PieChart\r\n                                data={data}\r\n                                chartTitle={\r\n                                  POLL_RESULTS + \" for \" + location.state.title\r\n                                }\r\n                                sendBackData={sendBackData}\r\n                              />\r\n                            )\r\n                          ) : null}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PollResponse;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Row, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport \"date-fns\";\r\nimport { TimePicker } from \"@progress/kendo-react-dateinputs\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\nimport {\r\n  PUBLISH,\r\n  RESCHEDULE,\r\n  SCHEDULE,\r\n  PUBLISH_POLL,\r\n  CANCEL_MODAL,\r\n} from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport { SELECT_START_DATE, SELECT_END_DATE } from \"../../labels\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      start_time: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n      end_time: new Date(),\r\n      pastStartTimeError: false,\r\n      pastEndTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      start_time: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n      end_time: new Date(\r\n        eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime\r\n      ),\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.props.pollData.pollStartDate ||\r\n      !this.props.pollData.pollEndDate\r\n    ) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (event) => {\r\n    const startTime = event.target.value;\r\n    const formattedStartDate = momentUtil.formatAsDDMMYYYY(\r\n      this.state.startDate\r\n    );\r\n    const edate = formattedStartDate.split(\"-\")[0];\r\n    const emonth = formattedStartDate.split(\"-\")[1];\r\n    const eyear = formattedStartDate.split(\"-\")[2];\r\n    let minutes = startTime.getMinutes();\r\n    let hours = startTime.getHours();\r\n    if (minutes.toString().length === 1) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString() === \"0\") {\r\n      hours = \"00\";\r\n    }\r\n    const extractedTime = hours + \":\" + minutes + \":\" + \"00\";\r\n    const final_startTime = new Date(\r\n      eyear + \"-\" + emonth + \"-\" + edate + \"T\" + extractedTime\r\n    );\r\n    this.setState({ pastStartTimeError: false, startTime: final_startTime });\r\n  };\r\n\r\n  onBlurStartTime = (event) => {\r\n    const currentTime = new Date();\r\n    if (\r\n      currentTime > this.state.startTime &&\r\n      this.state.startTime.getTime() !== this.state.start_time.getTime()\r\n    ) {\r\n      this.setState({\r\n        pastStartTimeError: true,\r\n        startTime: this.state.start_time,\r\n      });\r\n    } else {\r\n      this.setState({ pastStartTimeError: false });\r\n      this.props.handlePollStartTimePickerChange(\r\n        this.state.startTime,\r\n        \"pollStartTime\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (event) => {\r\n    const endTime = event.target.value;\r\n    const formattedEndDate = momentUtil.formatAsDDMMYYYY(this.state.endDate);\r\n    const edate = formattedEndDate.split(\"-\")[0];\r\n    const emonth = formattedEndDate.split(\"-\")[1];\r\n    const eyear = formattedEndDate.split(\"-\")[2];\r\n    let minutes = endTime.getMinutes();\r\n    let hours = endTime.getHours();\r\n    if (minutes.toString().length === 1) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString() === \"0\") {\r\n      hours = \"00\";\r\n    }\r\n    const extractedTime = hours + \":\" + minutes + \":\" + \"00\";\r\n    const final_endTime = new Date(\r\n      eyear + \"-\" + emonth + \"-\" + edate + \"T\" + extractedTime\r\n    );\r\n    this.setState({ pastEndTimeError: false, endTime: final_endTime });\r\n  };\r\n\r\n  onBlurEndTime = (event) => {\r\n    const currentTime = new Date();\r\n    if (\r\n      currentTime > this.state.endTime &&\r\n      this.state.endTime.getTime() !== this.state.end_time.getTime()\r\n    ) {\r\n      this.setState({\r\n        pastEndTimeError: true,\r\n        endTime: this.state.end_time,\r\n      });\r\n    } else if (this.state.endTime < this.state.startTime) {\r\n      this.setState({\r\n        endTimeError: true,\r\n        endTime: this.state.end_time,\r\n      });\r\n    } else {\r\n      this.setState({ pastEndTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(\r\n        this.state.endTime,\r\n        \"pollEndTime\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {this.props.viaEdit ? RESCHEDULE : SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={\r\n            this.props.pollData.status_id === 8 ||\r\n            this.props.pollData.status_id === 5\r\n              ? {\r\n                  style: { display: \"none\" },\r\n                }\r\n              : {\r\n                  children: \"Custom OK\",\r\n                }\r\n          }\r\n          cancelButtonProps={\r\n            this.props.pollData.status_id === 8 ||\r\n            this.props.pollData.status_id === 5\r\n              ? {\r\n                  className: \"ant-btn-primary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n              : {\r\n                  className: \"ant-btn-secondary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n          }\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span=\"24\" lg={12} className=\"gutter-row\">\r\n                      <DatePicker\r\n                        defaultValue={this.state.startDate}\r\n                        disabledDate={this.disabledStartDate}\r\n                        onChange={(date) => this.onChangeStartDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"sDate\"\r\n                        className=\"required\"\r\n                        disabled={\r\n                          this.props.pollData.status_id === 8 ||\r\n                          this.props.pollData.status_id === 5\r\n                        }\r\n                      />\r\n                      {this.state.pastStartTimeError && (\r\n                        <Alert\r\n                          message={PAST_TIME}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                    </Col>\r\n                    <Col span=\"24\" lg={12}>\r\n                      <TimePicker\r\n                        value={this.state.startTime}\r\n                        onChange={this.onChangeStartTime}\r\n                        onBlur={this.onBlurStartTime}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span=\"24\" lg={12} className=\"gutter-row\">\r\n                      {this.state.endDate !== \"\" ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <DatePicker\r\n                            defaultValue={this.state.endDate}\r\n                            disabledDate={this.disabledEndDate}\r\n                            onChange={(date) => this.onChangeEndDate(date)}\r\n                            className=\"w-100\"\r\n                            name=\"eDate\"\r\n                            className=\"required\"\r\n                            disabled={\r\n                              this.props.pollData.status_id === 8 ||\r\n                              this.props.pollData.status_id === 5\r\n                            }\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <DatePicker\r\n                          defaultValue={this.state.endDate}\r\n                          disabledDate={this.disabledEndDate}\r\n                          onChange={(date) => this.onChangeEndDate(date)}\r\n                          className=\"w-100\"\r\n                          name=\"eDate\"\r\n                          className=\"required\"\r\n                          disabled={\r\n                            this.props.pollData.status_id === 8 ||\r\n                            this.props.pollData.status_id === 5\r\n                          }\r\n                        />\r\n                      )}\r\n                      {this.state.pastEndTimeError && (\r\n                        <Alert\r\n                          message={PAST_TIME}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                    </Col>\r\n                    <Col span=\"24\" lg={12}>\r\n                      <TimePicker\r\n                        value={this.state.endTime}\r\n                        onChange={this.onChangeEndTime}\r\n                        onBlur={this.onBlurEndTime}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Button, Tooltip, Radio, Checkbox, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport EditDateTimeModal from \"../modal/EditDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport { BACK, PREVIEW_POLL } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditPreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  editPoll,\r\n  showError,\r\n  error,\r\n  data,\r\n  loader,\r\n  attachmentName,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    editPoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n                  <React.Fragment>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <div className=\"mid-content\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            <p className=\"font-weight-md6\">\r\n                              {poll.pollQuestion}\r\n                            </p>\r\n                            <Row className=\"preview-que\" disabled={true}>\r\n                              <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                                {poll.pollQuestionType === \"1\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Radio>{value}</Radio>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Checkbox>{value}</Checkbox>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"3\" ? (\r\n                                  poll.pollRatingType === \"1\" ? (\r\n                                    <ReactStars\r\n                                      {...starsRating}\r\n                                      value={poll.pollRatingResponse}\r\n                                      name=\"pollRatingResponse\"\r\n                                      onChange={(value) =>\r\n                                        handlePollOnSelect(\r\n                                          value,\r\n                                          \"pollRatingResponse\"\r\n                                        )\r\n                                      }\r\n                                      classNames=\"mt-3\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"2\" ? (\r\n                                    <img src={Smiley} alt=\"send message\" />\r\n                                  ) : poll.pollRatingType === \"3\" ? (\r\n                                    <img src={Thermometer} alt=\"send message\" />\r\n                                  ) : poll.pollRatingType === \"4\" ? (\r\n                                    <img src={Thumb} alt=\"send message\" />\r\n                                  ) : poll.pollRatingType === \"5\" ? (\r\n                                    <img src={Steps} alt=\"send message\" />\r\n                                  ) : null\r\n                                ) : null}\r\n                              </div>\r\n                            </Row>\r\n                            <Row className=\"mt-2\">\r\n                              <div class=\"ant-upload-list-item\">\r\n                                <div class=\"ant-upload-list-item-info\">\r\n                                  <span class=\"ant-upload-span\">\r\n                                    <div class=\"ant-upload-text-icon\">\r\n                                      <PaperClipOutlined />\r\n                                    </div>\r\n                                    <span\r\n                                      class=\"ant-upload-list-item-name\"\r\n                                      title=\"add-user-doc\"\r\n                                    >\r\n                                      {poll.pollDocument ? (\r\n                                        <a\r\n                                          href={poll.pollDocument}\r\n                                          download={poll.pollDocument}\r\n                                        >\r\n                                          {attachmentName}\r\n                                        </a>\r\n                                      ) : null}\r\n                                    </span>\r\n                                    <span class=\"ant-upload-list-item-card-actions\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"ant-btn\"\r\n                                      ></button>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mt-5 px-3\">\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          type=\"secondary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"mr-4\"\r\n                          onClick={onBackCreatePoll}\r\n                        >\r\n                          {BACK}\r\n                        </Button>\r\n                        <EditDateTimeModal\r\n                          pollData={poll}\r\n                          handlePollStartDatePickerChange={\r\n                            handlePollStartDatePickerChange\r\n                          }\r\n                          handlePollEndDatePickerChange={\r\n                            handlePollEndDatePickerChange\r\n                          }\r\n                          handlePollStartTimePickerChange={\r\n                            handlePollStartTimePickerChange\r\n                          }\r\n                          handlePollEndTimePickerChange={\r\n                            handlePollEndTimePickerChange\r\n                          }\r\n                          onPublish={onPublish}\r\n                          showError={showError}\r\n                          error={error}\r\n                          viaEdit\r\n                        />\r\n                      </div>\r\n                    </Spin>\r\n                  </React.Fragment>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport EditPreviewPoll from \"./EditPreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport {\r\n  VIEW_POLL,\r\n  EDIT_POLL,\r\n  POLL_TITLE,\r\n  UPLOAD,\r\n  DOCUMENT_IMAGE,\r\n  PREVIEW,\r\n  CANCEL,\r\n  CLOSE_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport { REQUIRED_MESSAGE, STAR_CHART_TYPE } from \"../../errors\";\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  RATING_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  BAR_CHART,\r\n  LADDER,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  SMILEY,\r\n  STARS,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n  THERMOMETER,\r\n  THUMBSUP,\r\n} from \"../../values\";\r\nimport { EDIT_POLL_NOTIFICATION } from \"../../messages\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst EditPoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: [],\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n      const data = res.data;\r\n      setPoll({\r\n        ...poll,\r\n        pollId: data.poll_id,\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollDocument:\r\n          data.image !== null || data.document !== null\r\n            ? [\r\n                {\r\n                  uid: \"1\",\r\n                  name:\r\n                    data.image_name !== null\r\n                      ? data.image_name\r\n                      : data.document_name !== null\r\n                      ? data.document_name\r\n                      : \"\",\r\n                  status: \"done\",\r\n                  url: data.image ? data.image : data.document,\r\n                },\r\n              ]\r\n            : \"\",\r\n        showResult: data.show_result_to_users,\r\n        pollChartType: data.poll_result_chart_type.toString(),\r\n        pollQuestion: data.question,\r\n        pollQuestionType: data.poll_question_type.toString(),\r\n        pollRatingType: data.poll_question_rating_type\r\n          ? data.poll_question_rating_type.toString()\r\n          : \"\",\r\n        pollRatingResponse: data.poll_question_rating_type,\r\n        pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n        pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n        pollStartTime: data.start_time,\r\n        pollEndTime: data.end_time,\r\n        status_id: data.status_id,\r\n        pollResponse: data.option_text.map((value) => value.option_text),\r\n        pollOptionText: data.option_text,\r\n      });\r\n      setAttachmentName(\r\n        data.image_name !== null\r\n          ? data.image_name\r\n          : data.document_name !== null\r\n          ? data.document_name\r\n          : \"\"\r\n      );\r\n      const isImage =\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpeg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"png\");\r\n      if (isImage) {\r\n        setIsImage(true);\r\n      } else {\r\n        setIsImage(false);\r\n      }\r\n      setLoader(false);\r\n      form.setFieldsValue({\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollQuestion: data.question,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion &&\r\n      poll.pollResponse.length > 0\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if (poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  function getBase64(file) {\r\n    var atb = btoa(file);\r\n    var base64Blob = new Blob([atb]);\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(base64Blob);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  function convertImgToBase64(url, callback, outputFormat) {\r\n    var canvas = document.createElement(\"CANVAS\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = new Image();\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.onload = function () {\r\n      canvas.height = img.height;\r\n      canvas.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n      callback.call(this, dataURL);\r\n      // Clean up\r\n      canvas = null;\r\n    };\r\n    img.src = url;\r\n  }\r\n\r\n  const editPoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n    let data = {};\r\n\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollEndDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (\r\n      poll.pollDocument?.length === 0 ||\r\n      poll.pollDocument[0].url?.length === 0\r\n    ) {\r\n      data = {\r\n        update_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n        .then(() => {\r\n          setLoader(false);\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: EDIT_POLL_NOTIFICATION,\r\n            placement,\r\n          });\r\n          window.location = \"/orgcc/pollsdirectory\";\r\n        });\r\n    } else {\r\n      if (poll.pollDocument[0]?.url) {\r\n        if (isImage) {\r\n          convertImgToBase64(poll.pollDocument[0]?.url, function (base64Img) {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                image: base64Img,\r\n                image_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                poll_question_rating_type: poll.pollRatingType\r\n                  ? parseInt(poll.pollRatingType)\r\n                  : \"\",\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n            axios\r\n              .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n              .then(() => {\r\n                setLoader(false);\r\n                const placement = \"bottomLeft\";\r\n                api.info({\r\n                  description: \"Poll details have been changed successfully.\",\r\n                  placement,\r\n                });\r\n                window.location = \"/orgcc/pollsdirectory\";\r\n              });\r\n          });\r\n        } else {\r\n          getBase64(poll.pollDocument[0]?.url).then((res) => {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                document: res,\r\n                document_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                poll_question_rating_type: poll.pollRatingType\r\n                  ? parseInt(poll.pollRatingType)\r\n                  : \"\",\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n            axios\r\n              .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n              .then(() => {\r\n                setLoader(false);\r\n                const placement = \"bottomLeft\";\r\n                api.info({\r\n                  description: \"Poll details have been changed successfully.\",\r\n                  placement,\r\n                });\r\n                window.location = \"/orgcc/pollsdirectory\";\r\n              });\r\n          });\r\n        }\r\n      } else {\r\n        if (isImage) {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              image: poll.pollDocument.base64,\r\n              image_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type: poll.pollRatingType\r\n                ? parseInt(poll.pollRatingType)\r\n                : \"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        } else {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              document: poll.pollDocument.base64,\r\n              document_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              poll_question_rating_type: poll.pollRatingType\r\n                ? parseInt(poll.pollRatingType)\r\n                : \"\",\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        }\r\n        axios\r\n          .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n          .then(() => {\r\n            setLoader(false);\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: \"Poll details have been changed successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/orgcc/pollsdirectory\";\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    if (name === \"pollRatingType\") {\r\n      setPoll({\r\n        ...poll,\r\n        [name]: value,\r\n        [\"pollResponse\"]: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n      });\r\n    } else {\r\n      setPoll({ ...poll, [name]: value });\r\n    }\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (poll.status_id === 8 || poll.status_id === 5) {\r\n      return null;\r\n    } else {\r\n      if (value.file.status === \"removed\") {\r\n        showuploadError(true);\r\n      }\r\n      let fileList = value.fileList.slice(-1);\r\n      checkDoucmentType(value.file.type);\r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setAttachmentName(value.file.name);\r\n      setPoll({ ...poll, [name]: fileList });\r\n    }\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 8 || poll.status_id === 5) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      convertImgToBase64(file.url, function (base64Img) {\r\n        // await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setPoll({\r\n          ...poll,\r\n          previewImage: base64Img,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setPoll({\r\n        ...poll,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 8 || poll.status_id === 5) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (e.target.value !== location.state.title) {\r\n      axios\r\n        .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setpollError(res.data[0]);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                        initialValues={{\r\n                          remember: true,\r\n                        }}\r\n                        form={form}\r\n                      >\r\n                        <Row className=\"py-3\">\r\n                          <h1 className=\"mb-0\">\r\n                            {poll.status_id === 8 || poll.status_id === 5\r\n                              ? VIEW_POLL\r\n                              : EDIT_POLL}\r\n                          </h1>\r\n                        </Row>\r\n\r\n                        <div className=\"mid-content\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={REQUIRED_MESSAGE}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <Col span={24}>\r\n                                <Row>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={POLL_TITLE}\r\n                                      value={poll.pollName}\r\n                                    >\r\n                                      <TextArea\r\n                                        showCount\r\n                                        maxLength={50}\r\n                                        htmlFor=\"polltitle\"\r\n                                        value={poll.pollName}\r\n                                        id=\"pollName\"\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        onBlur={(e) => isPollNameDuplicate(e)}\r\n                                        autoComplete=\"off\"\r\n                                        disabled={\r\n                                          poll.status_id === 8 ||\r\n                                          poll.status_id === 5\r\n                                        }\r\n                                        className={`required ${styles.sm_textarea}`}\r\n                                      />\r\n\r\n                                      {pollError === \"status: false\" &&\r\n                                        poll.pollName\r\n                                          .replace(/^\\s*/, \"\")\r\n                                          .replace(/\\s*$/, \"\").length > 0 &&\r\n                                        poll.pollName.length > 0 && (\r\n                                          <CheckCircleTwoTone\r\n                                            className=\"successCheck\"\r\n                                            twoToneColor=\"#52c41a\"\r\n                                          />\r\n                                        )}\r\n                                      {pollError == \"status: true\" && (\r\n                                        <Alert\r\n                                          message={POLL_ALREADY_EXISTS}\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      )}\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={DESCRIPTION}\r\n                                      value={poll.pollHelpText}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"pollHelpText\"\r\n                                        id=\"pollHelpText\"\r\n                                        validateStatus=\"success\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"helptext\"\r\n                                          id=\"pollHelpText\"\r\n                                          name=\"pollHelpText\"\r\n                                          value={poll.pollHelpText}\r\n                                          disabled={\r\n                                            poll.status_id === 8 ||\r\n                                            poll.status_id === 5\r\n                                          }\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"gutter-row mt-3\">\r\n                                    {poll.pollDocument?.length === 0 && (\r\n                                      <h6>{UPLOAD}</h6>\r\n                                    )}\r\n                                    <Form.Item\r\n                                      name=\"upload\"\r\n                                      className=\"upload-list\"\r\n                                      valuePropName=\"fileList\"\r\n                                    >\r\n                                      <>\r\n                                        <Upload\r\n                                          listType=\"picture\"\r\n                                          fileList={poll.pollDocument}\r\n                                          onChange={(value) =>\r\n                                            handleStepOneUpload(\r\n                                              value,\r\n                                              \"pollDocument\"\r\n                                            )\r\n                                          }\r\n                                          beforeUpload={(value) =>\r\n                                            handleBeforeUpload(\r\n                                              value,\r\n                                              \"pollDocument\"\r\n                                            )\r\n                                          }\r\n                                          onRemove={() => handleOnRemove()}\r\n                                          onPreview={(value) =>\r\n                                            handleStepOnePreview(value)\r\n                                          }\r\n                                          className=\"upload-list-inline c-upload\"\r\n                                          accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n                                        >\r\n                                          {poll.pollDocument.length === 0 ? (\r\n                                            <Button\r\n                                              type=\"link\"\r\n                                              className=\"link pl-0\"\r\n                                            >\r\n                                              <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                                              {DOCUMENT_IMAGE}\r\n                                            </Button>\r\n                                          ) : null}\r\n                                        </Upload>\r\n                                        <Modal\r\n                                          visible={poll.previewVisible}\r\n                                          title={poll.previewTitle}\r\n                                          centered\r\n                                          onOk={(value) => handleCancel(value)}\r\n                                          okButtonProps={{\r\n                                            children: \"Custom OK\",\r\n                                          }}\r\n                                          cancelButtonProps={{\r\n                                            style: { display: \"none\" },\r\n                                          }}\r\n                                          okText={CLOSE_TEXT_MODAL}\r\n                                        >\r\n                                          <img\r\n                                            alt=\"image\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            src={poll.previewImage}\r\n                                          />\r\n                                        </Modal>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row\">\r\n                                <Row className=\"align-items-center d-flex\">\r\n                                  <Col span={24} md={8} lg={8} xl={6}>\r\n                                    <Form.Item\r\n                                      name=\"showresult\"\r\n                                      label={SHOW_RESULTS_POLL}\r\n                                      className=\"mb-0\"\r\n                                    >\r\n                                      <Switch\r\n                                        id=\"showResult\"\r\n                                        checked={poll.showResult}\r\n                                        disabled={\r\n                                          poll.status_id === 8 ||\r\n                                          poll.status_id === 5\r\n                                        }\r\n                                        onChange={(checked, e) =>\r\n                                          onChange(checked, e)\r\n                                        }\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                  {poll.showResult ? (\r\n                                    <Col span={24} lg={6}>\r\n                                      <FloatLabel\r\n                                        label={DISPLAY_RESULTS_AS}\r\n                                        value={poll.pollChartType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"result\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"input-control\"\r\n                                              htmlFor=\"result\"\r\n                                              className=\"required\"\r\n                                              disabled={\r\n                                                poll.status_id === 8 ||\r\n                                                poll.status_id === 5\r\n                                              }\r\n                                              value={\r\n                                                poll.pollChartType === \"2\"\r\n                                                  ? \"\"\r\n                                                  : poll.pollChartType\r\n                                              }\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollChartType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                {PIE_CHART}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                {BAR_CHART}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                {STAR_FORMAT}\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                      {chartError && (\r\n                                        <Form.Item>\r\n                                          <Alert\r\n                                            message={STAR_CHART_TYPE}\r\n                                            type=\"error\"\r\n                                            showIcon\r\n                                          ></Alert>\r\n                                        </Form.Item>\r\n                                      )}\r\n                                    </Col>\r\n                                  ) : (\r\n                                    <Col></Col>\r\n                                  )}\r\n                                </Row>\r\n                              </Col>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mid-content mt-4\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              <Col span={24}>\r\n                                <Row className=\"d-block\">\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <Row\r\n                                      gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                                    >\r\n                                      <Col\r\n                                        span={24}\r\n                                        md={8}\r\n                                        lg={8}\r\n                                        className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                                      >\r\n                                        <FloatLabel\r\n                                          label={QUESTION_TYPE}\r\n                                          value={poll.pollQuestionType}\r\n                                        >\r\n                                          <Form.Item\r\n                                            className=\"required\"\r\n                                            name=\"questiontype\"\r\n                                          >\r\n                                            <>\r\n                                              <Select\r\n                                                className=\"\"\r\n                                                htmlFor=\"questiontype\"\r\n                                                className=\"required\"\r\n                                                id=\"pollQuestionType\"\r\n                                                disabled={\r\n                                                  poll.status_id === 8 ||\r\n                                                  poll.status_id === 5\r\n                                                }\r\n                                                value={poll.pollQuestionType}\r\n                                                onSelect={(value) =>\r\n                                                  handlePollOnSelect(\r\n                                                    value,\r\n                                                    \"pollQuestionType\"\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <Select.Option\r\n                                                  value=\"1\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType === \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {SELECT_SINGLE}\r\n                                                </Select.Option>\r\n                                                <Select.Option\r\n                                                  value=\"2\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType === \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {SELECT_MULTIPLE}\r\n                                                </Select.Option>\r\n                                                <Select.Option\r\n                                                  value=\"3\"\r\n                                                  disabled={\r\n                                                    poll.pollChartType !== \"\" &&\r\n                                                    poll.pollChartType !== \"4\"\r\n                                                  }\r\n                                                >\r\n                                                  {STAR_RATING}\r\n                                                </Select.Option>\r\n                                              </Select>\r\n                                            </>\r\n                                          </Form.Item>\r\n                                        </FloatLabel>\r\n                                      </Col>\r\n                                      {poll.pollQuestionType === \"3\" ? (\r\n                                        <Col\r\n                                          span={24}\r\n                                          md={10}\r\n                                          lg={8}\r\n                                          className=\"gutter-row\"\r\n                                        >\r\n                                          <FloatLabel\r\n                                            label={RATING_TYPE}\r\n                                            value={poll.pollRatingType}\r\n                                          >\r\n                                            <Form.Item\r\n                                              className=\"required mb-0\"\r\n                                              name=\"ratingtype\"\r\n                                            >\r\n                                              <>\r\n                                                <Select\r\n                                                  className=\"\"\r\n                                                  htmlFor=\"ratingtype\"\r\n                                                  className=\"required\"\r\n                                                  id=\"pollRatingType\"\r\n                                                  value={poll.pollRatingType}\r\n                                                  onSelect={(value) =>\r\n                                                    handlePollOnSelect(\r\n                                                      value,\r\n                                                      \"pollRatingType\"\r\n                                                    )\r\n                                                  }\r\n                                                >\r\n                                                  <Select.Option value=\"1\">\r\n                                                    {STARS}\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"2\">\r\n                                                    {SMILEY}\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"3\">\r\n                                                    {THERMOMETER}\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"4\">\r\n                                                    {THUMBSUP}\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"5\">\r\n                                                    {LADDER}\r\n                                                  </Select.Option>\r\n                                                </Select>\r\n                                              </>\r\n                                            </Form.Item>\r\n                                          </FloatLabel>\r\n                                        </Col>\r\n                                      ) : null}\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={QUESTION}\r\n                                      value={poll.pollQuestion}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control edit-input\"\r\n                                          name=\"pollQuestion\"\r\n                                          id=\"pollQuestion\"\r\n                                          htmlFor=\"pollQuestion\"\r\n                                          className=\"required\"\r\n                                          disabled={\r\n                                            poll.status_id === 8 ||\r\n                                            poll.status_id === 5\r\n                                          }\r\n                                          defaultValue={poll.pollQuestion}\r\n                                          value={poll.pollQuestion}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"mt-4\">\r\n                                    {poll.pollQuestionType === \"3\" &&\r\n                                    poll.pollRatingType ? (\r\n                                      poll.pollRatingType === \"1\" ? (\r\n                                        <ReactStars\r\n                                          {...starsRating}\r\n                                          value={poll.pollRatingResponse}\r\n                                          name=\"pollRatingResponse\"\r\n                                          disabled={poll.status_id === 8}\r\n                                          onChange={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollRatingResponse\"\r\n                                            )\r\n                                          }\r\n                                          classNames=\"mt-3\"\r\n                                        />\r\n                                      ) : poll.pollRatingType === \"2\" ? (\r\n                                        <img src={Smiley} alt=\"send message\" />\r\n                                      ) : poll.pollRatingType === \"3\" ? (\r\n                                        <img\r\n                                          src={Thermometer}\r\n                                          alt=\"send message\"\r\n                                        />\r\n                                      ) : poll.pollRatingType === \"4\" ? (\r\n                                        <img src={Thumb} alt=\"send message\" />\r\n                                      ) : poll.pollRatingType === \"5\" ? (\r\n                                        <img src={Steps} alt=\"send message\" />\r\n                                      ) : null\r\n                                    ) : poll.pollQuestionType === \"1\" ? (\r\n                                      <div>\r\n                                        <MultiChoice\r\n                                          setSingleChoiceResponse={\r\n                                            setSingleChoiceResponse\r\n                                          }\r\n                                          pollResponse={poll.pollResponse}\r\n                                          disabled={\r\n                                            poll.status_id === 8 ||\r\n                                            poll.status_id === 5\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                    ) : poll.pollQuestionType === \"2\" ? (\r\n                                      <MultiChoice\r\n                                        pollResponse={poll.pollResponse}\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                        disabled={\r\n                                          poll.status_id === 8 ||\r\n                                          poll.status_id === 5\r\n                                        }\r\n                                      />\r\n                                    ) : null}\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n\r\n                              <div className=\"mt-5\">\r\n                                <Button\r\n                                  type=\"primary\"\r\n                                  className=\"md mr-4\"\r\n                                  onClick={onPreview}\r\n                                >\r\n                                  {PREVIEW}\r\n                                </Button>\r\n                                <Button\r\n                                  type=\"secondary\"\r\n                                  type=\"secondary\"\r\n                                  htmlType=\"submit\"\r\n                                  onClick={onCancel}\r\n                                >\r\n                                  {CANCEL}\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Form>\r\n                    </Spin>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <EditPreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            editPoll={editPoll}\r\n            showError={showError}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n            error={error}\r\n            loader={loader}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPoll;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Input, Divider, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\nimport { CREATE_POLL, POLLS, OOTB_POLL, SEARCH } from \"../../headings\";\r\nimport { OOTB_TEXT } from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nclass ExistingPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getPollAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { pollsdata } = this.props;\r\n\r\n    if (prevProps.pollsdata !== pollsdata) {\r\n      this.setState(\r\n        {\r\n          data: pollsdata,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <NavLink to=\"/createpoll\">\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{OOTB_POLL}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1>{OOTB_TEXT}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <div className=\"mid-content\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                  {/* <Row>\r\n                    <Col span={24}>\r\n                      <h6 className=\"mb-4\">Poll Name</h6>\r\n                      <Row className=\"my-2\">\r\n                      <Link to=\"/\">Impact of Microaggression</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                      <Row className=\"my-2\">\r\n                        <Link to=\"/\">Microaggressions – do we have it?</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                    </Col>\r\n                  </Row> */}\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExistingPolls);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Row, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  POLL,\r\n  PUBLISH,\r\n  PUBLISH_POLL,\r\n  SCHEDULE,\r\n} from \"../../headings\";\r\nimport \"date-fns\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { TimePicker } from \"@progress/kendo-react-dateinputs\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport { SELECT_DATE, PAST_TIME, VALID_DATE, END_TIME } from \"../../errors\";\r\nimport { SELECT_END_DATE, SELECT_START_DATE } from \"../../labels\";\r\n\r\nclass DuplicateDateTimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      dateError: false,\r\n      pastStartTimeError: false,\r\n      pastEndTimeError: false,\r\n      endTimeError: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      start_time: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n      end_time: new Date(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n      pollId,\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      start_time: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n      end_time: new Date(\r\n        eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime\r\n      ),\r\n    });\r\n    const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n    const finalEndDate = new Date(emonth + \"-\" + edate + \"-\" + eyear);\r\n    const currentDate = new Date();\r\n    if (pollId != 1 && pollId != 2) {\r\n      if (finalStartDate < currentDate || finalEndDate < currentDate) {\r\n        this.setState({\r\n          dateError: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (!this.state.startDate || !this.state.endDate) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n    this.setState({\r\n      dateError: false,\r\n    });\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n    this.setState({\r\n      dateError: false,\r\n    });\r\n  };\r\n\r\n  onChangeStartTime = (event) => {\r\n    const startTime = event.target.value;\r\n    const formattedStartDate = momentUtil.formatAsDDMMYYYY(\r\n      this.state.startDate\r\n    );\r\n    const edate = formattedStartDate.split(\"-\")[0];\r\n    const emonth = formattedStartDate.split(\"-\")[1];\r\n    const eyear = formattedStartDate.split(\"-\")[2];\r\n    let minutes = startTime.getMinutes();\r\n    let hours = startTime.getHours();\r\n    if (minutes.toString().length === 1) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString() === \"0\") {\r\n      hours = \"00\";\r\n    }\r\n    const extractedTime = hours + \":\" + minutes + \":\" + \"00\";\r\n    const final_startTime = new Date(\r\n      eyear + \"-\" + emonth + \"-\" + edate + \"T\" + extractedTime\r\n    );\r\n    this.setState({ pastStartTimeError: false, startTime: final_startTime });\r\n  };\r\n\r\n  onBlurStartTime = (event) => {\r\n    const currentTime = new Date();\r\n    if (\r\n      currentTime > this.state.startTime &&\r\n      this.state.startTime.getTime() !== this.state.start_time.getTime()\r\n    ) {\r\n      this.setState({\r\n        pastStartTimeError: true,\r\n        startTime: this.state.start_time,\r\n      });\r\n    } else {\r\n      this.setState({ pastStartTimeError: false });\r\n      this.props.handlePollStartTimePickerChange(\r\n        this.state.startTime,\r\n        \"pollStartTime\"\r\n      );\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (event) => {\r\n    const endTime = event.target.value;\r\n    const formattedEndDate = momentUtil.formatAsDDMMYYYY(this.state.endDate);\r\n    const edate = formattedEndDate.split(\"-\")[0];\r\n    const emonth = formattedEndDate.split(\"-\")[1];\r\n    const eyear = formattedEndDate.split(\"-\")[2];\r\n    let minutes = endTime.getMinutes();\r\n    let hours = endTime.getHours();\r\n    if (minutes.toString().length === 1) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString() === \"0\") {\r\n      hours = \"00\";\r\n    }\r\n    const extractedTime = hours + \":\" + minutes + \":\" + \"00\";\r\n    const final_endTime = new Date(\r\n      eyear + \"-\" + emonth + \"-\" + edate + \"T\" + extractedTime\r\n    );\r\n    this.setState({ pastEndTimeError: false, endTime: final_endTime });\r\n  };\r\n\r\n  onBlurEndTime = (event) => {\r\n    const currentTime = new Date();\r\n    if (\r\n      currentTime > this.state.endTime &&\r\n      this.state.endTime?.valueOf() !== this.state.end_time?.valueOf()\r\n    ) {\r\n      this.setState({\r\n        pastEndTimeError: true,\r\n        endTime: this.state.end_time,\r\n      });\r\n    } else if (this.state.endTime < this.state.startTime) {\r\n      this.setState({\r\n        endTimeError: true,\r\n        endTime: this.state.end_time,\r\n      });\r\n    } else {\r\n      this.setState({ pastEndTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(\r\n        this.state.endTime,\r\n        \"pollEndTime\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              {this.state.dateError && (\r\n                <Form.Item>\r\n                  <Alert message={VALID_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                {POLL}\r\n              </div>\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span=\"24\" lg={12} className=\"gutter-row\">\r\n                      <DatePicker\r\n                        defaultValue={this.state.startDate}\r\n                        disabledDate={this.disabledStartDate}\r\n                        onChange={(date) => this.onChangeStartDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"sDate\"\r\n                        className=\"required\"\r\n                      />\r\n                      {this.state.pastStartTimeError && (\r\n                        <Alert\r\n                          message={PAST_TIME}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                    </Col>\r\n                    <Col span=\"24\" lg={12}>\r\n                      <TimePicker\r\n                        value={this.state.startTime}\r\n                        onChange={this.onChangeStartTime}\r\n                        onBlur={this.onBlurStartTime}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span=\"24\" lg={12} className=\"gutter-row\">\r\n                      {this.state.endDate !== \"\" ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <DatePicker\r\n                            defaultValue={this.state.endDate}\r\n                            disabledDate={this.disabledEndDate}\r\n                            onChange={(date) => this.onChangeEndDate(date)}\r\n                            className=\"w-100\"\r\n                            name=\"eDate\"\r\n                            className=\"required\"\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <DatePicker\r\n                          defaultValue={this.state.endDate}\r\n                          disabledDate={this.disabledEndDate}\r\n                          onChange={(date) => this.onChangeEndDate(date)}\r\n                          className=\"w-100\"\r\n                          name=\"eDate\"\r\n                          className=\"required\"\r\n                        />\r\n                      )}\r\n                      {this.state.pastEndTimeError && (\r\n                        <Alert\r\n                          message={PAST_TIME}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                      {this.state.endTimeError && (\r\n                        <Alert message={END_TIME} type=\"error\" showIcon></Alert>\r\n                      )}\r\n                    </Col>\r\n                    <Col span=\"24\" lg={12}>\r\n                      <TimePicker\r\n                        value={this.state.endTime}\r\n                        onChange={this.onChangeEndTime}\r\n                        onBlur={this.onBlurEndTime}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DuplicateDateTimeModal;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DuplicteDateTimeModal from \"../modal/DuplicateDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport { BACK, MANAGE_POLLS, PREVIEW_POLL } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst DuplicatePreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  CreateDuplicatePoll,\r\n  data,\r\n  attachmentName,\r\n  showError,\r\n  loader,\r\n  error,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    CreateDuplicatePoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{MANAGE_POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n                  <React.Fragment>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <div className=\"mid-content\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            <p className=\"font-weight-md6\">\r\n                              {poll.pollQuestion}\r\n                            </p>\r\n                            <Row className=\"preview-que\" disabled={true}>\r\n                              <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                                {poll.pollQuestionType === \"1\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Radio>{value}</Radio>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Checkbox>{value}</Checkbox>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"3\" ? (\r\n                                  poll.pollRatingType === \"1\" ? (\r\n                                    <ReactStars\r\n                                      {...starsRating}\r\n                                      value={poll.pollRatingResponse}\r\n                                      name=\"pollRatingResponse\"\r\n                                      onChange={(value) =>\r\n                                        handlePollOnSelect(\r\n                                          value,\r\n                                          \"pollRatingResponse\"\r\n                                        )\r\n                                      }\r\n                                      classNames=\"mt-3\"\r\n                                    />\r\n                                  ) : poll.pollRatingType === \"2\" ? (\r\n                                    <img src={Smiley} alt=\"send message\" />\r\n                                  ) : poll.pollRatingType === \"3\" ? (\r\n                                    <img src={Thermometer} alt=\"send message\" />\r\n                                  ) : poll.pollRatingType === \"4\" ? (\r\n                                    <img src={Thumb} alt=\"send message\" />\r\n                                  ) : poll.pollRatingType === \"5\" ? (\r\n                                    <img src={Steps} alt=\"send message\" />\r\n                                  ) : null\r\n                                ) : null}\r\n                              </div>\r\n                            </Row>\r\n                            <Row className=\"mt-2\">\r\n                              <div class=\"ant-upload-list-item\">\r\n                                <div class=\"ant-upload-list-item-info\">\r\n                                  <span class=\"ant-upload-span\">\r\n                                    <div class=\"ant-upload-text-icon\">\r\n                                      <PaperClipOutlined />\r\n                                    </div>\r\n                                    <span\r\n                                      class=\"ant-upload-list-item-name\"\r\n                                      title=\"add-user-doc\"\r\n                                    >\r\n                                      {poll.pollDocument ? (\r\n                                        <a\r\n                                          href={poll.pollDocument}\r\n                                          download={poll.pollDocument}\r\n                                        >\r\n                                          {attachmentName}\r\n                                        </a>\r\n                                      ) : null}\r\n                                    </span>\r\n                                    <span class=\"ant-upload-list-item-card-actions\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"ant-btn\"\r\n                                      ></button>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mt-5 px-3\">\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          type=\"secondary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"mr-4\"\r\n                          onClick={onBackCreatePoll}\r\n                        >\r\n                          {BACK}\r\n                        </Button>\r\n                        <DuplicteDateTimeModal\r\n                          pollData={poll}\r\n                          handlePollStartDatePickerChange={\r\n                            handlePollStartDatePickerChange\r\n                          }\r\n                          handlePollEndDatePickerChange={\r\n                            handlePollEndDatePickerChange\r\n                          }\r\n                          handlePollStartTimePickerChange={\r\n                            handlePollStartTimePickerChange\r\n                          }\r\n                          handlePollEndTimePickerChange={\r\n                            handlePollEndTimePickerChange\r\n                          }\r\n                          onPublish={onPublish}\r\n                          showError={showError}\r\n                          error={error}\r\n                        />\r\n                      </div>\r\n                    </Spin>\r\n                  </React.Fragment>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DuplicatePreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Spin,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport DuplicatePreviewPoll from \"./DuplicatePreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport Thermometer from \"../../assets/images/thermometer.svg\";\r\nimport Thumb from \"../../assets/images/Thumb.svg\";\r\nimport Smiley from \"../../assets/images/emoji.svg\";\r\nimport Steps from \"../../assets/images/steps.svg\";\r\nimport { CANCEL, PREVIEW } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst DuplicatePoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n    pollRatingType: \"\",\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    if (pollID == 1 || pollID == 2) {\r\n      const options = {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      axios\r\n        .get(\"http://10.0.6.10/data/\" + `poll_${pollID}.json`, options)\r\n        .then((res) => {\r\n          const data = res.data;\r\n          setDefaultPollDetails(data[0]);\r\n        });\r\n    } else {\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n        const data = res.data;\r\n        setPollDetails(data);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const setDefaultPollDetails = (data) => {\r\n    setPoll({\r\n      ...poll,\r\n      pollId: data.poll_id,\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      showResult: data.show_result_to_users,\r\n      pollChartType: data.poll_result_chart_type.toString(),\r\n      pollQuestion: data.question,\r\n      pollQuestionType: data.poll_question_type.toString(),\r\n      pollRatingResponse: \"\",\r\n      pollStartDate: moment().utc().local().format(\"DD-MM-YYYY\"),\r\n      pollEndDate: moment().utc().local().format(\"DD-MM-YYYY\"),\r\n      pollStartTime: moment().utc().local().format(\"hh:mm:ss\"),\r\n      pollEndTime: moment().utc().local().format(\"hh:mm:ss\"),\r\n      status_id: data.status_id,\r\n      pollResponse: data.option_text.map((value) => value.option_text),\r\n      pollOptionText: data.option_text,\r\n    });\r\n\r\n    setAttachmentName(\r\n      data.image_name !== null\r\n        ? data.image_name\r\n        : data.document_name !== null\r\n        ? data.document_name\r\n        : \"\"\r\n    );\r\n    const isImage =\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpeg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"png\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n    form.setFieldsValue({\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      pollQuestion: data.question,\r\n    });\r\n    isPollNameUnique(data.title);\r\n  };\r\n\r\n  const setPollDetails = (data) => {\r\n    setPoll({\r\n      ...poll,\r\n      pollId: data.poll_id,\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      showResult: data.show_result_to_users,\r\n      pollChartType: data.poll_result_chart_type.toString(),\r\n      pollQuestion: data.question,\r\n      pollQuestionType: data.poll_question_type.toString(),\r\n      pollRatingType: data.poll_question_rating_type\r\n        ? data.poll_question_rating_type.toString()\r\n        : \"\",\r\n      pollRatingResponse: \"\",\r\n      pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n      pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n      pollStartTime: data.start_time,\r\n      pollEndTime: data.end_time,\r\n      status_id: data.status_id,\r\n      pollResponse: data.option_text.map((value) => value.option_text),\r\n      pollOptionText: data.option_text,\r\n    });\r\n\r\n    setAttachmentName(\r\n      data.image_name !== null\r\n        ? data.image_name\r\n        : data.document_name !== null\r\n        ? data.document_name\r\n        : \"\"\r\n    );\r\n    const isImage =\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"jpeg\") ||\r\n      data.image\r\n        ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n        .includes(\"png\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n    form.setFieldsValue({\r\n      pollName: data.title,\r\n      pollHelpText: data.help_text,\r\n      pollQuestion: data.question,\r\n    });\r\n    isPollNameUnique(data.title);\r\n  };\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult || poll.pollQuestionType === \"3\") {\r\n        if (!poll.pollChartType && poll.showResult) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else if (poll.pollQuestionType === \"3\" && !poll.pollRatingType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const CreateDuplicatePoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n\r\n    let data = {};\r\n    function convertImgToBase64(url, callback, outputFormat) {\r\n      var canvas = document.createElement(\"CANVAS\");\r\n      var ctx = canvas.getContext(\"2d\");\r\n      var img = new Image();\r\n      img.crossOrigin = \"Anonymous\";\r\n      img.onload = function () {\r\n        canvas.height = img.height;\r\n        canvas.width = img.width;\r\n        ctx.drawImage(img, 0, 0);\r\n        var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n        callback.call(this, dataURL);\r\n        // Clean up\r\n        canvas = null;\r\n      };\r\n      img.src = url;\r\n    }\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollStartDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          poll_question_rating_type: poll.pollRatingType\r\n            ? parseInt(poll.pollRatingType)\r\n            : \"\",\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios.post(BASE_URL + \"poll/\", data, options).then(() => {\r\n        setLoader(false);\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: \"Poll has been created successfully.\",\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      });\r\n    } else {\r\n      if (isImage) {\r\n        data = {\r\n          create_poll: {\r\n            title: poll.pollName,\r\n            help_text: poll.pollHelpText,\r\n            image: poll.pollDocument[0].base64,\r\n            image_name: attachmentName,\r\n            show_result_to_users: poll.showResult ? 1 : 0,\r\n            poll_result_chart_type: poll.pollChartType\r\n              ? parseInt(poll.pollChartType)\r\n              : 2,\r\n            poll_question_type: parseInt(poll.pollQuestionType),\r\n            poll_question_rating_type: poll.pollRatingType\r\n              ? parseInt(poll.pollRatingType)\r\n              : \"\",\r\n            question: poll.pollQuestion,\r\n            start_date: startDate,\r\n            start_time: startTime,\r\n            end_date: endDate,\r\n            end_time: endTime,\r\n            created_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n          },\r\n          option: finalOptions,\r\n        };\r\n      } else {\r\n        data = {\r\n          create_poll: {\r\n            title: poll.pollName,\r\n            help_text: poll.pollHelpText,\r\n            document: poll.pollDocument[0].base64,\r\n            document_name: attachmentName,\r\n            show_result_to_users: poll.showResult ? 1 : 0,\r\n            poll_result_chart_type: poll.pollChartType\r\n              ? parseInt(poll.pollChartType)\r\n              : 2,\r\n            poll_question_type: parseInt(poll.pollQuestionType),\r\n            poll_question_rating_type: poll.pollRatingType\r\n              ? parseInt(poll.pollRatingType)\r\n              : \"\",\r\n            question: poll.pollQuestion,\r\n            start_date: startDate,\r\n            start_time: startTime,\r\n            end_date: endDate,\r\n            end_time: endTime,\r\n            created_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n          },\r\n          option: finalOptions,\r\n        };\r\n      }\r\n      axios.post(BASE_URL + \"poll/\", data, options).then(() => {\r\n        setLoader(false);\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: \"Poll has been created successfully.\",\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (value.file.status === \"removed\") {\r\n      showuploadError(true);\r\n    }\r\n    let fileList = value.fileList.slice(-1);\r\n    checkDoucmentType(value.file.type);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setAttachmentName(value.file.name);\r\n    setPoll({ ...poll, [name]: fileList });\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handlePollImagePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPoll({\r\n      ...poll,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    if (e.target.value !== location.state.title) {\r\n      isPollNameUnique(e.target.value);\r\n    }\r\n  };\r\n\r\n  const isPollNameUnique = (value) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"checkpoll/\", { title: value }, options)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setpollError(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      initialValues={{\r\n                        remember: true,\r\n                      }}\r\n                      form={form}\r\n                    >\r\n                      <Row className=\"py-3\">\r\n                        <h1 className=\"mb-0\">{\"Duplicate Poll\"}</h1>\r\n                      </Row>\r\n                      <Spin spinning={loader} size=\"large\">\r\n                        <div className=\"mid-content\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message=\"Please fill the fields marked with asterisk(*)\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <Col span={24}>\r\n                                <Row>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label=\"Poll Title\"\r\n                                      value={poll.pollName}\r\n                                    >\r\n                                      <TextArea\r\n                                        showCount\r\n                                        maxLength={50}\r\n                                        htmlFor=\"polltitle\"\r\n                                        value={poll.pollName}\r\n                                        id=\"pollName\"\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        onBlur={(e) =>\r\n                                          isPollNameDuplicate(e, \"pollName\")\r\n                                        }\r\n                                        autoComplete=\"off\"\r\n                                        className={`required ${styles.sm_textarea}`}\r\n                                      />\r\n\r\n                                      {pollError === \"status: false\" &&\r\n                                        poll.pollName\r\n                                          .replace(/^\\s*/, \"\")\r\n                                          .replace(/\\s*$/, \"\").length > 0 &&\r\n                                        poll.pollName.length > 0 && (\r\n                                          <CheckCircleTwoTone\r\n                                            className=\"successCheck\"\r\n                                            twoToneColor=\"#52c41a\"\r\n                                          />\r\n                                        )}\r\n                                      {pollError == \"status: true\" && (\r\n                                        <Alert\r\n                                          message=\"Sorry! This Poll title already exists in the system. Please use a different name.\"\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      )}\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label=\"Description\"\r\n                                      value={poll.pollHelpText}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"pollHelpText\"\r\n                                        id=\"pollHelpText\"\r\n                                        validateStatus=\"success\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"helptext\"\r\n                                          id=\"pollHelpText\"\r\n                                          name=\"pollHelpText\"\r\n                                          value={poll.pollHelpText}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"gutter-row mt-3\">\r\n                                    <h6>Upload</h6>\r\n                                    <Form.Item\r\n                                      name=\"upload\"\r\n                                      className=\"upload-list\"\r\n                                      valuePropName=\"fileList\"\r\n                                    >\r\n                                      <UploadImage\r\n                                        file={poll.pollDocument}\r\n                                        handleStepOneUpload={\r\n                                          handleStepOneUpload\r\n                                        }\r\n                                        handleBeforeUpload={handleBeforeUpload}\r\n                                        handleOnRemove={handleOnRemove}\r\n                                        handlePollImagePreview={\r\n                                          handlePollImagePreview\r\n                                        }\r\n                                        handleCancel={handleCancel}\r\n                                        poll={poll}\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row\">\r\n                                <Row className=\"align-items-center d-flex\">\r\n                                  <Col span={24} md={8} lg={8} xl={6}>\r\n                                    <Form.Item\r\n                                      name=\"showresult\"\r\n                                      label=\"Show result to users \"\r\n                                      className=\"mb-0\"\r\n                                    >\r\n                                      <Switch\r\n                                        id=\"showResult\"\r\n                                        checked={poll.showResult}\r\n                                        onChange={(checked, e) =>\r\n                                          onChange(checked, e)\r\n                                        }\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                  {poll.showResult ? (\r\n                                    <Col span={24} lg={6}>\r\n                                      <FloatLabel\r\n                                        label=\"Display final results as\"\r\n                                        value={poll.pollChartType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"result\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"input-control\"\r\n                                              htmlFor=\"result\"\r\n                                              className=\"required\"\r\n                                              value={\r\n                                                poll.pollChartType === \"2\"\r\n                                                  ? \"\"\r\n                                                  : poll.pollChartType\r\n                                              }\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollChartType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                Pie Chart\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                Bar Chart\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                Star Format\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                      {chartError && (\r\n                                        <Form.Item>\r\n                                          <Alert\r\n                                            message=\"Please select the chat type as star\"\r\n                                            type=\"error\"\r\n                                            showIcon\r\n                                          ></Alert>\r\n                                        </Form.Item>\r\n                                      )}\r\n                                    </Col>\r\n                                  ) : (\r\n                                    <Col></Col>\r\n                                  )}\r\n                                </Row>\r\n                              </Col>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mid-content mt-4\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              <Col span={24}>\r\n                                <Row className=\"d-block\">\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <Row\r\n                                      gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                                    >\r\n                                      <Col\r\n                                        span={24}\r\n                                        md={8}\r\n                                        lg={8}\r\n                                        className=\"mb-3 t-2 mb-y-0 gutter-row\"\r\n                                      >\r\n                                        <FloatLabel\r\n                                          label=\"Question Type\"\r\n                                          value={poll.pollQuestionType}\r\n                                        >\r\n                                          <Form.Item\r\n                                            className=\"required\"\r\n                                            name=\"questiontype\"\r\n                                          >\r\n                                            <>\r\n                                              <Select\r\n                                                className=\"\"\r\n                                                htmlFor=\"questiontype\"\r\n                                                className=\"required\"\r\n                                                id=\"pollQuestionType\"\r\n                                                value={poll.pollQuestionType}\r\n                                                onSelect={(value) =>\r\n                                                  handlePollOnSelect(\r\n                                                    value,\r\n                                                    \"pollQuestionType\"\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <Select.Option value=\"1\">\r\n                                                  Single Choice\r\n                                                </Select.Option>\r\n                                                <Select.Option value=\"2\">\r\n                                                  Multiple Choice\r\n                                                </Select.Option>\r\n                                                <Select.Option value=\"3\">\r\n                                                  Star Rating\r\n                                                  {poll.status_id === 4}\r\n                                                </Select.Option>\r\n                                              </Select>\r\n                                            </>\r\n                                          </Form.Item>\r\n                                        </FloatLabel>\r\n                                      </Col>\r\n                                      {poll.pollQuestionType === \"3\" ? (\r\n                                        <Col\r\n                                          span={24}\r\n                                          md={10}\r\n                                          lg={8}\r\n                                          className=\"gutter-row\"\r\n                                        >\r\n                                          <FloatLabel\r\n                                            label=\"Rating Type\"\r\n                                            value={poll.pollRatingType}\r\n                                          >\r\n                                            <Form.Item\r\n                                              className=\"required mb-0\"\r\n                                              name=\"ratingtype\"\r\n                                            >\r\n                                              <>\r\n                                                <Select\r\n                                                  className=\"\"\r\n                                                  htmlFor=\"ratingtype\"\r\n                                                  className=\"required\"\r\n                                                  id=\"pollRatingType\"\r\n                                                  value={poll.pollRatingType}\r\n                                                  onSelect={(value) =>\r\n                                                    handlePollOnSelect(\r\n                                                      value,\r\n                                                      \"pollRatingType\"\r\n                                                    )\r\n                                                  }\r\n                                                >\r\n                                                  <Select.Option value=\"1\">\r\n                                                    Stars\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"2\">\r\n                                                    Smiley\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"3\">\r\n                                                    Thermometer\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"4\">\r\n                                                    ThumbsUp\r\n                                                  </Select.Option>\r\n                                                  <Select.Option value=\"5\">\r\n                                                    Ladder\r\n                                                  </Select.Option>\r\n                                                </Select>\r\n                                              </>\r\n                                            </Form.Item>\r\n                                          </FloatLabel>\r\n                                        </Col>\r\n                                      ) : null}\r\n                                    </Row>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label=\"Question\"\r\n                                      value={poll.pollQuestion}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control edit-input\"\r\n                                          name=\"pollQuestion\"\r\n                                          id=\"pollQuestion\"\r\n                                          htmlFor=\"pollQuestion\"\r\n                                          className=\"required\"\r\n                                          defaultValue={poll.pollQuestion}\r\n                                          value={poll.pollQuestion}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"mt-4\">\r\n                                    {poll.pollQuestionType === \"3\" &&\r\n                                    poll.pollRatingType ? (\r\n                                      poll.pollRatingType === \"1\" ? (\r\n                                        <ReactStars\r\n                                          {...starsRating}\r\n                                          value={poll.pollRatingResponse}\r\n                                          name=\"pollRatingResponse\"\r\n                                          onChange={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollRatingResponse\"\r\n                                            )\r\n                                          }\r\n                                          classNames=\"mt-3\"\r\n                                        />\r\n                                      ) : poll.pollRatingType === \"2\" ? (\r\n                                        <img src={Smiley} alt=\"send message\" />\r\n                                      ) : poll.pollRatingType === \"3\" ? (\r\n                                        <img\r\n                                          src={Thermometer}\r\n                                          alt=\"send message\"\r\n                                        />\r\n                                      ) : poll.pollRatingType === \"4\" ? (\r\n                                        <img src={Thumb} alt=\"send message\" />\r\n                                      ) : poll.pollRatingType === \"5\" ? (\r\n                                        <img src={Steps} alt=\"send message\" />\r\n                                      ) : null\r\n                                    ) : poll.pollQuestionType === \"1\" ? (\r\n                                      <div>\r\n                                        <MultiChoice\r\n                                          setSingleChoiceResponse={\r\n                                            setSingleChoiceResponse\r\n                                          }\r\n                                          pollResponse={poll.pollResponse}\r\n                                        />\r\n                                      </div>\r\n                                    ) : poll.pollQuestionType === \"2\" ? (\r\n                                      <MultiChoice\r\n                                        pollResponse={poll.pollResponse}\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                      />\r\n                                    ) : null}\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n\r\n                              <div className=\"mt-5\">\r\n                                <Button\r\n                                  type=\"primary\"\r\n                                  className=\"md mr-4\"\r\n                                  onClick={onPreview}\r\n                                >\r\n                                  {PREVIEW}\r\n                                </Button>\r\n                                <Button\r\n                                  type=\"secondary\"\r\n                                  type=\"secondary\"\r\n                                  htmlType=\"submit\"\r\n                                  onClick={onCancel}\r\n                                >\r\n                                  {CANCEL}\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Spin>\r\n                    </Form>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <DuplicatePreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            CreateDuplicatePoll={CreateDuplicatePoll}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n            showError={showError}\r\n            error={error}\r\n            loader={loader}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DuplicatePoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"@reactchartjs/react-chart.js\";\r\nimport { ALL } from \"../../values\";\r\n\r\nconst VerticalBar = (props) => {\r\n  const dates = [\r\n    \"01\",\r\n    \"02\",\r\n    \"03\",\r\n    \"04\",\r\n    \"05\",\r\n    \"06\",\r\n    \"07\",\r\n    \"08\",\r\n    \"09\",\r\n    \"10\",\r\n    \"11\",\r\n    \"12\",\r\n    \"13\",\r\n    \"14\",\r\n    \"15\",\r\n    \"16\",\r\n    \"17\",\r\n    \"18\",\r\n    \"19\",\r\n    \"20\",\r\n    \"21\",\r\n    \"22\",\r\n    \"23\",\r\n    \"24\",\r\n    \"25\",\r\n    \"26\",\r\n    \"27\",\r\n    \"28\",\r\n    \"29\",\r\n    \"30\",\r\n    \"31\",\r\n  ];\r\n  const [data, setData] = useState({\r\n    labels: [],\r\n    datasets: [],\r\n  });\r\n  const [options, setOptions] = useState({\r\n    title: {\r\n      display: true,\r\n      text: props.chartTitle,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    let finalData = {};\r\n    let xAxisData = [];\r\n    let labelsData = [];\r\n    setOptions({\r\n      title: {\r\n        display: true,\r\n        text: props.chartTitle,\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            title: {\r\n              display: true,\r\n              text: props.chartTitle,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            title: {\r\n              display: true,\r\n              text: props.chartTitle,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    });\r\n    const reportData = Object.entries(props.report);\r\n    let nestedReportData = {};\r\n    reportData.forEach((report) => {\r\n      nestedReportData = {\r\n        ...nestedReportData,\r\n        [report[0]]: report[1],\r\n      };\r\n    });\r\n    const dataInMonths = props.dateRange === \"months\";\r\n    const dataInYears = props.dateRange === \"years\";\r\n    if (dataInMonths) {\r\n      for (let dataItem = 0; dataItem <= props.months.length - 1; dataItem++) {\r\n        xAxisData.push(0);\r\n      }\r\n      labelsData = props.months;\r\n      Object.keys(nestedReportData).forEach((value) => {\r\n        props.months.forEach((month, key) => {\r\n          if (parseInt(value) - 1 === key) {\r\n            xAxisData[key] = nestedReportData[value];\r\n          }\r\n        });\r\n      });\r\n    } else if (dataInYears) {\r\n      let yearsArray = [props.years[0]];\r\n      if (props.years[0] !== props.years[1]) {\r\n        const difference = parseInt(props.years[1]) - parseInt(props.years[0]);\r\n        for (let loop = 0; loop < difference - 1; loop++) {\r\n          yearsArray.push(props.years[0] + 1);\r\n        }\r\n        yearsArray.push(props.years[1]);\r\n      }\r\n      labelsData = yearsArray;\r\n      for (let dataItem = 0; dataItem <= yearsArray.length - 1; dataItem++) {\r\n        xAxisData.push(0);\r\n      }\r\n      Object.keys(nestedReportData).forEach((value) => {\r\n        yearsArray.forEach((year, key) => {\r\n          if (parseInt(value) === year) {\r\n            xAxisData[key] = nestedReportData[value];\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      labelsData = dates;\r\n      for (let dataItem = 0; dataItem <= dates.length - 1; dataItem++) {\r\n        xAxisData.push(0);\r\n      }\r\n      Object.keys(nestedReportData).forEach((value) => {\r\n        dates.forEach((date, key) => {\r\n          if (value.split(\"-\")[2] === date) {\r\n            xAxisData[key] = nestedReportData[value];\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (props.selectedLines.length > 0) {\r\n      let sets = [];\r\n      props.selectedLines.map((value) => {\r\n        let set = {\r\n          label: value.line_name,\r\n          data: xAxisData,\r\n          backgroundColor: random_hex_color_code(value.line_name),\r\n          borderWidth: 0,\r\n        };\r\n        sets.push(set);\r\n      });\r\n      finalData = {\r\n        ...data,\r\n        labels: labelsData,\r\n        datasets: sets,\r\n      };\r\n      setData(finalData);\r\n    } else {\r\n      finalData = {\r\n        ...data,\r\n        labels: labelsData,\r\n        datasets: [\r\n          {\r\n            label: ALL,\r\n            data: xAxisData,\r\n            backgroundColor: random_hex_color_code(ALL),\r\n            borderWidth: 0,\r\n          },\r\n        ],\r\n      };\r\n      setData(finalData);\r\n    }\r\n    props.sendBackData(labelsData, xAxisData);\r\n  }, [props.selectedLines, props.report]);\r\n\r\n  const random_hex_color_code = (string) => {\r\n    var hash = 0;\r\n    for (var i = 0; i < string.length; i++) {\r\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    var colour = \"#\";\r\n    for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xff;\r\n      colour += (\"00\" + value.toString(16)).substr(-2);\r\n    }\r\n    return colour;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Bar id=\"barChart\" data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerticalBar;\r\n","import React from \"react\";\r\nimport { Pie } from \"@reactchartjs/react-chart.js\";\r\n\r\nconst PieChart = (props) => {\r\n  const data = {\r\n    labels: [\"Unresolved Messages\", \"Resolved Messages\"],\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: [\r\n          props.totalMessages - props.resolvedMessages,\r\n          props.resolvedMessages,\r\n        ],\r\n        backgroundColor: [\"rgba(234, 80, 55)\", \"rgba(32, 50, 92)\"],\r\n        borderColor: [\"rgba(255, 255, 255)\", \"rgba(255, 255, 255)\"],\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: props.chartTitle,\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Pie id=\"pieChart\" data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"@reactchartjs/react-chart.js\";\r\nimport {\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n} from \"../../labels\";\r\n\r\nconst DoughNutChart = (props) => {\r\n  const [data, setData] = useState({\r\n    labels: [URGENCY_LEVEL_HIGH, URGENCY_LEVEL_MEDIUM, URGENCY_LEVEL_LOW],\r\n    datasets: [],\r\n  });\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: props.chartTitle,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const urgencies = [\r\n      props.urgencyLevels.high,\r\n      props.urgencyLevels.medium,\r\n      props.urgencyLevels.low,\r\n    ];\r\n    let set = [\r\n      {\r\n        label: \"\",\r\n        data: urgencies,\r\n        backgroundColor: [\r\n          \"rgba(234, 80, 55)\",\r\n          \"rgba(32, 50, 92)\",\r\n          \"rgba(194, 194, 214)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 255, 255)\",\r\n          \"rgba(255, 255, 255)\",\r\n          \"rgba(255, 255, 255)\",\r\n        ],\r\n        borderWidth: 3,\r\n      },\r\n    ];\r\n    const finalData = {\r\n      ...data,\r\n      datasets: set,\r\n    };\r\n    setData(finalData);\r\n  }, [props.urgencyLevels]);\r\n\r\n  return (\r\n    <>\r\n      <Doughnut id=\"doughNutChart\" data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoughNutChart;\r\n","import React from \"react\";\r\nimport { TreeSelect } from \"antd\";\r\nimport { ALL } from \"../../values\";\r\nimport { SELECT_HOTLINE, SELECT_OPENLINE } from \"../../messages\";\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\n\r\nclass MultiSelection extends React.Component {\r\n  state = {\r\n    value: ALL,\r\n    treeData: [],\r\n  };\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (this.props.lines !== nextProps.lines) {\r\n      const linesData = [\r\n        {\r\n          title: ALL,\r\n          value: ALL,\r\n          key: ALL,\r\n        },\r\n      ];\r\n      this.props.lines.map((value) => {\r\n        linesData.push({\r\n          title: value.line_name,\r\n          value: value.line_id,\r\n          key: value.line_id,\r\n        });\r\n      });\r\n      this.setState({ treeData: linesData });\r\n    }\r\n    if (this.props.data.path !== nextProps.data.path) {\r\n      this.setState({ value: ALL });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var data = this.state.treeData;\r\n    let filteredData = [];\r\n    if (e.length > 1 && e[0] === \"All\") {\r\n      filteredData = e.filter((filter) => filter !== \"All\");\r\n    } else if (e.length > 1 && e.includes(\"All\")) {\r\n      filteredData = e.filter((filter) => filter === \"All\");\r\n    } else {\r\n      filteredData = e;\r\n    }\r\n    if (filteredData.length === 0) {\r\n      this.setState({ value: ALL });\r\n    } else {\r\n      this.setState({ value: filteredData });\r\n    }\r\n    const selectedLines = [];\r\n    data.forEach((item) => {\r\n      filteredData.forEach((line) => {\r\n        if (item.value === line) {\r\n          selectedLines.push({\r\n            line_name: item.title,\r\n            line_id: item.value,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.props.setSelectedLines(selectedLines);\r\n  };\r\n\r\n  render() {\r\n    const tProps = {\r\n      treeData: this.state.treeData,\r\n      value: this.state.value,\r\n      onChange: this.onChange,\r\n      treeCheckable: true,\r\n      placeholder: this.props.data.path.includes(\"hotline\")\r\n        ? SELECT_HOTLINE\r\n        : SELECT_OPENLINE,\r\n      showCheckedStrategy: SHOW_PARENT,\r\n      style: {\r\n        width: \"100%\",\r\n      },\r\n    };\r\n    return <TreeSelect {...tProps} />;\r\n  }\r\n}\r\n\r\nexport default MultiSelection;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { DOWNLOAD, DOWNLOAD_AS_CSV, DOWNLOAD_AS_PDF } from \"../../headings\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        <Button onClick={() => props.showDownloadOptions(\"pdf\")}>\r\n          {DOWNLOAD_AS_PDF}\r\n        </Button>\r\n      </li>\r\n      <li>\r\n        <Button onClick={() => props.showDownloadOptions(\"csv\")}>\r\n          {DOWNLOAD_AS_CSV}\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass ReportsPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <Button type=\"primary\">{DOWNLOAD}</Button>\r\n          <DownOutlined className=\"down-arrow-ico white\" />\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportsPopover;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Radio, DatePicker, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport VerticalBar from \"./VerticalChart\";\r\nimport PieChart from \"./PieChart\";\r\nimport DoughNutChart from \"./DoughNutChart\";\r\nimport { DownloadOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport MultiSelection from \"./MultiSelection\";\r\nimport IdbSidebar from \"./IdbSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  CHOOSE_DATE_RANGE,\r\n  WEEKLY,\r\n  MONTHLY,\r\n  YEARLY,\r\n  TOTAL_MESSAGES,\r\n  MESSAGES_RESOLVED,\r\n  AVERAGE_RESOLVED_TIME,\r\n  RESOLVED_MESSAGES,\r\n  HOTLINE_REPORTS,\r\n  OPENLINE_REPORTS,\r\n  MESSAGES_BASED_ON_URGENCY_LEVEL,\r\n  CONVERSATION_COUNT,\r\n} from \"../../headings\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {\r\n  HOTLINE_MESSAGES_FROM,\r\n  TO,\r\n  HOTLINE_MESSAGES_REPORTING,\r\n  OPENLINE_MESSAGES_REPORTING,\r\n  OPENLINE_MESSAGES_FROM,\r\n} from \"../../messages\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  JANUARY,\r\n  FEBRUARY,\r\n  MARCH,\r\n  APRIL,\r\n  MAY,\r\n  JUNE,\r\n  JULY,\r\n  AUGUST,\r\n  SEPTEMBER,\r\n  OCTOBER,\r\n  NOVEMBER,\r\n  DECEMBER,\r\n  DAY,\r\n  MONTH,\r\n  YEAR,\r\n} from \"../../values\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport ReportsPopover from \"./ReportsPopover\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nvar months = [\r\n  JANUARY,\r\n  FEBRUARY,\r\n  MARCH,\r\n  APRIL,\r\n  MAY,\r\n  JUNE,\r\n  JULY,\r\n  AUGUST,\r\n  SEPTEMBER,\r\n  OCTOBER,\r\n  NOVEMBER,\r\n  DECEMBER,\r\n];\r\nconst { Content } = Layout;\r\nconst { RangePicker } = DatePicker;\r\nconst Reports = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [date, setDate] = useState(\"\");\r\n  const [radioValue, setRadioValue] = useState(\"weekly\");\r\n  const [period, setPeriod] = useState(\"\");\r\n  const [selectedLines, setSelectedLines] = useState([]);\r\n  const [lines, setLines] = useState([]);\r\n  const [dataPoints, setDataPoints] = useState([]);\r\n  const [dateRange, setDateRange] = useState(\"\");\r\n  const [years, setYears] = useState([]);\r\n  const [totalMessagesCount, setTotalMessagesCount] = useState(\"0\");\r\n  const [closedConversationsCount, setClosedConversationsCount] = useState(\"0\");\r\n  const [averageResolvedTime, setAverageResolvedTime] = useState(\"0\");\r\n  const [urgencyLevels, setUrgencyLevels] = useState({});\r\n  const [report, setReport] = useState({});\r\n  const Messages_From = props.path.includes(\"hotline\")\r\n    ? HOTLINE_MESSAGES_FROM\r\n    : OPENLINE_MESSAGES_FROM;\r\n  const Messages_Reporting = props.path.includes(\"hotline\")\r\n    ? HOTLINE_MESSAGES_REPORTING\r\n    : OPENLINE_MESSAGES_REPORTING;\r\n  const [chartTitle, setChartTitle] = useState(Messages_Reporting);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const path = props.path.includes(\"hotline\")\r\n      ? \"getUserallHotlines/\"\r\n      : \"getUserAllOpenlines/\";\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          path +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((response) => {\r\n        const lines = [];\r\n        response.data.map((value) => {\r\n          lines.push({\r\n            line_name: props.path.includes(\"hotline\")\r\n              ? value.hotline_name\r\n              : value.openline.name,\r\n            line_id: props.path.includes(\"hotline\")\r\n              ? value.hotline_id\r\n              : value.openline.openline_id,\r\n          });\r\n        });\r\n        setLines(lines);\r\n      });\r\n    setDate(\"\");\r\n    setSelectedLines([]);\r\n    setLoader(false);\r\n    setPeriod(\"\");\r\n    setDateRange(\"months\");\r\n    setChartTitle(Messages_Reporting);\r\n    setTotalMessagesCount(\"0\");\r\n    setClosedConversationsCount(\"0\");\r\n    setAverageResolvedTime(\"0\");\r\n  }, [props.path]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    let line_ids = [];\r\n    if (\r\n      selectedLines.length === 0 ||\r\n      (selectedLines.length === 1 && selectedLines[0].line_name === \"All\")\r\n    ) {\r\n      line_ids = lines.map((value) => value.line_id);\r\n    } else {\r\n      line_ids = selectedLines.map((value) => value.line_id);\r\n    }\r\n    let yearValue = \"\";\r\n    let monthValue = \"\";\r\n    let dayValue = \"\";\r\n    if (date?.length === 0 || !date) {\r\n      yearValue = \"0\";\r\n      monthValue = \"1\";\r\n      dayValue = \"0\";\r\n      setDateRange(\"months\");\r\n      setChartTitle(Messages_Reporting);\r\n    } else {\r\n      yearValue = dateRange === \"years\" ? \"1\" : \"0\";\r\n      monthValue = dateRange === \"months\" ? \"1\" : \"0\";\r\n      dayValue = dateRange === \"days\" ? \"1\" : \"0\";\r\n    }\r\n    let input = {};\r\n    const now = new Date();\r\n    const past90DaysTimeStamp = now.setDate(now.getDate() - 90);\r\n    const past90Days = new Date(past90DaysTimeStamp);\r\n    if (line_ids.length > 0) {\r\n      if (props.path.includes(\"hotline\")) {\r\n        input = {\r\n          years: yearValue,\r\n          month: monthValue,\r\n          days: dayValue,\r\n          filter: {\r\n            start_date:\r\n              date && date !== \"\"\r\n                ? moment(date[0], moment.defaultFormat)\r\n                : past90Days,\r\n            end_date:\r\n              date && date !== \"\"\r\n                ? moment(date[1], moment.defaultFormat)\r\n                : new Date(),\r\n            hotline_ids: line_ids,\r\n          },\r\n        };\r\n      } else {\r\n        input = {\r\n          years: yearValue,\r\n          month: monthValue,\r\n          days: dayValue,\r\n          filter: {\r\n            start_date:\r\n              date && date !== \"\"\r\n                ? moment(date[0], moment.defaultFormat)\r\n                : past90Days,\r\n            end_date:\r\n              date && date !== \"\"\r\n                ? moment(date[1], moment.defaultFormat)\r\n                : new Date(),\r\n            openline_ids: line_ids,\r\n          },\r\n        };\r\n      }\r\n\r\n      const path = props.path.includes(\"hotline\")\r\n        ? \"hotlineReporting/\"\r\n        : \"openlineReporting/\";\r\n      axios\r\n        .post(BASE_URL + path, input, options)\r\n        .then((res) => {\r\n          setTotalMessagesCount(res.data.total_conversation_count);\r\n          if (res.data.avg_time_to_resolve_conversation > 0) {\r\n            setAverageResolvedTime(\r\n              Math.round(res.data.avg_time_to_resolve_conversation) + 1\r\n            );\r\n          } else {\r\n            setAverageResolvedTime(res.data.avg_time_to_resolve_conversation);\r\n          }\r\n          setClosedConversationsCount(res.data.closed_conversation_count);\r\n          setUrgencyLevels(res.data.urgency_level);\r\n          setReport(res.data.report);\r\n          setLoader(false);\r\n        })\r\n        .catch((error) => setLoader(false));\r\n    }\r\n  }, [lines, date, selectedLines]);\r\n\r\n  const onRadioChange = (e) => {\r\n    setRadioValue(e.target.value);\r\n  };\r\n\r\n  const downloadChartImage = (type) => {\r\n    var url_base64jp = \"\";\r\n    var a = \"\";\r\n    if (type === \"barChart\") {\r\n      /* Get image of canvas element */\r\n      url_base64jp = document.getElementById(\"barChart\").toDataURL(\"image/jpg\");\r\n      /* Get download button (tag: <a></a>) */\r\n      a = document.getElementById(\"downloadBarChart\");\r\n    } else if (type === \"doughNutChart\") {\r\n      url_base64jp = document\r\n        .getElementById(\"doughNutChart\")\r\n        .toDataURL(\"image/jpg\");\r\n      a = document.getElementById(\"downloadDoughNutChart\");\r\n    } else {\r\n      url_base64jp = document.getElementById(\"pieChart\").toDataURL(\"image/jpg\");\r\n      a = document.getElementById(\"downloadPieChart\");\r\n    }\r\n    /* Insert chart image url to download button (tag: <a></a>) */\r\n    a.href = url_base64jp;\r\n  };\r\n\r\n  const downloadPDF = () => {\r\n    let element = document.getElementById(\"barChart\");\r\n    html2canvas(element).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF();\r\n      pdf.addImage(imgData, \"JPEG\", 0, 0, 200, 100);\r\n      const filename = props.path?.includes(\"hotline\")\r\n        ? \"hotline-report.pdf\"\r\n        : \"openline-report.pdf\";\r\n      pdf.save(filename);\r\n    });\r\n  };\r\n\r\n  function convertChartDataToCSV(data) {\r\n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\r\n    data = data || null;\r\n    if (data == null || !data.length) {\r\n      return null;\r\n    }\r\n    columnDelimiter = \",\";\r\n    lineDelimiter = \"\\n\";\r\n    keys = Object.keys(data[0]);\r\n    result = \"\";\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n    data.forEach(function (item) {\r\n      ctr = 0;\r\n      keys.forEach(function (key) {\r\n        if (ctr > 0) result += columnDelimiter;\r\n        result += item[key];\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  const sendBackData = (x_data, y_data) => {\r\n    setDataPoints([x_data, y_data]);\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    let points = [];\r\n    let x_index = MONTH;\r\n    dataPoints[0].forEach((xpoint, index) => {\r\n      dataPoints[1].forEach((ypoint, key) => {\r\n        if (index === key) {\r\n          if (dateRange === \"months\") {\r\n            x_index = MONTH;\r\n          } else if (dateRange === \"years\") {\r\n            x_index = YEAR;\r\n          } else {\r\n            x_index = DAY;\r\n          }\r\n          points.push({ [x_index]: xpoint, [CONVERSATION_COUNT]: ypoint });\r\n        }\r\n      });\r\n    });\r\n    var data, filename, link;\r\n    var csv = \"\";\r\n    csv += convertChartDataToCSV(points);\r\n    if (csv == null) return;\r\n    filename = props.path?.includes(\"hotline\")\r\n      ? \"hotline-report.csv\"\r\n      : \"openline-report.csv\";\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = \"data:text/csv;charset=utf-8,\" + csv;\r\n    }\r\n    data = encodeURI(csv);\r\n    link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", data);\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const showDownloadOptions = (value) => {\r\n    if (value === \"pdf\") {\r\n      downloadPDF();\r\n    } else {\r\n      downloadCSV();\r\n    }\r\n  };\r\n\r\n  const handleDatePickerChange = (date) => {\r\n    setDate(date);\r\n    if (date) {\r\n      var startMonth = parseInt(date[0].format(\"M\"));\r\n      var startDay = parseInt(date[0].format(\"D\"));\r\n      var startYear = parseInt(date[0].format(\"YYYY\"));\r\n      const start_date = [startDay, startMonth - 1, startYear];\r\n      var endMonth = parseInt(date[1].format(\"M\"));\r\n      var endDay = parseInt(date[1].format(\"D\"));\r\n      var endYear = parseInt(date[1].format(\"YYYY\"));\r\n      const end_date = [endDay, endMonth - 1, endYear];\r\n      setYears([startYear, endYear]);\r\n      const differenceInDates = Math.abs(date[0].diff(date[1], \"days\"));\r\n      if (differenceInDates <= 31) {\r\n        setDateRange(\"days\");\r\n      } else if (differenceInDates > 30 && differenceInDates < 365) {\r\n        setDateRange(\"months\");\r\n      } else {\r\n        setDateRange(\"years\");\r\n      }\r\n      if (startYear !== endYear) {\r\n        if (startYear > endYear) {\r\n          setChartTitle(\r\n            Messages_From +\r\n              months[end_date[1]] +\r\n              \" \" +\r\n              end_date[0] +\r\n              \", \" +\r\n              end_date[2] +\r\n              TO +\r\n              months[start_date[1]] +\r\n              \" \" +\r\n              start_date[0] +\r\n              \", \" +\r\n              start_date[2]\r\n          );\r\n          setPeriod(\"greater year\");\r\n        } else {\r\n          setChartTitle(\r\n            Messages_From +\r\n              months[start_date[1]] +\r\n              \" \" +\r\n              start_date[0] +\r\n              \", \" +\r\n              start_date[2] +\r\n              TO +\r\n              months[end_date[1]] +\r\n              \" \" +\r\n              end_date[0] +\r\n              \", \" +\r\n              end_date[2]\r\n          );\r\n          setPeriod(\"lesser year\");\r\n        }\r\n      } else if (startYear === endYear && startMonth !== endMonth) {\r\n        if (startMonth > endMonth) {\r\n          setChartTitle(\r\n            Messages_From +\r\n              months[end_date[1]] +\r\n              \" \" +\r\n              end_date[0] +\r\n              TO +\r\n              months[start_date[1]] +\r\n              \" \" +\r\n              start_date[0]\r\n          );\r\n          setPeriod(\"greater month\");\r\n        } else {\r\n          setChartTitle(\r\n            Messages_From +\r\n              months[start_date[1]] +\r\n              \" \" +\r\n              start_date[0] +\r\n              TO +\r\n              months[end_date[1]] +\r\n              \" \" +\r\n              end_date[0]\r\n          );\r\n          setPeriod(\"lesser month\");\r\n        }\r\n      } else if (\r\n        startYear === endYear &&\r\n        startMonth === endMonth &&\r\n        startDay !== endDay\r\n      ) {\r\n        if (startDay > endDay) {\r\n          setChartTitle(\r\n            Messages_From +\r\n              months[endMonth - 1] +\r\n              \" \" +\r\n              end_date[0] +\r\n              TO +\r\n              months[startMonth - 1] +\r\n              \" \" +\r\n              start_date[0]\r\n          );\r\n          setPeriod(\"greater day\");\r\n        } else {\r\n          setChartTitle(\r\n            Messages_From +\r\n              months[startMonth - 1] +\r\n              \" \" +\r\n              start_date[0] +\r\n              TO +\r\n              months[endMonth - 1] +\r\n              \" \" +\r\n              end_date[0]\r\n          );\r\n          setPeriod(\"lesser day\");\r\n        }\r\n      } else if (\r\n        startYear === endYear &&\r\n        startMonth === endMonth &&\r\n        startDay === endDay\r\n      ) {\r\n        setChartTitle(\r\n          Messages_From +\r\n            months[startMonth - 1] +\r\n            \" \" +\r\n            start_date[0] +\r\n            TO +\r\n            months[endMonth - 1] +\r\n            \" \" +\r\n            end_date[0]\r\n        );\r\n        setPeriod(\"same day\");\r\n      }\r\n    } else {\r\n      setPeriod(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amIDBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"reports\">\r\n        <Layout>\r\n          <Layout>\r\n            <IdbSidebar amIDBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  {props.path.includes(\"hotline\")\r\n                    ? HOTLINE_REPORTS\r\n                    : OPENLINE_REPORTS}\r\n                </h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={12} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col\r\n                          span={24}\r\n                          lg={12}\r\n                          className=\"gutter-row mt-2 mt-lg-0\"\r\n                        >\r\n                          <MultiSelection\r\n                            lines={lines}\r\n                            setSelectedLines={setSelectedLines}\r\n                            data={props}\r\n                            selectedLines={selectedLines}\r\n                          />\r\n                          <DownOutlined className=\"down-arrow-ico\" />\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          lg={12}\r\n                          className=\"gutter-row mt-2 mt-lg-2 mt-xl-0\"\r\n                        >\r\n                          <h6>{CHOOSE_DATE_RANGE}</h6>\r\n                          <Col span={24} className=\"mt-2 mt-lg-0\">\r\n                            <RangePicker\r\n                              name=\"date\"\r\n                              value={date}\r\n                              onChange={(value) =>\r\n                                handleDatePickerChange(value)\r\n                              }\r\n                            />\r\n                          </Col>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={24} lg={12} className=\"mt-2 mt-lg-0\">\r\n                      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        {/* <Col\r\n                          span={24}\r\n                          lg={16}\r\n                          className=\"gutter-row d-flex align-items-center justify-content-left justify-content-lg-end chart-view mt-3 mt-lg-0 mb-3 mb-lg-0\"\r\n                        >\r\n                          <Radio.Group\r\n                            onChange={onRadioChange}\r\n                            value={radioValue}\r\n                          >\r\n                            <Radio.Button value=\"weekly\">{WEEKLY}</Radio.Button>\r\n                            <Radio.Button value=\"monthly\">\r\n                              {MONTHLY}\r\n                            </Radio.Button>\r\n                            <Radio.Button value=\"yearly\">{YEARLY}</Radio.Button>\r\n                          </Radio.Group>\r\n                        </Col> */}\r\n                        <Col\r\n                          span={24}\r\n                          lg={8}\r\n                          className=\"gutter-row d-flex align-items-center justify-content-end\"\r\n                        >\r\n                          <ReportsPopover\r\n                            showDownloadOptions={showDownloadOptions}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Row>\r\n                  <Col span={24} className=\"gutter-row\">\r\n                    <div className=\"mid-content mt-4 h-auto d-flex justify-content-center align-items-center text-center\">\r\n                      <Col span={8} className=\"divider-right font-weight-md6\">\r\n                        <div className=\"font-18\">{totalMessagesCount}</div>\r\n                        <div className=\"font-12\">{TOTAL_MESSAGES}</div>\r\n                      </Col>\r\n                      <Col span={8} className=\"divider-right font-weight-md6\">\r\n                        <div className=\"font-18\">\r\n                          {closedConversationsCount}\r\n                        </div>\r\n                        <div className=\"font-12\">{MESSAGES_RESOLVED}</div>\r\n                      </Col>\r\n                      <Col span={8} className=\"font-weight-md6\">\r\n                        <div className=\"font-18\">{averageResolvedTime}d</div>\r\n                        <div className=\"font-12\">{AVERAGE_RESOLVED_TIME}</div>\r\n                      </Col>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                  <Col span={24} lg={24} className=\"gutter-row\">\r\n                    <div className=\"mid-content mt-4\">\r\n                      <Col span={24} className=\"gutter-row\">\r\n                        <Row className=\"d-inine-flex justify-content-between align-items-center mb-3\">\r\n                          <h6 className=\"font-weight-md6 font-14 mb-0\">\r\n                            {period !== \"\" ? chartTitle : Messages_Reporting}\r\n                          </h6>\r\n                          <span>\r\n                            <a\r\n                              id=\"downloadBarChart\"\r\n                              download={\r\n                                props.path?.includes(\"hotline\")\r\n                                  ? \"Hotline-report.jpg\"\r\n                                  : \"Openline-report.jpg\"\r\n                              }\r\n                              href=\"\"\r\n                            >\r\n                              <DownloadOutlined\r\n                                className=\"font-18 cursor-pointer\"\r\n                                onClick={() => downloadChartImage(\"barChart\")}\r\n                              />\r\n                            </a>\r\n                          </span>\r\n                        </Row>\r\n                        <VerticalBar\r\n                          months={months}\r\n                          selectedLines={selectedLines}\r\n                          report={report}\r\n                          sendBackData={sendBackData}\r\n                          chartTitle={chartTitle}\r\n                          years={years}\r\n                          dateRange={dateRange}\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col span={24} lg={12} className=\"gutter-row\">\r\n                    <div className=\"mid-content mt-4\">\r\n                      <Col span={24} className=\"gutter-row\">\r\n                        <Row className=\"d-inine-flex justify-content-between align-items-center mb-3\">\r\n                          <h6 className=\"font-weight-md6 my-3\">\r\n                            {MESSAGES_BASED_ON_URGENCY_LEVEL}\r\n                          </h6>\r\n                          <span>\r\n                            <a\r\n                              id=\"downloadDoughNutChart\"\r\n                              download=\"Messages-based-on-urgency-level.jpg\"\r\n                              href=\"\"\r\n                            >\r\n                              <DownloadOutlined\r\n                                className=\"font-18 cursor-pointer\"\r\n                                onClick={() =>\r\n                                  downloadChartImage(\"doughNutChart\")\r\n                                }\r\n                              />\r\n                            </a>\r\n                          </span>\r\n                        </Row>\r\n                        <Row>\r\n                          <h4 className=\"font-weight-md6 my-3\">\r\n                            {TOTAL_MESSAGES}: {totalMessagesCount}\r\n                          </h4>\r\n                        </Row>\r\n                        <DoughNutChart\r\n                          urgencyLevels={urgencyLevels}\r\n                          chartTitle={MESSAGES_BASED_ON_URGENCY_LEVEL}\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col span={24} lg={12} className=\"gutter-row\">\r\n                    <div className=\"mid-content mt-4\">\r\n                      <Col span={24} className=\"gutter-row\">\r\n                        <Row className=\"d-inine-flex justify-content-between align-items-center mb-3\">\r\n                          <h6 className=\"font-weight-md6 my-3\">\r\n                            {RESOLVED_MESSAGES}\r\n                          </h6>\r\n                          <span>\r\n                            <a\r\n                              id=\"downloadPieChart\"\r\n                              download=\"Resolved-messages.jpg\"\r\n                              href=\"\"\r\n                            >\r\n                              <DownloadOutlined\r\n                                className=\"font-18 cursor-pointer\"\r\n                                onClick={() => downloadChartImage(\"pieChart\")}\r\n                              />\r\n                            </a>\r\n                          </span>\r\n                        </Row>\r\n                        <Row>\r\n                          <h4 className=\"font-weight-md6 my-3\">\r\n                            {TOTAL_MESSAGES}: {totalMessagesCount}\r\n                          </h4>\r\n                        </Row>\r\n                        <PieChart\r\n                          resolvedMessages={closedConversationsCount}\r\n                          totalMessages={totalMessagesCount}\r\n                          chartTitle={RESOLVED_MESSAGES}\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default Reports;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Upload,\r\n  Modal,\r\n} from \"antd\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { CLOSE_TEXT_MODAL, NEXT, UPLOAD_IMAGE } from \"../../headings\";\r\nimport { DATE, DESCRIPTION, OPENLINE_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  UPLOAD_IMAGE_REQUIRED,\r\n} from \"../../errors\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenlineStepOne = ({\r\n  next,\r\n  imageError,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOpenLineInfo.openelineName &&\r\n      stepOneOpenLineInfo.openelineName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.description &&\r\n      stepOneOpenLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.file &&\r\n      stepOneOpenLineInfo.file.length > 0 &&\r\n      stepOneOpenLineInfo.status &&\r\n      stepOneOpenLineInfo.sDate\r\n    ) {\r\n      if (!imageError && hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOpenline/\",\r\n        { openline_name: stepOneOpenLineInfo.openelineName },\r\n\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <FloatLabel\r\n        label={OPENLINE_NAME}\r\n        value={stepOneOpenLineInfo.openelineName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"openelineName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DIRECTORY_NAME,\r\n            },\r\n          ]}\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneOpenLineInfo.openelineName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"openelineName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"openelineName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated == \"status: false\" &&\r\n            stepOneOpenLineInfo.openelineName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneOpenLineInfo.openelineName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={OPENLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneOpenLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DESCRIPTION,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneOpenLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneOpenLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: SELECT_DATE,\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneOpenLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneOpenLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control required\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <ImgCrop rotate modalOk=\"Upload\">\r\n            <Upload\r\n              listType=\"picture\"\r\n              fileList={stepOneOpenLineInfo.file}\r\n              onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n              onPreview={(value) => handleStepOnePreview(value)}\r\n              accept=\"image/png, image/jpeg, image/gif\"\r\n            >\r\n              {stepOneOpenLineInfo.file.length === 0 && (\r\n                <Button type=\"link\" className=\"link pl-0\">\r\n                  <span className=\"icon icon-upload pr-2\"></span>\r\n                  {UPLOAD_IMAGE}\r\n                </Button>\r\n              )}\r\n            </Upload>\r\n          </ImgCrop>\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLineInfo.previewVisible}\r\n            title={stepOneOpenLineInfo.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLineInfo.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      {imageError && (\r\n        <Form.Item>\r\n          <Alert message={UPLOAD_IMAGE_REQUIRED} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { ACCESS, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\n\r\nclass CreateOpenlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n          loader: false,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status === 1 ? (\r\n                <div className=\"primary-tag-rounded tag\">\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div className=\"secondary-tag-rounded tag\">\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <Spin spinning={this.state.loader} size=\"large\">\r\n          <div id=\"no-more-tables\">\r\n            <Table\r\n              rowSelection={rowSelection}\r\n              columns={columns}\r\n              dataSource={this.state.filterData}\r\n              rowKey=\"unique_identifier\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"steps-action mt-5\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              style={{ margin: \"0 8px\" }}\r\n              onClick={() => this.stepTwoPrev()}\r\n              data-test=\"steptwoPrev\"\r\n            >\r\n              {BACK}\r\n            </Button>\r\n            <Button\r\n              className=\"md\"\r\n              type=\"primary\"\r\n              onClick={() => this.stepTwoNext()}\r\n              data-test=\"steptwoNext\"\r\n            >\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Upload, Modal } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, CLOSE_TEXT_MODAL, CREATE } from \"../../headings\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control required\">\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture\"\r\n            disabled\r\n            fileList={stepOneOpenLine.file}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n          ></Upload>\r\n\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLine.previewVisible}\r\n            title={stepOneOpenLine.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLine.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, message, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateOpenlineStepOne from \"../openlineForm/CreateOpenlineStepOne\";\r\nimport CreateOpenlineStepTwo from \"../openlineForm/CreateOpenlineStepTwo\";\r\nimport CreateOpenlineStepThree from \"../openlineForm/CreateOpenlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  OPENLINE_CREATE_STEP1,\r\n  OPENLINE_CREATE_STEP2,\r\n  OPENLINE_CREATE_STEP3,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport {\r\n  CREATE_OPENLINE_DIRECTORY,\r\n  OPENLINE_DIRECTORY,\r\n  CREATE_OPENLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: OPENLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n    imagename: \"\",\r\n  });\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload = (value) => {\r\n    if (!value.type.includes(\"image\")) {\r\n      setImageError(true);\r\n      message.error(\r\n        `The file that you attemped to upload ${value.name} is not supported`\r\n      );\r\n      return false;\r\n    } else {\r\n      setImageError(false);\r\n    }\r\n    return value.type;\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      [name]: fileList,\r\n      imagename: filename,\r\n    });\r\n  };\r\n\r\n  const handleReaderloaded = (readerEvt) => {\r\n    let binaryString = readerEvt.target.result;\r\n    setStepOneOpenLine({ ...stepOneOpenLine, file: btoa(binaryString) });\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setStepOneOpenLine({ ...stepOneOpenLine, previewVisible: false });\r\n  const setNameValidHandle = (value) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_openline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        openline_image: stepOneOpenLine.file[0].base64,\r\n        openline_image_name: stepOneOpenLine.imagename,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>{OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_OPENLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content\">\r\n                        {current == 0 ? (\r\n                          <CreateOpenlineStepOne\r\n                            next={next}\r\n                            imageError={imageError}\r\n                            stepOneOpenLineInfo={stepOneOpenLine}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneUpload={handleStepOneUpload}\r\n                            handleBeforeUpload={handleBeforeUpload}\r\n                            handleStepOnePreview={handleStepOnePreview}\r\n                            handleCancel={handleCancel}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            addIcon={addIcon}\r\n                            getIconText={getIconText}\r\n                            setNameValidHandle={setNameValidHandle}\r\n                            hotlineErrorUpdated={hotlineErrorUpdated}\r\n                            data-test=\"CreateHotlineStepOne\"\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOpenlineStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepOneHotLine={stepOneOpenLine}\r\n                            stepTwoOpenLine={stepTwoOpenLine}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOpenlineStepThree\r\n                            prev={prev}\r\n                            createNewHotLine={createHotLine}\r\n                            stepOneOpenLine={stepOneOpenLine}\r\n                            stepTwoOpenLine={stepTwoOpenLine}\r\n                            getIconText={getIconText}\r\n                            handleStepOnePreview={handleStepOnePreview}\r\n                            handleCancel={handleCancel}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpenlineCreation from \"../../components/openlineCreation/OpenlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, OPENLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  CREATE_NEW_OPENLINE_TEXT_PART1,\r\n  CREATE_NEW_OPENLINE_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{OPENLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART1}\r\n                          <br />\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <OpenlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst OpenlinePermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: NAME,\r\n      dataIndex: \"first_name\",\r\n      key: \"first_name\",\r\n      width: \"30%\",\r\n      render: (record, response) => {\r\n        return {\r\n          children: response.user.first_name,\r\n          props: {\r\n            \"data-title\": \"Name\",\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlinePermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchEmployee = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this openline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchEmployee;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport OpenlinePermission from \"../table/OpenlinePermission\";\r\nimport SearchEmployee from \"../autocomplete/SearchEmployee\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, DONE, SHOW } from \"../../headings\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass OpenlinePermissioModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedOpenLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      openlineId: this.props.selectedRows.openline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineAssignEmpl/\" +\r\n          this.props.selectedRows.openline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedOpenLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedOpenLines = [...this.state.assignedOpenLines];\r\n    let index = assignedOpenLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedOpenLines[index] = {\r\n      ...assignedOpenLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedOpenLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL + \"getOpenlineAssignEmpl/\" + value.openline.openline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedOpenLines, assignedEmp } = this.state;\r\n    const x = {\r\n      user: {\r\n        user_id: parseInt(options.user_id),\r\n        first_name: options.value,\r\n      },\r\n      openline: {\r\n        openline_id: this.state.openlineId,\r\n      },\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n    };\r\n    const y = {\r\n      openline_id: this.state.openlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedOpenLines: [...assignedOpenLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <OpenlinePermission\r\n              data={this.state.assignedOpenLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchEmployee\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedOpenLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlinePermissioModal);\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NO_TEXT_MODAL, YES_TEXT_MODAL } from \"../../headings\";\r\nimport { DELETE_CONFIRM_OPENLINE } from \"../../messages\";\r\n\r\nclass DeleteOpenlineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"openline/\" + this.props.openlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/openlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Openline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_OPENLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteOpenlineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteOpenlineModal from \"../../components/modal/DeleteOpenlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/editopenline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/editopenline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteOpenlineModal openlineId={test.openline_id} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OpenlinePermissioModal from \"../modal/OpenlinePermissioModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport OpenlinePopover from \"../table/OpenlinePopover\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\nimport {\r\n  END_DATE,\r\n  OPENLINE_NAME,\r\n  PERMISSIONS,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { OPENLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpenlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    openlines?.forEach((openline) => {\r\n      openline.start_date = moment(openline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      openline.end_date = moment(openline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.openlines !== nextProps.openlines) {\r\n      nextProps.openlines?.forEach((openline) => {\r\n        openline.start_date = moment(openline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        openline.end_date = moment(openline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.openlines }, () => {\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(\r\n          BASE_URL + \"changeOpenlineStatus/\" + record.openline_id + \"/\",\r\n          data,\r\n          options\r\n        )\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: OPENLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Openline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <OpenlinePermissioModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <OpenlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{OPENLINE_DIRECTORY}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createopenline\">\r\n                        <Buttons value=\"Create Openline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"openline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOpenlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpenlines from \"./ShowAllOpenlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\n\r\nconst OpenlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.openlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.openlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.openlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.openlinesdata !== null &&\r\n    props.openlinesdata.length === 0 ? (\r\n    <OpenlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllOpenlines\r\n      statusOnClicked={statusOnClicked}\r\n      openlines={props.openlinesdata}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, EDIT_OPENLINE, UPDATE, UPLOAD_IMAGE } from \"../../headings\";\r\nimport {\r\n  STATUS_INACTIVE,\r\n  STATUS_ACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n} from \"../../errors\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditOpenline = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [openLineData, setOpenLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    openline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    openline_image: \"\",\r\n    openline_image_name: \"\",\r\n    status_id: \"\",\r\n    iconHtml: \"\",\r\n    ImgfileList: [],\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [openlineErrorUpdated, setopenlineErrorUpdated] = useState(\"\");\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date).format(\"YYYY-MM-DD\");\r\n    const eDate = moment(location.state.end_date).format(\"YYYY-MM-DD\");\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n\r\n    setOpenLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      openline_id: location.state.openline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      openline_image: location.state.openline_image,\r\n      openline_image_name: location.state.openline_image_name,\r\n      status_id: location.state.status_id.toString(),\r\n      ImgfileList: [\r\n        {\r\n          uid: \"1\",\r\n          name: location.state.openline_image_name,\r\n          status: \"done\",\r\n          url: location.state.openline_image,\r\n        },\r\n      ],\r\n    });\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setOpenLineData({ ...openLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: value });\r\n  };\r\n\r\n  function convertImgToBase64(url, callback, outputFormat) {\r\n    var canvas = document.createElement(\"CANVAS\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = new Image();\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.onload = function () {\r\n      canvas.height = img.height;\r\n      canvas.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n      callback.call(this, dataURL);\r\n      // Clean up\r\n      canvas = null;\r\n    };\r\n    img.src = url;\r\n  }\r\n\r\n  const editOpenline = (e) => {\r\n    if (\r\n      openLineData.name &&\r\n      openLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      openLineData.help_text &&\r\n      openLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      openLineData.openline_image.length > 0 &&\r\n      openLineData.status_id &&\r\n      openLineData.start_date\r\n    ) {\r\n      setLoader(true);\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n      let data = {};\r\n      if (openLineData.ImgfileList[0].uid === \"1\") {\r\n        convertImgToBase64(openLineData.openline_image, function (base64Img) {\r\n          data = {\r\n            end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n            help_text: openLineData.help_text,\r\n            openline_id: openLineData.openline_id,\r\n            openline_image: base64Img,\r\n            name: openLineData.name,\r\n            openline_image_name: openLineData.openline_image_name,\r\n            start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n            status_id: parseInt(openLineData.status_id),\r\n            updated_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n            created_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n          };\r\n\r\n          if (\r\n            openlineErrorUpdated == \"status: false\" ||\r\n            openLineData.name === location.state.name\r\n          ) {\r\n            updateOpenLine(data);\r\n          }\r\n        });\r\n      } else {\r\n        data = {\r\n          end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n          help_text: openLineData.help_text,\r\n          openline_id: openLineData.openline_id,\r\n          openline_image: openLineData.ImgfileList[0].base64,\r\n          name: openLineData.name,\r\n          openline_image_name: openLineData.openline_image_name,\r\n          start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n          status_id: parseInt(openLineData.status_id),\r\n          updated_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        };\r\n        if (\r\n          openlineErrorUpdated == \"status: false\" ||\r\n          openLineData.name === location.state.name\r\n        ) {\r\n          updateOpenLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/openlinedirectory\";\r\n  };\r\n\r\n  const updateOpenLine = (data) => {\r\n    const token = authHeader();\r\n    let openLineId = openLineData.openline_id;\r\n    delete openLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"openline/\" + openLineId + \"/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoader(false);\r\n          window.location = \"/orgcc/openlinedirectory\";\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    // setOpenLineData({ ...openLineData, [name]: fileList });\r\n    setOpenLineData({\r\n      ...openLineData,\r\n      ImgfileList: fileList,\r\n      openline_image: fileList,\r\n      openline_image_name: filename,\r\n    });\r\n\r\n    if (value.file.status === \"removed\") {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        ImgfileList: [],\r\n        openline_image: \"\",\r\n        openline_image_name: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      convertImgToBase64(file.url, function (base64Img) {\r\n        // await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setOpenLineData({\r\n          ...openLineData,\r\n          previewImage: base64Img,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setOpenLineData({ ...openLineData, fileList: [] });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setOpenLineData({ ...openLineData, previewVisible: false });\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckOpenlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOpenline/\",\r\n          { openline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setopenlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setopenlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_OPENLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n                    <FloatLabel\r\n                      label={DIRECTORY_NAME}\r\n                      value={openLineData.name}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DIRECTORY_NAME,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={openLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckOpenlineName(e)}\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {openlineErrorUpdated == \"status: false\" &&\r\n                          openLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          openLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {openlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={OPENLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={openLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={openLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            name=\"help_text\"\r\n                            id=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          value={openLineData.start_date}\r\n                          disabledDate={disabledDate}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: SELECT_DATE,\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={openLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={openLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control required\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <ImgCrop rotate modalOk=\"Upload\">\r\n                          <Upload\r\n                            listType=\"picture\"\r\n                            fileList={openLineData.ImgfileList}\r\n                            onChange={(value) =>\r\n                              handleStepOneUpload(value, \"openline_image\")\r\n                            }\r\n                            onPreview={(value) => handleStepOnePreview(value)}\r\n                            handleOnRemove={handleOnRemove}\r\n                            accept=\"image/png, image/jpeg, image/gif\"\r\n                          >\r\n                            {openLineData.openline_image.length === 0 && (\r\n                              <Button type=\"link\" className=\"link pl-0\">\r\n                                <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                                {UPLOAD_IMAGE}\r\n                              </Button>\r\n                            )}\r\n                          </Upload>\r\n                        </ImgCrop>\r\n                        <Modal\r\n                          visible={openLineData.previewVisible}\r\n                          title={openLineData.previewTitle}\r\n                          centered\r\n                          onOk={(value) => handleCancel(value)}\r\n                          okButtonProps={{\r\n                            children: \"Custom OK\",\r\n                          }}\r\n                          cancelButtonProps={{ style: { display: \"none\" } }}\r\n                          okText=\"Close\"\r\n                        >\r\n                          <img\r\n                            alt=\"example\"\r\n                            style={{ width: \"100%\" }}\r\n                            src={openLineData.previewImage}\r\n                          />\r\n                        </Modal>\r\n\r\n                        {getIconText(openLineData.openline_id) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(openLineData.iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      openLineData.openline_id\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(openLineData.openline_id)}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editOpenline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditOpenline;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from \"./components/login/ForgotPassword\";\r\nimport ResetPassword from \"./components/login/ResetPassword\";\r\nimport Login from \"./components/login/Login\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport OpenlineMessages from \"./components/openlineMessages/OpenlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport AddEmployee from \"./components/manageEmp/AddEmployee\";\r\nimport ImportFile from \"./components/manageEmp/ImportFile\";\r\nimport CreateManually from \"./components/manageEmp/CreateManually\";\r\nimport CreatePoll from \"./components/managePolls/CreatePoll\";\r\nimport PreviewPoll from \"./components/managePolls/PreviewPoll\";\r\nimport PollsContainer from \"./components/managePolls/PollsContainer\";\r\nimport PollResponse from \"./components/managePolls/PollResponse\";\r\nimport EditPoll from \"./components/managePolls/EditPoll\";\r\nimport ExistingPolls from \"./components/managePolls/ExistingPolls\";\r\nimport DuplicatePoll from \"./components/managePolls/DuplicatePoll\";\r\nimport Reports from \"./components/reports/Reports\";\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\nimport OpenlineCreation from \"./components/openlineCreation/OpenlineCreation\";\r\nimport EditOpenline from \"./components/openlineDirectory/EditOpenline\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  let isidb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n    isidb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_amcc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isorgcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_org_cc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isamweb =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_am_web_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isidb =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_idb_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <ProtectedRoute path=\"/changepassword\" component={ChangePassword} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route exact={true} path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route exact={true} path=\"/resetpassword\" component={ResetPassword} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/edithotline\" ||\r\n          url === \"/orgcc/editopenline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/orgcc/pollsdirectory\" ||\r\n          url === \"/orgcc/createpoll\" ||\r\n          url.includes(\"/orgcc/editpoll\") ||\r\n          url === \"/orgcc/previewpoll\" ||\r\n          url === \"/orgcc/pollresponse\" ||\r\n          url === \"/orgcc/existingpolls\" ||\r\n          url.includes(\"/orgcc/duplicatepoll\") ||\r\n          url === \"/orgcc/addemployee\" ||\r\n          url === \"/orgcc/createemployee\" ||\r\n          url === \"/orgcc/importemployee\" ||\r\n          url === \"/\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/importemployee\"\r\n              amorg\r\n              component={ImportFile}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/addemployee\"\r\n              amorg\r\n              component={AddEmployee}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createemployee\"\r\n              amorg\r\n              component={CreateManually}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editopenline\"\r\n              amorg\r\n              component={EditOpenline}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollsdirectory\"\r\n              amorg\r\n              component={PollsContainer}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/previewpoll\"\r\n              amorg\r\n              component={PreviewPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createpoll\"\r\n              amorg\r\n              component={CreatePoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollresponse\"\r\n              amorg\r\n              component={PollResponse}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editpoll/:id\"\r\n              amorg\r\n              component={EditPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/existingpolls\"\r\n              amorg\r\n              component={ExistingPolls}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/duplicatepoll/:id\"\r\n              amorg\r\n              component={DuplicatePoll}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/amweb/openlinemessages\" ||\r\n            url === \"/hotlinereports\" ||\r\n            url === \"/openlinereports\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/hotlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/openlinemessages\"\r\n                amweb\r\n                component={OpenlineMessages}\r\n              />\r\n            </Switch>\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url === \"/\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url.includes(\"/amcc/orgdetails\") ||\r\n            url === \"/login\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/orgdetails/:id\"\r\n                amcc\r\n                component={OrgDetails}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : isidb &&\r\n          (url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/idb/hotlinereports\" ||\r\n            url === \"/idb/openlinereports\") ? (\r\n          <Switch>\r\n            {\" \"}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/idb/hotlinereports\"\r\n              amidb\r\n              component={Reports}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/idb/openlinereports\"\r\n              amidb\r\n              component={Reports}\r\n            />\r\n          </Switch>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"current\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst userFName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.first_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userLName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.last_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userEmail = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.email, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userMobile = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.mobile_number, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst amweb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_am_web_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_amcc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amsuper = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_super_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amorgcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_org_cc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amidb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_idb_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amseeded = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_seeded_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amapp = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_app_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst userData = {\r\n  ...user,\r\n  user_data: {\r\n    ...user?.user_data,\r\n    email: userEmail,\r\n    mobile_number: userMobile,\r\n    is_am_web_user: amweb,\r\n    is_amcc_user: amcc,\r\n    is_super_user: amsuper,\r\n    is_app_user: amapp,\r\n    is_org_cc_user: amorgcc,\r\n    is_idb_user: amidb,\r\n    is_seeded_user: amseeded,\r\n  },\r\n  user_details: {\r\n    ...user?.user_details,\r\n    first_name: userFName,\r\n    last_name: userLName,\r\n  },\r\n};\r\n\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\nconst initialState = user\r\n  ? {\r\n      isLoggedIn: true,\r\n      user: userData,\r\n      current: password.replaceAll('^\"+|\"+$', \"\"),\r\n    }\r\n  : { isLoggedIn: false, user: null, current: null };\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        current: payload.current,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = null;\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { POLL_FAIL, POLL_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.pollsdata = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case POLL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pollsdata: payload.pollsdata,\r\n      };\r\n    case POLL_FAIL:\r\n      return {\r\n        ...state,\r\n        pollsdata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\nimport poll from \"./poll\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline,\r\n  poll\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { Modal } from \"antd\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport { ABOUT_TO_LOGOUT_TEXT, LOGGED_OUT_TEXT } from \"./messages\";\r\nimport { OK_TEXT_MODAL } from \"./headings\";\r\n\r\nfunction App() {\r\n  const timeOutIdle = 1200000; // 20 minutes\r\n  const timeOutLogout = 60000; // a minute\r\n  var idleTimer = null;\r\n  const [idleModal, showIdleModal] = useState(false);\r\n  const [logoutModal, showLogoutModal] = useState(false);\r\n  const [timedOut, setTimedOut] = useState(false);\r\n\r\n  const onIdle = (e) => {\r\n    if (AppStorage.get(\"user\")) {\r\n      const isTimedOut = timedOut;\r\n      if (isTimedOut) {\r\n        showIdleModal(false);\r\n        showLogoutModal(true);\r\n      } else {\r\n        showIdleModal(true);\r\n        idleTimer.reset();\r\n        setTimedOut(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIdleOk = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleIdleCancel = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleLogoutOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleLogoutCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const onActive = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  const onAction = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        ref={(ref) => {\r\n          idleTimer = ref;\r\n        }}\r\n        element={document}\r\n        onIdle={onIdle}\r\n        onAction={onAction}\r\n        onActive={onActive}\r\n        debounce={250}\r\n        timeout={!timedOut ? timeOutIdle : timeOutLogout}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n            <Modal\r\n              visible={idleModal}\r\n              onOk={handleIdleOk}\r\n              onCancel={handleIdleCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{ABOUT_TO_LOGOUT_TEXT}</p>\r\n            </Modal>\r\n            <Modal\r\n              visible={logoutModal}\r\n              onOk={handleLogoutOk}\r\n              onCancel={handleLogoutCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{LOGGED_OUT_TEXT}</p>\r\n            </Modal>\r\n            <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_sidebar\":\"manageEmp_no_sidebar__2uv3-\",\"box_bordered\":\"manageEmp_box_bordered__20QUh\",\"icon\":\"manageEmp_icon__3jMQO\",\"box_bordered_active\":\"manageEmp_box_bordered_active__1eDgI\"};","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-openlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-openline.7fcce0f6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sm_textarea\":\"managePoll_sm_textarea__3nkFR\",\"poll_info\":\"managePoll_poll_info__1ojZa\",\"circle_white\":\"managePoll_circle_white__1uaCi\",\"select_md\":\"managePoll_select_md__13um9\",\"ant-select-dropdown\":\"managePoll_ant-select-dropdown__28tj6\",\"edit_tag\":\"managePoll_edit_tag__1rhNS\",\"add_tag\":\"managePoll_add_tag__n7gkH\",\"ant-tag\":\"managePoll_ant-tag__zesSw\"};","module.exports = __webpack_public_path__ + \"static/media/thermometer.34d42075.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thumb.11938490.svg\";","module.exports = __webpack_public_path__ + \"static/media/emoji.0d8c3e70.svg\";","module.exports = __webpack_public_path__ + \"static/media/steps.677f415b.svg\";"],"sourceRoot":""}