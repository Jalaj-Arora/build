{"version":3,"sources":["assets/icons/dots-icon.svg","assets/images/amcc-vector.svg","assets/images/create-hotline.svg","assets/icons/send.svg","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/icons/pencil.svg","assets/images/work-chart.svg","assets/images/no-hotlines.svg","assets/images/no-openlines.svg","assets/images/create-openline.svg","assets/images/manage-polls.svg","components/managePolls/managePoll.module.scss","utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","values.js","headings.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","components/manageOrg/AccSidebar.js","containers/ShowDetails.js","components/table/Table.js","components/button/Button.js","services/auth-header.js","labels.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","errors.js","components/form/CreateOrgStepOne.js","messages.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/modal/PrivacyPolicyModal.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/login/Login.js","components/hotlineMessages/AmWebSidebar.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","components/modal/AssignHotlineModal.js","utils/HighlightTextHotline.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/SearchHotlineMessages.js","components/hotlineMessages/HotlineMessagesLeftSection.js","components/hotlineMessages/NoHotlineMessages.js","components/hotlineMessages/Spinner.js","components/hotlineMessages/HotlineMessages.js","components/openlineMessages/AmWebSidebar.js","utils/HighlightTextOpenline.js","components/openlineMessages/FilterPopover.js","components/openlineMessages/AddedNotes.js","components/openlineMessages/Note.js","components/openlineMessages/Activity.js","components/openlineMessages/Assigned.js","components/openlineMessages/Messages.js","components/openlineMessages/SearchOpenlineMessages.js","components/openlineMessages/OpenlineMessagesLeftSection.js","components/openlineMessages/NoOpenlineMessages.js","components/openlineMessages/OpenlineMessages.js","containers/PermissionDenied.js","components/modal/ResetPwdModal.js","components/form/EditSeededUsers.js","components/form/AddNewSeededUser.js","components/form/OrgDetails.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/manageEmp/AddEmp.js","components/manageEmp/UploadFiles.js","components/manageEmp/ImportFile.js","components/manageEmp/CreateManually.js","components/managePolls/UploadImage.js","components/managePolls/MultipleChoice.js","components/modal/DateTimeModal.js","utils/momentUtil.js","components/managePolls/PreviewPoll.js","components/managePolls/CreatePoll.js","components/managePolls/ManagePolls.js","components/modal/ExtendEndDate.js","components/table/PollPopover.js","components/managePolls/ShowAllPolls.js","components/table/CreatePollPopover.js","actions/poll.js","components/managePolls/PollsContainer.js","components/managePolls/PollResponse.js","components/modal/EditDateTimeModal.js","components/managePolls/EditPreviewPoll.js","components/managePolls/EditPoll.js","components/managePolls/ExistingPolls.js","components/openlineForm/CreateOpenlineStepOne.js","components/openlineForm/CreateOpenlineStepTwo.js","components/openlineForm/CreateOpenlineStepThree.js","components/openlineCreation/OpenlineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/table/OpenlinePermission.js","components/autocomplete/SearchEmployee.js","components/modal/OpenlinePermissioModal.js","components/modal/DeleteOpenlineModal.js","components/table/OpenlinePopover.js","components/openlineDirectory/ShowAllOpenlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/openlineDirectory/EditOpenline.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/poll.js","reducers/index.js","services/stores.js","App.js","index.js","components/manageEmp/manageEmp.module.scss"],"names":["module","exports","getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","email","password","page","axios","post","response","data","userFName","AES","encrypt","user_details","first_name","toString","userLName","last_name","departmentId","department_id","orgUserId","org_user_id","endDate","end_date","startDate","start_date","userEmail","user_data","userMobile","mobile_number","orgId","organization_id","userId","user_id","amweb","is_am_web_user","amcc","is_amcc_user","amorgcc","is_org_cc_user","amidb","is_idb_user","amseeded","is_seeded_user","amapp","is_app_user","userData","JSON","stringify","clear","window","location","reload","login","dispatch","AuthService","then","type","payload","user","current","Promise","resolve","error","message","reject","STATUS_ACTIVE","OK_TEXT_MODAL","NEXT","BACK","CANCEL","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","userType","decrypt","enc","Utf8","name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","collapsed","toggle","setState","defaultKey","createElement","MenuUnfoldOutlined","MenuFoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","AccSidebar","ShowDetails","history","useHistory","path","record","showModal","push","orgName","identifier","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","authHeader","CommonAuthHeader","parse","tokens","access","FIRST_NAME","LAST_NAME","DATE","MOBILE","STATUS","ACCESS","ACTIONS","Content","ShowAllOrganizations","statusClicked","via","replaceAll","Date","moment","format","status_id","Authorization","put","notification","config","open","description","statusOnClicked","onSearch","filterDt","filterIt","filterData","searchBy","organizations","forEach","org","utc","local","nextProps","arr","searchKey","filter","obj","Object","keys","some","title","dataIndex","width","render","children","Pencil","placeholder","Button","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","REQUIRED_MESSAGE","MAX_CHAR_LIMIT","VALID_EMAIL","VALID_MOBILE","HOTLINE_ALREADY_EXISTS","SELECT_DATE","PAST_TIME","OPENLINE_ALREADY_EXISTS","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","orgIdCount","orgNameCount","setOrgNameAlreadyExists","setOrgIDAlreadyExists","orgIDAlreadyExists","orgNameAlreadyExists","Form","useForm","form","showError","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","organization_name","res","CheckOrganizationName","autoComplete","maxLength","replace","CheckCircleTwoTone","twoToneColor","organizationId","validateStatus","orgID","CheckOrganizationID","status1","onSelect","Option","s1Date","date","disabledDate","startOf","htmlType","preventDefault","DELETE_CONFIRM","ASSIGN_HOTLINE_TEXT_PART2","STATUS_CHANGED_NOTIFICATION_PART1","STATUS_CHANGED_NOTIFICATION_PART2","STATUS_CHANGED_NOTIFICATION_PART3","ABOUT_TO_LOGOUT_TEXT","LOGGED_OUT_TEXT","DeleteModal","visible","show","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","deleteOrg","handleCancel","delete","hotlineId","catch","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","lastName","mobile","date2","status2","fromStepTwo","showAddSeededUserForm","addSeededUser","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleMobile","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","fNameCount","lNameCount","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","passwordValidationError","showPasswordValidationError","stepTwoPrev","s2Date","test","target","validateEmailAddress","country","userID","CreateOrgStepThree","loader","apiError","createNewOrganization","addSeededUserFromThirdStep","disabled","spinning","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","setLoader","setApiError","stepOneOrganization","setStepOneOrganization","setOrgNameExists","setOrgIDExists","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","setOrgNameCount","setOrgIDCount","setFNameCount","setLNameCount","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","organization","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","hotLineId","manageOrgData","manageOrg","setStatusClicked","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","flag","property","manageEmp","PrivacyPolicyModal","layout","wrapperCol","tailLayout","ForgotPassword","handleLogin","onChangeUsername","onChangePassword","loading","isamcc","isorgcc","isamweb","isAuthenticated","commonForAllUsers","canSubmit","Amccvector","onSubmit","ref","c","initialValues","remember","rules","required","ResetPassword","Login","isEnabled","AmWebSidebar","ChangePassword","currentPwd","newPwd","confirmPwd","pwd","setPwd","passwordChanged","setPasswordChanged","setError","userName","setUserName","handleOnChange","ENTER_CURRENT_PASSWORD","Password","ENTER_NEW_PASSWORD","validatePassword","CONFIRM_YOUR_PASSWORD","getFieldValue","validator","_","dependencies","hasFeedback","old_password","new_password","confirm_password","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","setNameValidHandle","hotlineErrorUpdated","iconText","setdisabledbtn","directoryName","ENTER_DIRECTORY_NAME","showCount","hotline_name","CheckHotlineName","ENTER_DESCRIPTION","sDate","status","valuePropName","hotlineIconId","ReactHtmlParser","iconHtml","CreateHotlineStepTwo","employeeData","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","prevProps","rowSelection","selectedRowKeys","margin","TextArea","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setHotlineErrorUpdated","setStepTwoHotLine","values","permissions","per","id1","reduce","accumulator","currentValue","can_respond","can_view_reports","created_by","concat","a","async","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","HotlinePopover","DeleteHotlineModal","hotline_id","hotlineName","GridPermission","deleteRecord","handleCheck","permissionData","setPermissionaData","changeDataSource","editable","checked","text","onDelete","locale","emptyText","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","ShowAllHotlines","updated_by","hotlines","hotline","hotlinesdata","hotlinedata","getHotlines","AssignHotlineModal","selectedRow","stepOneHotLineValues","getCheckValues","setVisible","ASSIGN_HOTLINE_TEXT_PART1","find","p","highlightText","str","conversation_id","toLowerCase","responder_conversation_name","RegExp","match","itemMessage","setStatus","urgencyLevel","setUrgencyLevel","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","undefined","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalInput","finalUrl","searchString","filteredData","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","convMsg","setConvMsg","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","setSearchBy","getHotlineMessages","document","getElementById","note","assigne","classList","count","highlightedMessage","getElementsByTagName","scrollIntoView","block","lastMessage","getElementsByClassName","messagevalue","convID","onSendMessageClick","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","messageLength","unread_messages_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","shiftKey","ctrlKey","textarea","querySelector","Send","SearchHotlineMessages","useRef","trim","statusFil","statusFilterData","urgencyFilterData","ugc","hotlineFilterData","ht","setSearchString","setConversations","HoltineMessagesLeftSection","showdiv","unreadCount","closable","onClose","removeFilterLevel","conversations","onConversationClick","fontWeight","dataForReceiveAPI","getConversations","NoHotlines","opacity","NoHotlineMessages","Spinner","tip","HotlineMessages","initialConv","setInitialConv","setUrgencyFilterData","setHotlineFilterData","setStatusFilterData","setRemoveFilter","setConversation","setSocket","setNewState","setUnreadCount","allConversations","setAllConversations","setShowDiv","setChatDiv","webSocket","newInitiatedConv","unSetFilters","allConversationIds","mergedConversations","convoID","increaseOverallCountDuringFilters","WebSocket","onopen","onmessage","newConvo","sendSocketMessage","lastWord","words","urgency","onclose","onerror","accessed_users","selectedConv","urgencyState","statusState","hotlineState","conversationIds","updatedNewConvo","conversationsToDisplay","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","totalFiltersApplied","filterSocket","updatedConversations","increaseOverallCount","displayNewConvAtTop","dummyArray","splice","newConvFromDiffUser","incomingConversation","updatedAllConversations","totalConversations","updatedConversation","allAppliedFilters","urlWithFilters","disabledCount","LeftOutlined","receivedConversation","urgencyLevels","setAppliedFilters","search","Header","openline_name","openlineName","openline","openline_id","setOpenline","openlinesData","setOpenlinesData","oldOpenline","setOldOpenline","selectedOldOpenline","setSelectedOldOpenline","selectedOpenline","setSelectedOpenline","removeOpenline","rmOpen","openlineOptions","openlineId","listOfAssignedUsers","getOpenlineMessages","SearchOpenlineMessages","openlineFilterData","OpenlineMessagesLeftSection","NoOpenlines","NoOpenlineMessages","CreateOpenline","OpenlineMessages","setOpenlineFilterData","openlineState","openlineFilter","PermissionDenied","justifyContent","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","EditSeededUser","handleEditOk","handleEditCancel","seededUserName","seededUserDetails","handleSeededUserOnChange","handleSeededUserDatePickerChange","validateMobile","handleSeededUserOnSelect","AddNewSeededUser","handleAddSeededUser","handleAddSeededUserCancel","OrgDetails","modalError","showModalError","setEmailValidationError","setMobileValidationError","setSeededUserName","seededUserEmail","setSeededUserEmail","setSeededUserDetails","editVisible","setEditVisible","showAddSeededUser","setShowAddSeededUser","org_id","date1","organizationDetails","setOrganizationDetails","useNotification","api","contextHolder","computedMatch","appendedUsers","seeded_user","soft_delete","finalUsers","onSeededUserEditSubmit","info","editOrg","onFinish","handleOrganizationOnSelect","orgDetails","EditSeededUsers","newSeededUser","EditOrg","setOrganizationName","organizationIdentifier","setOrganizationIdentifier","deleteClick","setDeleteClick","orgStatus","setOrgStatus","handleOrganizationOnChange","handleOrganizationDatePickerChange","EditHotLine","hotLineData","sethotLineData","hotlineStatus","setHotlineStatus","seticonHtml","sethotlineErrorUpdated","useLocation","eDate","dates","setIcon","saveHotLine","AddEmployee","styles","no_sidebar","xl","box_bordered","box_bordered_active","Dragger","Upload","multiple","action","file","fileList","success","UploadFiles","ImportFiles","CreateManually","UploadImage","handleStepOneUpload","handleBeforeUpload","handleOnRemove","handlePollImagePreview","poll","listType","beforeUpload","onRemove","onPreview","accept","previewVisible","previewTitle","previewImage","MultiChoice","tags","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","tag","setSingleChoiceResponse","showInput","input","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","tagsOption","pollResponse","onPressEnter","isLongTag","tagElem","edit_tag","onDoubleClick","add_tag","DatetimeModal","onPublish","disabledStartDate","disabledEndDate","pollData","pollStartDate","range","end","result","onChangeStartDate","handlePollStartDatePickerChange","onChangeEndDate","handlePollEndDatePickerChange","onChangeStartTime","time","startTimeError","handlePollStartTimePickerChange","onChangeEndTime","endTimeError","handlePollEndTimePickerChange","pollName","utils","DateFnsUtils","container","justify","pollStartTime","KeyboardButtonProps","pollEndDate","pollEndTime","formatAsYYYYMMDDHHmmss","formatAsHHmmss","formatAsMMMDDYYYY","formatAsHHmm","formatAsYYYYMMDD","formatAsDDMMYYYY","starsRating","isHalf","activeColor","newValue","PreviewPoll","setPollsDate","backtoEdit","isImage","attachmentName","poll_info","pollHelpText","pollQuestion","pollQuestionType","pollRatingResponse","PaperClipOutlined","pollDocument","base64","download","originFileObj","DateTimeModal","optionsData","option_text","create_poll","image","show_result_to_users","poll_result_chart_type","pollChartType","image_name","poll_question_type","question","momentUtil","start_time","end_time","document_name","CreatePoll","pollImageValidation","setPoll","pollError","setpollError","previewPoll","setPreviewPoll","chartError","showChartError","uploadError","showuploadError","setIsImage","setAttachmentName","onCreateChange","handlePollOnSelect","checkChartType","checkDoucmentType","fileType","getBase64","reader","FileReader","readAsDataURL","onload","isPollNameDuplicate","sm_textarea","xlsxfileExt","pptxfileExt","docfileExt","csvfileExt","isValidDoc","isDocument","isLt5M","isLt10M","preview","url","substring","lastIndexOf","classNames","ManagePoll","createPoll","setCreatePoll","ManagePolls","ExtendEndDate","poll_id","pollsData","extendPollDate","disabledDateTime","now","disabledHours","hour","disabledMinutes","minutes","disabledSeconds","seconds","OpenlinePopover","ShowAllPolls","sdate","smonth","syear","finalStartDate","currentDate","startTime","startTimeWithDate","polls","PollPopover","getPollAsync","getPolls","pollsdata","PollResponse","endTime","edate","emonth","eyear","EditPreviewPoll","editPoll","EditDateTimeModal","EditPoll","pollOptionText","pollId","pollID","uid","poll_question_rating_type","finalOptions","assign","poll_option_id","isMoment","update_poll","callback","outputFormat","canvas","ctx","getContext","img","Image","crossOrigin","height","drawImage","dataURL","toDataURL","call","convertImgToBase64","base64Img","POLL_ALREADY_EXISTS","ExistingPolls","CreateOpenlineStepOne","imageError","stepOneOpenLineInfo","handleStepOnePreview","openelineName","CreateOpenlineStepTwo","stepTwoOpenLine","CreateOpenlineStepThree","stepOneOpenLine","OpenlineCreation","setImageError","imagename","setStepOneOpenLine","setStepTwoOpenLine","filename","create_openline","openline_image","openline_image_name","OpenlineDirectory","OpenlinePermission","SearchEmployee","OpenlinePermissioModal","assignedOpenLines","DeleteOpenlineModal","ShowAllOpenlines","openlines","openlinesdata","getOpenlines","EditOpenline","ImgfileList","openLineData","setOpenLineData","openlineErrorUpdated","setopenlineErrorUpdated","updateOpenLine","openLineId","toImgDataURL","xhr","XMLHttpRequest","responseType","fr","CheckOpenlineName","Routes","EditProfile","ImportFile","exact","amorg","HotlineContainer","OpenlineContainer","PollsContainer","OrganizationContainer","decryptedPassword","localPwd","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","idleTimer","idleModal","showIdleModal","logoutModal","showLogoutModal","timedOut","setTimedOut","onIdle","reset","onAction","onActive","debounce","timeout","ReactDOM"],"mappings":"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","file":"static/js/main.d75a24ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-openlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-openline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-polls.648b5bd2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sm_textarea\":\"managePoll_sm_textarea__2gyc1\",\"poll_info\":\"managePoll_poll_info__35K0P\",\"circle_white\":\"managePoll_circle_white__1jSAt\",\"select_md\":\"managePoll_select_md__30Qzr\",\"ant-select-dropdown\":\"managePoll_ant-select-dropdown__38nnC\",\"edit_tag\":\"managePoll_edit_tag__zHGBk\",\"add_tag\":\"managePoll_add_tag__2VJTM\",\"ant-tag\":\"managePoll_ant-tag__3TI5u\"};","const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";\r\nexport const WEBSOCKET_HOTLINE_URL = \"ws://10.0.6.10:8000/ws/hotlineMessages/\";\r\nexport const WEBSOCKET_OPENLINE_URL =\r\n  \"ws://10.0.6.10:8000/ws/openlineMessages/\";\r\n","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      const data = response.data;\r\n      const userFName = CryptoJS.AES.encrypt(\r\n        data.user_details?.first_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userLName = CryptoJS.AES.encrypt(\r\n        data.user_details?.last_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const departmentId = CryptoJS.AES.encrypt(\r\n        data.user_details?.department_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgUserId = CryptoJS.AES.encrypt(\r\n        data.user_details?.org_user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const endDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.end_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const startDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.start_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userEmail = CryptoJS.AES.encrypt(\r\n        data.user_data?.email,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userMobile = CryptoJS.AES.encrypt(\r\n        data.user_data?.mobile_number,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgId = CryptoJS.AES.encrypt(\r\n        data.user_data?.organization_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userId = CryptoJS.AES.encrypt(\r\n        data.user_data?.user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amweb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_am_web_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_amcc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amorgcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_org_cc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amidb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_idb_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amseeded = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_seeded_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amapp = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_app_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userData = {\r\n        ...data,\r\n        user_data: {\r\n          ...data.user_data,\r\n          email: userEmail,\r\n          mobile_number: userMobile,\r\n          organization_id: orgId,\r\n          user_id: userId,\r\n          is_am_web_user: amweb,\r\n          is_amcc_user: amcc,\r\n          is_app_user: amapp,\r\n          is_org_cc_user: amorgcc,\r\n          is_idb_user: amidb,\r\n          is_seeded_user: amseeded,\r\n        },\r\n        user_details: {\r\n          ...data.user_details,\r\n          first_name: userFName,\r\n          last_name: userLName,\r\n          department_id: departmentId,\r\n          org_user_id: orgUserId,\r\n          end_date: endDate,\r\n          start_date: startDate,\r\n        },\r\n      };\r\n      AppStorage.set(\"user\", JSON.stringify(userData));\r\n      AppStorage.set(\r\n        \"current\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          current: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\nexport const POLL_SUCCESS = \"POLL_SUCCESS\";\r\nexport const POLL_FAIL = \"POLL_FAIL\";\r\n\r\n\r\n\r\n\r\n","export const STATUS_ACTIVE = \"Active\";\r\nexport const STATUS_INACTIVE = \"In active\";\r\nexport const AM_WEB = \"AM Web\";\r\nexport const AM_CC = \"AM CC\";\r\nexport const ORG_CC = \"Org CC\";\r\nexport const PIE_CHART = \"Pie Chart\";\r\nexport const BAR_CHART = \"Bar Chart\";\r\nexport const STAR_FORMAT = \"Star Format\";\r\nexport const SELECT_SINGLE = \"Select Single\";\r\nexport const SELECT_MULTIPLE = \"Select Multiple\";\r\nexport const STAR_RATING = \"Star Rating\";\r\nexport const OPENLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const OPENLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const OPENLINE_CREATE_STEP3 = \"Review Details\";\r\nexport const HOTLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const HOTLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const HOTLINE_CREATE_STEP3 = \"Create Directory\";\r\nexport const URGENCY_LEVEL_LOW = \"Low\";\r\nexport const URGENCY_LEVEL_MEDIUM = \"Medium\";\r\nexport const URGENCY_LEVEL_HIGH = \"High\";\r\nexport const STATUS_OPEN = \"Open\";\r\nexport const STATUS_CLOSED = \"Closed\";\r\nexport const STATUS_NEW = \"New\";\r\nexport const AUDIT_LOG1 = \"Updated the Status to\";\r\nexport const AUDIT_LOG2 = \"Updated the Urgency level to\";\r\nexport const AUDIT_LOG3 = \"Added new Note\";\r\nexport const AUDIT_LOGH4 = \"View Hotline Converations\";\r\nexport const AUDIT_LOGO4 = \"View Openline Converations\";\r\nexport const SEXUAL_HARRASMENT = \"Sexual Harrasment\";\r\nexport const VIOLENCE = \"Violence\";\r\nexport const RACISM = \"Racism\";\r\nexport const CYBER_BULLYING = \"Cyber Bullying\";\r\nexport const FIGHT = \"Fight\";\r\nexport const DISCRIMINATION = \"Discrimination\";\r\nexport const SLAP = \"Slap\";\r\n","export const POLLS = \"POLLS\";\r\nexport const OPENLINES = \"Openlines\";\r\nexport const HOTLINES = \"Hotlines\";\r\nexport const HOTLINE = \"Hotline\";\r\nexport const OPENLINE = \"Openline\";\r\nexport const ORGANIZATIONS = \"Organizations\";\r\nexport const BROADCAST_MESSAGES = \"Broadcast Messages\";\r\nexport const HELP = \"Help\";\r\nexport const INFO = \"Info\";\r\nexport const ORGANIZATION_DETAILS = \"Organization Details\";\r\nexport const EDIT_DETAILS = \"Edit Details\";\r\nexport const MANAGE_POLLS = \"Manage Polls\";\r\nexport const PREVIEW_POLL = \"Preview Poll\";\r\nexport const SCHEDULE = \"Schedule\";\r\nexport const RESCHEDULE = \"Reschedule\";\r\nexport const OOTB_POLL = \"OOTB Poll\";\r\nexport const POLL_RESULTS = \"Poll Results\";\r\nexport const SHOW_INTRIM_RESULT = \"Show Intrim Result\";\r\nexport const PUBLISH_POLL = \"Publish Poll\";\r\nexport const PUBLISH = \"Publish\";\r\nexport const MANAGE_EMPLOYEES = \"Manage Employees\";\r\nexport const MANAGE_HOTLINES = \"Manage Hotlines\";\r\nexport const CREATE_POLL = \"Create Poll\";\r\nexport const CREATE_ORGANIZATION = \"Create Organization\";\r\nexport const EDIT_ORGANIZATION = \"Edit Organization\";\r\nexport const EDIT_POLL = \"Edit Poll\";\r\nexport const VIEW_POLL = \"View Poll\";\r\nexport const VIEW = \"View\";\r\nexport const SEARCH_EMPLOYEE = \"Search Employee\";\r\nexport const SEARCH_USER = \"Search User\";\r\nexport const SEARCH = \"Search\";\r\nexport const ADD_USER = \"Add User\";\r\nexport const ADD_SEEDED_USER = \"Add Seeded User\";\r\nexport const EDIT_SEEDED_USERS = \"Edit Seeded Users\";\r\nexport const EDIT_SEEDED_USER = \"Edit Seeded User\";\r\nexport const EDIT_HOTLINE = \"Edit Hotline\";\r\nexport const NO_SEEDED_USERS = \"No Seeded User\";\r\nexport const CANCEL_MODAL = \"Cancel\";\r\nexport const UPDATE_MODAL = \"Update\";\r\nexport const ADD_TEXT_MODAL = \"Add\";\r\nexport const DELETE_TEXT_MODAL = \"Delete\";\r\nexport const OK_TEXT_MODAL = \"OK\";\r\nexport const YES_TEXT_MODAL = \"Yes\";\r\nexport const NO_TEXT_MODAL = \"No\";\r\nexport const CHANGE_PASSWORD_FOR = \"Change Password for\";\r\nexport const CHANGE_PASSWORD = \"Change Password\";\r\nexport const RESET_PASSWORD_LINK = \"Reset password for this user\";\r\nexport const RESET_PASSWORD = \"Reset Password\";\r\nexport const RESET_INVITE = \"Reset and Invite\";\r\nexport const RESET_PASSWORD_FOR = \"Reset password for \";\r\nexport const SUBMIT = \"Submit\";\r\nexport const NEXT = \"Next\";\r\nexport const BACK = \"Back\";\r\nexport const UPDATE = \"Update\";\r\nexport const CANCEL = \"Cancel\";\r\nexport const CREATE = \"Create\";\r\nexport const EDIT = \"Edit\";\r\nexport const DELETE = \"Delete\";\r\nexport const CREATE_INVITE = \"Create and Invite\";\r\nexport const ADD_ICON = \"Add Icon\";\r\nexport const SEEDED_USERS_DETAILS = \"Seeded Users Details\";\r\nexport const HOTLINE_DIRECTORY = \"Hotline Directory\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const CREATE_HOTLINE_DIRECTORY = \"Create Hotline Directory\";\r\nexport const CREATE_OPENLINE_DIRECTORY = \"Create Openline Directory\";\r\nexport const CREATE_HOTLINE_DIRECTORY_ENTRIES =\r\n  \"Create Hotline Directory Entries\";\r\nexport const CREATE_OPENLINE_DIRECTORY_ENTRIES =\r\n  \"Create Openline Directory Entries\";\r\nexport const DELETE_HOTLINE = \"Delete Hotline\";\r\nexport const ASSIGN = \"Assign\";\r\nexport const DONE = \"Done\";\r\nexport const ORGANIZATION_CREATE_STEP3 = \"Confirm Details\";\r\nexport const ACTIVITY = \"Activity\";\r\nexport const SHOW_LESS = \"Show less\";\r\nexport const SHOW = \"Show\";\r\nexport const OPENLINE_MESSAGES = \"Openline Messages\";\r\nexport const HOTLINE_MESSAGES = \"Hotline Messages\";\r\nexport const ASSIGNED_TO = \"Assigned To\";\r\nexport const FILTER = \"Filter\";\r\nexport const RESET = \"Reset\";\r\nexport const URGENCY_LEVEL = \"Urgency level\";\r\nexport const APPLY = \"Apply\";\r\nexport const CONVERSATIONS = \"Conversations\";\r\nexport const URGENCY = \"Urgency\";\r\nexport const NO_MESSAGES_FOUND = \"No messages found\";\r\nexport const NO_CONVERSATION_SELECETD = \"No Conversation Selected\";\r\nexport const SELECT_CONVERSATION = \"Select a Conversation to view\";\r\nexport const LAST_READ = \"Last Read\";\r\nexport const URGENCY_LEVEL_CHANGED = \"Urgency Level Changed\";\r\nexport const STATUS_CHANGED = \"Status Changed\";\r\nexport const SEND_MESSAGE_TEXT = \"Replying as Hotline representative\";\r\nexport const NOTES = \"Notes\";\r\nexport const TAKE_NOTE = \"Take a note\";\r\nexport const ADD_NOTE = \"Add note here\";\r\nexport const LOADING = \"Loading...\";\r\nexport const SIGN_IN = \"Sign In\";\r\nexport const SIGN_OUT = \"Sign Out\";\r\nexport const FORGOT_PASSWORD = \"Forgot Password\";\r\nexport const ADD_EMPLOYEE = \"Add Employee\";\r\nexport const MANAGE_ORGANIZATIONS = \"Manage Organizations\";\r\nexport const POLL_TITLE = \"Poll Title\";\r\nexport const POLL = \"Poll\";\r\nexport const UPLOAD = \"Upload\";\r\nexport const DOCUMENT_IMAGE = \" Document Or Image\";\r\nexport const CLOSE_TEXT_MODAL = \"Close\";\r\nexport const ADD_OPTION = \"Add Option\";\r\nexport const PREVIEW = \"Preview\";\r\nexport const EXTEND_END_DATE = \"Extend End Date\";\r\nexport const EXTEND_TEXT_MODAL = \"Extend Date\";\r\nexport const EDIT_OPENLINE = \"Edit Openline\";\r\nexport const UPLOAD_IMAGE = \"Upload Image\";\r\nexport const OPENLINE_DIRECTORY = \"Openline Directory\";\r\nexport const EDIT_PROFILE = \"Edit Profile\";\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { AM_CC, AM_WEB, ORG_CC } from \"../../values\";\r\nimport { CHANGE_PASSWORD, EDIT_PROFILE, SIGN_OUT } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser } = this.props.userRole;\r\n    if (amCCUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"Org CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM WEB\", \"anonymoose\").toString()\r\n      );\r\n    }\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{userType}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">{EDIT_PROFILE}</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>{CHANGE_PASSWORD}</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>{SIGN_OUT}</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{userType}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    }\r\n    const password = props.current.includes('\"')\r\n      ? props.current.slice(1, -1)\r\n      : props.current;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log('INTERVAL');\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Anonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, current } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    current,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  MANAGE_EMPLOYEES,\r\n  MANAGE_POLLS,\r\n  HOTLINES,\r\n  OPENLINES,\r\n  HELP,\r\n  INFO,\r\n  BROADCAST_MESSAGES,\r\n} from \"../headings\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"employees\")) {\r\n        defaultKey = \"4\";\r\n      } else if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      } else if (this.props.data.location.pathname.includes(\"poll\")) {\r\n        defaultKey = \"3\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/hotlinedirectory\">{HOTLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/openlinedirectory\">{OPENLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/pollsdirectory\">{MANAGE_POLLS}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/manageemployees\">{MANAGE_EMPLOYEES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {BROADCAST_MESSAGES}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-help\" />\r\n                </span>\r\n              }\r\n            >\r\n              {HELP}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {INFO}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              {INFO}\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport { MANAGE_ORGANIZATIONS } from \"../../headings\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/amcc/manageorganizations\">{MANAGE_ORGANIZATIONS}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ShowDetails = (props) => {\r\n  const history = useHistory();\r\n  const path = `/amcc/orgdetails/${props.record.organization_id}`;\r\n\r\n  const showModal = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.orgName ? (\r\n        <a onClick={showModal}>{props.record.name}</a>\r\n      ) : props.orgId ? (\r\n        <a onClick={showModal}>{props.record.identifier}</a>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export const FIRST_NAME = \"First Name\";\r\nexport const LAST_NAME = \"Last Name\";\r\nexport const NAME = \"Name\";\r\nexport const RESPOND = \"Respond\";\r\nexport const EMAIL = \"Email\";\r\nexport const PASSWORD = \"Password\";\r\nexport const DATE = \"Date\";\r\nexport const MOBILE = \"Mobile\";\r\nexport const STATUS = \"Status\";\r\nexport const CURRENT_PASSWORD = \"Current Password\";\r\nexport const NEW_PASSWORD = \"New Password\";\r\nexport const CONFIRM_PASSWORD = \"Confirm Password\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const DESCRIPTION = \"Description\";\r\nexport const ACCESS = \"Access\";\r\nexport const ACTIONS = \"Actions\";\r\nexport const ORGANIZATION_NAME = \"Organization Name\";\r\nexport const ORGANIZATION_ID = \"Organization Id\";\r\nexport const HOTLINE_NAME = \"Hotline Name\";\r\nexport const OPENLINE_NAME = \"Openline Name\";\r\nexport const START_DATE = \"Start Date\";\r\nexport const END_DATE = \"End Date\";\r\nexport const SELECT_START_DATE = \"Select Start Date\";\r\nexport const SELECT_END_DATE = \"Select End Date\";\r\nexport const SELECT_START_TIME = \"Select Start Time\";\r\nexport const SELECT_END_TIME = \"Select End Time\";\r\nexport const PERMISSIONS = \"Permissions\";\r\nexport const DISPLAY_RESULTS_AS = \"Display final results as\";\r\nexport const QUESTION_TYPE = \"Question Type\";\r\nexport const QUESTION = \"Question\";\r\nexport const SHOW_RESULTS_POLL = \"Show result to users\";\r\nexport const SEE = \"See\";\r\nexport const PRIVACY_POLICY = \"Privacy Policy\";\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport ShowDetails from \"../../containers/ShowDetails\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport moment from \"moment\";\r\nimport {\r\n  ACTIONS,\r\n  END_DATE,\r\n  ORGANIZATION_ID,\r\n  ORGANIZATION_NAME,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { CREATE_ORGANIZATION, ORGANIZATIONS, SEARCH } from \"../../headings\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      searchBy: \"\",\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations.forEach((org) => {\r\n      org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.organizations !== nextProps.organizations) {\r\n      nextProps.organizations.forEach((org) => {\r\n        org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.organizations }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        name: record.name,\r\n        identifier: record.identifier,\r\n        organization_id: record.organization_id,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 2 : 1,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: `Status of ${record.name} has been changed successfully.`,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: ORGANIZATION_NAME,\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgName />,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ORGANIZATION_ID,\r\n        dataIndex: \"\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgId />,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{ORGANIZATIONS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value={CREATE_ORGANIZATION} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  key=\"manageOrg\"\r\n                  rowKey=\"identifier\"\r\n                  columns={columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","export const REQUIRED_MESSAGE =\r\n  \"Please fill the fields marked with asterisk(*)\";\r\nexport const MAX_CHAR_LIMIT = \"Max Characters limit reached.\";\r\nexport const VALID_EMAIL = \"Please enter a valid email address.\";\r\nexport const VALID_MOBILE = \"Please enter a valid mobile number.\";\r\nexport const OLD_PASSWORD = \"Old Password is wrong.\";\r\nexport const ENTER_CURRENT_PASSWORD = \"Please enter your current password!\";\r\nexport const ENTER_NEW_PASSWORD = \"Please enter your new password!\";\r\nexport const ENTER_PASSWORD = \"Please enter your password\";\r\nexport const PASSWORD_RULES =\r\n  \"Please enter a valid password. It should be atleast 8 characters long with atleast 1 each of Capital letter, small letter, numeric and special character.\";\r\nexport const CONFIRM_YOUR_PASSWORD = \"Please confirm your password!\";\r\nexport const PASSWORD_NOT_MATCH =\r\n  \"The two passwords that you entered do not match!\";\r\nexport const ENTER_DIRECTORY_NAME = \"Please enter directory name\";\r\nexport const UPLOAD_IMAGE_REQUIRED = \"Please upload an image.\";\r\nexport const HOTLINE_ALREADY_EXISTS =\r\n  \"Sorry! This hotline already exists in the system. Please use a different name.\";\r\nexport const ENTER_DESCRIPTION = \"Please enter description\";\r\nexport const SELECT_DATE = \"Please select date\";\r\nexport const SELECT_STATUS = \"Please select status\";\r\nexport const ASSIGN_USERS_HOTLINES = \"Please select user(s).\";\r\nexport const ORGANIZATION_NAME_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different name.\";\r\nexport const ORGANIZATION_ID_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different Id.\";\r\nexport const CREATE_ORGANIZATION_ERROR =\r\n  \"There is some difficulty while creating this organization.\";\r\nexport const STATUS_NOT_CHANGED =\r\n  \"Status can't be changed as the end date has been passed.\";\r\nexport const POLL_ALREADY_EXISTS =\r\n  \"Sorry! This Poll title already exists in the system. Please use a different name.\";\r\nexport const STAR_CHART_TYPE = \"Please select the Chart type as Star\";\r\nexport const PAST_TIME = \"Past Time can not be selected\";\r\nexport const OPENLINE_ALREADY_EXISTS =\r\n  \"Sorry! This openline already exists in the system. Please use a different name.\";\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  orgIdCount,\r\n  orgNameCount,\r\n  setOrgNameAlreadyExists,\r\n  setOrgIDAlreadyExists,\r\n  orgIDAlreadyExists,\r\n  orgNameAlreadyExists,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganization/\",\r\n        { organization_name: stepOneOrganizationInfo.organizationName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgNameAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganizationID/\",\r\n        { orgID: stepOneOrganizationInfo.organizationId },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgIDAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      if (\r\n        orgNameAlreadyExists === \"status: false\" &&\r\n        orgIDAlreadyExists === \"status: false\"\r\n      ) {\r\n        showError(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_NAME}\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationName(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                />\r\n                {orgNameAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationName\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationName.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgNameAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_ID}\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationID(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={20}\r\n                />\r\n                {orgIDAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationId\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationId.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgIDAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgIdCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-100\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","export const PASSWORD_CHANGED =\r\n  \"Your password has been changed successfully. Please login again with your new password.\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART1 =\r\n  \"You are about to delete the organization\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART2 =\r\n  \"Deleting organization would delete all records associated with it. Are you sure you want to delete organization\";\r\nexport const DELETE_CONFIRM = \"Are you sure you want to delete\";\r\nexport const ATLEAST_ONE_SEEDED_USER =\r\n  \"There should be at least one seeded user.\";\r\nexport const HOTLINE_UPDATED =\r\n  \"Hotline details have been changed successfully.\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART1 =\r\n  \"Create Hotline entries and assign them to managers,\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const DELETE_CONFIRM_HOTLINE =\r\n  \"Are you sure you want to delete this hotline?\";\r\nexport const DELETE_CONFIRM_OPENLINE =\r\n  \"Are you sure you want to delete this Openline?\";\r\nexport const NO_CONVERSATION_INITIATED =\r\n  \"No conversations are initiated for the hotlines assigned to you\";\r\n  export const NO_CONVERSATION_INITIATED_OPENLINE=\"No conversations are initiated for the openlines assigned to you\";\r\nexport const LOGIN_PART1 = \"Control Center and Insights Dashboard\";\r\nexport const LOGIN_PART2 = \"Raising Voice Anonymously Made Easy\";\r\nexport const LOGIN_PART3 =\r\n  \"Login to manage AnonyMoose eco-system. This includes employees eligible to use the app and/or components such as Hotlines, Openlines, Polls and Surveys, Broadcast Messages and access to different features of the Insights Dashboard, through set of assignable permissions.\";\r\nexport const CREATE_NEW_ORGANIZATION_TEXT =\r\n  \"Create a new Org Id for your client's organization\";\r\nexport const POLL_DATES_TEXT = \"Select Date and Time to publish the\";\r\nexport const EXTEND_END_DATE_TEXT_PART1 = \"Select Date and Time to \";\r\nexport const EXTEND_END_DATE_TEXT_PART2 = \"extend the\";\r\nexport const OOTB_TEXT = \"Out Of The Box (OOTB) Poll\";\r\nexport const CREATE_NEW_POLL_TEXT =\r\n  \"Create polls and publish them for all employees from here\";\r\nexport const ASSIGN_HOTLINE_TEXT_PART1 = \"Assign Permissions for \";\r\nexport const ASSIGN_HOTLINE_TEXT_PART2 =\r\n  \"Reply to Messages, Add Notes, Status & Urgency level\";\r\nexport const OPENLINE_PERMISSION_TEXT_PART1 = \"Employees with permissions to \";\r\nexport const HIT_ENTER_TO_ADD = \"Hit enter to add\";\r\nexport const PRIVACY_POLICY_TEXT_PART1 =\r\n  \"THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART1 =\r\n  \"Create Openline entries and assign them to managers,\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART1 = \"Status of \";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART2 =\r\n  \" has been changed successfully.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART3 =\r\n  \" can't be changed as the end date has been passed.\";\r\nexport const ABOUT_TO_LOGOUT_TEXT =\r\n  \"You are about to log out. Click Ok to keep yourself logged in.\";\r\nexport const LOGGED_OUT_TEXT = \"You are logged out. Click Ok to log in again.\";\r\nexport const PERMISSION_DENIED =\r\n  \"You don't have access rights! Please contact your administrator.\";\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  DELETE,\r\n  DELETE_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n  NO_TEXT_MODAL,\r\n  OK_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport {\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART1,\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART2,\r\n  ATLEAST_ONE_SEEDED_USER,\r\n  DELETE_CONFIRM,\r\n} from \"../../messages\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.deleteOrg) this.props.handleCancel();\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg ? (\r\n          <Button onClick={this.showBothModals}>{DELETE}</Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleOk}\r\n            centered\r\n            width={700}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={CANCEL_MODAL}\r\n            cancelText={DELETE_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART1}{\" \"}\r\n              <strong>{this.props.org}</strong>.{\" \"}\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART2}{\" \"}\r\n              <strong>{this.props.org}</strong>?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length === 1 ? (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            <p>{ATLEAST_ONE_SEEDED_USER}</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            <p>{DELETE_CONFIRM}</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              {EDIT}\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              {EDIT}\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <Button>{EDIT}</Button>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button, notification } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { EMAIL, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { ADD_SEEDED_USER } from \"../../headings\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const data = {\r\n      first_name: record.firstName,\r\n      last_name: record.lastName,\r\n      email: record.email,\r\n      mobile_number: record.mobile,\r\n      status_id: via === \"Active\" ? 2 : 1,\r\n      start_date: record.date2[0]\r\n        ? moment(record.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: record.date2[1]\r\n        ? moment(record.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: this.props.orgID,\r\n    };\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.firstName} has been changed successfully.`,\r\n      });\r\n      this.props.statusOnClicked();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile.includes(\"+\") ? mobile : \"+\" + mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: EMAIL,\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status2 === 1 || record.status2 === \"1\" ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Row className=\"content-center pt-0\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() =>\r\n                this.props.fromStepTwo\r\n                  ? this.props.showAddSeededUserForm()\r\n                  : this.props.addSeededUser()\r\n              }\r\n            >\r\n              {ADD_SEEDED_USER}\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n        <Grid\r\n          rowKey=\"unique_identifier\"\r\n          columns={columns}\r\n          data={this.state.data}\r\n        />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport moment from \"moment\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport { DATE, EMAIL, FIRST_NAME, LAST_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, ADD_USER, UPDATE, NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleMobile,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n  fNameCount,\r\n  lNameCount,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n      showPasswordValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    if (stepTwoOrganizationInfo.mobile.length > 10) {\r\n      showMobileValidationError(false);\r\n    } else {\r\n      showMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={FIRST_NAME}\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {fNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={LAST_NAME}\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {lNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validatePassword(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n                {passwordValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid password.\r\n                    It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={EMAIL} value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <PhoneInput\r\n                  country={\"us\"}\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={handleMobile}\r\n                  onBlur={validateMobile}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert message={VALID_MOBILE} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                {ADD_USER}\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                {UPDATE}\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            {BACK}\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            {NEXT}\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              {BACK}\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport { CREATE_ORGANIZATION_ERROR, REQUIRED_MESSAGE } from \"../../errors\";\r\nimport {\r\n  ADD_SEEDED_USER,\r\n  BACK,\r\n  CREATE_INVITE,\r\n  OK_TEXT_MODAL,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  loader,\r\n  apiError,\r\n  handleOk,\r\n  handleCancel,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Modal\r\n            visible={apiError}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            centered\r\n            width={500}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            {\" \"}\r\n            <p>{CREATE_ORGANIZATION_ERROR}</p>{\" \"}\r\n          </Modal>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_NAME}\r\n                value={stepOneOrganizationInfo.organizationName}\r\n              >\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_ID}\r\n                value={stepOneOrganizationInfo.organizationId}\r\n              >\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={STATUS}\r\n                value={stepOneOrganizationInfo.status1}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-100\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                      disabled\r\n                    >\r\n                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                      <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label={DATE} value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Col\r\n            span={24}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n            <div>\r\n              {\" \"}\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => addSeededUserFromThirdStep()}\r\n              >\r\n                {ADD_SEEDED_USER}\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <AssignedUsers\r\n                seededUsers={seededUsers}\r\n                handleEditUser={handleEditUser}\r\n                handleDelete={handleDelete}\r\n                fromStepThree\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Form.Item>\r\n            <div className=\"steps-action mt-5\">\r\n              <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n                {CREATE_INVITE}\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Spin>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CREATE_ORGANIZATION,\r\n  ORGANIZATIONS,\r\n  ORGANIZATION_CREATE_STEP3,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: ORGANIZATION_DETAILS,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: SEEDED_USERS_DETAILS,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: ORGANIZATION_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [orgNameAlreadyExists, setOrgNameExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDExists] = useState(\"\");\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    s2Date: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = { ...stepTwoOrganization, userId: userID };\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n        //  password: \"\",\r\n        s2Date: \"\",\r\n        mobile: \"\",\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      s2Date: \"\",\r\n      mobile: \"\",\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const setOrgNameAlreadyExists = (value) => {\r\n    setOrgNameExists(value);\r\n  };\r\n\r\n  const setOrgIDAlreadyExists = (value) => {\r\n    setOrgIDExists(value);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    if (e.target.id === \"organizationId\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (\r\n      e.target.id === \"organizationName\" &&\r\n      e.target.value.length === 80\r\n    ) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    setLoader(true);\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n        // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.s2Date[0]\r\n          ? moment(value.s2Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.s2Date[1]\r\n          ? moment(value.s2Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"saveOrganization/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/amcc/manageorganizations\";\r\n      })\r\n      .catch((error) => {\r\n        if (error.message.includes(\"500\")) {\r\n          setApiError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>{ORGANIZATIONS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{CREATE_ORGANIZATION}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{CREATE_ORGANIZATION}</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            orgNameCount={orgNameCount}\r\n                            orgIdCount={orgIdCount}\r\n                            setOrgNameAlreadyExists={setOrgNameAlreadyExists}\r\n                            orgNameAlreadyExists={orgNameAlreadyExists}\r\n                            setOrgIDAlreadyExists={setOrgIDAlreadyExists}\r\n                            orgIDAlreadyExists={orgIDAlreadyExists}\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                            handleOk={handleOk}\r\n                            handleCancel={handleCancel}\r\n                            loader={loader}\r\n                            apiError={apiError}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nimport { CREATE_ORGANIZATION, MANAGE_ORGANIZATIONS } from \"../../headings\";\r\nimport { CREATE_NEW_ORGANIZATION_TEXT } from \"../../messages\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_ORGANIZATIONS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_ORGANIZATION_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            {CREATE_ORGANIZATION}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      const orgId = CryptoJS.AES.decrypt(\r\n        orgcc_user.user_data.organization_id,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8);\r\n      return parseInt(orgId);\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n  getPolls(){\r\n    return axios.get(BASE_URL + \"poll/\", options);\r\n\r\n  }\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, [statusClicked]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return props.manageOrgData?.length > 0 ? (\r\n    <ShowAllOrganizations\r\n      organizations={props.manageOrgData}\r\n      statusOnClicked={statusOnClicked}\r\n    />\r\n  ) : (\r\n    <CreateOrg />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { ADD_EMPLOYEE, MANAGE_EMPLOYEES, SEARCH } from \"../../../src/headings\";\r\nimport {\r\n  ACCESS,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  ACTIONS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        key: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag = false;\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n                flag = true;\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n                flag = true;\r\n              }\r\n              if (property == \"app_user\") {\r\n                if (!flag) {\r\n                  property = \"APP\";\r\n                }\r\n              }\r\n\r\n              if (test.length == 0) {\r\n                test += property;\r\n              } else if (property !== \"app_user\") {\r\n                if (test.includes(\"APP\")) {\r\n                  test = property;\r\n                } else {\r\n                  test += \", \" + property;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: (\r\n              <div className=\"primary-tag-rounded tag\">\r\n                <span className=\"circle mr-1\"></span>\r\n                {STATUS_ACTIVE}\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover />,\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_EMPLOYEES}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          lg={9}\r\n                          className=\"ml-0 ml-lg-4 mt-2 mt-lg-0\"\r\n                        >\r\n                          <Select className=\"w-100 w-md-75\" disabled>\r\n                            <Option value=\"1\" defaultValue>\r\n                              1\r\n                            </Option>\r\n                            <Option value=\"2\">2</Option>\r\n                          </Select>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Buttons value={ADD_EMPLOYEE} />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Grid\r\n                  rowKey=\"unique_identifier\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.filterData}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { PRIVACY_POLICY, SEE } from \"../../labels\";\r\nimport { PRIVACY_POLICY_TEXT_PART1 } from \"../../messages\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {SEE}\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          {PRIVACY_POLICY}\r\n        </Button>\r\n        <Modal\r\n          title={PRIVACY_POLICY}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              {PRIVACY_POLICY_TEXT_PART1}\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Anonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Forgot Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Enter your registered email address to request a password\r\n                  reset link.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your email!\",\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    REQUEST PASSWORD RESET LINK\r\n                  </Button>\r\n                </Form.Item>\r\n\r\n                <div className=\"justify-content-center d-flex\">\r\n                <Button\r\n                          type=\"link\"\r\n                          className=\"link\"\r\n                        >\r\n                          Back to <b className=\"pl-1\">Sign In</b>\r\n                        </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">\r\n                Control Center and Insights Dashboard\r\n              </h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img\r\n                src={Amccvector}\r\n                alt=\"Anonymoose\"\r\n                className=\"pr-0 pr-lg-4\"\r\n              />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                Raising Voice Anonymously Made Easy\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>Reset Password</h2>\r\n                <p className=\"mt-3 font-weight-bold\">\r\n                  Set a new password for your account.\r\n                </p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label=\"Password\">\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please enter your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <FloatLabel label=\"Confirm Password\">\r\n                  <Form.Item\r\n                    name=\"confirmpassword\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please confirm your password!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                  >\r\n                    RESET PASSWORD\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\nimport { LOGIN_PART1, LOGIN_PART2, LOGIN_PART3 } from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\nimport { EMAIL, PASSWORD } from \"../../labels\";\r\nimport { ENTER_PASSWORD, VALID_EMAIL } from \"../../errors\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n    //  const checkSoftDelete = JSON.parse(AppStorage.get(\"user\"));\r\n    //  console.log(\"checkSoftDelete\",checkSoftDelete)\r\n\r\n    //  if(checkSoftDelete.user_data.soft_delete){\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n    //  }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                {LOGIN_PART3}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.error == \"true\" && (\r\n                <Alert\r\n                  message=\"Invalid Login! Please try again\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                ></Alert>\r\n              )}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{SIGN_IN}</h2>\r\n              </Row>\r\n\r\n              <Form\r\n                className=\"floating-label\"\r\n                {...layout}\r\n                onSubmit={this.handleLogin}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <FloatLabel label={EMAIL} value={this.state.email}>\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: VALID_EMAIL,\r\n                        type: \"email\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: ENTER_PASSWORD,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"input-control\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <div className=\"forgot-pwd\">\r\n                  <a href=\"#\">{FORGOT_PASSWORD}</a>\r\n                </div>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    disabled={!isEnabled}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={() => {\r\n                      this.handleLogin();\r\n                    }}\r\n                  >\r\n                    {SIGN_IN}\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n  HOTLINE_MESSAGES,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, Modal, Alert } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport AmWebSidebar from \"../hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CHANGE_PASSWORD_FOR,\r\n  OK_TEXT_MODAL,\r\n  SUBMIT,\r\n} from \"../../headings\";\r\nimport { PASSWORD_CHANGED } from \"../../messages\";\r\nimport {\r\n  OLD_PASSWORD,\r\n  ENTER_CURRENT_PASSWORD,\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n} from \"../../errors\";\r\nimport { CURRENT_PASSWORD, NEW_PASSWORD, CONFIRM_PASSWORD } from \"../../labels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst ChangePassword = (props) => {\r\n  const type = AppStorage.get(\"userType\");\r\n  const userType = type\r\n    ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n    : \"\";\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n  const [passwordChanged, setPasswordChanged] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    showPasswordValidationError(false);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const userName = user\r\n      ? CryptoJS.AES.decrypt(\r\n          user.user_details.first_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) +\r\n        \" \" +\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.last_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    setUserName(userName);\r\n  }, []);\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (pwd.newPwd === pwd.confirmPwd && !passwordValidationError) {\r\n      axios\r\n        .put(BASE_URL + \"changepassword/\", data, options)\r\n        .then(() => {\r\n          setError(false);\r\n          setPasswordChanged(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n            setError(true);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">\r\n                    {CHANGE_PASSWORD_FOR} {userName}\r\n                  </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Modal\r\n                    visible={passwordChanged}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    width={350}\r\n                    okButtonProps={{\r\n                      children: \"Custom OK\",\r\n                    }}\r\n                    cancelButtonProps={{ style: { display: \"none\" } }}\r\n                    okText={OK_TEXT_MODAL}\r\n                  >\r\n                    <p>{PASSWORD_CHANGED}</p>\r\n                  </Modal>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={OLD_PASSWORD}\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <FloatLabel\r\n                                label={CURRENT_PASSWORD}\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: { ENTER_CURRENT_PASSWORD },\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={NEW_PASSWORD}\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: { ENTER_NEW_PASSWORD },\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                    onBlur={(e) => validatePassword(e)}\r\n                                  />\r\n                                </Form.Item>\r\n                                {passwordValidationError && (\r\n                                  <Alert\r\n                                    message={PASSWORD_RULES}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={CONFIRM_PASSWORD}\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: { CONFIRM_YOUR_PASSWORD },\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                      validator(_, value) {\r\n                                        if (\r\n                                          !value ||\r\n                                          getFieldValue(\"newpassword\") === value\r\n                                        ) {\r\n                                          return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(\r\n                                          PASSWORD_NOT_MATCH\r\n                                        );\r\n                                      },\r\n                                    }),\r\n                                  ]}\r\n                                  dependencies={[\"newpassword\"]}\r\n                                  hasFeedback\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              {SUBMIT}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ADD_ICON, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          {ADD_ICON}\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title={ADD_ICON}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"1\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={1}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SEXUAL_HARRASMENT}>\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"2\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={2}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={VIOLENCE}>\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"3\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={3}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={RACISM}>\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"4\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={4}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={CYBER_BULLYING}>\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"5\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={5}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={FIGHT}>\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"6\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={6}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={DISCRIMINATION}>\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"7\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={7}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SLAP}>\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport {\r\n  ENTER_DIRECTORY_NAME,\r\n  REQUIRED_MESSAGE,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  ENTER_DESCRIPTION,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n} from \"../../errors\";\r\nimport { DIRECTORY_NAME, DESCRIPTION, DATE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.directoryName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      if (hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0], \"hotlineErrorUpdated\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <FloatLabel\r\n        label={DIRECTORY_NAME}\r\n        value={stepOneHotLineInfo.directoryName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"directoryName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DIRECTORY_NAME },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneHotLineInfo.directoryName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"directoryName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"directoryName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated === \"status: false\" &&\r\n            stepOneHotLineInfo.directoryName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneHotLineInfo.directoryName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={HOTLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneHotLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DESCRIPTION },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            className=\"input-control\"\r\n            value={stepOneHotLineInfo.description}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneHotLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneHotLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneHotLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { FIRST_NAME, LAST_NAME, STATUS, ACCESS, MOBILE } from \"../../labels\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>\r\n            {STATUS_ACTIVE}\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            dataSource={this.state.filterData}\r\n            rowKey=\"unique_identifier\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            {BACK}\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            {NEXT}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\nimport { SELECT_DATE } from \"../../errors\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { BACK, CREATE } from \"../../headings\";\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id=\"directoryName\"\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CREATE_HOTLINE_DIRECTORY,\r\n  HOTLINE_DIRECTORY,\r\n  CREATE_HOTLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n  HOTLINE_CREATE_STEP1,\r\n  HOTLINE_CREATE_STEP2,\r\n  HOTLINE_CREATE_STEP3,\r\n} from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: HOTLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const setNameValidHandle = (value, name) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>{HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_HOTLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateHotlineStepOne\r\n                          next={next}\r\n                          stepOneHotLineInfo={stepOneHotLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          setNameValidHandle={setNameValidHandle}\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          hotlineErrorUpdated={hotlineErrorUpdated}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateHotlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateHotlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneHotLine={stepOneHotLine}\r\n                          stepTwoHotLine={stepTwoHotLine}\r\n                          getIconText={getIconText}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, HOTLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  HOTLINE_DIRECTORY_TEXT_PART1,\r\n  HOTLINE_DIRECTORY_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{HOTLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {HOTLINE_DIRECTORY_TEXT_PART1}\r\n                          <br />\r\n                          {HOTLINE_DIRECTORY_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <HotlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DELETE,\r\n  DELETE_HOTLINE,\r\n  NO_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport { DELETE_CONFIRM_HOTLINE } from \"../../messages\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{DELETE}</a>\r\n        <Modal\r\n          title={DELETE_HOTLINE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_HOTLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/edithotline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/edithotline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteHotlineModal\r\n          hotlineId={test.hotline_id}\r\n          hotlineName={test.name}\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    { title: NAME, dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  //const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n      // setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        //value={value}\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\nimport { CANCEL, SHOW, DONE } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getHotlineAssignEmpl/\" + this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedHotLines[index] = {\r\n      ...assignedHotLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedHotLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"getHotlineAssignEmpl/\" + value.hotline_id, options)\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <GridPermission\r\n              data={this.state.assignedHotLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { HOTLINE_NAME, END_DATE, START_DATE, PERMISSIONS, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { HOTLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines?.forEach((hotline) => {\r\n      hotline.start_date = moment(hotline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      hotline.end_date = moment(hotline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.hotlines !== nextProps.hotlines) {\r\n      nextProps.hotlines?.forEach((hotline) => {\r\n        hotline.start_date = moment(hotline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        hotline.end_date = moment(hotline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.hotlines }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        help_text: record.help_text,\r\n        hotline_icon_id: record.hotline_icon_id,\r\n        hotline_id: record.hotline_id,\r\n        name: record.name,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"hotline/\" + data.hotline_id, data, options)\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description: `Status of ${record.name} has been changed successfully.`,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.name} can't be changed as the end date has been passed.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: HOTLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Hotline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <PermissionModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>{STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <HotlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Spin spinning={this.props.loader} size=\"large\">\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={this.props.data} />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1>{HOTLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <Col span={24}>\r\n                    <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"search-row mt-2 mt-lg-0\"\r\n                      >\r\n                        <Row>\r\n                          <Col span={24} lg={9} className=\"search-box\">\r\n                            <Search\r\n                              placeholder={SEARCH}\r\n                              onSearch={this.onSearch}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col\r\n                        span={24}\r\n                        lg={6}\r\n                        className=\"d-flex align-items-center justify-content-end\"\r\n                      >\r\n                        <Link to=\"/orgcc/createhotline\">\r\n                          <Buttons value=\"Create Hotline\" />\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </Spin>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.hotlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.hotlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.hotlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.hotlinesdata !== null &&\r\n    props.hotlinesdata.length === 0 ? (\r\n    <HotlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllHotlines\r\n      hotlines={props.hotlinesdata}\r\n      statusOnClicked={statusOnClicked}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React, { useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ASSIGN, CANCEL, DONE, HOTLINE } from \"../../headings\";\r\nimport { ASSIGN_HOTLINE_TEXT_PART2 } from \"../../messages\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        {ASSIGN}\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText={DONE}\r\n        cancelText={CANCEL}\r\n      >\r\n        <div>\r\n          {ASSIGN_HOTLINE_TEXT_PART1}{\" \"}\r\n          <b>{stepOneHotLineValues.directoryName}</b> {HOTLINE}\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          <Row className=\"mt-2 mt-lg-5\">\r\n            <Col span={6}></Col>\r\n            <Col span={14} className=\"small text-center\">\r\n              {ASSIGN_HOTLINE_TEXT_PART2}\r\n            </Col>\r\n          </Row>\r\n          {selectedRow &&\r\n            selectedRow.map((item) => {\r\n              let per = permissions.find((p) => p.user_id === item.user_id);\r\n              return (\r\n                <Row className=\"mt-3 d-flex justify-content-center\">\r\n                  <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                  <Col span={10}>\r\n                    <Checkbox\r\n                      checked={per && per.can_respond === 1 ? true : false}\r\n                      disabled\r\n                      onChange={(e) => handleCheck(item)}\r\n                    ></Checkbox>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","export const highlightText = (data, str) => {\r\n  let highlightedObject = {};\r\n  highlightedObject = data\r\n    .filter(\r\n      (item) =>\r\n        item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.responder_conversation_name\r\n          .toLowerCase()\r\n          .includes(str.toLowerCase()) ||\r\n        item.hotline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.message.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n    .map((item) => {\r\n      let conversation_id = item.conversation_id.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = item.responder_conversation_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = item.hotline_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = item.message.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      return {\r\n        ...item,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: item.hotline_id,\r\n        },\r\n      };\r\n    });\r\n  return highlightedObject;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  FILTER,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n  HOTLINE,\r\n  CANCEL,\r\n  APPLY,\r\n} from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n} from \"../../values\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserallHotlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{HOTLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  ADD_NOTE,\r\n  ADD_TEXT_MODAL,\r\n  CANCEL_MODAL,\r\n  TAKE_NOTE,\r\n} from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state = {\r\n      visible: false,\r\n      noteText: \"\",\r\n    };\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios.post(BASE_URL + \"addNotes/\", data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        this.setState({ noteText: \"\" });\r\n        this.formRef.current.resetFields();\r\n        this.props.getNoteData(res.data.conversation_id);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      noteText: \"\",\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          {TAKE_NOTE}\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title={TAKE_NOTE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n            <Form\r\n              className=\"input-md w-100\"\r\n              name=\"validate-other\"\r\n              ref={this.formRef}\r\n            >\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder={ADD_NOTE}\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { ACTIVITY } from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGH4,\r\n} from \"../../values\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: AUDIT_LOG1 },\r\n  { id: 2, name: AUDIT_LOG2 },\r\n  { id: 3, name: AUDIT_LOG3 },\r\n  { id: 4, name: AUDIT_LOGH4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport { STATUS } from \"../../labels\";\r\nimport {\r\n  LAST_READ,\r\n  STATUS_CHANGED,\r\n  URGENCY_LEVEL_CHANGED,\r\n  URGENCY_LEVEL,\r\n  SEND_MESSAGE_TEXT,\r\n} from \"../../headings\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n          document.getElementsByClassName(\"hotline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if (\r\n      (e.altKey && e.keyCode === 13) ||\r\n      (e.shiftKey && e.keyCode === 13) ||\r\n      (e.ctrlKey && e.keyCode === 13)\r\n    ) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message.length > 0) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        hotline_id: conversation.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline_name.includes(\"</mark>\")) {\r\n      conversation.hotline_name = conversation.hotline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline_name = conversation.hotline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline_name = conversation.hotline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ? (\r\n                        <Divider plain>{URGENCY_LEVEL_CHANGED}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\"Status has been changed to\") ? (\r\n                        <Divider plain>{STATUS_CHANGED}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ||\r\n                      msg.message.includes(\r\n                        \"Status has been changed to\"\r\n                      ) ? null : (\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"outgoing-msg hotline_message mb-3\"\r\n                              : \"incoming-msg hotline_message mb-2\"\r\n                          }\r\n                        >\r\n                          <div\r\n                            className={\r\n                              msg.is_responder_message\r\n                                ? \"sent-msg\"\r\n                                : \"received-msg\"\r\n                            }\r\n                          >\r\n                            <p\r\n                              ellipsis\r\n                              // className=\"w-75 pr-2 mb-1\"\r\n                              dangerouslySetInnerHTML={createMarkup(\r\n                                msg.message\r\n                              )}\r\n                            />\r\n\r\n                            <span className=\"time-date\">\r\n                              {\" \"}\r\n                              {moment(msg.created_on).isSame(moment(), \"day\")\r\n                                ? moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"hh:mm A\")\r\n                                : moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"MM:DD:YY | hh:mm A \")}\r\n                              {msg.is_responder_message &&\r\n                                ` | ${msg.first_name} ${msg.last_name}`}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    name={conversation.conversation_id}\r\n                    placeholder={SEND_MESSAGE_TEXT}\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchHotlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.hotlineFilterData.length > 0 && {\r\n        hotline_id: props.hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchHotlineMessages from \"./SearchHotlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  HOTLINE,\r\n  NO_MESSAGES_FOUND,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\nimport { NO_CONVERSATION_SELECETD, SELECT_CONVERSATION } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HoltineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Urgency Level has been changed to ${\r\n        event === 1 ? \"Low\" : event === 2 ? \"Medium\" : \"High\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Status has been changed to ${\r\n        event === 1 ? \"New\" : event === 2 ? \"Open\" : \"Closed\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.hotlineFilterData.map((hotline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyHotline\", hotline.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {HOTLINE}: <span>{hotline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchHotlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  hotlineFilterData={props.hotlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.hotline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoHotlines}\r\n                alt=\"No Hotlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoltineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED } from \"../../messages\";\r\n\r\nconst NoHotlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateHotline}\r\n        alt=\"No Hotlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED}</h5>\r\n    {/* <small>Select a hotline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Spin } from \"antd\";\r\nimport { LOADING } from \"../../headings\";\r\n\r\nconst Spinner = (loader) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <Spin size=\"large\" tip={LOADING} spinning={loader}></Spin>\r\n    </Row>\r\n  </Col>\r\n);\r\n\r\nexport default Spinner;\r\n","import { LeftOutlined } from \"@ant-design/icons\";\r\nimport { Form, Layout, Row } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport { HOTLINE_MESSAGES } from \"../../headings\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL, WEBSOCKET_HOTLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport \"./hotlineMessages.scss\";\r\nimport HoltineMessagesLeftSection from \"./HotlineMessagesLeftSection\";\r\nimport NoHotlineMessages from \"./NoHotlineMessages\";\r\nimport Spinner from \"./Spinner\";\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    unSetFilters();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    increaseOverallCountDuringFilters(newState, mergedConversations);\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_HOTLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n      if (newConvo.message.includes(\"Urgency Level has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const urgency =\r\n          lastWord.trim() === \"Low\" ? 1 : lastWord.trim() === \"Medium\" ? 2 : 3;\r\n        setUrgencyLevel(urgency);\r\n      } else if (newConvo.message.includes(\"Status has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const status =\r\n          lastWord.trim() === \"New\" ? 1 : lastWord.trim() === \"Open\" ? 2 : 3;\r\n        setStatus(status);\r\n      }\r\n    };\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          increaseOverallCount(newConvo, conversationsToDisplay, selectedConv);\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // append the new incoming conversation at the top of the existing list of conversations.\r\n  const displayNewConvAtTop = (\r\n    updatedConversations,\r\n    newConvo,\r\n    updatedNewConvo\r\n  ) => {\r\n    let index = 0;\r\n    // create a replica of updatedConversations\r\n    const dummyArray = updatedConversations;\r\n    // return the index of the new incoming conversation from the list of all conversations.\r\n    updatedConversations.map((value) => {\r\n      if (\r\n        value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n      ) {\r\n        return (index = updatedConversations.indexOf(value));\r\n      }\r\n    });\r\n    // remove that new conversation from the dummy list temporarily.\r\n    dummyArray.splice(index, 1);\r\n    // push that removed incoming conversation on top of the list.\r\n    const finalConversations = [updatedNewConvo, ...dummyArray];\r\n    return finalConversations;\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n  const increaseOverallCount = (\r\n    newConvo,\r\n    conversationsToDisplay,\r\n    selectedConv\r\n  ) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = conversationsToDisplay.filter(\r\n      (filter) =>\r\n        filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvo?.conversation_id &&\r\n        newConvo.created_by !==\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ) &&\r\n        newConvo.conversation_id !== selectedConv\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = conversationsToDisplay.filter(\r\n      (item) =>\r\n        item?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n    );\r\n    for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[item]?.conversation_id\r\n            .toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0].unread_messages_count === 0\r\n      ) {\r\n        setUnreadCount((unreadCount) => unreadCount + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n  const increaseOverallCountDuringFilters = (newState, allConversations) => {\r\n    if (\r\n      urgencyFilterData.length > 0 ||\r\n      statusFilterData.length > 0 ||\r\n      hotlineFilterData.length > 0 ||\r\n      searchString.length > 0\r\n    ) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      // return only that new incoming message which comes from a user other than logged in user.\r\n      const newConvFromDiffUser = allConversations?.filter(\r\n        (filter) =>\r\n          filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState?.conversation_id &&\r\n          newState.created_by !==\r\n            parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_data.user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ) &&\r\n          newState?.conversation_id !== conversation.conversation_id\r\n      );\r\n      // return the new incoming message irrespective of any user.\r\n      const incomingConversation = allConversations?.filter(\r\n        (item) =>\r\n          item?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id\r\n      );\r\n      for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n        if (\r\n          incomingConversation[0]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newConvFromDiffUser[item]?.conversation_id\r\n              ?.toString()\r\n              .replace(/(<([^>]+)>)/gi, \"\") &&\r\n          incomingConversation[0]?.unread_messages_count === 0\r\n        ) {\r\n          if (!newInitiatedConv.current) {\r\n            setUnreadCount((unreadCount) => unreadCount + 1);\r\n          }\r\n          const updatedAllConversations = allConversations.map((item) =>\r\n            item.conversation_id === newState?.conversation_id\r\n              ? {\r\n                  ...item,\r\n                  unread_messages_count: item.unread_messages_count + 1,\r\n                }\r\n              : item\r\n          );\r\n          setAllConversations(updatedAllConversations);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // remove filters when component loads.\r\n  const unSetFilters = () => {\r\n    AppStorage.remove(\"urgencyLevels\");\r\n    AppStorage.remove(\"status\");\r\n    AppStorage.remove(\"hotline\");\r\n    AppStorage.remove(\"searchBy\");\r\n    AppStorage.remove(\"ConvID\");\r\n  };\r\n\r\n  // return those conversations which have matched filters or search.\r\n  const filterSocket = (\r\n    totalFiltersApplied,\r\n    newConvo,\r\n    conversations,\r\n    conversationIds\r\n  ) => {\r\n    let totalConversations = [];\r\n    if (\r\n      (totalFiltersApplied.status?.includes(newConvo.status_id.toString()) &&\r\n        totalFiltersApplied.urgency?.includes(\r\n          newConvo.urgency_level_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.hotline?.includes(newConvo.hotline_id.toString()) &&\r\n        totalFiltersApplied.searchBy?.length > 0 &&\r\n        newConvo.conversation_id\r\n          .toLowerCase()\r\n          .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n      newConvo.responder_conversation_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.hotline_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.message\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n    ) {\r\n      let conversation_id = newConvo.conversation_id.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = newConvo.hotline_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = newConvo.message.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      const updatedConversation = {\r\n        ...newConvo,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: newConvo.hotline_id,\r\n        },\r\n      };\r\n      if (\r\n        !conversationIds.includes(\r\n          updatedConversation.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n        )\r\n      ) {\r\n        totalConversations = [...conversations, updatedConversation];\r\n      } else {\r\n        totalConversations = conversations;\r\n      }\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n    return totalConversations;\r\n  };\r\n\r\n  // set state values of applied filters.\r\n  function setAppliedFilters(urgencyLevels, status, hotline) {\r\n    setUrgencyFilterData(urgencyLevels);\r\n    setStatusFilterData(status);\r\n    setHotlineFilterData(hotline);\r\n    AppStorage.set(\r\n      \"urgencyLevels\",\r\n      Object.values(urgencyLevels)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"status\",\r\n      Object.values(status)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(hotline)?.map((data) => data.value)\r\n    );\r\n  }\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    setAppliedFilters(selectedUrgency, selectedStatus, selectedHotline);\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   hotline_id:\r\n    //     allAppliedFilters.hotline_id && allAppliedFilters.hotline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  {HOTLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Spinner loader={loader} />\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <HoltineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoHotlines={NoHotlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  hotlineFilterData={hotlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoHotlineMessages CreateHotline={CreateHotline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  HOTLINE_MESSAGES,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","export const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.openline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let openlineName = item.openline_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          openline: {\r\n            name: openlineName,\r\n            openline_id: item.openline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport {\r\n  APPLY,\r\n  CANCEL,\r\n  FILTER,\r\n  OPENLINE,\r\n  OPENLINES,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [openline, setOpenline] = useState([]);\r\n  const [openlinesData, setOpenlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldOpenline, setOldOpenline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldOpenline, setSelectedOldOpenline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedOpenline, setSelectedOpenline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserAllOpenlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.openline.name,\r\n            value: value.openline.openline_id,\r\n          })\r\n        );\r\n        setOpenlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, openline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyOpenline\") {\r\n      const removeOpenline = selectedOpenline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmOpen = openline.filter((ur) => ur !== props.removeFilter.value);\r\n      setOpenline(rmOpen);\r\n      setSelectedOpenline(removeOpenline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const openlineOptions = openlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setOpenline(oldOpenline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedOpenline(selectedOldOpenline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(openline.length > 0 && { openline_id: openline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldOpenline(openline);\r\n    setSelectedOldOpenline(selectedOpenline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedOpenline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleOpenline(checkedValues) {\r\n    let selected = selectedOpenline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(openlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedOpenline(selected);\r\n    setOpenline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedOpenline([]);\r\n      setOpenline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{OPENLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"openline\"\r\n                    options={openlineOptions}\r\n                    value={openline}\r\n                    onChange={handleOpenline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGO4,\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { ACTIONS } from \"../../labels\";\r\nimport { ACTIVITY } from \"../../headings\";\r\n\r\nconst audit_log = [\r\n  { id: 5, name: AUDIT_LOG1 },\r\n  { id: 6, name: AUDIT_LOG2 },\r\n  { id: 7, name: AUDIT_LOG3 },\r\n  { id: 8, name: AUDIT_LOGO4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineConversationActivity/?conversation_id=\" +\r\n          conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.openline_id);\r\n  }\r\n\r\n  getAssigne(openlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getOpenlineAssignEmpl/\" + openlineId, options)\r\n      .then((res) => {\r\n        let listOfAssignedUsers = [];\r\n        res.data.map((value) => {\r\n          const user = value.user.first_name + \" \" + value.user.last_name;\r\n          listOfAssignedUsers.push({ \"Assigned User_name\": user });\r\n          return listOfAssignedUsers;\r\n        });\r\n        this.setState({ assigneEmp: listOfAssignedUsers });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./openlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { LAST_READ, URGENCY_LEVEL } from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getOpenlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"openline_message\")[\r\n          document.getElementsByClassName(\"openline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getOpenlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if (\r\n      (e.altKey && e.keyCode === 13) ||\r\n      (e.shiftKey && e.keyCode === 13) ||\r\n      (e.ctrlKey && e.keyCode === 13)\r\n    ) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        openline_id: conversation.openline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveOpenlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.openline_name.includes(\"</mark>\")) {\r\n      conversation.openline_name = conversation.openline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.openline_name = conversation.openline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.openline_name = conversation.openline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.openline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg openline_message mb-3\"\r\n                            : \"incoming-msg openline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            // className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD:YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.first_name} ${msg.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Openline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                openline_id={conversation.openline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchOpenlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.openlineFilterData.length > 0 && {\r\n        openline_id: props.openlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchOpenlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchOpenlineMessages from \"./SearchOpenlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  NO_CONVERSATION_SELECETD,\r\n  NO_MESSAGES_FOUND,\r\n  OPENLINE,\r\n  SELECT_CONVERSATION,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.openlineFilterData.map((openline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\r\n                          \"urgencyOpenline\",\r\n                          openline.value\r\n                        )\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {OPENLINE}: <span>{openline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchOpenlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  openlineFilterData={props.openlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.openline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoOpenlines}\r\n                alt=\"No Openlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED_OPENLINE } from \"../../messages\";\r\n\r\nconst NoOpenlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateOpenline}\r\n        alt=\"No Openlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED_OPENLINE}</h5>\r\n    {/* <small>Select a openline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoOpenlineMessages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Layout, Row, Col, Form, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./openlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport NoOpenlines from \"../../assets/images/no-openlines.svg\";\r\nimport { BASE_URL, WEBSOCKET_OPENLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport CreateOpenline from \"../../assets/images/create-openline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport OpenlineMessagesLeftSection from \"./OpenlineMessagesLeftSection\";\r\nimport NoOpenlineMessages from \"./NoOpenlineMessages\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\nimport { OPENLINE_MESSAGES } from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [openlineFilterData, setOpenlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    unSetFilters();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    increaseOverallCountDuringFilters(newState, mergedConversations);\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_OPENLINE_URL +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_data.organization_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ) +\r\n      \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const openlineState =\r\n          AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let openlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          openline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (openlineState !== null && openlineState?.length > 0) {\r\n          openlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            openline: openlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        if (urgencyFilter || statusFilter || openlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.openline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          increaseOverallCount(newConvo, conversationsToDisplay, selectedConv);\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          openlineFilter &&\r\n          !openlineState.includes(newConvo.openline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // append the new incoming conversation at the top of the existing list of conversations.\r\n  const displayNewConvAtTop = (\r\n    updatedConversations,\r\n    newConvo,\r\n    updatedNewConvo\r\n  ) => {\r\n    let index = 0;\r\n    // create a replica of updatedConversations\r\n    const dummyArray = updatedConversations;\r\n    // return the index of the new incoming conversation from the list of all conversations.\r\n    updatedConversations.map((value) => {\r\n      if (\r\n        value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n      ) {\r\n        return (index = updatedConversations.indexOf(value));\r\n      }\r\n    });\r\n    // remove that new conversation from the dummy list temporarily.\r\n    dummyArray.splice(index, 1);\r\n    // push that removed incoming conversation on top of the list.\r\n    const finalConversations = [updatedNewConvo, ...dummyArray];\r\n    return finalConversations;\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n  const increaseOverallCount = (\r\n    newConvo,\r\n    conversationsToDisplay,\r\n    selectedConv\r\n  ) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = conversationsToDisplay.filter(\r\n      (filter) =>\r\n        filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvo?.conversation_id &&\r\n        newConvo.created_by !==\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ) &&\r\n        newConvo.conversation_id !== selectedConv\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = conversationsToDisplay.filter(\r\n      (item) =>\r\n        item?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id\r\n    );\r\n    for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[item]?.conversation_id\r\n            .toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0].unread_messages_count === 0\r\n      ) {\r\n        setUnreadCount((unreadCount) => unreadCount + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n  const increaseOverallCountDuringFilters = (newState, allConversations) => {\r\n    if (\r\n      urgencyFilterData.length > 0 ||\r\n      statusFilterData.length > 0 ||\r\n      openlineFilterData.length > 0 ||\r\n      searchString.length > 0\r\n    ) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      // return only that new incoming message which comes from a user other than logged in user.\r\n      const newConvFromDiffUser = allConversations?.filter(\r\n        (filter) =>\r\n          filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState?.conversation_id &&\r\n          newState.created_by !==\r\n            parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_data.user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ) &&\r\n          newState?.conversation_id !== conversation.conversation_id\r\n      );\r\n      // return the new incoming message irrespective of any user.\r\n      const incomingConversation = allConversations?.filter(\r\n        (item) =>\r\n          item?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id\r\n      );\r\n      for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n        if (\r\n          incomingConversation[0]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newConvFromDiffUser[item]?.conversation_id\r\n              ?.toString()\r\n              .replace(/(<([^>]+)>)/gi, \"\") &&\r\n          incomingConversation[0]?.unread_messages_count === 0\r\n        ) {\r\n          if (!newInitiatedConv.current) {\r\n            setUnreadCount((unreadCount) => unreadCount + 1);\r\n          }\r\n          const updatedAllConversations = allConversations.map((item) =>\r\n            item.conversation_id === newState?.conversation_id\r\n              ? {\r\n                  ...item,\r\n                  unread_messages_count: item.unread_messages_count + 1,\r\n                }\r\n              : item\r\n          );\r\n          setAllConversations(updatedAllConversations);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // remove filters when component loads.\r\n  const unSetFilters = () => {\r\n    AppStorage.remove(\"urgencyLevels\");\r\n    AppStorage.remove(\"status\");\r\n    AppStorage.remove(\"openline\");\r\n    AppStorage.remove(\"searchBy\");\r\n    AppStorage.remove(\"ConvID\");\r\n  };\r\n\r\n  // return those conversations which have matched filters or search.\r\n  const filterSocket = (\r\n    totalFiltersApplied,\r\n    newConvo,\r\n    conversations,\r\n    conversationIds\r\n  ) => {\r\n    let totalConversations = [];\r\n    if (\r\n      (totalFiltersApplied.status?.includes(newConvo.status_id.toString()) &&\r\n        totalFiltersApplied.urgency?.includes(\r\n          newConvo.urgency_level_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.openline?.includes(\r\n          newConvo.openline_id.toString()\r\n        ) &&\r\n        totalFiltersApplied.searchBy?.length > 0 &&\r\n        newConvo.conversation_id\r\n          .toLowerCase()\r\n          .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n      newConvo.responder_conversation_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.openline_name\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n      newConvo.message\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n    ) {\r\n      let conversation_id = newConvo.conversation_id.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let openlineName = newConvo.openline_name.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = newConvo.message.replace(\r\n        new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      const updatedConversation = {\r\n        ...newConvo,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        openline: {\r\n          name: openlineName,\r\n          openline_id: newConvo.openline_id,\r\n        },\r\n      };\r\n      if (\r\n        !conversationIds.includes(\r\n          updatedConversation.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n        )\r\n      ) {\r\n        totalConversations = [...conversations, updatedConversation];\r\n      } else {\r\n        totalConversations = conversations;\r\n      }\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n    return totalConversations;\r\n  };\r\n\r\n  // set state values of applied filters.\r\n  function setAppliedFilters(urgencyLevels, status, openline) {\r\n    setUrgencyFilterData(urgencyLevels);\r\n    setStatusFilterData(status);\r\n    setOpenlineFilterData(openline);\r\n    AppStorage.set(\r\n      \"urgencyLevels\",\r\n      Object.values(urgencyLevels)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"status\",\r\n      Object.values(status)?.map((data) => data.value)\r\n    );\r\n    AppStorage.set(\r\n      \"openline\",\r\n      Object.values(openline)?.map((data) => data.value)\r\n    );\r\n  }\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedOpenline\r\n  ) => {\r\n    setAppliedFilters(selectedUrgency, selectedStatus, selectedOpenline);\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const openlineState =\r\n      AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(openlineState &&\r\n        openlineState.length > 0 && { openline_id: openlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   openline_id:\r\n    //     allAppliedFilters.openline_id && allAppliedFilters.openline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      openlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"openlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  {OPENLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <Spin\r\n                      size=\"large\"\r\n                      tip=\"Loading...\"\r\n                      spinning={loader}\r\n                    ></Spin>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <OpenlineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoOpenlines={NoOpenlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  openlineFilterData={openlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoOpenlineMessages CreateOpenline={CreateOpenline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\nimport { PERMISSION_DENIED } from \"../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={this.props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={this.props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">{PERMISSION_DENIED}</h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionDenied;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  RESET_INVITE,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_FOR,\r\n  RESET_PASSWORD_LINK,\r\n} from \"../../headings\";\r\nimport { CONFIRM_PASSWORD, NEW_PASSWORD } from \"../../labels\";\r\nimport {ENTER_NEW_PASSWORD, CONFIRM_YOUR_PASSWORD} from \"../../errors\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>{RESET_PASSWORD_LINK}</span>\r\n        </Button>\r\n        <Modal\r\n          title={RESET_PASSWORD}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={RESET_INVITE}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                {RESET_PASSWORD_FOR}{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label={NEW_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {ENTER_NEW_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={CONFIRM_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {CONFIRM_YOUR_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\nimport { CANCEL_MODAL, EDIT_SEEDED_USER, UPDATE_MODAL } from \"../../headings\";\r\nimport { MAX_CHAR_LIMIT, REQUIRED_MESSAGE, VALID_EMAIL, VALID_MOBILE } from \"../../errors\";\r\nimport { DATE, EMAIL, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst EditSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleEditOk}\r\n      onCancel={props.handleEditCancel}\r\n      centered\r\n      width={900}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={UPDATE_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n        <div>{EDIT_SEEDED_USER}</div>\r\n        <br />\r\n        <div className=\"avatar-wrapper pt-2 pb-4\">\r\n          <Avatar>{props.seededUserName.charAt(0)}</Avatar>\r\n          <span className=\"md-name\">{props.seededUserName}</span>\r\n        </div>\r\n        {props.error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message={REQUIRED_MESSAGE}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={FIRST_NAME}\r\n                value={props.seededUserDetails.firstName}\r\n              >\r\n                <Form.Item name=\"firstName\" className=\"required\">\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    className=\"input-control\"\r\n                    defaultValue={props.seededUserDetails.firstName}\r\n                    htmlFor=\"firstName\"\r\n                    value={props.seededUserDetails.firstName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.fNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message={MAX_CHAR_LIMIT}\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={LAST_NAME}\r\n                value={props.seededUserDetails.lastName}\r\n              >\r\n                <Form.Item name=\"lastName\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"lastName\"\r\n                    htmlFor=\"lastName\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.lastName}\r\n                    value={props.seededUserDetails.lastName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.lNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message={MAX_CHAR_LIMIT}\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={EMAIL}\r\n                value={props.seededUserDetails.email}\r\n              >\r\n                <Form.Item name=\"email\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"email\"\r\n                    htmlFor=\"email\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.email}\r\n                    value={props.seededUserDetails.email}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateEmailAddress(e)}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                  {props.emailValidationError && (\r\n                    <Alert\r\n                      message={VALID_EMAIL}\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label={DATE} value=\"date2\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"new w-100\"\r\n                    name=\"date2\"\r\n                    className=\"required\"\r\n                    value={props.seededUserDetails.date2}\r\n                    onChange={(date) =>\r\n                      props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                    }\r\n                    disabledDate={props.disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n              <FloatLabel label={MOBILE} value={props.seededUserDetails.mobile}>\r\n                <Form.Item name=\"mobile\" className=\"required\">\r\n                  <PhoneInput\r\n                    country={\"us\"}\r\n                    id=\"mobile\"\r\n                    htmlFor=\"mobile\"\r\n                    defaultValue={props.seededUserDetails.mobile}\r\n                    value={props.seededUserDetails.mobile}\r\n                    onChange={props.handleMobile}\r\n                    onBlur={(e) => props.validateMobile(e)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.mobileValidationError && (\r\n                    <Alert\r\n                      message={VALID_MOBILE}\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={STATUS}\r\n                value={props.seededUserDetails.status2}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status2\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={props.seededUserDetails.status2}\r\n                      htmlFor=\"status2\"\r\n                      className=\"required\"\r\n                      onSelect={(value) =>\r\n                        props.handleSeededUserOnSelect(value, \"status2\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                      <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Form>\r\n      <ResetPwdModal\r\n        user={props.seededUserDetails.firstName}\r\n        handleResetPasswordOk={props.handleResetPasswordOk}\r\n        handleResetPasswordCancel={props.handleResetPasswordCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSeededUser;\r\n","import React from \"react\";\r\nimport { Row, Col, Input, Form, Select, Modal, Alert, DatePicker } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport {ADD_SEEDED_USER, CANCEL_MODAL, ADD_TEXT_MODAL} from \"../../headings\";\r\nimport {REQUIRED_MESSAGE, MAX_CHAR_LIMIT, VALID_EMAIL, VALID_MOBILE} from \"../../errors\";\r\nimport {FIRST_NAME, LAST_NAME, EMAIL, DATE, MOBILE, STATUS} from \"../../labels\";\r\nimport {STATUS_ACTIVE, STATUS_INACTIVE} from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleAddSeededUser}\r\n      onCancel={props.handleAddSeededUserCancel}\r\n      centered\r\n      width={1200}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={ADD_TEXT_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n        {props.error && (\r\n          <Form.Item>\r\n            <Alert\r\n              message={REQUIRED_MESSAGE}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <div>{ADD_SEEDED_USER}</div>\r\n          <br />\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={FIRST_NAME}\r\n                value={props.seededUserDetails.firstName}\r\n              >\r\n                <Form.Item name=\"firstName\" className=\"required\">\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    className=\"input-control\"\r\n                    defaultValue={props.seededUserDetails.firstName}\r\n                    htmlFor=\"firstName\"\r\n                    value={props.seededUserDetails.firstName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.fNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message={MAX_CHAR_LIMIT}\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={LAST_NAME}\r\n                value={props.seededUserDetails.lastName}\r\n              >\r\n                <Form.Item name=\"lastName\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"lastName\"\r\n                    htmlFor=\"lastName\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.lastName}\r\n                    value={props.seededUserDetails.lastName}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    autoComplete=\"off\"\r\n                    maxLength={50}\r\n                  />\r\n                </Form.Item>\r\n                {props.lNameCount && (\r\n                  <Form.Item>\r\n                    <Alert\r\n                      message={MAX_CHAR_LIMIT}\r\n                      type=\"error\"\r\n                    ></Alert>\r\n                  </Form.Item>\r\n                )}\r\n              </FloatLabel>\r\n            </Col>\r\n            {/* <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Temporary Password\"\r\n                value={props.seededUserDetails.password}\r\n              >\r\n                <Form.Item name=\"password\" className=\"pwd required\">\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"password\"\r\n                    className=\"required\"\r\n                    id=\"password\"\r\n                    defaultValue={props.seededUserDetails.password}\r\n                    value={props.seededUserDetails.password}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validatePassword(e)}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {props.passwordValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid password.\r\n                      It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col> */}\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={EMAIL}\r\n                value={props.seededUserDetails.email}\r\n              >\r\n                <Form.Item name=\"email\" className=\"required\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    id=\"email\"\r\n                    htmlFor=\"email\"\r\n                    className=\"required\"\r\n                    defaultValue={props.seededUserDetails.email}\r\n                    value={props.seededUserDetails.email}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validateEmailAddress(e)}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.emailValidationError && (\r\n                    <Alert\r\n                      message={VALID_EMAIL}\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label={DATE} value=\"date2\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"new w-100\"\r\n                    name=\"date2\"\r\n                    className=\"required\"\r\n                    value={props.seededUserDetails.date2}\r\n                    onChange={(date) =>\r\n                      props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                    }\r\n                    disabledDate={props.disabledDate}\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n              <FloatLabel label={MOBILE} value={props.seededUserDetails.mobile}>\r\n                <Form.Item name=\"mobile\" className=\"required\">\r\n                  <PhoneInput\r\n                    country={\"us\"}\r\n                    id=\"mobile\"\r\n                    htmlFor=\"mobile\"\r\n                    value={props.seededUserDetails.mobile}\r\n                    onChange={props.handleMobile}\r\n                    onBlur={props.validateMobile}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {props.mobileValidationError && (\r\n                    <Alert\r\n                      message={VALID_MOBILE}\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={STATUS}\r\n                value={props.seededUserDetails.status2}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status2\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-50\"\r\n                      value={props.seededUserDetails.status2}\r\n                      htmlFor=\"status2\"\r\n                      className=\"required\"\r\n                      onSelect={(value) =>\r\n                        props.handleSeededUserOnSelect(value, \"status2\")\r\n                      }\r\n                    >\r\n                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                      <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewSeededUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  ORGANIZATION_DETAILS,\r\n  EDIT_DETAILS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrgDetails = (props) => {\r\n  const history = useHistory();\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onFinish = (values) => {};\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            date2: [\r\n              moment(value.date2[0], \"YYYY-MM-DD\"),\r\n              moment(value.date2[1], \"YYYY-MM-DD\"),\r\n            ],\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const editOrg = () => {\r\n    const path = `/amcc/editorg/${orgID}`;\r\n    history.push(path, \"viaOrgDetails\");\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `Details for ${seededUserName} have been changed successfully.`,\r\n        placement,\r\n      });\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      // password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: `${seededUserDetails.firstName} has been added successfully.`,\r\n            placement,\r\n          });\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `${userName} has been deleted successfully.`,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{ORGANIZATION_DETAILS}</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3\"\r\n                          onClick={() => editOrg()}\r\n                        >\r\n                          <span className=\"icon icon-pencil\" />\r\n                          <span className=\"pl-2 d-none d-block-md\">\r\n                            {EDIT_DETAILS}\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationDetails.name.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">\r\n                        {organizationDetails.name}\r\n                      </span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      onFinish={onFinish}\r\n                      form={form}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label={ORGANIZATION_NAME}\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  htmlFor=\"organization name\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label={ORGANIZATION_ID}\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                                validateStatus=\"success\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"identifier\"\r\n                                  name=\"identifier\"\r\n                                  htmlFor=\"organization name\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label={STATUS}\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item className=\"required\" name=\"status1\">\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-100\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                    disabled\r\n                                  >\r\n                                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label={DATE} value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  disabled\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <Row className=\"w-100\">\r\n                      <Col span={24} md={12}>\r\n                        <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n                      </Col>\r\n                      <Col\r\n                        span={24}\r\n                        md={12}\r\n                        className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                      >\r\n                        <Button\r\n                          className=\"mr-4\"\r\n                          type=\"secondary\"\r\n                          onClick={() => addSeededUser()}\r\n                        >\r\n                          {ADD_SEEDED_USER}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                      {seededUsers.length > 0 ? (\r\n                        <AssignedUsers\r\n                          seededUsers={seededUsers}\r\n                          orgID={parseInt(orgID)}\r\n                          statusOnClicked={statusOnClicked}\r\n                          handleEditUser={handleEditSeededUser}\r\n                          handleDelete={handleDeleteSeededUser}\r\n                          addSeededUser={addSeededUser}\r\n                          viaEdit\r\n                          orgDetails\r\n                          seededUser\r\n                        />\r\n                      ) : (\r\n                        <Col span={24} lg={18}>\r\n                          <Row className=\"justify-content-center\">\r\n                            {NO_SEEDED_USERS}\r\n                          </Row>\r\n                        </Col>\r\n                      )}\r\n                      {editVisible ? (\r\n                        <EditSeededUsers\r\n                          error={modalError}\r\n                          handleEditOk={handleEditOk}\r\n                          handleEditCancel={handleEditCancel}\r\n                          seededUsers={seededUsers}\r\n                          fNameCount={fNameCount}\r\n                          lNameCount={lNameCount}\r\n                          seededUserName={seededUserName}\r\n                          seededUserDetails={seededUserDetails}\r\n                          disabledDate={disabledDate}\r\n                          handleSeededUserOnChange={handleSeededUserOnChange}\r\n                          handleSeededUserDatePickerChange={\r\n                            handleSeededUserDatePickerChange\r\n                          }\r\n                          handleMobile={handleMobile}\r\n                          handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                          validateEmailAddress={validateEmailAddress}\r\n                          emailValidationError={emailValidationError}\r\n                          validateMobile={validateMobile}\r\n                          mobileValidationError={mobileValidationError}\r\n                          handleResetPasswordOk={handleResetPasswordOk}\r\n                          handleResetPasswordCancel={handleResetPasswordCancel}\r\n                        />\r\n                      ) : showAddSeededUser ? (\r\n                        <AddNewSeededUser\r\n                          error={modalError}\r\n                          handleAddSeededUser={handleAddSeededUser}\r\n                          handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                          seededUsers={seededUsers}\r\n                          fNameCount={fNameCount}\r\n                          lNameCount={lNameCount}\r\n                          seededUserDetails={seededUserDetails}\r\n                          disabledDate={disabledDate}\r\n                          handleSeededUserOnChange={handleSeededUserOnChange}\r\n                          handleSeededUserDatePickerChange={\r\n                            handleSeededUserDatePickerChange\r\n                          }\r\n                          handleMobile={handleMobile}\r\n                          handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                          validateEmailAddress={validateEmailAddress}\r\n                          emailValidationError={emailValidationError}\r\n                          validateMobile={validateMobile}\r\n                          mobileValidationError={mobileValidationError}\r\n                          validatePassword={validatePassword}\r\n                          passwordValidationError={passwordValidationError}\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrgDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport {\r\n  DELETE,\r\n  EDIT_ORGANIZATION,\r\n  UPDATE,\r\n  CANCEL,\r\n  EDIT_SEEDED_USERS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n} from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [orgNameAlreadyExists, setOrgNameAlreadyExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDAlreadyExists] = useState(\"\");\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [organizationIdentifier, setOrganizationIdentifier] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    //  password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [orgStatus, setOrgStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      setOrganizationIdentifier(data.organization.identifier);\r\n      setOrgStatus(data.organization.status_id.toString());\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationName) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganization/\",\r\n          { organization_name: organizationDetails.name },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgNameAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgNameAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationIdentifier) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganizationID/\",\r\n          { orgId: organizationDetails.identifier },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgIDAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgIDAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            date2: [\r\n              moment(value.date2[0], \"YYYY-MM-DD\"),\r\n              moment(value.date2[1], \"YYYY-MM-DD\"),\r\n            ],\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleOrganizationOnChange = (e) => {\r\n    if (e.target.id === \"identifier\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (e.target.id === \"name\" && e.target.value.length === 80) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setOrganizationDetails({\r\n      ...organizationDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteClick(false);\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      name: organizationDetails.name,\r\n      identifier: organizationDetails.identifier,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(organizationDetails.status),\r\n    };\r\n    const endDate = moment(organizationDetails.date1[1]).format(\"MM-DD-YYYY\");\r\n    if (organizationDetails.status !== orgStatus) {\r\n      if (new Date() < new Date(endDate)) {\r\n        if (organizationDetails.name && organizationDetails.identifier) {\r\n          if (\r\n            (orgNameAlreadyExists === \"status: false\" ||\r\n              organizationDetails.name === organizationName) &&\r\n            (orgIDAlreadyExists === \"status: false\" ||\r\n              organizationDetails.identifier === organizationIdentifier)\r\n          ) {\r\n            showError(false);\r\n            axios\r\n              .put(BASE_URL + \"saveOrganization/\", data, options)\r\n              .then(() => {\r\n                window.location = \"/amcc/manageorganizations\";\r\n              });\r\n          }\r\n        } else {\r\n          showError(true);\r\n        }\r\n      } else {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description:\r\n            \"Status can't be changed as the end date has been passed.\",\r\n          placement,\r\n        });\r\n      }\r\n    } else {\r\n      if (organizationDetails.name && organizationDetails.identifier) {\r\n        showError(false);\r\n        axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n          // const placement = \"bottomLeft\";\r\n          // api.info({\r\n          //   description: \"Organization details have been changed successfully.\",\r\n          //   placement,\r\n          // });\r\n          window.location = \"/amcc/manageorganizations\";\r\n        });\r\n      } else {\r\n        showError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `Details for ${seededUserName} have been changed successfully.`,\r\n        placement,\r\n      });\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    if (props.location.state) {\r\n      const path = `/amcc/orgdetails/${orgID}`;\r\n      history.push(path);\r\n    } else {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: `${seededUserDetails.firstName} has been added successfully.`,\r\n            placement,\r\n          });\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: `${userName} has been deleted successfully.`,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{EDIT_ORGANIZATION}</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">{EDIT_ORGANIZATION}</h6>\r\n                      <div>\r\n                        <Button\r\n                          type=\"link\"\r\n                          className=\"link pl-0 btn-link-primary ml-3 deleteOrg\"\r\n                          onClick={onDelete}\r\n                        >\r\n                          <span className=\"icon icon-delete\" />\r\n                          <span className=\"d-none d-md-inline-flex deleteOrg\">\r\n                            {DELETE}\r\n                          </span>\r\n                        </Button>\r\n                        {deleteClick ? (\r\n                          <DeleteModal\r\n                            org={organizationName}\r\n                            handleDelete={handleDeleteOrganization}\r\n                            handleCancel={handleCancelDelete}\r\n                            deleteOrg\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                      <span className=\"md-name\">{organizationName}</span>\r\n                    </div>\r\n                    <Form className=\"input-md floating-label w-100\" form={form}>\r\n                      {error && (\r\n                        <Form.Item>\r\n                          <Alert\r\n                            message={REQUIRED_MESSAGE}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        </Form.Item>\r\n                      )}\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label=\"Organization Name\"\r\n                              value={organizationDetails.name}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.name}\r\n                                  value={organizationDetails.name}\r\n                                  onChange={(e) =>\r\n                                    handleOrganizationOnChange(e)\r\n                                  }\r\n                                  onBlur={(e) => CheckOrganizationName(e)}\r\n                                  htmlFor=\"name\"\r\n                                  autoComplete=\"off\"\r\n                                  maxLength={80}\r\n                                />\r\n                                {orgNameAlreadyExists === \"status: false\" &&\r\n                                  organizationDetails.name\r\n                                    .replace(/^\\s*/, \"\")\r\n                                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                                  organizationDetails.name.length > 0 && (\r\n                                    <CheckCircleTwoTone\r\n                                      className=\"successCheck\"\r\n                                      twoToneColor=\"#52c41a\"\r\n                                    />\r\n                                  )}\r\n                                {orgNameAlreadyExists == \"status: true\" && (\r\n                                  <Alert\r\n                                    message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </Form.Item>\r\n                              {orgNameCount && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={MAX_CHAR_LIMIT}\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label={ORGANIZATION_ID}\r\n                              value={organizationDetails.identifier}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"identifier\"\r\n                                id=\"identifier\"\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  htmlFor=\"identifier\"\r\n                                  className=\"required\"\r\n                                  defaultValue={organizationDetails.identifier}\r\n                                  value={organizationDetails.identifier}\r\n                                  onChange={(e) =>\r\n                                    handleOrganizationOnChange(e)\r\n                                  }\r\n                                  onBlur={(e) => CheckOrganizationID(e)}\r\n                                  autoComplete=\"off\"\r\n                                  maxLength={20}\r\n                                />\r\n                                {orgIDAlreadyExists === \"status: false\" &&\r\n                                  organizationDetails.identifier\r\n                                    .replace(/^\\s*/, \"\")\r\n                                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                                  organizationDetails.identifier.length > 0 && (\r\n                                    <CheckCircleTwoTone\r\n                                      className=\"successCheck\"\r\n                                      twoToneColor=\"#52c41a\"\r\n                                    />\r\n                                  )}\r\n                                {orgIDAlreadyExists == \"status: true\" && (\r\n                                  <Alert\r\n                                    message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </Form.Item>\r\n                              {orgIdCount && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={MAX_CHAR_LIMIT}\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel\r\n                              label={STATUS}\r\n                              value={organizationDetails.status}\r\n                            >\r\n                              <Form.Item\r\n                                className=\"required edit-input\"\r\n                                name=\"status\"\r\n                              >\r\n                                <>\r\n                                  <Select\r\n                                    className=\"input-control w-100 w-lg-100\"\r\n                                    value={organizationDetails.status}\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleOrganizationOnSelect(\r\n                                        value,\r\n                                        \"status\"\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                                  </Select>\r\n                                </>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label={DATE} value=\"date1\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker\r\n                                  className=\"w-100 \"\r\n                                  name=\"date1\"\r\n                                  value={organizationDetails.date1}\r\n                                  onChange={(date) =>\r\n                                    handleOrganizationDatePickerChange(\r\n                                      date,\r\n                                      \"date1\"\r\n                                    )\r\n                                  }\r\n                                  disabledDate={disabledDate}\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            onClick={onOrgEditSubmit}\r\n                          >\r\n                            {UPDATE}\r\n                          </Button>\r\n                          <Button\r\n                            className=\"ml-4\"\r\n                            type=\"secondary\"\r\n                            onClick={cancelEditing}\r\n                          >\r\n                            {CANCEL}\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col\r\n                    span={24}\r\n                    md={12}\r\n                    className=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <h6 className=\"py-3 mb-0\">{EDIT_SEEDED_USERS}</h6>\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    md={12}\r\n                    className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                  >\r\n                    <Button\r\n                      className=\"mr-4\"\r\n                      type=\"secondary\"\r\n                      onClick={() => addSeededUser()}\r\n                    >\r\n                      {ADD_SEEDED_USER}\r\n                    </Button>\r\n                  </Col>\r\n                  {seededUsers.length > 0 ? (\r\n                    <AssignedUsers\r\n                      seededUsers={seededUsers}\r\n                      statusOnClicked={statusOnClicked}\r\n                      orgID={parseInt(orgID)}\r\n                      handleEditUser={handleEditSeededUser}\r\n                      handleDelete={handleDeleteSeededUser}\r\n                      addSeededUser={addSeededUser}\r\n                      viaEdit\r\n                      seededUser\r\n                    />\r\n                  ) : (\r\n                    <Col span={24} lg={18}>\r\n                      <Row className=\"justify-content-center\">\r\n                        {NO_SEEDED_USERS}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                  {editVisible ? (\r\n                    <EditSeededUsers\r\n                      error={modalError}\r\n                      handleEditOk={handleEditOk}\r\n                      handleEditCancel={handleEditCancel}\r\n                      seededUsers={seededUsers}\r\n                      seededUserName={seededUserName}\r\n                      fNameCount={fNameCount}\r\n                      lNameCount={lNameCount}\r\n                      seededUserDetails={seededUserDetails}\r\n                      disabledDate={disabledDate}\r\n                      handleSeededUserOnChange={handleSeededUserOnChange}\r\n                      handleSeededUserDatePickerChange={\r\n                        handleSeededUserDatePickerChange\r\n                      }\r\n                      handleMobile={handleMobile}\r\n                      handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                      validateEmailAddress={validateEmailAddress}\r\n                      emailValidationError={emailValidationError}\r\n                      validateMobile={validateMobile}\r\n                      mobileValidationError={mobileValidationError}\r\n                      handleResetPasswordOk={handleResetPasswordOk}\r\n                      handleResetPasswordCancel={handleResetPasswordCancel}\r\n                    />\r\n                  ) : showAddSeededUser ? (\r\n                    <AddNewSeededUser\r\n                      error={modalError}\r\n                      handleAddSeededUser={handleAddSeededUser}\r\n                      handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                      seededUsers={seededUsers}\r\n                      fNameCount={fNameCount}\r\n                      lNameCount={lNameCount}\r\n                      seededUserDetails={seededUserDetails}\r\n                      disabledDate={disabledDate}\r\n                      handleSeededUserOnChange={handleSeededUserOnChange}\r\n                      handleSeededUserDatePickerChange={\r\n                        handleSeededUserDatePickerChange\r\n                      }\r\n                      handleMobile={handleMobile}\r\n                      handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                      validateEmailAddress={validateEmailAddress}\r\n                      emailValidationError={emailValidationError}\r\n                      validatePassword={validatePassword}\r\n                      passwordValidationError={passwordValidationError}\r\n                      validateMobile={validateMobile}\r\n                      mobileValidationError={mobileValidationError}\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  notification,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n  ENTER_DIRECTORY_NAME,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  SELECT_DATE,\r\n  ENTER_DESCRIPTION,\r\n} from \"../../errors\";\r\nimport { HOTLINE_UPDATED } from \"../../messages\";\r\nimport { CANCEL, EDIT_HOTLINE, UPDATE } from \"../../headings\";\r\nimport {\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = (props) => {\r\n  const [hotLineData, sethotLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    hotline_icon_id: \"\",\r\n    hotline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [hotlineStatus, setHotlineStatus] = useState(\"\");\r\n  const [iconHtml, seticonHtml] = useState(\"\");\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [error, showError] = useState(false);\r\n\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n\r\n  const addIcon = (values, id) => {\r\n    sethotLineData({\r\n      ...hotLineData,\r\n      hotline_icon_id: id,\r\n    });\r\n    seticonHtml(values);\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setIcon = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return '<span class=\"icon icon-sexual-harassment-1 ant-tooltip-open\"></span>';\r\n      case \"2\":\r\n        return '<span class=\"icon icon-violence ant-tooltip-open\"></span>';\r\n      case \"3\":\r\n        return '<span class=\"icon icon-racism ant-tooltip-open\"></span>';\r\n      case \"4\":\r\n        return '<span class=\"icon icon-cyber-bullying ant-tooltip-open\"></span>';\r\n      case \"5\":\r\n        return '<span class=\"icon icon-fight ant-tooltip-open\"></span>';\r\n      case \"6\":\r\n        return '<span class=\"icon icon-discrimination ant-tooltip-open\"></span>';\r\n      case \"7\":\r\n        return '<span class=\"icon icon-slap ant-tooltip-open\"></span>';\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const eDate = moment(location.state.end_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    sethotLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      hotline_icon_id: location.state.hotline_icon_id,\r\n      hotline_id: location.state.hotline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    setHotlineStatus(location.state.status_id.toString());\r\n    const test = setIcon(location.state.hotline_icon_id.toString());\r\n    seticonHtml(test);\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: value });\r\n  };\r\n\r\n  const editHotline = (e) => {\r\n    if (\r\n      hotLineData.name &&\r\n      hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      hotLineData.help_text &&\r\n      hotLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      hotLineData.status_id &&\r\n      hotLineData.hotline_icon_id &&\r\n      hotLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const endDate = moment(hotLineData.start_date[1]).format(\"MM-DD-YYYY\");\r\n      const data = {\r\n        end_date: moment(hotLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: hotLineData.help_text,\r\n        hotline_icon_id: hotLineData.hotline_icon_id,\r\n        hotline_id: hotLineData.hotline_id,\r\n        name: hotLineData.name,\r\n        start_date: moment(hotLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(hotLineData.status_id),\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      if (\r\n        hotlineErrorUpdated == \"status: false\" ||\r\n        hotLineData.name === location.state.name\r\n      ) {\r\n        if (hotlineStatus !== hotLineData.status_id) {\r\n          if (new Date() < new Date(endDate)) {\r\n            saveHotLine(data);\r\n          } else {\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: STATUS_NOT_CHANGED,\r\n              placement,\r\n            });\r\n          }\r\n        } else {\r\n          saveHotLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  const saveHotLine = (data) => {\r\n    const token = authHeader();\r\n    let hotLineId = hotLineData.hotline_id;\r\n    delete hotLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"hotline/\" + hotLineId, data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: HOTLINE_UPDATED,\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkhotline/\",\r\n          { hotline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            sethotlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      sethotlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_HOTLINE}</h1>\r\n              </Row>\r\n              <div className=\"mid-content mt-4\">\r\n                <Form\r\n                  data-test=\"createHotlineStepOne\"\r\n                  className=\"input-md w-md-100 w-75 floating-label\"\r\n                  name=\"validate_other\"\r\n                  form={form}\r\n                >\r\n                  {error && (\r\n                    <Form.Item>\r\n                      <Alert\r\n                        message={REQUIRED_MESSAGE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n\r\n                  <FloatLabel label={DIRECTORY_NAME} value={hotLineData.name}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: { ENTER_DIRECTORY_NAME },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <TextArea\r\n                        showCount\r\n                        maxLength={80}\r\n                        value={hotLineData.name}\r\n                        onChange={(e) => handleStepOneOnChange(e)}\r\n                        onBlur={(e) => CheckHotlineName(e)}\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        className=\"input-control textarea-input\"\r\n                        htmlFor=\"name\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                      {hotlineErrorUpdated == \"status: false\" &&\r\n                        hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n                          .length > 0 &&\r\n                        hotLineData.name.length > 0 && (\r\n                          <CheckCircleTwoTone\r\n                            className=\"successCheck\"\r\n                            twoToneColor=\"#52c41a\"\r\n                          />\r\n                        )}\r\n                      {hotlineErrorUpdated == \"status: true\" && (\r\n                        <Alert\r\n                          message={HOTLINE_ALREADY_EXISTS}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      )}\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n\r\n                  <FloatLabel label={DESCRIPTION} value={hotLineData.help_text}>\r\n                    <Form.Item\r\n                      className=\"required\"\r\n                      name=\"help_text\"\r\n                      id=\"help_text\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: ENTER_DESCRIPTION,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <>\r\n                        <TextArea\r\n                          className=\"input-control textarea-input\"\r\n                          value={hotLineData.help_text}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          id=\"help_text\"\r\n                          name=\"help_text\"\r\n                          htmlFor=\"help_text\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label={DATE} value=\"start_date\">\r\n                    <Form.Item className=\"input-control datepicker-wrapper\">\r\n                      <RangePicker\r\n                        className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                        name=\"start_date\"\r\n                        disabledDate={disabledDate}\r\n                        value={hotLineData.start_date}\r\n                        onChange={(date) =>\r\n                          handleStepOneDatePickerChange(date, \"start_date\")\r\n                        }\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: { SELECT_DATE },\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label={STATUS} value={hotLineData.status_id}>\r\n                    <Form.Item className=\"required\" name=\"status\">\r\n                      <>\r\n                        <Select\r\n                          className=\"input-control w-100 w-lg-50\"\r\n                          value={hotLineData.status_id}\r\n                          htmlFor=\"status\"\r\n                          onSelect={(value) =>\r\n                            handleStepOneOnSelect(value, \"status_id\")\r\n                          }\r\n                        >\r\n                          <Select.Option value=\"5\">\r\n                            {STATUS_ACTIVE}\r\n                          </Select.Option>\r\n                          <Select.Option value=\"4\">\r\n                            {STATUS_INACTIVE}\r\n                          </Select.Option>\r\n                        </Select>\r\n                      </>\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <Form.Item className=\"\">\r\n                    <Form.Item\r\n                      className=\"upload-control\"\r\n                      name=\"upload\"\r\n                      valuePropName=\"fileList\"\r\n                    >\r\n                      <AddIcoModal\r\n                        data-test=\"addIconComponent\"\r\n                        addIcon={addIcon}\r\n                      />\r\n                      {getIconText(hotLineData.hotline_icon_id.toString()) && (\r\n                        <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                          <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                            <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                              <span className=\"d-inline-flex align-items-center\">\r\n                                <a className=\"ant-upload-list-item-thumbnail\">\r\n                                  {ReactHtmlParser(iconHtml)}\r\n                                </a>\r\n\r\n                                <span\r\n                                  className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                  title={getIconText(\r\n                                    hotLineData.hotline_icon_id.toString()\r\n                                  )}\r\n                                >\r\n                                  {getIconText(\r\n                                    hotLineData.hotline_icon_id.toString()\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n                  <div className=\"steps-action mt-5\">\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={editHotline}\r\n                      data-test=\"stepOneNext\"\r\n                      style={{ margin: \"0 8px\" }}\r\n                    >\r\n                      {UPDATE}\r\n                    </Button>\r\n\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      onClick={cancelHotline}\r\n                      data-test=\"stepOneNext\"\r\n                    >\r\n                      {CANCEL}\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditHotLine;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\n\r\nconst AddEmployee = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Add Employee</h1>\r\n                  <div className=\"d-block w-100 pl-3 pl-lg-0 pt-1\">\r\n                    <small>\r\n                      Please create all employees for your organization who are\r\n                      eligible to use the app. You can either integrate with\r\n                      existing system, import through CSV or add each employee\r\n                      manually.\r\n                    </small>\r\n                  </div>\r\n                </Row>\r\n                <div className=\"mid-content mt-0 mt-md-4 no-bg px-3 px-md-0\">\r\n                  <Row>\r\n                    <Col span={24} className=\"mt-5\">\r\n                      <Row className=\"d-flex justify-content-center\" gutter={{ xs: 8, sm: 32, md: 32, lg: 100 }}>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered} ${styles.box_bordered_active}`}>\r\n                            <span className={`icon-integrate ${styles.icon}`}></span>\r\n                            <div className=\"font-weight-bold text-center\">Integrate with existing system</div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered}`}>\r\n                          <span className={`icon-csv ${styles.icon}`}></span>\r\n                          <div className=\"font-weight-bold text-center\">Import through CSV</div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div className={`d-flex flex-column ${styles.box_bordered}`}>\r\n                          <span className={`icon-add-user ${styles.icon}`}></span>\r\n                          <div className=\"font-weight-bold text-center\">Create manually</div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Upload, message } from 'antd';\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\nconst UploadFiles = () => {\r\n  return (\r\n    <Dragger {...props}>\r\n    <p className=\"ant-upload-drag-icon\">\r\n    <span className=\"icon icon-upload\" />\r\n    </p>\r\n    <p className=\"ant-upload-text\">Drop files to upload or Browse</p>\r\n  </Dragger>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Breadcrumb, Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport UploadFiles from \"./UploadFiles\";\r\n\r\nconst ImportFiles = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/addemployee\">\r\n                      <Breadcrumb.Item>Add Employee</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Import CSV file</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Import CSV file </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Col span={20} className=\"mt-3 dragdrop\">\r\n                      <UploadFiles />\r\n                    </Col>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"justify-content-center d-flex mt-5\"\r\n                    >\r\n                      <Button type=\"link\" className=\"link pl-0\">\r\n                        <span className=\"icon icon-download-icon\" />\r\n                        Download Sample File\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"mt-3 btn-row\">\r\n                    <Button\r\n                      type=\"secondary\"\r\n                      className=\"mr-4 mb-4\"\r\n                      type=\"secondary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button type=\"primary\" className=\"md\">\r\n                      Upload\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImportFiles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\n\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport \"../form/form.scss\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst CreateManually = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n              <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/addemployee\">\r\n                      <Breadcrumb.Item>Add Employee</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>Create Manually</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">Create Manually</h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                  <Form className=\"input-md floating-label w-100\" name=\"\">\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"First Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"fname\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your first name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"fname\"\r\n                                  htmlFor=\"fname\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Last Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"lname\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your last name\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"lname\"\r\n                                  htmlFor=\"lname\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"emailid\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your email id\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  type=\"email\"\r\n                                  className=\"input-control\"\r\n                                  id=\"emailid\"\r\n                                  htmlFor=\"emailid\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                            <FloatLabel label=\"Mobile Number\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"mobile\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your mobile number\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <PhoneInput country={\"us\"} />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Employee id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"empid\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your employee id\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  id=\"empid\"\r\n                                  htmlFor=\"empid\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Department\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"department\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter your department\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">dept1</Option>\r\n                                  <Option value=\"0\">dept2</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">1</Option>\r\n                                  <Option value=\"0\">2</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item\r\n                                className=\"input-control datepicker-wrapper required\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select start and end date\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <RangePicker className=\"w-100 \" name=\"s1Date\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Make Super User\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select user type\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Select className=\"input-control w-100\">\r\n                                  <Option value=\"1\">Make Super User</Option>\r\n                                  <Option value=\"0\">Make User</Option>\r\n                                </Select>\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F1\">\r\n                              <Form.Item name=\"f1\">\r\n                                <Input className=\"input-control\" htmlFor=\"f1\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F2\">\r\n                              <Form.Item name=\"f2\">\r\n                                <Input className=\"input-control\" htmlFor=\"f3\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F3\">\r\n                              <Form.Item name=\"f3\">\r\n                                <Input className=\"input-control\" htmlFor=\"f3\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F4\">\r\n                              <Form.Item name=\"f4\">\r\n                                <Input className=\"input-control\" htmlFor=\"f4\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"F5\">\r\n                              <Form.Item name=\"f5\">\r\n                                <Input className=\"input-control\" htmlFor=\"f5\" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateManually;\r\n","import React from \"react\";\r\nimport { Upload, Button, Modal } from \"antd\";\r\nimport { CLOSE_TEXT_MODAL, DOCUMENT_IMAGE } from \"../../headings\";\r\n\r\nconst UploadImage = ({\r\n  file,\r\n  handleStepOneUpload,\r\n  handleBeforeUpload,\r\n  handleOnRemove,\r\n  handlePollImagePreview,\r\n  handleCancel,\r\n  poll,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Upload\r\n        listType=\"picture\"\r\n        fileList={file}\r\n        onChange={(value) => handleStepOneUpload(value, \"pollDocument\")}\r\n        beforeUpload={(value) => handleBeforeUpload(value, \"pollDocument\")}\r\n        onRemove={(value) => handleOnRemove(value, \"pollImageValidation\")}\r\n        onPreview={(value) => handlePollImagePreview(value)}\r\n        className=\"upload-list-inline c-upload\"\r\n        accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n      >\r\n        <Button type=\"link\" className=\"link pl-0\">\r\n          <span className=\"icon icon-upload pr-2\"></span>\r\n          {DOCUMENT_IMAGE}\r\n        </Button>\r\n      </Upload>\r\n      <Modal\r\n        className=\"modal-openline\"\r\n        visible={poll.previewVisible}\r\n        title={poll.previewTitle}\r\n        centered\r\n        onOk={(value) => handleCancel(value)}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{ style: { display: \"none\" } }}\r\n        okText={CLOSE_TEXT_MODAL}\r\n      >\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={poll.previewImage} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nimport { Tag, Input, Tooltip, Col, Button } from \"antd\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport { ADD_OPTION } from \"../../headings\";\r\n\r\nclass MultiChoice extends Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: \"\",\r\n    editInputIndex: -1,\r\n    editInputValue: \"\",\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter((tag) => tag !== removedTag);\r\n    this.props.setSingleChoiceResponse(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const tagsOption = this.props.pollResponse;\r\n    this.setState({ tags: tagsOption });\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: \"\",\r\n    });\r\n    this.props.setSingleChoiceResponse(tags);\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tags,\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className={`${styles.edit_tag}`}\r\n              key={tag}\r\n              closable={!this.props.disabled}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={(e) => {\r\n                  // if (index ) {\r\n                  this.setState(\r\n                    { editInputIndex: index, editInputValue: tag },\r\n                    () => {\r\n                      this.editInput.focus();\r\n                    }\r\n                  );\r\n                  e.preventDefault();\r\n                  // }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        <Col span={12} className=\"mb-4\">\r\n          <Tag onClick={this.showInput} className={`${styles.add_tag}`}>\r\n            <Button\r\n              type=\"link\"\r\n              className=\"link pl-0\"\r\n              onClick={this.showModal}\r\n              disabled={this.props.disabled}\r\n            >\r\n              <span className=\"icon icon-add-filled\" />\r\n              {ADD_OPTION}\r\n            </Button>\r\n          </Tag>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiChoice;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { CANCEL, PUBLISH_POLL, PUBLISH, SCHEDULE } from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport {\r\n  SELECT_END_DATE,\r\n  SELECT_END_TIME,\r\n  SELECT_START_DATE,\r\n  SELECT_START_TIME,\r\n} from \"../../labels\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.onPublish();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return current && current < moment(this.props.pollData.pollStartDate);\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ startTimeError: true });\r\n    } else {\r\n      this.setState({ startTimeError: false });\r\n      this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollStartDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.startTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label={SELECT_START_TIME}\r\n                        value={this.props.pollData.pollStartTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollEndDate}\r\n                    disabledDate={this.disabledEndDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.props.pollData.pollEndTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import moment from 'moment-timezone';\r\n//#region Formats\r\n\r\nconst formatAsYYYYMMDDHHmmss = date => moment(date, \"MM/DD/YYYY\").format('YYYY-MM-DD[T]HH:mm:ss');\r\nconst formatAsHHmmss = date => moment(date).format('HH:mm:ss');\r\nconst formatAsMMMDDYYYY = date => moment(date).format('MM-DD-YYYY');\r\nconst formatAsHHmm = date => moment(date).format('HH:mm');\r\nconst formatAsYYYYMMDD = date => moment(date).format('YYYY-MM-DD');\r\nconst formatAsDDMMYYYY = date => moment(date).format('DD-MM-YYYY');\r\n\r\n\r\nconst format = date => moment(date).format();\r\nexport default{\r\n    formatAsYYYYMMDDHHmmss,\r\n    formatAsHHmmss,\r\n    formatAsMMMDDYYYY,\r\n    formatAsHHmm,\r\n    formatAsYYYYMMDD,\r\n    formatAsDDMMYYYY,\r\n    format\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Input,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DateTimeModal from \"../modal/DateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { BACK, PREVIEW_POLL, MANAGE_POLLS } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n}\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst PreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  isImage,\r\n  data,\r\n  attachmentName,\r\n}) => {\r\n  const [schedulePoll, setSchedulePoll] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const openDocument = (e) => {};\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    setLoader(true);\r\n    const optionsData = [];\r\n    let data = {};\r\n    poll.pollResponse.map((value) => {\r\n      optionsData.push({ option_text: value });\r\n    });\r\n    if (isImage) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          image:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          image_name: attachmentName,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          document:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          document_name: attachmentName,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    }\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"poll/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{MANAGE_POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    <Col\r\n                      span={24}\r\n                      className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                    >\r\n                      <h6>\r\n                        {poll.pollName}\r\n                        <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                          <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                        </Tooltip>\r\n                      </h6>\r\n                    </Col>\r\n\r\n                    <div className=\"mid-content\">\r\n                      <Row>\r\n                        <Col span={24}>\r\n                          <p className=\"font-weight-md6\">{poll.pollQuestion}</p>\r\n                          <Row className=\"preview-que\" disabled={true}>\r\n                            <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                              {poll.pollQuestionType === \"1\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Radio>{value}</Radio>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"2\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Checkbox>{value}</Checkbox>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"3\" ? (\r\n                                <ReactStars\r\n                                  {...starsRating}\r\n                                  value={poll.pollRatingResponse}\r\n                                  disabled={true}\r\n                                />\r\n                              ) : null}\r\n                            </div>\r\n                          </Row>\r\n                          <Row className=\"mt-2\">\r\n                            <div class=\"ant-upload-list-item\">\r\n                              <div class=\"ant-upload-list-item-info\">\r\n                                <span class=\"ant-upload-span\">\r\n                                  <div class=\"ant-upload-text-icon\">\r\n                                    <PaperClipOutlined />\r\n                                  </div>\r\n                                  <span\r\n                                    class=\"ant-upload-list-item-name\"\r\n                                    title=\"add-user-doc\"\r\n                                  >\r\n                                    {poll.pollDocument &&\r\n                                    poll.pollDocument[0] ? (\r\n                                      <a\r\n                                        href={poll.pollDocument[0].base64}\r\n                                        download={\r\n                                          poll.pollDocument[0].originFileObj\r\n                                            .name\r\n                                        }\r\n                                      >\r\n                                        {\r\n                                          poll.pollDocument[0].originFileObj\r\n                                            .name\r\n                                        }\r\n                                      </a>\r\n                                    ) : null}\r\n                                  </span>\r\n                                  <span class=\"ant-upload-list-item-card-actions\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"ant-btn\"\r\n                                    ></button>\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 px-3\">\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        type=\"secondary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"mr-4\"\r\n                        onClick={onBackCreatePoll}\r\n                      >\r\n                        {BACK}\r\n                      </Button>\r\n                      <DateTimeModal\r\n                        pollData={poll}\r\n                        handlePollStartDatePickerChange={\r\n                          handlePollStartDatePickerChange\r\n                        }\r\n                        handlePollEndDatePickerChange={\r\n                          handlePollEndDatePickerChange\r\n                        }\r\n                        handlePollStartTimePickerChange={\r\n                          handlePollStartTimePickerChange\r\n                        }\r\n                        handlePollEndTimePickerChange={\r\n                          handlePollEndTimePickerChange\r\n                        }\r\n                        onPublish={onPublish}\r\n                      />\r\n                    </div>\r\n                  </Spin>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewPoll;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Breadcrumb,\r\n  Alert,\r\n  message,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport PreviewPoll from \"./PreviewPoll\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  CANCEL,\r\n  CREATE_POLL,\r\n  MANAGE_POLLS,\r\n  POLL_TITLE,\r\n  PREVIEW,\r\n  UPLOAD,\r\n} from \"../../headings\";\r\nimport {\r\n  POLL_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STAR_CHART_TYPE,\r\n} from \"../../errors\";\r\nimport {\r\n  BAR_CHART,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n} from \"../../values\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst CreatePoll = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    attachmentName: \"\",\r\n    pollStartTime: new Date(),\r\n    pollEndTime: new Date(),\r\n    pollResponse: [],\r\n    pollImageValidation: true,\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n  });\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult) {\r\n        if (!poll.pollChartType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else if (poll.pollQuestionType !== \"3\") {\r\n        if (poll.pollResponse.length === 0) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else if (poll.pollQuestionType === \"3\") {\r\n        if (poll.pollRatingResponse === 0) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (value.file.status === \"removed\") {\r\n      showuploadError(true);\r\n    }\r\n    let fileList = value.fileList.slice(-1);\r\n    checkDoucmentType(value.file.type);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setAttachmentName(value.file.name);\r\n    setPoll({ ...poll, [name]: fileList });\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handlePollImagePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPoll({\r\n      ...poll,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setPoll({ ...poll, pollImageValidation: true });\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    let xlsxfileExt = file.name.includes(\".xls\");\r\n    let pptxfileExt = file.name.includes(\".pptx\");\r\n    let docfileExt = file.name.includes(\".doc\");\r\n    let csvfileExt = file.name.includes(\".csv\");\r\n\r\n    const isValidDoc =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\" ||\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    if (!isValidDoc) {\r\n      showuploadError(false);\r\n      message.error(`${file.name} is not a supported format file type.`);\r\n    } else {\r\n      showuploadError(true);\r\n    }\r\n    const isImage =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\";\r\n    const isDocument =\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    const isLt10M = file.size / 1024 / 1024 < 10;\r\n    if (isImage) {\r\n      if (!isLt5M && isImage) {\r\n        showuploadError(false);\r\n        message.error(\"Image must smaller than 5MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n\r\n    if (isDocument) {\r\n      if (!isLt10M && isDocument) {\r\n        showuploadError(false);\r\n        message.error(\"Document must smaller than 10MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n    return (isValidDoc && isLt5M) || isLt10M;\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setpollError(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!previewPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{MANAGE_POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{CREATE_POLL}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                          form={form}\r\n                        >\r\n                          {error && (\r\n                            <Form.Item>\r\n                              <Alert\r\n                                message={REQUIRED_MESSAGE}\r\n                                type=\"error\"\r\n                                showIcon\r\n                              ></Alert>\r\n                            </Form.Item>\r\n                          )}\r\n                          <Col span={24}>\r\n                            <Row>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={POLL_TITLE}\r\n                                  value={poll.pollName}\r\n                                >\r\n                                  <TextArea\r\n                                    showCount\r\n                                    maxLength={50}\r\n                                    htmlFor=\"polltitle\"\r\n                                    value={poll.pollName}\r\n                                    id=\"pollName\"\r\n                                    onChange={(e) => onCreateChange(e)}\r\n                                    onBlur={(e) => isPollNameDuplicate(e)}\r\n                                    autoComplete=\"off\"\r\n                                    className={`required ${styles.sm_textarea}`}\r\n                                  />\r\n\r\n                                  {pollError === \"status: false\" &&\r\n                                    poll.pollName\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    poll.pollName.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {pollError == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={POLL_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={DESCRIPTION}\r\n                                  value={poll.pollHelpText}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollHelpText\"\r\n                                    id=\"pollHelpText\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"helptext\"\r\n                                      id=\"pollHelpText\"\r\n                                      name=\"pollHelpText\"\r\n                                      value={poll.pollHelpText}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row mt-3\">\r\n                                <h6>{UPLOAD}</h6>\r\n                                <Form.Item\r\n                                  name=\"upload\"\r\n                                  className=\"upload-list required\"\r\n                                >\r\n                                  <UploadImage\r\n                                    file={poll.pollDocument}\r\n                                    handleStepOneUpload={handleStepOneUpload}\r\n                                    handleBeforeUpload={handleBeforeUpload}\r\n                                    handleOnRemove={handleOnRemove}\r\n                                    handlePollImagePreview={\r\n                                      handlePollImagePreview\r\n                                    }\r\n                                    handleCancel={handleCancel}\r\n                                    poll={poll}\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                          <Col span={24} className=\"gutter-row\">\r\n                            <Row>\r\n                              <Col\r\n                                span={24}\r\n                                md={8}\r\n                                lg={8}\r\n                                xl={6}\r\n                                className=\"mb-3 t-2 mb-y-0\"\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"showresult\"\r\n                                  label={SHOW_RESULTS_POLL}\r\n                                  className=\"mb-0\"\r\n                                >\r\n                                  <Switch\r\n                                    id=\"showResult\"\r\n                                    checked={poll.showResult}\r\n                                    onChange={(checked, e) =>\r\n                                      onChange(checked, e)\r\n                                    }\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                              {poll.showResult ? (\r\n                                <Col span={24} md={10} lg={8}>\r\n                                  <FloatLabel\r\n                                    label={DISPLAY_RESULTS_AS}\r\n                                    value={poll.pollChartType}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required mb-0\"\r\n                                      name=\"result\"\r\n                                    >\r\n                                      <>\r\n                                        <Select\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"result\"\r\n                                          className=\"required\"\r\n                                          value={poll.pollChartType}\r\n                                          onSelect={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollChartType\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <Select.Option value=\"1\">\r\n                                            {PIE_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"3\">\r\n                                            {BAR_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"4\">\r\n                                            {STAR_FORMAT}\r\n                                          </Select.Option>\r\n                                        </Select>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                  {chartError && (\r\n                                    <Form.Item>\r\n                                      <Alert\r\n                                        message={STAR_CHART_TYPE}\r\n                                        type=\"error\"\r\n                                        showIcon\r\n                                      ></Alert>\r\n                                    </Form.Item>\r\n                                  )}\r\n                                </Col>\r\n                              ) : (\r\n                                <Col></Col>\r\n                              )}\r\n                            </Row>\r\n                          </Col>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"mid-content mt-4\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                        >\r\n                          <Col span={24}>\r\n                            <Row className=\"d-block\">\r\n                              <Col span={24} md={6} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={QUESTION_TYPE}\r\n                                  value={poll.pollQuestionType}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"questiontype\"\r\n                                  >\r\n                                    <>\r\n                                      <Select\r\n                                        className=\"\"\r\n                                        htmlFor=\"questiontype\"\r\n                                        className=\"required\"\r\n                                        id=\"pollQuestionType\"\r\n                                        value={poll.pollQuestionType}\r\n                                        onSelect={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollQuestionType\"\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <Select.Option\r\n                                          value=\"1\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType === \"4\"\r\n                                          }\r\n                                        >\r\n                                          {SELECT_SINGLE}\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"2\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType === \"4\"\r\n                                          }\r\n                                        >\r\n                                          {SELECT_MULTIPLE}\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"3\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType !== \"4\"\r\n                                          }\r\n                                        >\r\n                                          {STAR_RATING}\r\n                                        </Select.Option>\r\n                                      </Select>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={QUESTION}\r\n                                  value={poll.pollQuestion}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollQuestion\"\r\n                                    id=\"pollQuestion\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"pollQuestion\"\r\n                                      id=\"pollQuestion\"\r\n                                      name=\"pollQuestion\"\r\n                                      defaultValue={poll.pollQuestion}\r\n                                      value={poll.pollQuestion}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={8} lg={6} className=\"mt-4\">\r\n                                {poll.pollQuestionType === \"3\" ? (\r\n                                  <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                ) : poll.pollQuestionType === \"1\" ? (\r\n                                  <div>\r\n                                    <MultiChoice\r\n                                      setSingleChoiceResponse={\r\n                                        setSingleChoiceResponse\r\n                                      }\r\n                                      pollResponse={poll.pollResponse}\r\n                                    />\r\n                                  </div>\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  <MultiChoice\r\n                                    pollResponse={poll.pollResponse}\r\n                                    setSingleChoiceResponse={\r\n                                      setSingleChoiceResponse\r\n                                    }\r\n                                  />\r\n                                ) : null}\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              className=\"md mr-4\"\r\n                              onClick={onPreview}\r\n                            >\r\n                              {PREVIEW}\r\n                            </Button>\r\n                            <Button\r\n                              type=\"secondary\"\r\n                              type=\"secondary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onCancel}\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                          </div>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <PreviewPoll\r\n          poll={poll}\r\n          setPollsDate={setPollsDate}\r\n          backtoEdit={backtoEdit}\r\n          isImage={isImage}\r\n          attachmentName={attachmentName}\r\n          data={props}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./managePoll.module.scss\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ManagePolls from \"../../assets/images/manage-polls.svg\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport CreatePoll from \"../managePolls/CreatePoll\";\r\nimport { CREATE_POLL, MANAGE_POLLS } from \"../../headings\";\r\nimport { CREATE_NEW_POLL_TEXT } from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\nconst ManagePoll = (props) => {\r\n  const [createPoll, setCreatePoll] = useState(false);\r\n  const ShowCreatePoll = () => {\r\n    setCreatePoll(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!createPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Polls\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_POLLS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={ManagePolls}\r\n                            alt=\"Create Poll\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_POLL_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={ShowCreatePoll}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE_POLL}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <Redirect to=\"/orgcc/createpoll\" />\r\n        // <CreatePoll data={props.data} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Form, Col, DatePicker } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport {\r\n  CANCEL,\r\n  EXTEND_END_DATE,\r\n  EXTEND_TEXT_MODAL,\r\n  POLL,\r\n} from \"../../headings\";\r\nimport {\r\n  EXTEND_END_DATE_TEXT_PART1,\r\n  EXTEND_END_DATE_TEXT_PART2,\r\n} from \"../../messages\";\r\nimport { SELECT_END_DATE, SELECT_END_TIME } from \"../../labels\";\r\nimport { SELECT_DATE } from \"../../errors\";\r\n\r\nlet startDate = \"\";\r\n\r\nclass ExtendEndDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      pollEndDate: \"\",\r\n      pollEndTime: new Date(),\r\n    };\r\n    this.range = this.range.bind(this);\r\n    this.disabledDateTime = this.disabledDateTime.bind(this);\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   console.log(\r\n  //    '***********'\r\n  //   );\r\n  //   // const s_date = moment(\r\n  //   //   this.props.pollsData.start_date + \" \" + this.props.pollsData.start_time\r\n  //   // );\r\n  //   // const sDate = moment(s_date)\r\n  //   //   .utcOffset(\"+05:30\")\r\n  //   //   .format(\"YYYY/MM/DD HH:mm:ss\");\r\n  //   // const eDate = moment(\r\n  //   //   this.props.pollsData.end_date + \" \" + this.props.pollsData.end_time\r\n  //   // )\r\n  //   //   .utcOffset(\"+05:30\")\r\n  //   //   .format(\"YYYY/MM/DD HH:mm:ss\");\r\n  //   // this.setState({ pollStartDate: moment(this.props.pollsData.start_date),\r\n  //   //   pollEndDate: this.props.pollsData.end_date,\r\n  //   //   pollStartTime: this.props.pollsData.start_time,\r\n  //   //   pollEndTime: this.props.pollsData.end_time,\r\n  //   //  });\r\n  // }\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    let obj = {\r\n      poll_id: this.props.pollsData.poll_id,\r\n      pollName: this.props.pollsData.title,\r\n    };\r\n    this.props.extendPollDate(obj, this.state);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    window.location = \"/orgcc/pollsdirectory\";\r\n  };\r\n\r\n  onChangeEndDate(date) {\r\n    this.setState({\r\n      pollEndDate: date,\r\n    });\r\n  }\r\n\r\n  onChangeEndTime(time) {\r\n    this.setState({\r\n      pollEndTime: time,\r\n    });\r\n  }\r\n\r\n  disabledDate(current) {\r\n    return current && current < moment().startOf(\"day\");\r\n  }\r\n\r\n  range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  disabledDateTime(current, type) {\r\n    if (type === \"start\") {\r\n      startDate = current;\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    } else if (type === \"end\") {\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      } else if (moment(current).isSame(moment(startDate))) {\r\n        var now = moment(startDate);\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{EXTEND_END_DATE}</a>\r\n        <Modal\r\n          title={EXTEND_END_DATE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={EXTEND_TEXT_MODAL}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md font-weight-md6\">\r\n                {EXTEND_END_DATE_TEXT_PART1}{\" \"}\r\n                <span className=\"pr-1\"> {EXTEND_END_DATE_TEXT_PART2}</span>\r\n                {this.props.pollsData.title} {POLL}\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.state.pollEndDate}\r\n                    disabledDate={this.disabledDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.state.pollEndTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExtendEndDate;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport ExtendEndDate from \"../../components/modal/ExtendEndDate\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT, SHOW_INTRIM_RESULT, VIEW } from \"../../headings\";\r\n\r\nconst content = (data, extendPollDate) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: `/orgcc/editpoll/${data.poll_id}`, state: data }}>\r\n        <li>\r\n          <a href={`/orgcc/editpoll/${data.poll_id}`}>\r\n            {data.status_id === 4 ? VIEW : EDIT}\r\n          </a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      {data.show_result_to_users && data.status_id === 4 ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">{SHOW_INTRIM_RESULT}</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 1 || data.status_id === 2 || data.status_id === 3 ? (\r\n        <li>\r\n          <ExtendEndDate extendPollDate={extendPollDate} pollsData={data} />\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data, this.props.extendPollDate)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined, PaperClipOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport PollPopover from \"../table/PollPopover\";\r\nimport CreatePollPopover from \"../table/CreatePollPopover\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CREATE_POLL, MANAGE_POLLS, SEARCH } from \"../../headings\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { polls } = this.props;\r\n    polls?.forEach((poll) => {\r\n      poll.start_date = moment(poll.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM/DD/YYYY\");\r\n      poll.end_date = moment(poll.end_date).utc().local().format(\"MM/DD/YYYY\");\r\n    });\r\n    this.setState({ data: polls }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.polls !== nextProps.polls) {\r\n      nextProps.polls?.forEach((poll) => {\r\n        poll.start_date = moment(poll.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n        poll.end_date = moment(poll.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.polls }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  extendPollDate = (value, date) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      end_date: momentUtil.formatAsDDMMYYYY(date.pollEndDate),\r\n      end_time: momentUtil.formatAsHHmmss(date.pollEndTime),\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"extendEndDate/\" + value.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: `${value.pollName} date has been extended successfully.`,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      });\r\n  };\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  statusClicked = (record, via) => {\r\n    let data = {};\r\n    if (via.length === 0) {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description: `Status of ${record.title} can't be changed as this poll is completed.`,\r\n      });\r\n    } else if (via === \"Scheduled\" || via === \"Active\") {\r\n      data = {\r\n        status_id: 2,\r\n      };\r\n    } else if (via === \"inActive\") {\r\n      const startDate = record.start_date;\r\n      const sdate = startDate.split(\"/\")[0];\r\n      const smonth = startDate.split(\"/\")[1];\r\n      const syear = startDate.split(\"/\")[2];\r\n      const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n      const currentDate = new Date();\r\n      if (finalStartDate > currentDate) {\r\n        data = {\r\n          status_id: 3,\r\n        };\r\n      } else if (finalStartDate < currentDate) {\r\n        data = {\r\n          status_id: 1,\r\n        };\r\n      } else if (finalStartDate === currentDate) {\r\n        const startTime = record.start_time;\r\n        const SFullDate = smonth + \"-\" + sdate + \"-\" + syear;\r\n        const startTimeWithDate = new Date(SFullDate + startTime);\r\n        if (startTimeWithDate > new Date()) {\r\n          data = {\r\n            status_id: 3,\r\n          };\r\n        } else if (startTimeWithDate <= new Date()) {\r\n          data = {\r\n            status_id: 1,\r\n          };\r\n        }\r\n      }\r\n    }\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"changePollStatus/\" + record.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: `Status of ${record.title} has been changed successfully.`,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { polls, loader } = this.props;\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.image || record.document ? <PaperClipOutlined /> : null,\r\n            props: {\r\n              \"data-title\": \"\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name, record) => {\r\n          return {\r\n            children: (\r\n              <Link\r\n                to={{\r\n                  pathname: `/orgcc/editpoll/${record.poll_id}`,\r\n                  state: record,\r\n                }}\r\n              >\r\n                <li>\r\n                  <a href={`/orgcc/editpoll/${record.poll_id}`}>{name}</a>{\" \"}\r\n                </li>\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.start_date + \" \" + record.start_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.end_date + \" \" + record.end_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 2 ? (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"inActive\")}\r\n                >\r\n                  In active\r\n                </div>\r\n              ) : record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Active\r\n                </div>\r\n              ) : record.status_id === 3 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Scheduled\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Scheduled\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Completed\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: (\r\n              <PollPopover extendPollDate={this.extendPollDate} data={record} />\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={this.props.data} />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1>{MANAGE_POLLS}</h1>\r\n                  </Row>\r\n                  <Col span={24}>\r\n                    <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"search-row mt-2 mt-lg-0\"\r\n                      >\r\n                        <Row>\r\n                          <Col span={24} lg={9} className=\"search-box\">\r\n                            <Search\r\n                              placeholder={SEARCH}\r\n                              onSearch={this.onSearch}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col\r\n                        span={24}\r\n                        lg={6}\r\n                        className=\"d-flex align-items-center justify-content-end\"\r\n                      >\r\n                        {/* <CreatePollPopover polls={polls} /> */}\r\n                        <Link to=\"/orgcc/createpoll\">\r\n                          <Buttons value={CREATE_POLL} />\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Grid\r\n                    rowKey=\"poll_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </Spin>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllPolls;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        <a href=\"/orgcc/createpoll\">Create New</a>{\" \"}\r\n      </li>\r\n\r\n      {/* <li>\r\n        <a href=\"/orgcc/existingpolls\">Choose from existing</a>{\" \"}\r\n      </li> */}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass CreatePollPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <Button type=\"primary\">{CREATE_POLL}</Button>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePollPopover;\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    POLL_SUCCESS,\r\n    POLL_FAIL,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getPollAsync=()=>(dispatch)=>{\r\n        return UserService.getPolls().then((data)=>{\r\n            dispatch({\r\n                type:POLL_SUCCESS,\r\n                payload:{pollsdata:data.data},\r\n                \r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:POLL_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport ManagePolls from \"./ManagePolls\";\r\nimport ShowAllPolls from \"./ShowAllPolls\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\n\r\nconst PollsContainer = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getPollAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.pollsdata === null) {\r\n      setLoader(true);\r\n    } else if (props.pollsdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.pollsdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader && props.pollsdata !== null && props.pollsdata.length === 0 ? (\r\n    <ManagePolls data={props} />\r\n  ) : (\r\n    <ShowAllPolls\r\n      polls={props.pollsdata}\r\n      data={props}\r\n      loader={loader}\r\n      statusOnClicked={statusOnClicked}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollsContainer);\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Button, Input, Breadcrumb } from \"antd\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { POLL, POLL_RESULTS } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 30,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 3,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst PollResponse = (props) => {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLL}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{POLL_RESULTS}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3 justify-content-between\">\r\n                  <h1 className=\"mb-0\">{location.state.title}</h1>\r\n                  <Col\r\n                    span={24}\r\n                    md={24}\r\n                    lg={12}\r\n                    xl={15}\r\n                    className=\"d-flex align-items-center justify-content-start justify-content-lg-end px-3 px-lg-0 my-4 my-lg-0\"\r\n                  >\r\n                    {/* <span className=\"pr-3\">Total audience : 2300</span> */}\r\n                    {/* <Button type=\"primary\" className=\"md\">\r\n                      Download\r\n                    </Button> */}\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex align-items-center justify-content-end\"\r\n                  ></Col>\r\n                </Row>\r\n                <div className=\"\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <p className=\"font-weight-md6\">\r\n                        {location.state.question}\r\n                      </p>\r\n                      {/* <span className=\"font-weight-md6 pt-3 d-flex\">\r\n                        1846 Responses\r\n                      </span> */}\r\n\r\n                      <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            {/* <div className=\"c-vector-area\">\r\n                          <img\r\n                           // src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div> */}\r\n                            <h1 className=\"text-center pt-3\">\r\n                              Results for this poll are not available at this\r\n                              moment\r\n                            </h1>\r\n                            <Row className=\"d-flex justify-content-center\">\r\n                              {/* <Divider className=\"mt-1\" /> */}\r\n                            </Row>\r\n                            <Col\r\n                              span={24}\r\n                              className=\"d-flex align-items-center justify-content-center\"\r\n                            >\r\n                              {/* <Button\r\n                            data-test=\"createHotline\"\r\n                           // onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button> */}\r\n                              {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <Row className=\"preview-que mt-3\">\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center font-weight-md6\"\r\n                        >\r\n                          {/* <span>\r\n                            <ReactStars {...starsRating} />\r\n                          </span> */}\r\n                          {/* <span className=\"pl-5\">30%</span> */}\r\n                        </Col>\r\n\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center font-weight-md6\"\r\n                        >\r\n                          {/* <span>\r\n                            <ReactStars {...starsRating} />\r\n                          </span>\r\n                          <span className=\"pl-5\">20%</span> */}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PollResponse;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\nimport {\r\n  CANCEL,\r\n  PUBLISH,\r\n  RESCHEDULE,\r\n  SCHEDULE,\r\n  PUBLISH_POLL,\r\n} from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport {\r\n  SELECT_START_DATE,\r\n  SELECT_END_DATE,\r\n  SELECT_START_TIME,\r\n  SELECT_END_TIME,\r\n} from \"../../labels\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.props.pollData.pollStartDate ||\r\n      !this.props.pollData.pollEndDate\r\n    ) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ startTimeError: true });\r\n    } else {\r\n      this.setState({ startTimeError: false, startTime: time });\r\n      this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTime: time, endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {this.props.viaEdit ? RESCHEDULE : SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={\r\n            this.props.pollData.status_id === 4\r\n              ? {\r\n                  style: { display: \"none\" },\r\n                }\r\n              : {\r\n                  children: \"Custom OK\",\r\n                }\r\n          }\r\n          cancelButtonProps={\r\n            this.props.pollData.status_id === 4\r\n              ? {\r\n                  className: \"ant-btn-primary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n              : {\r\n                  className: \"ant-btn-secondary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n          }\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.startDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                    disabled={this.props.pollData.status_id === 4}\r\n                  />\r\n                  {this.state.startTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label={SELECT_START_TIME}\r\n                        value={this.state.startTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {this.state.endDate !== \"\" ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <DatePicker\r\n                        defaultValue={this.state.endDate}\r\n                        disabledDate={this.disabledEndDate}\r\n                        onChange={(date) => this.onChangeEndDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"eDate\"\r\n                        className=\"required\"\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <DatePicker\r\n                      defaultValue={this.state.endDate}\r\n                      disabledDate={this.disabledEndDate}\r\n                      onChange={(date) => this.onChangeEndDate(date)}\r\n                      className=\"w-100\"\r\n                      name=\"eDate\"\r\n                      className=\"required\"\r\n                      disabled={this.props.pollData.status_id === 4}\r\n                    />\r\n                  )}\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.state.endTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport EditDateTimeModal from \"../modal/EditDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport { BACK, MANAGE_POLLS, PREVIEW_POLL } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditPreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  editPoll,\r\n  showError,\r\n  error,\r\n  data,\r\n  loader,\r\n  attachmentName,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    editPoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{MANAGE_POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n                  <React.Fragment>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <div className=\"mid-content\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            <p className=\"font-weight-md6\">\r\n                              {poll.pollQuestion}\r\n                            </p>\r\n                            <Row className=\"preview-que\" disabled={true}>\r\n                              <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                                {poll.pollQuestionType === \"1\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Radio>{value}</Radio>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Checkbox>{value}</Checkbox>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"3\" ? (\r\n                                  <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    disabled={true}\r\n                                  />\r\n                                ) : null}\r\n                              </div>\r\n                            </Row>\r\n                            <Row className=\"mt-2\">\r\n                              <div class=\"ant-upload-list-item\">\r\n                                <div class=\"ant-upload-list-item-info\">\r\n                                  <span class=\"ant-upload-span\">\r\n                                    <div class=\"ant-upload-text-icon\">\r\n                                      <PaperClipOutlined />\r\n                                    </div>\r\n                                    <span\r\n                                      class=\"ant-upload-list-item-name\"\r\n                                      title=\"add-user-doc\"\r\n                                    >\r\n                                      {poll.pollDocument ? (\r\n                                        <a\r\n                                          href={poll.pollDocument}\r\n                                          download={poll.pollDocument}\r\n                                        >\r\n                                          {attachmentName}\r\n                                        </a>\r\n                                      ) : null}\r\n                                    </span>\r\n                                    <span class=\"ant-upload-list-item-card-actions\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"ant-btn\"\r\n                                      ></button>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mt-5 px-3\">\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          type=\"secondary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"mr-4\"\r\n                          onClick={onBackCreatePoll}\r\n                        >\r\n                          {BACK}\r\n                        </Button>\r\n                        <EditDateTimeModal\r\n                          pollData={poll}\r\n                          handlePollStartDatePickerChange={\r\n                            handlePollStartDatePickerChange\r\n                          }\r\n                          handlePollEndDatePickerChange={\r\n                            handlePollEndDatePickerChange\r\n                          }\r\n                          handlePollStartTimePickerChange={\r\n                            handlePollStartTimePickerChange\r\n                          }\r\n                          handlePollEndTimePickerChange={\r\n                            handlePollEndTimePickerChange\r\n                          }\r\n                          onPublish={onPublish}\r\n                          showError={showError}\r\n                          error={error}\r\n                          viaEdit\r\n                        />\r\n                      </div>\r\n                    </Spin>\r\n                  </React.Fragment>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Upload,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport EditPreviewPoll from \"./EditPreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  VIEW_POLL,\r\n  EDIT_POLL,\r\n  POLL_TITLE,\r\n  UPLOAD,\r\n  DOCUMENT_IMAGE,\r\n  PREVIEW,\r\n  CANCEL,\r\n} from \"../../headings\";\r\nimport { REQUIRED_MESSAGE, STAR_CHART_TYPE } from \"../../errors\";\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  BAR_CHART,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n} from \"../../values\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst EditPoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: [],\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n      const data = res.data;\r\n      setPoll({\r\n        ...poll,\r\n        pollId: data.poll_id,\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollDocument: [\r\n          {\r\n            uid: \"1\",\r\n            name:\r\n              data.image_name !== null\r\n                ? data.image_name\r\n                : data.document_name !== null\r\n                ? data.document_name\r\n                : \"\",\r\n            status: \"done\",\r\n            url: data.image ? data.image : data.document,\r\n          },\r\n        ],\r\n        showResult: data.show_result_to_users,\r\n        pollChartType: data.poll_result_chart_type.toString(),\r\n        pollQuestion: data.question,\r\n        pollQuestionType: data.poll_question_type.toString(),\r\n        pollRatingResponse: data.poll_question_rating_type,\r\n        pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n        pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n        pollStartTime: data.start_time,\r\n        pollEndTime: data.end_time,\r\n        status_id: data.status_id,\r\n        pollResponse: data.option_text.map((value) => value.option_text),\r\n        pollOptionText: data.option_text,\r\n      });\r\n      setAttachmentName(\r\n        data.image_name !== null\r\n          ? data.image_name\r\n          : data.document_name !== null\r\n          ? data.document_name\r\n          : \"\"\r\n      );\r\n      const isImage =\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpeg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"png\");\r\n      if (isImage) {\r\n        setIsImage(true);\r\n      } else {\r\n        setIsImage(false);\r\n      }\r\n      form.setFieldsValue({\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollQuestion: data.question,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult) {\r\n        if (poll.pollChartType === \"2\") {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else if (poll.pollQuestionType !== \"3\") {\r\n        if (poll.pollResponse.length === 0) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else if (poll.pollQuestionType === \"3\") {\r\n        if (poll.pollRatingResponse === 0 || !poll.pollRatingResponse) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const editPoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n    let data = {};\r\n    function convertImgToBase64(url, callback, outputFormat) {\r\n      var canvas = document.createElement(\"CANVAS\");\r\n      var ctx = canvas.getContext(\"2d\");\r\n      var img = new Image();\r\n      img.crossOrigin = \"Anonymous\";\r\n      img.onload = function () {\r\n        canvas.height = img.height;\r\n        canvas.width = img.width;\r\n        ctx.drawImage(img, 0, 0);\r\n        var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n        callback.call(this, dataURL);\r\n        // Clean up\r\n        canvas = null;\r\n      };\r\n      img.src = url;\r\n    }\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollEndDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (\r\n      poll.pollDocument?.length === 0 ||\r\n      poll.pollDocument[0].url?.length === 0\r\n    ) {\r\n      data = {\r\n        update_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n        .then(() => {\r\n          setLoader(false);\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: \"Poll details have been changed successfully.\",\r\n            placement,\r\n          });\r\n          window.location = \"/orgcc/pollsdirectory\";\r\n        });\r\n    } else {\r\n      if (poll.pollDocument[0]?.url) {\r\n        convertImgToBase64(poll.pollDocument[0]?.url, function (base64Img) {\r\n          if (isImage) {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                image: base64Img,\r\n                image_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n          } else {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                document: base64Img,\r\n                document_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n          }\r\n          axios\r\n            .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n            .then(() => {\r\n              setLoader(false);\r\n              const placement = \"bottomLeft\";\r\n              api.info({\r\n                description: \"Poll details have been changed successfully.\",\r\n                placement,\r\n              });\r\n              window.location = \"/orgcc/pollsdirectory\";\r\n            });\r\n        });\r\n      } else {\r\n        if (isImage) {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              image: poll.pollDocument.base64,\r\n              image_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        } else {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              document: poll.pollDocument.base64,\r\n              document_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        }\r\n        axios\r\n          .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n          .then(() => {\r\n            setLoader(false);\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: \"Poll details have been changed successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/orgcc/pollsdirectory\";\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    } else {\r\n      if (value.file.status === \"removed\") {\r\n        showuploadError(true);\r\n      }\r\n      let fileList = value.fileList.slice(-1);\r\n      checkDoucmentType(value.file.type);\r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setAttachmentName(value.file.name);\r\n      setPoll({ ...poll, [name]: fileList });\r\n    }\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 4) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (e.target.value !== location.state.title) {\r\n      axios\r\n        .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setpollError(res.data[0]);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"validate_other\"\r\n                      initialValues={{\r\n                        remember: true,\r\n                      }}\r\n                      form={form}\r\n                    >\r\n                      <Row className=\"py-3\">\r\n                        <h1 className=\"mb-0\">\r\n                          {poll.status_id === 4 ? VIEW_POLL : EDIT_POLL}\r\n                        </h1>\r\n                      </Row>\r\n\r\n                      <div className=\"mid-content\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            {error && (\r\n                              <Form.Item>\r\n                                <Alert\r\n                                  message={REQUIRED_MESSAGE}\r\n                                  type=\"error\"\r\n                                  showIcon\r\n                                ></Alert>\r\n                              </Form.Item>\r\n                            )}\r\n                            <Col span={24}>\r\n                              <Row>\r\n                                <Col span={24} md={18} className=\"gutter-row\">\r\n                                  <FloatLabel\r\n                                    label={POLL_TITLE}\r\n                                    value={poll.pollName}\r\n                                  >\r\n                                    <TextArea\r\n                                      showCount\r\n                                      maxLength={50}\r\n                                      htmlFor=\"polltitle\"\r\n                                      value={poll.pollName}\r\n                                      id=\"pollName\"\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                      onBlur={(e) => isPollNameDuplicate(e)}\r\n                                      autoComplete=\"off\"\r\n                                      disabled={poll.status_id === 4}\r\n                                      className={`required ${styles.sm_textarea}`}\r\n                                    />\r\n\r\n                                    {pollError === \"status: false\" &&\r\n                                      poll.pollName\r\n                                        .replace(/^\\s*/, \"\")\r\n                                        .replace(/\\s*$/, \"\").length > 0 &&\r\n                                      poll.pollName.length > 0 && (\r\n                                        <CheckCircleTwoTone\r\n                                          className=\"successCheck\"\r\n                                          twoToneColor=\"#52c41a\"\r\n                                        />\r\n                                      )}\r\n                                    {pollError == \"status: true\" && (\r\n                                      <Alert\r\n                                        message={POLL_ALREADY_EXISTS}\r\n                                        type=\"error\"\r\n                                        showIcon\r\n                                      ></Alert>\r\n                                    )}\r\n                                  </FloatLabel>\r\n                                </Col>\r\n                                <Col span={24} md={18} className=\"gutter-row\">\r\n                                  <FloatLabel\r\n                                    label={DESCRIPTION}\r\n                                    value={poll.pollHelpText}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required\"\r\n                                      name=\"pollHelpText\"\r\n                                      id=\"pollHelpText\"\r\n                                      validateStatus=\"success\"\r\n                                    >\r\n                                      <Input\r\n                                        className=\"input-control\"\r\n                                        htmlFor=\"helptext\"\r\n                                        id=\"pollHelpText\"\r\n                                        name=\"pollHelpText\"\r\n                                        value={poll.pollHelpText}\r\n                                        disabled={poll.status_id === 4}\r\n                                        autoComplete=\"off\"\r\n                                        maxLength={500}\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                </Col>\r\n                                <Col span={24} className=\"gutter-row mt-3\">\r\n                                  {poll.pollDocument?.length === 0 && (\r\n                                    <h6>{UPLOAD}</h6>\r\n                                  )}\r\n                                  <Form.Item\r\n                                    name=\"upload\"\r\n                                    className=\"upload-list required\"\r\n                                    valuePropName=\"fileList\"\r\n                                  >\r\n                                    <>\r\n                                      <Upload\r\n                                        listType=\"picture\"\r\n                                        fileList={poll.pollDocument}\r\n                                        onChange={(value) =>\r\n                                          handleStepOneUpload(\r\n                                            value,\r\n                                            \"pollDocument\"\r\n                                          )\r\n                                        }\r\n                                        beforeUpload={(value) =>\r\n                                          handleBeforeUpload(\r\n                                            value,\r\n                                            \"pollDocument\"\r\n                                          )\r\n                                        }\r\n                                        onRemove={() => handleOnRemove()}\r\n                                        className=\"upload-list-inline c-upload\"\r\n                                        accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n                                      >\r\n                                        {poll.pollDocument.length === 0 ? (\r\n                                          <Button\r\n                                            type=\"link\"\r\n                                            className=\"link pl-0\"\r\n                                          >\r\n                                            <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                                            {DOCUMENT_IMAGE}\r\n                                          </Button>\r\n                                        ) : null}\r\n                                      </Upload>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </Col>\r\n                              </Row>\r\n                            </Col>\r\n                            <Col span={24} className=\"gutter-row\">\r\n                              <Row className=\"align-items-center d-flex\">\r\n                                <Col span={24} md={8} lg={8} xl={6}>\r\n                                  <Form.Item\r\n                                    name=\"showresult\"\r\n                                    label={SHOW_RESULTS_POLL}\r\n                                    className=\"mb-0\"\r\n                                  >\r\n                                    <Switch\r\n                                      id=\"showResult\"\r\n                                      checked={poll.showResult}\r\n                                      disabled={poll.status_id === 4}\r\n                                      onChange={(checked, e) =>\r\n                                        onChange(checked, e)\r\n                                      }\r\n                                    />\r\n                                  </Form.Item>\r\n                                </Col>\r\n                                {poll.showResult ? (\r\n                                  <Col span={24} lg={6}>\r\n                                    <FloatLabel\r\n                                      label={DISPLAY_RESULTS_AS}\r\n                                      value={poll.pollChartType}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required mb-0\"\r\n                                        name=\"result\"\r\n                                      >\r\n                                        <>\r\n                                          <Select\r\n                                            className=\"input-control\"\r\n                                            htmlFor=\"result\"\r\n                                            className=\"required\"\r\n                                            disabled={poll.status_id === 4}\r\n                                            value={\r\n                                              poll.pollChartType === \"2\"\r\n                                                ? \"\"\r\n                                                : poll.pollChartType\r\n                                            }\r\n                                            onSelect={(value) =>\r\n                                              handlePollOnSelect(\r\n                                                value,\r\n                                                \"pollChartType\"\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <Select.Option value=\"1\">\r\n                                              {PIE_CHART}\r\n                                            </Select.Option>\r\n                                            <Select.Option value=\"3\">\r\n                                              {BAR_CHART}\r\n                                            </Select.Option>\r\n                                            <Select.Option value=\"4\">\r\n                                              {STAR_FORMAT}\r\n                                            </Select.Option>\r\n                                          </Select>\r\n                                        </>\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                    {chartError && (\r\n                                      <Form.Item>\r\n                                        <Alert\r\n                                          message={STAR_CHART_TYPE}\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      </Form.Item>\r\n                                    )}\r\n                                  </Col>\r\n                                ) : (\r\n                                  <Col></Col>\r\n                                )}\r\n                              </Row>\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mid-content mt-4\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            <Col span={24}>\r\n                              <Row className=\"d-block\">\r\n                                <Col span={24} md={6} className=\"gutter-row\">\r\n                                  <FloatLabel\r\n                                    label={QUESTION_TYPE}\r\n                                    value={poll.pollQuestionType}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required\"\r\n                                      name=\"questiontype\"\r\n                                    >\r\n                                      <>\r\n                                        <Select\r\n                                          className=\"\"\r\n                                          htmlFor=\"questiontype\"\r\n                                          className=\"required\"\r\n                                          id=\"pollQuestionType\"\r\n                                          disabled={poll.status_id === 4}\r\n                                          value={poll.pollQuestionType}\r\n                                          onSelect={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollQuestionType\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <Select.Option value=\"1\">\r\n                                            {SELECT_SINGLE}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"2\">\r\n                                            {SELECT_MULTIPLE}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"3\">\r\n                                            {STAR_RATING}\r\n                                            {poll.status_id === 4}\r\n                                          </Select.Option>\r\n                                        </Select>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                </Col>\r\n                                <Col span={24} md={18} className=\"gutter-row\">\r\n                                  <FloatLabel\r\n                                    label={QUESTION}\r\n                                    value={poll.pollQuestion}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required edit-input\"\r\n                                      name=\"pollQuestion\"\r\n                                      id=\"pollQuestion\"\r\n                                    >\r\n                                      <Input\r\n                                        className=\"input-control edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                        htmlFor=\"pollQuestion\"\r\n                                        className=\"required\"\r\n                                        disabled={poll.status_id === 4}\r\n                                        defaultValue={poll.pollQuestion}\r\n                                        value={poll.pollQuestion}\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        autoComplete=\"off\"\r\n                                        maxLength={500}\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                </Col>\r\n                                <Col span={24} className=\"mt-4\">\r\n                                  {poll.pollQuestionType === \"3\" ? (\r\n                                    <ReactStars\r\n                                      {...starsRating}\r\n                                      value={poll.pollRatingResponse}\r\n                                      name=\"pollRatingResponse\"\r\n                                      disabled={poll.status_id === 4}\r\n                                      onChange={(value) =>\r\n                                        handlePollOnSelect(\r\n                                          value,\r\n                                          \"pollRatingResponse\"\r\n                                        )\r\n                                      }\r\n                                      classNames=\"mt-3\"\r\n                                    />\r\n                                  ) : poll.pollQuestionType === \"1\" ? (\r\n                                    <div>\r\n                                      <MultiChoice\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                        pollResponse={poll.pollResponse}\r\n                                        disabled={poll.status_id === 4}\r\n                                      />\r\n                                    </div>\r\n                                  ) : poll.pollQuestionType === \"2\" ? (\r\n                                    <MultiChoice\r\n                                      pollResponse={poll.pollResponse}\r\n                                      setSingleChoiceResponse={\r\n                                        setSingleChoiceResponse\r\n                                      }\r\n                                      disabled={poll.status_id === 4}\r\n                                    />\r\n                                  ) : null}\r\n                                </Col>\r\n                              </Row>\r\n                            </Col>\r\n\r\n                            <div className=\"mt-5\">\r\n                              <Button\r\n                                type=\"primary\"\r\n                                className=\"md mr-4\"\r\n                                onClick={onPreview}\r\n                              >\r\n                                {PREVIEW}\r\n                              </Button>\r\n                              <Button\r\n                                type=\"secondary\"\r\n                                type=\"secondary\"\r\n                                htmlType=\"submit\"\r\n                                onClick={onCancel}\r\n                              >\r\n                                {CANCEL}\r\n                              </Button>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Form>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <EditPreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            editPoll={editPoll}\r\n            showError={showError}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n            error={error}\r\n            loader={loader}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPoll;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Input, Divider, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\nimport { CREATE_POLL, MANAGE_POLLS, OOTB_POLL, SEARCH } from \"../../headings\";\r\nimport { OOTB_TEXT } from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nclass ExistingPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getPollAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { pollsdata } = this.props;\r\n\r\n    if (prevProps.pollsdata !== pollsdata) {\r\n      this.setState(\r\n        {\r\n          data: pollsdata,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{MANAGE_POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <NavLink to=\"/createpoll\">\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{OOTB_POLL}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1>{OOTB_TEXT}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <div className=\"mid-content\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                  {/* <Row>\r\n                    <Col span={24}>\r\n                      <h6 className=\"mb-4\">Poll Name</h6>\r\n                      <Row className=\"my-2\">\r\n                      <Link to=\"/\">Impact of Microaggression</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                      <Row className=\"my-2\">\r\n                        <Link to=\"/\">Microaggressions – do we have it?</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                    </Col>\r\n                  </Row> */}\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExistingPolls);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Upload,\r\n  Modal,\r\n} from \"antd\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { CLOSE_TEXT_MODAL, NEXT, UPLOAD_IMAGE } from \"../../headings\";\r\nimport { DATE, DESCRIPTION, OPENLINE_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  UPLOAD_IMAGE_REQUIRED,\r\n} from \"../../errors\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenlineStepOne = ({\r\n  next,\r\n  imageError,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOpenLineInfo.openelineName &&\r\n      stepOneOpenLineInfo.openelineName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.description &&\r\n      stepOneOpenLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.file &&\r\n      stepOneOpenLineInfo.file.length > 0 &&\r\n      stepOneOpenLineInfo.status &&\r\n      stepOneOpenLineInfo.sDate\r\n    ) {\r\n      if (!imageError && hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOpenline/\",\r\n        { openline_name: stepOneOpenLineInfo.openelineName },\r\n\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <FloatLabel\r\n        label={OPENLINE_NAME}\r\n        value={stepOneOpenLineInfo.openelineName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"openelineName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DIRECTORY_NAME,\r\n            },\r\n          ]}\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneOpenLineInfo.openelineName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"openelineName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"openelineName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated == \"status: false\" &&\r\n            stepOneOpenLineInfo.openelineName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneOpenLineInfo.openelineName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={OPENLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneOpenLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DESCRIPTION,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneOpenLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneOpenLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: SELECT_DATE,\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneOpenLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneOpenLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control required\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <Upload\r\n            listType=\"picture\"\r\n            fileList={stepOneOpenLineInfo.file}\r\n            beforeUpload={(value) => handleBeforeUpload(value)}\r\n            onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n          >\r\n            {stepOneOpenLineInfo.file.length === 0 && (\r\n              <Button type=\"link\" className=\"link pl-0\">\r\n                <span className=\"icon icon-upload pr-2\"></span>\r\n                {UPLOAD_IMAGE}\r\n              </Button>\r\n            )}\r\n          </Upload>\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLineInfo.previewVisible}\r\n            title={stepOneOpenLineInfo.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLineInfo.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      {imageError && (\r\n        <Form.Item>\r\n          <Alert\r\n            message={UPLOAD_IMAGE_REQUIRED}\r\n            type=\"error\"\r\n            showIcon\r\n          ></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\nimport { ACCESS, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\n\r\nclass CreateOpenlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>\r\n            {STATUS_ACTIVE}\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <div id=\"no-more-tables\">\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            dataSource={this.state.filterData}\r\n            rowKey=\"unique_identifier\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"steps-action mt-5\">\r\n          <Button\r\n            className=\"mr-4\"\r\n            type=\"secondary\"\r\n            style={{ margin: \"0 8px\" }}\r\n            onClick={() => this.stepTwoPrev()}\r\n            data-test=\"steptwoPrev\"\r\n          >\r\n            {BACK}\r\n          </Button>\r\n          <Button\r\n            className=\"md\"\r\n            type=\"primary\"\r\n            onClick={() => this.stepTwoNext()}\r\n            data-test=\"steptwoNext\"\r\n          >\r\n            {NEXT}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Upload, Modal } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, CLOSE_TEXT_MODAL, CREATE } from \"../../headings\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control required\">\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture\"\r\n            disabled\r\n            fileList={stepOneOpenLine.file}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n          ></Upload>\r\n\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLine.previewVisible}\r\n            title={stepOneOpenLine.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLine.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, message } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateOpenlineStepOne from \"../openlineForm/CreateOpenlineStepOne\";\r\nimport CreateOpenlineStepTwo from \"../openlineForm/CreateOpenlineStepTwo\";\r\nimport CreateOpenlineStepThree from \"../openlineForm/CreateOpenlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  OPENLINE_CREATE_STEP1,\r\n  OPENLINE_CREATE_STEP2,\r\n  OPENLINE_CREATE_STEP3,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport {\r\n  CREATE_OPENLINE_DIRECTORY,\r\n  OPENLINE_DIRECTORY,\r\n  CREATE_OPENLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: OPENLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n    imagename: \"\",\r\n  });\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload = (value) => {\r\n    if (!value.type.includes(\"image\")) {\r\n      setImageError(true);\r\n      message.error(\r\n        `The file that you attemped to upload ${value.name} is not supported`\r\n      );\r\n      return false;\r\n    } else {\r\n      setImageError(false);\r\n    }\r\n    return value.type;\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      [name]: fileList,\r\n      imagename: filename,\r\n    });\r\n  };\r\n\r\n  const handleReaderloaded = (readerEvt) => {\r\n    let binaryString = readerEvt.target.result;\r\n    setStepOneOpenLine({ ...stepOneOpenLine, file: btoa(binaryString) });\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setStepOneOpenLine({ ...stepOneOpenLine, previewVisible: false });\r\n  const setNameValidHandle = (value) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_openline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        openline_image: stepOneOpenLine.file[0].base64,\r\n        openline_image_name: stepOneOpenLine.imagename,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>{OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_OPENLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <div className=\"mid-content mt-4\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"steps-content\">\r\n                      {current == 0 ? (\r\n                        <CreateOpenlineStepOne\r\n                          next={next}\r\n                          imageError={imageError}\r\n                          stepOneOpenLineInfo={stepOneOpenLine}\r\n                          handleStepOneOnChange={handleStepOneOnChange}\r\n                          handleStepOneOnSelect={handleStepOneOnSelect}\r\n                          handleStepOneUpload={handleStepOneUpload}\r\n                          handleBeforeUpload={handleBeforeUpload}\r\n                          handleStepOnePreview={handleStepOnePreview}\r\n                          handleCancel={handleCancel}\r\n                          handleStepOneDatePickerChange={\r\n                            handleStepOneDatePickerChange\r\n                          }\r\n                          addIcon={addIcon}\r\n                          getIconText={getIconText}\r\n                          setNameValidHandle={setNameValidHandle}\r\n                          hotlineErrorUpdated={hotlineErrorUpdated}\r\n                          data-test=\"CreateHotlineStepOne\"\r\n                        />\r\n                      ) : current == 1 ? (\r\n                        <CreateOpenlineStepTwo\r\n                          next={next}\r\n                          prev={prev}\r\n                          stepOneHotLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                        />\r\n                      ) : current == 2 ? (\r\n                        <CreateOpenlineStepThree\r\n                          prev={prev}\r\n                          createNewHotLine={createHotLine}\r\n                          stepOneOpenLine={stepOneOpenLine}\r\n                          stepTwoOpenLine={stepTwoOpenLine}\r\n                          getIconText={getIconText}\r\n                          handleStepOnePreview={handleStepOnePreview}\r\n                          handleCancel={handleCancel}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpenlineCreation from \"../../components/openlineCreation/OpenlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, OPENLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  CREATE_NEW_OPENLINE_TEXT_PART1,\r\n  CREATE_NEW_OPENLINE_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{OPENLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART1}\r\n                          <br />\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <OpenlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst OpenlinePermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: NAME,\r\n      dataIndex: \"first_name\",\r\n      key: \"first_name\",\r\n      width: \"30%\",\r\n      render: (record, response) => {\r\n        return {\r\n          children: response.user.first_name,\r\n          props: {\r\n            \"data-title\": \"Name\",\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlinePermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchEmployee = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this openline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchEmployee;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport OpenlinePermission from \"../table/OpenlinePermission\";\r\nimport SearchEmployee from \"../autocomplete/SearchEmployee\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, DONE, SHOW } from \"../../headings\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass OpenlinePermissioModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedOpenLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      openlineId: this.props.selectedRows.openline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineAssignEmpl/\" +\r\n          this.props.selectedRows.openline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedOpenLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedOpenLines = [...this.state.assignedOpenLines];\r\n    let index = assignedOpenLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedOpenLines[index] = {\r\n      ...assignedOpenLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedOpenLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL + \"getOpenlineAssignEmpl/\" + value.openline.openline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedOpenLines, assignedEmp } = this.state;\r\n    const x = {\r\n      user: {\r\n        user_id: parseInt(options.user_id),\r\n        first_name: options.value,\r\n      },\r\n      openline: {\r\n        openline_id: this.state.openlineId,\r\n      },\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n    };\r\n    const y = {\r\n      openline_id: this.state.openlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedOpenLines: [...assignedOpenLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <OpenlinePermission\r\n              data={this.state.assignedOpenLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchEmployee\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedOpenLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlinePermissioModal);\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NO_TEXT_MODAL, YES_TEXT_MODAL } from \"../../headings\";\r\nimport { DELETE_CONFIRM_OPENLINE } from \"../../messages\";\r\n\r\nclass DeleteOpenlineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"openline/\" + this.props.openlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/openlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Openline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_OPENLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteOpenlineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteOpenlineModal from \"../../components/modal/DeleteOpenlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/editopenline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/editopenline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteOpenlineModal openlineId={test.openline_id} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OpenlinePermissioModal from \"../modal/OpenlinePermissioModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport OpenlinePopover from \"../table/OpenlinePopover\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\nimport {\r\n  END_DATE,\r\n  OPENLINE_NAME,\r\n  PERMISSIONS,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { OPENLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpenlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    openlines?.forEach((openline) => {\r\n      openline.start_date = moment(openline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      openline.end_date = moment(openline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.openlines !== nextProps.openlines) {\r\n      nextProps.openlines?.forEach((openline) => {\r\n        openline.start_date = moment(openline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        openline.end_date = moment(openline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.openlines }, () => {\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(\r\n          BASE_URL + \"changeOpenlineStatus/\" + record.openline_id + \"/\",\r\n          data,\r\n          options\r\n        )\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: OPENLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Openline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <OpenlinePermissioModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <OpenlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Spin spinning={this.props.loader} size=\"large\">\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={this.props.data} />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1>{OPENLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <Col span={24}>\r\n                    <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                      <Col\r\n                        span={24}\r\n                        lg={18}\r\n                        className=\"search-row mt-2 mt-lg-0\"\r\n                      >\r\n                        <Row>\r\n                          <Col span={24} lg={9} className=\"search-box\">\r\n                            <Search\r\n                              placeholder={SEARCH}\r\n                              onSearch={this.onSearch}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n\r\n                      <Col\r\n                        span={24}\r\n                        lg={6}\r\n                        className=\"d-flex align-items-center justify-content-end\"\r\n                      >\r\n                        <Link to=\"/orgcc/createopenline\">\r\n                          <Buttons value=\"Create Openline\" />\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Grid\r\n                    rowKey=\"openline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </Spin>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOpenlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpenlines from \"./ShowAllOpenlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\n\r\nconst OpenlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.openlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.openlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.openlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.openlinesdata !== null &&\r\n    props.openlinesdata.length === 0 ? (\r\n    <OpenlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllOpenlines\r\n      statusOnClicked={statusOnClicked}\r\n      openlines={props.openlinesdata}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, EDIT_OPENLINE, UPDATE, UPLOAD_IMAGE } from \"../../headings\";\r\nimport {\r\n  STATUS_INACTIVE,\r\n  STATUS_ACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n} from \"../../errors\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditOpenline = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [openLineData, setOpenLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    openline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    openline_image: \"\",\r\n    openline_image_name: \"\",\r\n    status_id: \"\",\r\n    iconHtml: \"\",\r\n    ImgfileList: [],\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [openlineErrorUpdated, setopenlineErrorUpdated] = useState(\"\");\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date).format(\"YYYY-MM-DD\");\r\n    const eDate = moment(location.state.end_date).format(\"YYYY-MM-DD\");\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n\r\n    setOpenLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      openline_id: location.state.openline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      openline_image: location.state.openline_image,\r\n      openline_image_name: location.state.openline_image_name,\r\n      status_id: location.state.status_id.toString(),\r\n      ImgfileList: [\r\n        {\r\n          uid: \"1\",\r\n          name: location.state.openline_image_name,\r\n          status: \"done\",\r\n          url: location.state.openline_image,\r\n        },\r\n      ],\r\n    });\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setOpenLineData({ ...openLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: value });\r\n  };\r\n\r\n  const editOpenline = (e) => {\r\n    if (\r\n      openLineData.name &&\r\n      openLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      openLineData.help_text &&\r\n      openLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      openLineData.openline_image.length > 0 &&\r\n      openLineData.status_id &&\r\n      openLineData.start_date\r\n    ) {\r\n      setLoader(true);\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      function convertImgToBase64(url, callback, outputFormat) {\r\n        var canvas = document.createElement(\"CANVAS\");\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var img = new Image();\r\n        img.crossOrigin = \"Anonymous\";\r\n        img.onload = function () {\r\n          canvas.height = img.height;\r\n          canvas.width = img.width;\r\n          ctx.drawImage(img, 0, 0);\r\n          var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n          callback.call(this, dataURL);\r\n          // Clean up\r\n          canvas = null;\r\n        };\r\n        img.src = url;\r\n      }\r\n      var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n      let data = {};\r\n      if (openLineData.ImgfileList[0].uid === \"1\") {\r\n        convertImgToBase64(openLineData.openline_image, function (base64Img) {\r\n          data = {\r\n            end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n            help_text: openLineData.help_text,\r\n            openline_id: openLineData.openline_id,\r\n            openline_image: base64Img,\r\n            name: openLineData.name,\r\n            openline_image_name: openLineData.openline_image_name,\r\n            start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n            status_id: parseInt(openLineData.status_id),\r\n            updated_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n            created_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n          };\r\n\r\n          if (\r\n            openlineErrorUpdated == \"status: false\" ||\r\n            openLineData.name === location.state.name\r\n          ) {\r\n            updateOpenLine(data);\r\n          }\r\n        });\r\n      } else {\r\n        data = {\r\n          end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n          help_text: openLineData.help_text,\r\n          openline_id: openLineData.openline_id,\r\n          openline_image: openLineData.ImgfileList[0].base64,\r\n          name: openLineData.name,\r\n          openline_image_name: openLineData.openline_image_name,\r\n          start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n          status_id: parseInt(openLineData.status_id),\r\n          updated_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        };\r\n        if (\r\n          openlineErrorUpdated == \"status: false\" ||\r\n          openLineData.name === location.state.name\r\n        ) {\r\n          updateOpenLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/openlinedirectory\";\r\n  };\r\n\r\n  const updateOpenLine = (data) => {\r\n    const token = authHeader();\r\n    let openLineId = openLineData.openline_id;\r\n    delete openLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"openline/\" + openLineId + \"/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoader(false);\r\n          window.location = \"/orgcc/openlinedirectory\";\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    // setOpenLineData({ ...openLineData, [name]: fileList });\r\n    setOpenLineData({\r\n      ...openLineData,\r\n      ImgfileList: fileList,\r\n      openline_image: fileList,\r\n      openline_image_name: filename,\r\n    });\r\n\r\n    if (value.file.status === \"removed\") {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        ImgfileList: [],\r\n        openline_image: \"\",\r\n        openline_image_name: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n      await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setOpenLineData({\r\n          ...openLineData,\r\n          previewImage: dataURL,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setOpenLineData({ ...openLineData, fileList: [] });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setOpenLineData({ ...openLineData, previewVisible: false });\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckOpenlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOpenline/\",\r\n          { openline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setopenlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setopenlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_OPENLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n                    <FloatLabel\r\n                      label={DIRECTORY_NAME}\r\n                      value={openLineData.name}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DIRECTORY_NAME,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={openLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckOpenlineName(e)}\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {openlineErrorUpdated == \"status: false\" &&\r\n                          openLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          openLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {openlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={OPENLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={openLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={openLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            name=\"help_text\"\r\n                            id=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          value={openLineData.start_date}\r\n                          disabledDate={disabledDate}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: SELECT_DATE,\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={openLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={openLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control required\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <Upload\r\n                          listType=\"picture\"\r\n                          fileList={openLineData.ImgfileList}\r\n                          onChange={(value) =>\r\n                            handleStepOneUpload(value, \"openline_image\")\r\n                          }\r\n                          onPreview={(value) => handleStepOnePreview(value)}\r\n                          handleOnRemove={handleOnRemove}\r\n                        >\r\n                          {openLineData.openline_image.length === 0 && (\r\n                            <Button type=\"link\" className=\"link pl-0\">\r\n                              <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                              {UPLOAD_IMAGE}\r\n                            </Button>\r\n                          )}\r\n                        </Upload>\r\n\r\n                        <Modal\r\n                          visible={openLineData.previewVisible}\r\n                          title={openLineData.previewTitle}\r\n                          centered\r\n                          onOk={(value) => handleCancel(value)}\r\n                          okButtonProps={{\r\n                            children: \"Custom OK\",\r\n                          }}\r\n                          cancelButtonProps={{ style: { display: \"none\" } }}\r\n                          okText=\"Close\"\r\n                        >\r\n                          <img\r\n                            alt=\"example\"\r\n                            style={{ width: \"100%\" }}\r\n                            src={openLineData.previewImage}\r\n                          />\r\n                        </Modal>\r\n\r\n                        {getIconText(openLineData.openline_id) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(openLineData.iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      openLineData.openline_id\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(openLineData.openline_id)}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editOpenline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditOpenline;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from\"./components/login/ForgotPassword\";\r\nimport  ResetPassword from\"./components/login/ResetPassword\";\r\nimport Login from\"./components/login/Login\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport OpenlineMessages from \"./components/openlineMessages/OpenlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport AddEmployee from \"./components/manageEmp/AddEmp\";\r\nimport ImportFile from \"./components/manageEmp/ImportFile\";\r\nimport CreateManually from \"./components/manageEmp/CreateManually\";\r\nimport ManagePolls from \"./components/managePolls/ManagePolls\";\r\nimport CreatePoll from \"./components/managePolls/CreatePoll\";\r\nimport PreviewPoll from \"./components/managePolls/PreviewPoll\";\r\nimport PollsContainer from \"./components/managePolls/PollsContainer\";\r\n\r\nimport PollResponse from \"./components/managePolls/PollResponse\";\r\nimport EditPoll from \"./components/managePolls/EditPoll\";\r\nimport ExistingPolls from \"./components/managePolls/ExistingPolls\";\r\n\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\nimport OpenlineCreation from \"./components/openlineCreation/OpenlineCreation\";\r\nimport EditOpenline from \"./components/openlineDirectory/EditOpenline\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_amcc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isorgcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_org_cc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isamweb =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_am_web_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <Route path=\"/addemployee\" component={AddEmployee} />\r\n        <Route path=\"/importfile\" component={ImportFile} />\r\n        <Route path=\"/createmanually\" component={CreateManually} />\r\n        <ProtectedRoute path=\"/changepassword\" component={ChangePassword} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route path=\"/resetpassword\" component={ResetPassword} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/edithotline\" ||\r\n          url === \"/orgcc/editopenline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/orgcc/pollsdirectory\" ||\r\n          url === \"/orgcc/createpoll\" ||\r\n          url.includes(\"/orgcc/editpoll\") ||\r\n          url === \"/orgcc/previewpoll\" ||\r\n          url === \"/orgcc/pollresponse\" ||\r\n          url === \"/orgcc/existingpolls\" ||\r\n          url === \"/\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editopenline\"\r\n              amorg\r\n              component={EditOpenline}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollsdirectory\"\r\n              amorg\r\n              component={PollsContainer}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/previewpoll\"\r\n              amorg\r\n              component={PreviewPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createpoll\"\r\n              amorg\r\n              component={CreatePoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollresponse\"\r\n              amorg\r\n              component={PollResponse}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editpoll/:id\"\r\n              amorg\r\n              component={EditPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/existingpolls\"\r\n              amorg\r\n              component={ExistingPolls}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/amweb/openlinemessages\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/hotlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/openlinemessages\"\r\n                amweb\r\n                component={OpenlineMessages}\r\n              />\r\n            </Switch>\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url === \"/\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url.includes(\"/amcc/orgdetails\") ||\r\n            url === \"/login\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/orgdetails/:id\"\r\n                amcc\r\n                component={OrgDetails}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"current\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst userFName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.first_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userLName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.last_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userEmail = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.email, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userMobile = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.mobile_number, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst amweb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_am_web_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_amcc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amorgcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_org_cc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amidb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_idb_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amseeded = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_seeded_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amapp = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_app_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst userData = {\r\n  ...user,\r\n  user_data: {\r\n    ...user?.user_data,\r\n    email: userEmail,\r\n    mobile_number: userMobile,\r\n    is_am_web_user: amweb,\r\n    is_amcc_user: amcc,\r\n    is_app_user: amapp,\r\n    is_org_cc_user: amorgcc,\r\n    is_idb_user: amidb,\r\n    is_seeded_user: amseeded,\r\n  },\r\n  user_details: {\r\n    ...user?.user_details,\r\n    first_name: userFName,\r\n    last_name: userLName,\r\n  },\r\n};\r\n\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\nconst initialState = user\r\n  ? {\r\n      isLoggedIn: true,\r\n      user: userData,\r\n      current: password.replaceAll('^\"+|\"+$', \"\"),\r\n    }\r\n  : { isLoggedIn: false, user: null, current: null };\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        current: payload.current,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = null;\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import {\r\n    POLL_FAIL,\r\n    POLL_SUCCESS \r\n } from \"../actions/types\";\r\n   \r\n  const deafaultState = {};\r\n  deafaultState.pollsdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case POLL_SUCCESS:\r\n        return {\r\n          ...state,\r\n          pollsdata: payload.pollsdata,\r\n        };\r\n      case POLL_FAIL:\r\n        return {\r\n          ...state,\r\n          pollsdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\nimport poll from \"./poll\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline,\r\n  poll\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { Modal } from \"antd\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport { ABOUT_TO_LOGOUT_TEXT, LOGGED_OUT_TEXT } from \"./messages\";\r\nimport { OK_TEXT_MODAL } from \"./headings\";\r\n\r\nfunction App() {\r\n  const timeOutIdle = 1200000; // 20 minutes\r\n  const timeOutLogout = 60000; // a minute\r\n  var idleTimer = null;\r\n  const [idleModal, showIdleModal] = useState(false);\r\n  const [logoutModal, showLogoutModal] = useState(false);\r\n  const [timedOut, setTimedOut] = useState(false);\r\n\r\n  const onIdle = (e) => {\r\n    if (AppStorage.get(\"user\")) {\r\n      const isTimedOut = timedOut;\r\n      if (isTimedOut) {\r\n        showIdleModal(false);\r\n        showLogoutModal(true);\r\n      } else {\r\n        showIdleModal(true);\r\n        idleTimer.reset();\r\n        setTimedOut(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIdleOk = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleIdleCancel = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleLogoutOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleLogoutCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const onActive = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  const onAction = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        ref={(ref) => {\r\n          idleTimer = ref;\r\n        }}\r\n        element={document}\r\n        onIdle={onIdle}\r\n        onAction={onAction}\r\n        onActive={onActive}\r\n        debounce={250}\r\n        timeout={!timedOut ? timeOutIdle : timeOutLogout}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n            <Modal\r\n              visible={idleModal}\r\n              onOk={handleIdleOk}\r\n              onCancel={handleIdleCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{ABOUT_TO_LOGOUT_TEXT}</p>\r\n            </Modal>\r\n            <Modal\r\n              visible={logoutModal}\r\n              onOk={handleLogoutOk}\r\n              onCancel={handleLogoutCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{LOGGED_OUT_TEXT}</p>\r\n            </Modal>\r\n            <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_sidebar\":\"manageEmp_no_sidebar__2IV_7\",\"box_bordered\":\"manageEmp_box_bordered__1L9Kq\",\"icon\":\"manageEmp_icon__2NaGI\",\"box_bordered_active\":\"manageEmp_box_bordered_active__1hEvf\"};"],"sourceRoot":""}