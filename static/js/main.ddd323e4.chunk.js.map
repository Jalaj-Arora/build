{"version":3,"sources":["assets/icons/dots-icon.svg","assets/images/amcc-vector.svg","assets/images/create-hotline.svg","assets/icons/send.svg","assets/images/anonymoose-logo.svg","assets/images/logo.svg","assets/icons/expand-more.svg","assets/icons/pencil.svg","assets/images/work-chart.svg","assets/images/no-hotlines.svg","assets/images/no-openlines.svg","assets/images/create-openline.svg","assets/images/manage-polls.svg","components/managePolls/managePoll.module.scss","utils/AppStorage.js","ProtectedRoute.js","containers/CommonHeader.js","userconfig.js","services/auth-service.js","actions/auth.js","actions/types.js","values.js","headings.js","components/userInfo/UserInfo.js","containers/LoggedinHeader.js","containers/OrgSidebar.js","components/manageOrg/AccSidebar.js","containers/ShowDetails.js","components/table/Table.js","components/button/Button.js","services/auth-header.js","labels.js","messages.js","components/manageOrg/ShowAllOrganizations.js","components/form/FloatLabels.js","errors.js","components/form/CreateOrgStepOne.js","components/modal/DeleteModal.js","components/table/Popover.js","components/manageOrg/AssignedUsers.js","components/form/CreateOrgStepTwo.js","components/form/CreateOrgStepThree.js","components/form/CreateOrgStepper.js","components/manageOrg/CreateOrg.js","services/user.service.js","components/manageOrg/OrganizationContainer.js","actions/manageOrg.js","actions/manageEmp.js","components/manageEmp/ManageEmp.js","components/login/ForgotPassword.js","components/login/ResetPassword.js","components/modal/PrivacyPolicyModal.js","components/login/Login.js","components/hotlineMessages/AmWebSidebar.js","components/form/ChangePassword.js","components/modal/AddIcoModal.js","components/form/CreateHotlineStepOne.js","components/form/CreateHotlineStepTwo.js","components/form/CreateHotlineStepThree.js","components/hotlineCreation/HotlineCreation.js","components/hotlineDirectory/HotlineDirectory.js","components/modal/DeleteHotlineModal.js","components/table/HotlinePopover.js","components/table/TablePermission.js","components/autocomplete/Autocomplete.js","components/modal/ShowModal.js","components/hotlineDirectory/ShowAllHotlines.js","components/hotlineDirectory/HotlineContainer.js","actions/hotlines.js","components/modal/AssignHotlineModal.js","utils/HighlightTextHotline.js","components/hotlineMessages/FilterPopover.js","components/modal/NoteModal.js","components/hotlineMessages/AddedNotes.js","components/hotlineMessages/Note.js","components/hotlineMessages/Activity.js","components/hotlineMessages/Assigned.js","components/hotlineMessages/Messages.js","components/hotlineMessages/SearchHotlineMessages.js","components/hotlineMessages/HotlineMessagesLeftSection.js","components/hotlineMessages/NoHotlineMessages.js","components/hotlineMessages/Spinner.js","utils/MessagesUtil.js","components/hotlineMessages/HotlineMessages.js","components/openlineMessages/AmWebSidebar.js","utils/HighlightTextOpenline.js","components/openlineMessages/FilterPopover.js","components/openlineMessages/AddedNotes.js","components/openlineMessages/Note.js","components/openlineMessages/Activity.js","components/openlineMessages/Assigned.js","components/openlineMessages/Messages.js","components/openlineMessages/SearchOpenlineMessages.js","components/openlineMessages/OpenlineMessagesLeftSection.js","components/openlineMessages/NoOpenlineMessages.js","components/openlineMessages/OpenlineMessages.js","containers/PermissionDenied.js","components/modal/ResetPwdModal.js","components/form/EditSeededUsers.js","components/form/AddNewSeededUser.js","components/form/OrgDetails.js","components/form/EditOrg.js","components/form/EditProfile.js","components/hotlineDirectory/EditHotLine.js","components/manageEmp/AddEmployee.js","components/manageEmp/UploadFiles.js","components/manageEmp/ImportFile.js","components/manageEmp/CreateManually.js","components/managePolls/UploadImage.js","components/managePolls/MultipleChoice.js","components/modal/DateTimeModal.js","utils/momentUtil.js","components/managePolls/PreviewPoll.js","components/managePolls/CreatePoll.js","components/managePolls/ManagePolls.js","components/modal/ExtendEndDate.js","components/table/PollPopover.js","components/managePolls/ShowAllPolls.js","components/table/CreatePollPopover.js","actions/poll.js","components/managePolls/PollsContainer.js","components/managePolls/PollResponse.js","components/modal/EditDateTimeModal.js","components/managePolls/EditPreviewPoll.js","components/managePolls/EditPoll.js","components/managePolls/ExistingPolls.js","components/openlineForm/CreateOpenlineStepOne.js","components/openlineForm/CreateOpenlineStepTwo.js","components/openlineForm/CreateOpenlineStepThree.js","components/openlineCreation/OpenlineCreation.js","components/openlineDirectory/OpenlineDirectory.js","components/table/OpenlinePermission.js","components/autocomplete/SearchEmployee.js","components/modal/OpenlinePermissioModal.js","components/modal/DeleteOpenlineModal.js","components/table/OpenlinePopover.js","components/openlineDirectory/ShowAllOpenlines.js","components/openlineDirectory/OpenlineContainer.js","actions/openline.js","components/openlineDirectory/EditOpenline.js","routes.js","reducers/auth.js","reducers/message.js","reducers/manageOrg.js","reducers/manageEmp.js","reducers/hotlines.js","reducers/assignedHotline.js","reducers/openline.js","reducers/poll.js","reducers/index.js","services/stores.js","App.js","index.js","components/manageEmp/manageEmp.module.scss"],"names":["module","exports","getKey","key","set","value","localStorage","setItem","get","getItem","remove","removeItem","ProtectedRoute","Component","this","props","component","AppStorage","to","pathname","React","CommonHeader","src","Logo","alt","className","BASE_URL","CryptoJS","require","options","headers","Accept","email","password","page","axios","post","response","data","userFName","AES","encrypt","user_details","first_name","toString","userLName","last_name","departmentId","department_id","orgUserId","org_user_id","endDate","end_date","startDate","start_date","userEmail","user_data","userMobile","mobile_number","orgId","organization_id","userId","user_id","amweb","is_am_web_user","amcc","is_amcc_user","amorgcc","is_org_cc_user","amidb","is_idb_user","amseeded","is_seeded_user","amapp","is_app_user","userData","JSON","stringify","clear","window","location","reload","login","dispatch","AuthService","then","type","payload","user","current","Promise","resolve","error","message","reject","STATUS_ACTIVE","OK_TEXT_MODAL","NEXT","BACK","CANCEL","AnonymooseUser","handleLogoutClick","bind","handleChangeUserRole","state","isLoggedIn","logout","href","userRole","amWEBUser","amCCUser","amORGUser","userType","decrypt","enc","Utf8","name","nameCapitalized","charAt","toUpperCase","slice","fullName","split","initials","shift","pop","data-test","placement","content","size","bordered","Item","onClick","trigger","ExpandMore","withRouter","connect","auth","useEffect","includes","setInterval","console","log","span","md","lg","Sider","Layout","OrgSidebar","collapsed","toggle","setState","defaultKey","createElement","MenuFoldOutlined","MenuUnfoldOutlined","collapsible","theme","mode","defaultSelectedKeys","icon","AccSidebar","ShowDetails","history","useHistory","path","record","showModal","push","orgName","identifier","Grid","Input","Search","AudioOutlined","style","fontSize","color","columns","rowKey","id","pagination","pageSize","dataSource","Buttons","authHeader","CommonAuthHeader","parse","tokens","access","FIRST_NAME","LAST_NAME","DATE","MOBILE","STATUS","ACCESS","ACTIONS","DELETE_CONFIRM","LOGIN_PART1","LOGIN_PART2","EXTEND_END_DATE_TEXT_PART3","ASSIGN_HOTLINE_TEXT_PART2","STATUS_CHANGED_NOTIFICATION_PART1","STATUS_CHANGED_NOTIFICATION_PART2","STATUS_CHANGED_NOTIFICATION_PART3","STATUS_CHANGED_NOTIFICATION_PART4","ABOUT_TO_LOGOUT_TEXT","LOGGED_OUT_TEXT","Content","ShowAllOrganizations","statusClicked","via","replaceAll","Date","moment","format","status_id","Authorization","put","notification","config","open","description","statusOnClicked","onSearch","filterDt","filterIt","filterData","searchBy","organizations","forEach","org","utc","local","nextProps","arr","searchKey","filter","obj","Object","keys","some","title","dataIndex","width","render","children","Pencil","placeholder","Button","spinning","loader","FloatLabel","useState","focus","setFocus","label","labelClass","length","onBlur","onFocus","REQUIRED_MESSAGE","MAX_CHAR_LIMIT","VALID_EMAIL","VALID_MOBILE","PASSWORD_RULES","HOTLINE_ALREADY_EXISTS","SELECT_DATE","STATUS_NOT_CHANGED","PAST_TIME","OPENLINE_ALREADY_EXISTS","CreateOrgStepOne","next","stepOneOrganizationInfo","handleStepOneOnChange","handleStepOneOnSelect","handleStepOneDatePickerChange","orgIdCount","orgNameCount","setOrgNameAlreadyExists","setOrgIDAlreadyExists","orgIDAlreadyExists","orgNameAlreadyExists","Form","useForm","form","showError","RangePicker","DatePicker","showIcon","gutter","xs","sm","organizationName","htmlFor","defaultValue","onChange","e","organization_name","res","CheckOrganizationName","autoComplete","maxLength","replace","CheckCircleTwoTone","twoToneColor","organizationId","validateStatus","orgID","CheckOrganizationID","status1","onSelect","Option","s1Date","date","disabledDate","startOf","htmlType","preventDefault","DeleteModal","visible","show","showBothModals","handleOnOk","handleOk","seededUser","viaEdit","handleDelete","deleteOrg","handleCancel","delete","hotlineId","catch","manageEmp","onOk","onCancel","centered","okButtonProps","cancelButtonProps","okText","cancelText","seededUsers","firstName","display","GridPopover","hide","handleVisibleChange","handleEditUser","onVisibleChange","dotsicon","AssignedUsers","lastName","mobile","date2","status2","fromStepTwo","showAddSeededUserForm","addSeededUser","CreateOrgStepTwo","prev","stepTwoOrganizationInfo","handleStepTwoOnChange","handleStepTwoOnSelect","handleMobile","handleStepTwoDatePickerChange","addUser","showAddUserForm","showEditUserForm","showEditSeededUserForm","cancelAddUser","cancelEditUser","editUser","deleteUser","fNameCount","lNameCount","emailValidationError","showEmailValidationError","mobileValidationError","showMobileValidationError","passwordValidationError","showPasswordValidationError","stepTwoPrev","s2Date","test","target","validateEmailAddress","country","userID","CreateOrgStepThree","apiError","createNewOrganization","addSeededUserFromThirdStep","disabled","fromStepThree","Step","Steps","steps","CreateOrgStepper","setCurrent","setLoader","setApiError","stepOneOrganization","setStepOneOrganization","setOrgNameExists","setOrgIDExists","stepTwoOrganization","setStepTwoOrganization","setSeededUsers","setShowAddUserForm","setShowEditUserForm","setOrgNameCount","setOrgIDCount","setFNameCount","setLNameCount","filteredUsers","editableUser","Fragment","separator","map","item","Math","floor","random","finalUser","index","indexOf","users","token","seededUsersArray","parseInt","organization","seeded_users","CreateOrg","showResult","setShowResult","WorkChart","orgcc_user","hotLineId","manageOrgData","manageOrg","setStatusClicked","UserService","getOrganizationData","getManageEmpAsync","getEmployees","manageEmpData","Select","ManageEmp","firstname","lastname","mobNumber","flag","property","layout","wrapperCol","tailLayout","ForgotPassword","onChangeUsername","sendEmail","emailSent","Amccvector","ref","c","initialValues","remember","ResetPassword","onChangePassword","onChangeConfirmPassword","confirm_password","resetPassword","search","uidb64","resetDone","validatePassword","rules","required","Password","getFieldValue","validator","_","dependencies","hasFeedback","PrivacyPolicyModal","Login","handleLogin","loading","isamcc","isorgcc","isamweb","isAuthenticated","commonForAllUsers","isEnabled","canSubmit","onSubmit","AmWebSidebar","ChangePassword","currentPwd","newPwd","confirmPwd","pwd","setPwd","passwordChanged","setPasswordChanged","setError","userName","setUserName","handleOnChange","old_password","new_password","AddIcoModal","iconContent","ImageId","addIcon","onSelectIcon","currentTarget","innerHTML","CreateHotlineStepOne","stepOneHotLineInfo","getIconText","setNameValidHandle","hotlineErrorUpdated","iconText","setdisabledbtn","directoryName","ENTER_DIRECTORY_NAME","showCount","hotline_name","CheckHotlineName","ENTER_DESCRIPTION","sDate","status","valuePropName","hotlineIconId","ReactHtmlParser","iconHtml","CreateHotlineStepTwo","employeeData","start","showAssigntoModal","stepTwoNext","stepTwoHotLine","chekedValues","showAlert","prevProps","rowSelection","selectedRowKeys","margin","TextArea","CreateHotlineStepThree","createNewHotLine","stepOneHotLine","assignedUserNames","selectedRows","element","readOnly","join","rel","HotlineCreation","tDate","setStepOneHotLine","setHotlineErrorUpdated","setStepTwoHotLine","values","permissions","per","id1","reduce","accumulator","currentValue","can_respond","can_view_reports","created_by","concat","a","async","create_hotline","help_text","hotline_icon_id","HotlineDirectory","CreateHotline","DeleteHotLineModal","deleteHotline","HotlinePopover","DeleteHotlineModal","hotline_id","hotlineName","GridPermission","deleteRecord","handleCheck","permissionData","setPermissionaData","changeDataSource","editable","checked","text","onDelete","locale","emptyText","rowClassName","SearchUser","searchData","addAssignUser","isAdded","setIsAdded","addedUser","setAddedUser","filterOption","inputValue","option","val","d","onSelectSearch","PermissionModal","assignedHotLines","hotLineName","assignedEmp","getAssignedEmployee","findIndex","el","aindex","newArray","x","y","i","assignhotlines","assignedHotline","ShowAllHotlines","updated_by","hotlines","hotline","hotlinesdata","hotlinedata","getHotlines","AssignHotlineModal","selectedRow","stepOneHotLineValues","getCheckValues","setVisible","ASSIGN_HOTLINE_TEXT_PART1","find","p","highlightText","str","conversation_id","toLowerCase","responder_conversation_name","RegExp","match","itemMessage","setStatus","urgencyLevel","setUrgencyLevel","setHotline","hotlinesData","setHotlinesData","oldUrgency","setOldUrgency","oldHotline","setOldHotline","oldStatus","setOldStatus","selectedOldUrgency","setSelectedOldUrgency","selectedOldHotline","setSelectedOldHotline","selectedOldStatus","setSelectedOldStatus","selectedUrgency","setSelectedUrgency","selectedHotline","setSelectedHotline","selectedStatus","setSelectedStatus","undefined","removeFilter","onApplySubmit","removeUrgency","it","rmUrg","ur","removeHotline","rmHot","removeStatus","rmStatus","urgencyOptions","statusOptions","hotlineOptions","allCheckedOnes","urgency_level_id","baseUrl","finalInput","finalUrl","searchString","filteredData","loadFilteredConversations","handleReset","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","Group","checkedValues","selected","opt","FilterPopover","NoteModal","note_text","noteText","convoId","formRef","resetFields","getNoteData","handleChange","createRef","Paragraph","Typography","AddedNotes","expand","counter","notesData","conversationId","typoExpand","typoClose","created_on","ellipsis","rows","expandable","symbol","onExpand","addedNote","renderParagraph","Note","notes","getNotes","params","class","notesClicked","audit_log","obj_status","obj_urgencyLevel","Activity","myclass","activity","divclicked","getAcitivity","auditlog","k","audit_log_event_id","status_value","urgency_level_value","activityClicked","mapAuditLog","Assigned","assigneEmp","getAssigne","assigneClicked","Messages","conversation","onChangeUrgencyLevel","onChangeStatus","newState","setCounter","socket","chatdiv","convoMessages","setConvoMessages","setMessage","convMsg","setConvMsg","noteDivClicked","myClass","displayNote","setDisplayNote","activityDivClicked","displayActivity","setDisplayActivity","assigneDivClicked","displayAssigne","setDisplayAssigne","hideDiv","sethideDiv","setSearchBy","getHotlineMessages","document","getElementById","note","assigne","classList","count","highlightedMessage","getElementsByTagName","scrollIntoView","block","lastMessage","getElementsByClassName","messagevalue","convID","onSendMessageClick","send","setFieldsValue","chatArea","arrayOf","filteredDataArray","isMobile","add","createMarkup","html","__html","messageLength","unread_messages_count","dangerouslySetInnerHTML","float","event","u","s","msg","plain","is_responder_message","isSame","onKeyDown","altKey","keyCode","ctrlKey","textarea","querySelector","shiftKey","Send","SearchHotlineMessages","useRef","trim","statusFil","statusFilterData","urgencyFilterData","ugc","hotlineFilterData","ht","setSearchString","setConversations","HoltineMessagesLeftSection","showdiv","unreadCount","closable","onClose","removeFilterLevel","conversations","onConversationClick","fontWeight","dataForReceiveAPI","getConversations","NoHotlines","opacity","NoHotlineMessages","Spinner","tip","displayNewConvAtTop","updatedConversations","newConvo","updatedNewConvo","dummyArray","splice","increaseOverallCount","conversationsToDisplay","selectedConv","setUnreadCount","newConvFromDiffUser","incomingConversation","increaseOverallCountDuringFilters","allConversations","lineFilterData","newInitiatedConv","setAllConversations","unSetFilters","filterSocket","totalFiltersApplied","conversationIds","hotlineOrOpenlineFilter","openline","hotlineOrOpenlineConvoId","openline_id","hotlineOrOpenlineConvoName","openline_name","totalConversations","urgency","lineName","updatedConversation","setAppliedFilters","urgencyLevels","line","setUrgencyFilterData","setStatusFilterData","setLineFilterData","HotlineMessages","initialConv","setInitialConv","setHotlineFilterData","setRemoveFilter","setConversation","setSocket","setNewState","setShowDiv","setChatDiv","webSocket","allConversationIds","mergedConversations","convoID","WebSocket","onopen","onmessage","sendSocketMessage","lastWord","words","onclose","onerror","accessed_users","urgencyState","statusState","hotlineState","urgencyFilter","statusFilter","hotlineFilter","searchFilter","hasConversationWithSearchedWord","allAppliedFilters","urlWithFilters","disabledCount","LeftOutlined","receivedConversation","Header","openlineName","setOpenline","openlinesData","setOpenlinesData","oldOpenline","setOldOpenline","selectedOldOpenline","setSelectedOldOpenline","selectedOpenline","setSelectedOpenline","removeOpenline","rmOpen","openlineOptions","openlineId","listOfAssignedUsers","getOpenlineMessages","SearchOpenlineMessages","openlineFilterData","OpenlineMessagesLeftSection","NoOpenlines","NoOpenlineMessages","CreateOpenline","OpenlineMessages","setOpenlineFilterData","openlineState","openlineFilter","PermissionDenied","justifyContent","ResetPwdModal","handleResetPasswordOk","handleResetPasswordCancel","ENTER_NEW_PASSWORD","CONFIRM_YOUR_PASSWORD","EditSeededUser","handleEditOk","handleEditCancel","seededUserName","seededUserDetails","handleSeededUserOnChange","handleSeededUserDatePickerChange","validateMobile","handleSeededUserOnSelect","AddNewSeededUser","handleAddSeededUser","handleAddSeededUserCancel","OrgDetails","modalError","showModalError","setEmailValidationError","setMobileValidationError","setSeededUserName","seededUserEmail","setSeededUserEmail","setSeededUserDetails","editVisible","setEditVisible","showAddSeededUser","setShowAddSeededUser","org_id","date1","organizationDetails","setOrganizationDetails","useNotification","api","contextHolder","computedMatch","appendedUsers","seeded_user","soft_delete","finalUsers","onSeededUserEditSubmit","info","editOrg","onFinish","handleOrganizationOnSelect","orgDetails","EditSeededUsers","newSeededUser","EditOrg","setOrganizationName","organizationIdentifier","setOrganizationIdentifier","deleteClick","setDeleteClick","orgStatus","setOrgStatus","handleOrganizationOnChange","handleOrganizationDatePickerChange","userNam","EditHotLine","hotLineData","sethotLineData","hotlineStatus","setHotlineStatus","seticonHtml","sethotlineErrorUpdated","useLocation","eDate","dates","setIcon","saveHotLine","AddEmployee","styles","no_sidebar","xl","box_bordered","box_bordered_active","Dragger","Upload","UploadFiles","accept","ImportFiles","file","setFile","fileList","reader","FileReader","onload","base64","result","readAsDataURL","originFileObj","CreateManually","empId","department","role","userDetails","setUserDetails","handleUserOnChange","handleUserOnSelect","handleUserDatePickerChange","is_super_user","UploadImage","handleStepOneUpload","handleBeforeUpload","handleOnRemove","handlePollImagePreview","poll","listType","beforeUpload","onRemove","onPreview","previewVisible","previewTitle","previewImage","MultiChoice","tags","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","tag","setSingleChoiceResponse","showInput","input","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","tagsOption","pollResponse","onPressEnter","isLongTag","tagElem","edit_tag","onDoubleClick","add_tag","DatetimeModal","onPublish","disabledStartDate","disabledEndDate","pollData","pollStartDate","range","end","onChangeStartDate","handlePollStartDatePickerChange","onChangeEndDate","handlePollEndDatePickerChange","onChangeStartTime","time","startTimeError","handlePollStartTimePickerChange","onChangeEndTime","endTimeError","handlePollEndTimePickerChange","pollName","utils","DateFnsUtils","container","justify","pollStartTime","KeyboardButtonProps","pollEndDate","pollEndTime","formatAsYYYYMMDDHHmmss","formatAsHHmmss","formatAsMMMDDYYYY","formatAsHHmm","formatAsYYYYMMDD","formatAsDDMMYYYY","starsRating","isHalf","activeColor","newValue","PreviewPoll","setPollsDate","backtoEdit","isImage","attachmentName","poll_info","pollHelpText","pollQuestion","pollQuestionType","pollRatingResponse","PaperClipOutlined","pollDocument","download","DateTimeModal","optionsData","option_text","create_poll","image","show_result_to_users","poll_result_chart_type","pollChartType","image_name","poll_question_type","question","momentUtil","start_time","end_time","document_name","CreatePoll","pollImageValidation","setPoll","pollError","setpollError","previewPoll","setPreviewPoll","chartError","showChartError","uploadError","showuploadError","setIsImage","setAttachmentName","onCreateChange","handlePollOnSelect","checkChartType","checkDoucmentType","fileType","getBase64","isPollNameDuplicate","sm_textarea","xlsxfileExt","pptxfileExt","docfileExt","csvfileExt","isValidDoc","isDocument","isLt5M","isLt10M","preview","url","substring","lastIndexOf","classNames","ManagePoll","createPoll","setCreatePoll","ManagePolls","ExtendEndDate","poll_id","pollsData","extendPollDate","disabledDateTime","now","disabledHours","hour","disabledMinutes","minutes","disabledSeconds","seconds","OpenlinePopover","ShowAllPolls","sdate","smonth","syear","finalStartDate","currentDate","startTime","startTimeWithDate","polls","PollPopover","getPollAsync","getPolls","pollsdata","PollResponse","endTime","edate","emonth","eyear","EditPreviewPoll","editPoll","EditDateTimeModal","EditPoll","pollOptionText","pollId","pollID","uid","poll_question_rating_type","convertImgToBase64","callback","outputFormat","canvas","ctx","getContext","img","Image","crossOrigin","height","drawImage","dataURL","toDataURL","call","finalOptions","assign","poll_option_id","isMoment","update_poll","base64Img","POLL_ALREADY_EXISTS","ExistingPolls","CreateOpenlineStepOne","imageError","stepOneOpenLineInfo","handleStepOnePreview","openelineName","CreateOpenlineStepTwo","stepTwoOpenLine","CreateOpenlineStepThree","stepOneOpenLine","action","OpenlineCreation","setImageError","imagename","setStepOneOpenLine","setStepTwoOpenLine","filename","create_openline","openline_image","openline_image_name","OpenlineDirectory","OpenlinePermission","SearchEmployee","OpenlinePermissioModal","assignedOpenLines","DeleteOpenlineModal","ShowAllOpenlines","openlines","openlinesdata","getOpenlines","EditOpenline","ImgfileList","openLineData","setOpenLineData","openlineErrorUpdated","setopenlineErrorUpdated","updateOpenLine","openLineId","CheckOpenlineName","Routes","EditProfile","exact","amorg","ImportFile","HotlineContainer","OpenlineContainer","PollsContainer","OrganizationContainer","decryptedPassword","localPwd","initialState","deafaultState","combineReducers","assignhotlinedata","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","idleTimer","idleModal","showIdleModal","logoutModal","showLogoutModal","timedOut","setTimedOut","onIdle","reset","onAction","onActive","debounce","timeout","ReactDOM"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,gECA3CD,EAAOC,QAAU,IAA0B,kC,8KCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,gSCC3CD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,UAAY,8BAA8B,aAAe,iCAAiC,UAAY,8BAA8B,sBAAsB,wCAAwC,SAAW,6BAA6B,QAAU,4BAA4B,UAAU,8B,0MCApVC,EAAS,SAACC,GAAD,gBADE,aACF,YAAwBA,IAC1BC,EAAM,SAACD,EAAKE,GAAN,OAAgBC,aAAaC,QAAQL,EAAOC,GAAME,IACxDG,EAAM,SAACL,GAAD,OAASG,aAAaG,QAAQP,EAAOC,KAC3CO,EAAS,SAACP,GAAD,OAASG,aAAaK,WAAWT,EAAOC,KCAxDS,E,iLAEF,IAAMC,EAAYC,KAAKC,MAAMC,UAG7B,OAFaC,EAAe,QAG1B,kBAACJ,EAAcC,KAAKC,OAEpB,kBAAC,IAAD,CAAUG,GAAI,CAAEC,SAJG,gB,GAJIC,IAAMP,WAapBD,I,wECNAS,EARM,WACnB,OACE,oCACE,yBAAKC,IAAKC,IAAMC,IAAI,aAAaC,UAAU,6B,0DCNpCC,EAAW,gCCKpBC,EAAWC,EAAQ,IAEjBC,EAAU,CACdC,QAAS,CACPC,OAAQ,+BACR,eAAgB,mCAqHL,M,8FAhHDC,EAAOC,EAAUC,G,sKACJC,IAAMC,KAC3BV,EAAW,gBACX,CAAEM,QAAOC,WAAUC,QACnBL,I,cAHIQ,E,QAKOC,OACLA,EAAOD,EAASC,KAChBC,EAAYZ,EAASa,IAAIC,QAAb,UAChBH,EAAKI,oBADW,aAChB,EAAmBC,WACnB,cACAC,WACIC,EAAYlB,EAASa,IAAIC,QAAb,UAChBH,EAAKI,oBADW,aAChB,EAAmBI,UACnB,cACAF,WACIG,EAAepB,EAASa,IAAIC,QAAb,UACnBH,EAAKI,oBADc,aACnB,EAAmBM,cAAcJ,WACjC,cACAA,WACIK,EAAYtB,EAASa,IAAIC,QAAb,UAChBH,EAAKI,oBADW,aAChB,EAAmBQ,YAAYN,WAC/B,cACAA,WACIO,EAAUxB,EAASa,IAAIC,QAAb,UACdH,EAAKI,oBADS,aACd,EAAmBU,SACnB,cACAR,WACIS,EAAY1B,EAASa,IAAIC,QAAb,UAChBH,EAAKI,oBADW,aAChB,EAAmBY,WACnB,cACAV,WACIW,EAAY5B,EAASa,IAAIC,QAAb,UAChBH,EAAKkB,iBADW,aAChB,EAAgBxB,MAChB,cACAY,WACIa,EAAa9B,EAASa,IAAIC,QAAb,UACjBH,EAAKkB,iBADY,aACjB,EAAgBE,cAChB,cACAd,WACIe,EAAQhC,EAASa,IAAIC,QAAb,UACZH,EAAKkB,iBADO,aACZ,EAAgBI,gBAAgBhB,WAChC,cACAA,WACIiB,EAASlC,EAASa,IAAIC,QAAb,UACbH,EAAKkB,iBADQ,aACb,EAAgBM,QAAQlB,WACxB,cACAA,WACImB,EAAQpC,EAASa,IAAIC,QAAb,UACZH,EAAKkB,iBADO,aACZ,EAAgBQ,eAAepB,WAC/B,cACAA,WACIqB,EAAOtC,EAASa,IAAIC,QAAb,UACXH,EAAKkB,iBADM,aACX,EAAgBU,aAAatB,WAC7B,cACAA,WACIuB,EAAUxC,EAASa,IAAIC,QAAb,UACdH,EAAKkB,iBADS,aACd,EAAgBY,eAAexB,WAC/B,cACAA,WACIyB,EAAQ1C,EAASa,IAAIC,QAAb,UACZH,EAAKkB,iBADO,aACZ,EAAgBc,YAAY1B,WAC5B,cACAA,WACI2B,EAAW5C,EAASa,IAAIC,QAAb,UACfH,EAAKkB,iBADU,aACf,EAAgBgB,eAAe5B,WAC/B,cACAA,WACI6B,EAAQ9C,EAASa,IAAIC,QAAb,UACZH,EAAKkB,iBADO,aACZ,EAAgBkB,YAAY9B,WAC5B,cACAA,WACI+B,EAlEW,eAmEZrC,EAnEY,CAoEfkB,UAAU,eACLlB,EAAKkB,UADD,CAEPxB,MAAOuB,EACPG,cAAeD,EACfG,gBAAiBD,EACjBG,QAASD,EACTG,eAAgBD,EAChBG,aAAcD,EACdS,YAAaD,EACbL,eAAgBD,EAChBG,YAAaD,EACbG,eAAgBD,IAElB7B,aAAa,eACRJ,EAAKI,aADE,CAEVC,WAAYJ,EACZO,UAAWD,EACXG,cAAeD,EACfG,YAAaD,EACbG,SAAUD,EACVG,WAAYD,MAGhBpC,EAAe,OAAQ2D,KAAKC,UAAUF,IACtC1D,EACE,UACAU,EAASa,IAAIC,QAAQmC,KAAKC,UAAU5C,GAAW,cAAcW,a,kBAG1DP,EAASC,M,sEJjHWhC,aAAawE,QIsHxCC,OAAOC,SAASC,a,MCxHPC,EAAQ,SAAClD,EAAOC,EAAUC,GAAlB,OAA2B,SAACiD,GAE/C,OADAjD,EAAiB,wBAAVF,EAAkC,eAAiBE,EACnDkD,EAAYF,MAAMlD,EAAOC,EAAUC,GAAMmD,MAC9C,SAAC/C,GASC,OARA6C,EAAS,CACPG,KCNqB,gBDOrBC,QAAS,CACPC,KAAMlD,EACNmD,QAASxD,KAINyD,QAAQC,aAEjB,SAACC,GAEIA,EAAMvD,UACLuD,EAAMvD,SAASC,MACfsD,EAAMvD,SAASC,KAAKuD,SACtBD,EAAMC,SACND,EAAMhD,WAWR,OATAuC,EAAS,CACPG,KC1BkB,eDkCbI,QAAQI,c,8DElCRC,EAAgB,SCyChBC,EAAgB,KAWhBC,EAAO,OACPC,EAAO,OAGPC,EAAS,SC5ClBxE,GAAWC,EAAQ,IAEjBwE,G,YACJ,WAAYrF,GAAQ,IAAD,8BACjB,4CAAMA,KACDsF,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,MAAQ,CAAEC,YAAY,GAJV,E,iFAQjBrB,EAAYsB,W,2CAEOpB,GACN,UAATA,EACFP,OAAOC,SAAS2B,KAAO,yBACL,SAATrB,EACTP,OAAOC,SAAS2B,KAAO,4BACL,YAATrB,IACTP,OAAOC,SAAS2B,KAAO,4B,+BAIjB,IAAD,SACoC7F,KAAKC,MAAM6F,SAA9CC,EADD,EACCA,UAAWC,EADZ,EACYA,SAAUC,EADtB,EACsBA,UACzBD,EACF7F,EACE,WACAU,GAASa,IAAIC,QAAQ,QAAS,cAAcG,YAErCmE,EACT9F,EACE,WACAU,GAASa,IAAIC,QAAQ,SAAU,cAAcG,YAEtCiE,GACT5F,EACE,WACAU,GAASa,IAAIC,QAAQ,SAAU,cAAcG,YAGjD,IAAM0C,EAAOrE,EAAe,YACtB+F,EAAW1B,EACb3D,GAASa,IAAIyE,QAAQ3B,EAAM,cAAc1C,SAASjB,GAASuF,IAAIC,MAC/D,GArBG,EA8BHrG,KAAKC,MAAMyE,KAAKhC,UAPlBxB,EAvBK,EAuBLA,MACAgC,EAxBK,EAwBLA,eACAE,EAzBK,EAyBLA,aACAE,EA1BK,EA0BLA,eA1BK,KA2BLM,YA3BK,EA4BLJ,YA5BK,EA6BLE,eAEgC1D,KAAKC,MAAMyE,KAAK9C,cAC5C0E,EAhCC,EA+BCzE,WACkB,IAhCnB,EA+BaG,UAEduE,EAAkBD,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,GAC5DC,EAAWJ,EAAgBK,MAAM,KACjCC,EAAWF,EAASG,QAAQN,OAAO,GAAKG,EAASI,MAAMP,OAAO,GAEpE,OACE,oCACE,kBAAC,IAAD,CACEQ,YAAU,WACVrG,UAAU,OACVsG,UAAU,SACVC,QACE,kBAAC,IAAD,CAAMvG,UAAU,SAASwG,KAAK,QAAQC,UAAQ,GAC5C,kBAAC,IAAKC,KAAN,CAAW1G,UAAU,qBACnB,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,aAAa4F,GAC7B,0BAAM5F,UAAU,UAAUuF,KAG9B,kBAAC,IAAKmB,KAAN,KACE,yBAAK1G,UAAU,SACZO,EACD,6BAEA,uBAAG2E,KAAK,KDwBE,kBCrBbI,GAAa/C,EACZ,kBAAC,IAAKmE,KAAN,CAAWC,QAAS,kBAAM,EAAK7B,qBAAqB,WF7F9C,UEgGJ,KACHQ,GAAa7C,EACZ,kBAAC,IAAKiE,KAAN,CAAWC,QAAS,kBAAM,EAAK7B,qBAAqB,UFjG/C,SEoGH,KACHM,GAAazC,EACZ,kBAAC,IAAK+D,KAAN,CAAWC,QAAS,kBAAM,EAAK7B,qBAAqB,aFrG9C,UEwGJ,KACHM,GAAa3C,EACZ,kBAAC,IAAKiE,KAAN,CAAWC,QAAS,kBAAM,EAAK7B,qBAAqB,UF3G/C,SE8GH,KACHO,GAAY9C,EACX,kBAAC,IAAKmE,KAAN,CAAWC,QAAS,kBAAM,EAAK7B,qBAAqB,WFjH9C,UEoHJ,KACHO,GAAY1C,EACX,kBAAC,IAAK+D,KAAN,CAAWC,QAAS,kBAAM,EAAK7B,qBAAqB,aFpH9C,UEuHJ,KACJ,kBAAC,IAAD,CAAMrF,GAAG,mBACP,kBAAC,IAAKiH,KAAN,KDhFe,oBCkFjB,kBAAC,IAAKA,KAAN,CAAWC,QAAStH,KAAKuF,mBD5Bf,aC+BdgC,QAAQ,SAER,kBAAC,IAAD,CAAQ5G,UAAU,QAAQkG,GAC1B,0BAAMlG,UAAU,gCACd,0BAAMA,UAAU,aAAa4F,GAC7B,0BAAM5F,UAAU,UAAUuF,IAE5B,0BAAMvF,UAAU,gBACd,yBAAKH,IAAKgH,IAAY9G,IAAI,eAAeC,UAAU,wB,GA5HlCL,IAAMP,WA4IpB0H,mBAAWC,aAR1B,SAAyBhC,GAAQ,IAAD,EACDA,EAAMiC,KACnC,MAAO,CACLhC,WAH4B,EACtBA,WAGNjB,KAJ4B,EACVA,QAOIgD,CAAyBpC,KClJ/CzE,GAAWC,EAAQ,IAyDR4G,oBAVf,SAAyBhC,GAAQ,IAAD,EACQA,EAAMiC,KAE5C,MAAO,CACLhC,WAJ4B,EACtBA,WAINjB,KAL4B,EACVA,KAKlBC,QAN4B,EACJA,QAMxBI,QALkBW,EAAMX,QAAlBA,WAQK2C,EAxDQ,SAACzH,GAyBtB,OAxBA2H,qBAAU,WAAO,IACPvD,EAAapE,EAAboE,SACFG,EAAOrE,EAAe,YACtB+F,EAAW1B,EACb3D,GAASa,IAAIyE,QAAQ3B,EAAM,cAAc1C,SAASjB,GAASuF,IAAIC,MAC/D,GACAjF,EAAO,GACM,UAAb8E,EACF9E,EAAO,eACe,WAAb8E,EACT9E,EAAO,iBACe,WAAb8E,IACT9E,EAAO,kBAET,IAAMD,EAAWlB,EAAM0E,QAAQkD,SAAS,KACpC5H,EAAM0E,QAAQ+B,MAAM,GAAI,GACxBzG,EAAM0E,QAEVmD,aAAY,WACVC,QAAQC,IAAI,YACZ3D,EAASD,EAAMnE,EAAMyE,KAAKhC,UAAUxB,MAAOC,EAAUC,MACpD,QAIH,oCACE,kBAAC,IAAD,CAAK6G,KAAM,GAAIC,GAAI,GAAIC,GAAI,IACzB,yBACE3H,IAAKC,IACLC,IAAI,kBACJC,UAAU,oDAGd,kBAAC,IAAD,CACEsH,KAAM,EACNC,GAAI,EACJC,GAAI,GACJxH,UAAU,yCAEV,kBAAC,GAAD,CAAgBmF,SAAU7F,S,8BC9C1BmI,GAAUC,IAAVD,MAiJOE,G,2MApIb5C,MAAQ,CACN6C,WAAW,G,EAGbC,OAAS,WACP,EAAKC,SAAS,CACZF,WAAY,EAAK7C,MAAM6C,a,wEAIjB,IAAD,EACHG,EAAa,GAYjB,OAXA,UAAI1I,KAAKC,MAAMuB,YAAf,aAAI,EAAiB0C,YACflE,KAAKC,MAAMuB,KAAK0C,SAAS7D,SAASwH,SAAS,aAC7Ca,EAAa,IACJ1I,KAAKC,MAAMuB,KAAK0C,SAAS7D,SAASwH,SAAS,WACpDa,EAAa,IACJ1I,KAAKC,MAAMuB,KAAK0C,SAAS7D,SAASwH,SAAS,YACpDa,EAAa,IACJ1I,KAAKC,MAAMuB,KAAK0C,SAAS7D,SAASwH,SAAS,UACpDa,EAAa,MAIf,oCACGpI,IAAMqI,cACL3I,KAAK0F,MAAM6C,UAAYK,KAAkBC,KACzC,CACElI,UAAW,4BACX2G,QAAStH,KAAKwI,SAGlB,kBAACJ,GAAD,CACEzH,UACEX,KAAK0F,MAAM6C,UACP,mCACA,yCAENhB,QAAS,KACTuB,aAAW,EACXP,UAAWvI,KAAK0F,MAAM6C,WAEtB,kBAAC,KAAD,CAAMQ,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAACP,IACrD,kBAAC,KAAKrB,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,yBAInB,IACD,kBAAC,IAAD,CAAMP,GAAG,2BHlEC,aGoEZ,kBAAC,KAAKiH,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,0BAInB,IACD,kBAAC,IAAD,CAAMP,GAAG,4BH9EE,cGgFb,kBAAC,KAAKiH,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,sBAInB,IACD,kBAAC,IAAD,CAAMP,GAAG,yBH1FF,UG4FT,kBAAC,KAAKiH,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,2BAInB,IACD,kBAAC,IAAD,CAAMP,GAAG,0BHjFS,qBGmFpB,kBAAC,KAAKiH,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,0BHrGA,sBG2GtB,kBAAC,KAAK0G,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,qBH9Gd,QGoHR,kBAAC,KAAK0G,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,qBHvHd,SG8HV,yBAAKA,UAAU,WACb,uBAAGkF,KAAK,IAAIlF,UAAU,QH/Hd,QGkIR,uBAAGkF,KAAK,IAAIlF,UAAU,QHnId,e,GGQKL,IAAMP,WCZvBqI,I,OAAUC,IAAVD,OAqDOe,G,2MAhDbzD,MAAQ,CACN6C,WAAW,G,EAGbC,OAAS,WACP,EAAKC,SAAS,CACZF,WAAY,EAAK7C,MAAM6C,a,wEAKzB,OACE,oCACGjI,IAAMqI,cACL3I,KAAK0F,MAAM6C,UAAWK,KAAmBC,KACzC,CACElI,UAAW,4BACX2G,QAAStH,KAAKwI,SAGlB,kBAAC,GAAD,CACE7H,UACEX,KAAK0F,MAAM6C,UACP,kCACA,0CAENhB,QAAS,KACTuB,aAAW,EACXP,UAAWvI,KAAK0F,MAAM6C,WAEtB,kBAAC,KAAD,CAAMQ,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,MACrD,kBAAC,KAAK5B,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,2BAIpB,kBAAC,IAAD,CAAMP,GAAG,6BJuDa,gC,GI/FXE,IAAMP,WCiBhBqJ,GArBK,SAACnJ,GACnB,IAAMoJ,EAAUC,cACVC,EAAI,2BAAuBtJ,EAAMuJ,OAAO1G,iBAExC2G,EAAY,WAChBJ,EAAQK,KAAKH,IAGf,OACE,oCACGtJ,EAAM0J,QACL,uBAAGrC,QAASmC,GAAYxJ,EAAMuJ,OAAOlD,MACnCrG,EAAM4C,MACR,uBAAGyE,QAASmC,GAAYxJ,EAAMuJ,OAAOI,YAErC,2C,oBCYOC,I,OAzBIC,IAAXC,OAGN,kBAACC,GAAA,EAAD,CACEC,MAAO,CACLC,SAAU,GACVC,MAAO,aAKA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAAS5I,EAAmB,EAAnBA,KAAM6I,EAAa,EAAbA,OAC7B,OACE,yBAAKC,GAAG,kBACN,kBAAC,KAAD,CACEC,WAAY,CAAEC,SAAU,IACxBH,OAAQA,EACRD,QAASA,EACTK,WAAYjJ,EACZb,UAAU,U,SCdH+J,GAPC,SAAC,GAAY,IAAXnL,EAAU,EAAVA,MACd,OACE,oCACE,kBAAC,KAAD,CAAQiF,KAAK,WAAb,IAAyBjF,K,qBCLlB,SAASoL,KACtB,IAAMC,EAAmB9G,KAAK+G,MAAM1K,EAAe,SACnD,OAAIyK,GAAoBA,EAAiBlI,UAAUoI,OAAOC,OACjD,UAAYH,EAAiBlI,UAAUoI,OAAOC,OAE9C,G,uBCNEC,GAAa,aACbC,GAAY,YAKZC,GAAO,OACPC,GAAS,SACTC,GAAS,SAOTC,GAAS,SACTC,GAAU,UCVVC,GAAiB,kCAiBjBC,GAAc,wCACdC,GAAc,sCAQdC,GACX,wCAKWC,GACX,uDASWC,GAAoC,aACpCC,GACX,kCACWC,GACX,qDACWC,GACX,+CACWC,GACX,iEACWC,GAAkB,gDC1BvBlC,GAAWD,IAAXC,OAWAmC,IARN,kBAAClC,GAAA,EAAD,CACEC,MAAO,CACLC,SAAU,GACVC,MAAO,aAKO9B,IAAZ6D,SAoROC,G,YAjRb,WAAYlM,GAAQ,IAAD,8BACjB,4CAAMA,KA4CRmM,cAAgB,SAAC5C,EAAQ6C,GACvB,IAAMhK,EAAUmH,EAAOlH,SAASgK,WAAW,MAAO,KAClD,GAAI,IAAIC,KAAS,IAAIA,KAAKlK,GAAU,CAClC,IAAMb,EAAO,CACX8E,KAAMkD,EAAOlD,KACbsD,WAAYJ,EAAOI,WACnB9G,gBAAiB0G,EAAO1G,gBACxBN,WAAYgK,KAAOhD,EAAOhH,WAAW8J,WAAW,MAAO,MAAMG,OAC3D,cAEFnK,SAAUkK,KAAOnK,EAAQiK,WAAW,IAAK,MAAMG,OAAO,cACtDC,UAAmB,WAARL,EAAmB,EAAI,GAG9BtL,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IAAMuL,IAAIhM,EAAW,oBAAqBY,EAAMT,GAASwD,MAAK,WAC5DsI,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAOlD,KACPuF,KAEJ,EAAK5L,MAAMgN,0BAGbJ,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAOlD,KACPwF,MAtFW,EAwGnBoB,SAAW,SAAC3N,GAAW,IACbiC,EAAS,EAAKkE,MAAdlE,KACF2L,EAAW,EAAKC,SAAS5L,EAAMjC,GACrC,EAAKkJ,SAAS,CAAE4E,WAAYF,EAAUG,SAAU/N,KAxGhD,EAAKmG,MAAQ,CACXlE,KAAM,GACN8L,SAAU,GACVD,WAAY,IANG,E,iFAUE,IAAD,OACZE,EAAkBvN,KAAKC,MAAvBsN,cACO,OAAbA,QAAa,IAAbA,KAAeC,SAAQ,SAACC,GACtBA,EAAIjL,WAAagK,KAAOiB,EAAIjL,WAAY,cACrCkL,MACAC,QACAlB,OAAO,kBACVgB,EAAInL,SAAWkK,KAAOiB,EAAInL,SAAU,cACjCoL,MACAC,QACAlB,OAAO,qBAEZzM,KAAKyI,SAAS,CAAEjH,KAAM+L,IAAiB,WACrC,EAAKL,SAAS,S,uDAIeU,GAAY,IAAD,OACtC5N,KAAKC,MAAMsN,gBAAkBK,EAAUL,gBACzCK,EAAUL,cAAcC,SAAQ,SAACC,GAC/BA,EAAIjL,WAAagK,KAAOiB,EAAIjL,WAAY,cACrCkL,MACAC,QACAlB,OAAO,kBACVgB,EAAInL,SAAWkK,KAAOiB,EAAInL,SAAU,cACjCoL,MACAC,QACAlB,OAAO,qBAEZzM,KAAKyI,SAAS,CAAEjH,KAAMoM,EAAUL,gBAAiB,WAC/C,EAAKL,SAAS,EAAKxH,MAAM4H,gB,+BAmDtBO,EAAKC,GACZ,OAAKA,GAA2B,KAAdA,GAAkC,OAAdA,EAG/BD,EAAIE,QAAO,SAAUC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAU9O,GACrC,GAAwB,kBAAb2O,EAAI3O,GACb,OAAO2O,EAAI3O,GAAKoH,cAAcoB,SAASiG,EAAUrH,qBAL9CoH,I,+BAiBD,IAAD,OACDzD,EAAU,CACd,CACEgE,MF7IyB,oBE8IzBC,UAAW,GACXhP,IAAK,OACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SAAU,kBAAC,GAAD,CAAahF,OAAQA,EAAQG,SAAO,IAC9C1J,MAAO,CACL,aAAc,wBAKtB,CACEmO,MF1JuB,kBE2JvBC,UAAW,GACXhP,IAAK,aACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SAAU,kBAAC,GAAD,CAAahF,OAAQA,EAAQ3G,OAAK,IAC5C5C,MAAO,CACL,aAAc,sBAKtB,CACEmO,MFrKkB,aEsKlBC,UAAW,aACXhP,IAAK,aACLiP,MAAO,MACPC,OAAQ,SAAC/L,GACP,MAAO,CACLgM,SAAUhM,EACVvC,MAAO,CACL,aAAc,iBAKtB,CACEmO,MFlLgB,WEmLhBC,UAAW,WACXhP,IAAK,WACLiP,MAAO,MACPC,OAAQ,SAAC/L,GACP,MAAO,CACLgM,SAAUhM,EACVvC,MAAO,CACL,aAAc,eAKtB,CACEmO,MAAOhD,GACPiD,UAAW,GACXhP,IAAK,YACLiP,MAAO,MAEPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SACuB,IAArBhF,EAAOkD,UACL,yBACE/L,UAAU,0BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,YAE1C,0BAAM7I,UAAU,gBACfsE,GAGH,yBACEtE,UAAU,4BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,cZxO7B,aY6OnBvJ,MAAO,CACL,aAAc,aAKtB,CACEmO,MAAO9C,GACP+C,UAAW,GACXhP,IAAK,GACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,IAAMD,EAAI,wBAAoBC,EAAO1G,iBACrC,MAAO,CACL0L,SACE,kBAAC,IAAD,CAAMpO,GAAImJ,GACR,yBAAK/I,IAAKiO,KAAQ/N,IAAI,aAG1BT,MAAO,CACL,aAAc,eAMxB,OACE,oCACE,kBAAC,IAAD,CAAKU,UAAU,gBACb,kBAAC,GAAD,CAAgBqF,UAAQ,KAE1B,kBAAC,IAAD,CAAKrF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAASA,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,4BX9QW,kBWgRb,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,GAAIxH,UAAU,2BAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,EAAGxH,UAAU,cAC9B,kBAAC,GAAD,CACE+N,YX7PN,SW8PMxB,SAAUlN,KAAKkN,cAMvB,kBAAC,IAAD,CACEjF,KAAM,GACNE,GAAI,EACJxH,UAAU,iDAEV,kBAAC,IAAD,CAAMP,GAAG,mBACP,kBAACuO,GAAD,CAASpP,MXjRE,4BWsRnB,kBAAC,IAAD,CAAMqP,SAAU5O,KAAKC,MAAM4O,OAAQ1H,KAAK,SACtC,kBAAC,GAAD,CACE9H,IAAI,YACJgL,OAAO,aACPD,QAASA,EACT5I,KAAMxB,KAAK0F,MAAM2H,uB,GAtQF/M,IAAMP,W,oHCvB1B+O,GAnBI,SAAA7O,GAAU,IAAD,EACA8O,oBAAS,GADT,mBACnBC,EADmB,KACZC,EADY,KAElBT,EAA2BvO,EAA3BuO,SAAUU,EAAiBjP,EAAjBiP,MAAO3P,EAAUU,EAAVV,MAEnB4P,EACJH,GAAUzP,GAA0B,IAAjBA,EAAM6P,OAAgB,oBAAsB,QAEjE,OACE,yBACEzO,UAAU,cACV0O,OAAQ,kBAAMJ,GAAS,IACvBK,QAAS,kBAAML,GAAS,KAEvBT,EACD,2BAAO7N,UAAWwO,GAAaD,K,UChBxBK,GACX,iDACWC,GAAiB,gCACjBC,GAAc,sCACdC,GAAe,sCAKfC,GACX,4JAMWC,GACX,iFAEWC,GAAc,qBASdC,GACX,2DAIWC,GAAY,gCACZC,GACX,kFC0NaC,GA1OU,SAAC,GAYnB,IAXLC,EAWI,EAXJA,KACAC,EAUI,EAVJA,wBACAC,EASI,EATJA,sBACAC,EAQI,EARJA,sBACAC,EAOI,EAPJA,8BACAC,EAMI,EANJA,WACAC,EAKI,EALJA,aACAC,EAII,EAJJA,wBACAC,EAGI,EAHJA,sBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,qBACI,EACWC,KAAKC,UAAbC,EADH,sBAEuBhC,oBAAS,GAFhC,mBAEGjK,EAFH,KAEUkM,EAFV,KA0EIC,EAAgBC,KAAhBD,YACR,OACE,kBAAC,KAAD,CACEtQ,UAAU,gCACV2F,KAAK,iBACLyK,KAAMA,GAELjM,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASwK,GAAkB/K,KAAK,QAAQ2M,UAAQ,KAG3D,kBAAC,IAAD,CAAKlJ,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MLxGmB,oBKyGnB3P,MAAO4Q,EAAwBoB,kBAE/B,kBAAC,KAAKlK,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,oBACnC,kBAAC,IAAD,CACE3F,UAAU,gBACV2J,GAAG,mBACHkH,QAAQ,mBACRC,aAActB,EAAwBoB,iBACtChS,MAAO4Q,EAAwBoB,iBAC/BG,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCtC,OAAQ,SAACsC,GAAD,OAjGM,SAACA,GAC7B,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACGC,KACCV,EAAW,qBACX,CAAEgR,kBAAmBzB,EAAwBoB,kBAC7CxQ,GAEDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACNiP,EAAwBoB,EAAIrQ,KAAK,OA+EVsQ,IACfC,aAAa,MACbC,UAAW,KAEa,kBAAzBpB,GACCT,EAAwBoB,iBACrBU,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChCe,EAAwBoB,iBAAiBnC,OAAS,GAChD,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGM,gBAAxBvB,GACC,kBAAC,KAAD,CACE7L,QD7HlB,sFC8HkBP,KAAK,QACL2M,UAAQ,KAIbX,GACC,kBAAC,KAAKnJ,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASyK,GAAgBhL,KAAK,aAK7C,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MLjJiB,kBKkJjB3P,MAAO4Q,EAAwBiC,gBAE/B,kBAAC,KAAK/K,KAAN,CACE1G,UAAU,WACV2F,KAAK,iBACL+L,eAAe,WAEf,kBAAC,IAAD,CACE1R,UAAU,gBACV2J,GAAG,iBACHkH,QAAQ,iBACRC,aAActB,EAAwBiC,eACtC7S,MAAO4Q,EAAwBiC,eAC/BV,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCtC,OAAQ,SAACsC,GAAD,OAxHI,SAACA,GAC3B,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACGC,KACCV,EAAW,uBACX,CAAE0R,MAAOnC,EAAwBiC,gBACjCrR,GAEDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACNkP,EAAsBmB,EAAIrQ,KAAK,OAsGR+Q,IACfR,aAAa,MACbC,UAAW,KAEW,kBAAvBrB,GACCR,EAAwBiC,eACrBH,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChCe,EAAwBiC,eAAehD,OAAS,GAC9C,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGI,gBAAtBxB,GACC,kBAAC,KAAD,CACE5L,QDzKlB,oFC0KkBP,KAAK,QACL2M,UAAQ,KAIbZ,GACC,kBAAC,KAAKlJ,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASyK,GAAgBhL,KAAK,aAK7C,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAO9D,GAAQ7L,MAAO4Q,EAAwBqC,SACxD,kBAAC,KAAKnL,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,WACnC,oCACE,kBAAC,KAAD,CACE3F,UAAU,+BACVpB,MAAO4Q,EAAwBqC,QAC/BhB,QAAQ,UACRiB,SAAU,SAAClT,GAAD,OACR8Q,EAAsB9Q,EAAO,aAG/B,kBAACmT,OAAD,CAAQnT,MAAM,KAAK0F,GACnB,kBAACyN,OAAD,CAAQnT,MAAM,Kf3NH,kBeiOrB,kBAAC,IAAD,CAAK0I,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAOhE,GAAM3L,MAAM,QAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,6CACnB,kBAACsQ,EAAD,CACEtQ,UAAU,SACV2F,KAAK,SACL/G,MAAO4Q,EAAwBwC,OAC/BjB,SAAU,SAACkB,GAAD,OACRtC,EAA8BsC,EAAM,WAEtCC,aAvIK,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,eA8I3C,kBAAC,KAAKzL,KAAN,KACE,kBAAC,KAAD,CAAQ7C,KAAK,UAAUuO,SAAS,SAASzL,QApK3B,SAACqK,GACnBA,EAAEqB,iBAEA7C,EAAwBoB,kBACxBpB,EAAwBiC,gBACxBjC,EAAwBqC,SACxBrC,EAAwBwC,OAGG,kBAAzB/B,GACuB,kBAAvBD,IAEAK,GAAU,GACVd,KAGFc,GAAU,KAqJL7L,M,UCzCI8N,I,iNAvLbvN,MAAQ,CAAEwN,SAAS,EAAOC,MAAM,G,EAQhC1J,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,K,EAIbE,eAAiB,WACf,EAAK3K,SAAS,CACZyK,SAAS,EACTC,MAAM,K,EAIVE,WAAa,WACX,EAAK5K,SAAS,CACZ0K,MAAM,K,EAIVG,SAAW,WACT,EAAK7K,SAAS,CACZyK,SAAS,IAEP,EAAKjT,MAAMsT,WACT,EAAKtT,MAAMuT,QACb,EAAKvT,MAAMwT,aAAa,EAAKxT,MAAMyE,KAAKxD,OAExC,EAAKjB,MAAMwT,aAAa,EAAKxT,MAAMyE,KAAK3B,QAEjC,EAAK9C,MAAMyT,WACpB,EAAKzT,MAAMwT,aAAa,EAAKxT,MAAMwN,M,EAIvCkG,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,IAEP,EAAKjT,MAAMyT,WAAW,EAAKzT,MAAM0T,gB,mFA3CjC3T,KAAKC,MAAMyT,WACb1T,KAAKyJ,c,sCA6CQ,IACPJ,EAAYrJ,KAAKC,MAAjBoJ,QAEFtI,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IACGuS,OAAOhT,EAAW,WAAaZ,KAAKC,MAAM4T,UAAW9S,GACrDwD,MAAK,WACJ8E,EAAQK,KAAK,8BAEdoK,OAAM,SAAChP,S,+BAIV,OACE,oCACI9E,KAAKC,MAAMyT,WAAc1T,KAAKC,MAAMuB,KAAKuS,UAEvC/T,KAAKC,MAAMuB,KAAKuS,UAClB,uBAAGzM,QAAStH,KAAKyJ,WfpCL,UesCZ,qCAJA,kBAAC,KAAD,CAAQnC,QAAStH,KAAKoT,gBflCV,UeyCbpT,KAAKC,MAAMyT,UACV,kBAAC,KAAD,CACER,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAK2T,aACXM,SAAUjU,KAAKsT,SACfY,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,iBAEZ6F,Of5EgB,Se6EhBC,Wf1EqB,Ue4ErB,2BLjHV,2CKkHiD,IACrC,gCAAStU,KAAKC,MAAMwN,KAFtB,IAEqC,ILjH/C,kHKkHiD,IACrC,gCAASzN,KAAKC,MAAMwN,KAJtB,OAOCzN,KAAKC,MAAMyT,WACd1T,KAAKC,MAAMuT,SACXxT,KAAKC,MAAMsU,YAAYnF,OAAS,EAChC,kBAAC,KAAD,CACE8D,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,iBAEZ6F,OfhGkB,MeiGlBC,WfhGiB,MekGjB,2BACG/I,GADH,IACoBvL,KAAKC,MAAMyE,KAAK8P,UADpC,OAICxU,KAAKC,MAAMuT,SAAWxT,KAAKC,MAAMsT,WACpC,kBAAC,KAAD,CACEL,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,iBAEZ6F,OfpHkB,MeqHlBC,WfpHiB,MesHjB,2BACG/I,GADH,IACoBvL,KAAKC,MAAMyE,KAAK8P,UADpC,OAICxU,KAAKC,MAAMyT,WACd1T,KAAKC,MAAMuT,SACuB,IAAlCxT,KAAKC,MAAMsU,YAAYnF,OACvB,kBAAC,KAAD,CACE8D,QAASlT,KAAK0F,MAAMyN,KACpBa,KAAMhU,KAAKqT,WACXa,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,OAAQnP,GAER,2BL3KV,8CK8KQ,kBAAC,KAAD,CACEgO,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,iBAEZ6F,OAAQnP,EACRoP,Wf9JgB,UegKhB,2BAAI/I,U,GAhLUxL,c,qBCoEX2U,G,2MA7CbhP,MAAQ,CACNwN,SAAS,G,EASXyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIbyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIb0B,oBAAsB,SAAC1B,GACrB,EAAKzK,SAAS,CAAEyK,a,gGAnBetF,GAC3B5N,KAAKC,QAAU2N,GAAa5N,KAAK0F,MAAMwN,SACzClT,KAAK2U,S,+BAqBP,OACE,oCACE,kBAAC,IAAD,CACE1N,UAAU,SACVC,SArEOjH,EAqEUD,KAAKC,MApE9B,6BACE,4BACE,4BACG,IACAA,EAAMsT,WACLtT,EAAMuT,QACJ,kBAAC,KAAD,CAAQlM,QAAS,kBAAMrH,EAAM4U,eAAe5U,EAAMyE,KAAKxD,ShB6C/C,QgBzCR,kBAAC,KAAD,CAAQoG,QAAS,kBAAMrH,EAAM4U,eAAe5U,EAAMyE,KAAK3B,UhByC/C,QgBpCV,uBAAG8C,KAAK,IhBoCE,SgBhCd,4BACG5F,EAAMsT,WACL,kBAAC,GAAD,CACE7O,KAAMzE,EAAMyE,KACZ+O,aAAcxT,EAAMwT,aACpBc,YAAatU,EAAMsU,YACnBhB,YAAU,EACVC,QAASvT,EAAMuT,UAGjB,kBAAC,GAAD,CAAahS,KAAMvB,QAwCnBsH,QAAQ,QACR2L,QAASlT,KAAK0F,MAAMwN,QACpB4B,gBAAiB9U,KAAK4U,qBAEtB,0BAAMjU,UAAU,iBACd,yBAAKH,IAAKuU,KAAUrU,IAAI,UAAUC,UAAU,YA3ExC,IAACV,M,GAqCSK,IAAMP,WCsKjBiV,G,YAhMb,WAAY/U,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRmM,cAAgB,SAAC5C,EAAQ6C,GACvB,IAAM7K,EAAO,CACXK,WAAY2H,EAAOgL,UACnBxS,UAAWwH,EAAOyL,SAClB/T,MAAOsI,EAAOtI,MACd0B,cAAe4G,EAAO0L,OACtBxI,UAAmB,WAARL,EAAmB,EAAI,EAClC7J,WAAYgH,EAAO2L,MAAM,GACrB3I,KAAOhD,EAAO2L,MAAM,IAAI1I,OAAO,cAC/B,GACJnK,SAAUkH,EAAO2L,MAAM,GACnB3I,KAAOhD,EAAO2L,MAAM,IAAI1I,OAAO,cAC/B,GACJ3J,gBAAiB,EAAK7C,MAAMqS,OAGxBvR,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IAAMuL,IAAIhM,EAAW,cAAeY,EAAMT,GAASwD,MAAK,WACtDsI,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAOgL,UACP3I,KAEJ,EAAK5L,MAAMgN,sBApDb,EAAKvH,MAAQ,CACXlE,KAAM,IAHS,E,iFAOE,IACb+S,EAAgBvU,KAAKC,MAArBsU,YACNvU,KAAKyI,SAAS,CAAEjH,KAAM+S,M,uDAGS3G,GAE7B5N,KAAKC,MAAMsU,cAAgB3G,EAAU2G,aACrC3G,EAAU2G,YAAYnF,OAAS,GAE/BpP,KAAKyI,SAAS,CAAEjH,KAAMoM,EAAU2G,gB,+BAyC1B,IAAD,OACDnK,EAAU,CACd,CACEgE,MAAOpD,GACPqD,UAAW,YACXhP,IAAK,YACLiP,MAAO,MACPC,OAAQ,SAACiG,GACP,MAAO,CACLhG,SAAUgG,EACVvU,MAAO,CACL,aAAc,iBAKtB,CACEmO,MAAOnD,GACPoD,UAAW,WACXhP,IAAK,WACLiP,MAAO,MACPC,OAAQ,SAAC0G,GACP,MAAO,CACLzG,SAAUyG,EACVhV,MAAO,CACL,aAAc,gBAKtB,CACEmO,MAAOjD,GACPkD,UAAW,SACXhP,IAAK,SACLiP,MAAO,MACPC,OAAQ,SAAC2G,GACP,MAAO,CACL1G,SAAU0G,EAAOrN,SAAS,KAAOqN,EAAS,IAAMA,EAChDjV,MAAO,CACL,aAAc,aAKtB,CACEmO,MRpHa,QQqHbC,UAAW,QACXhP,IAAK,QACLiP,MAAO,MACPC,OAAQ,SAACrN,GACP,MAAO,CACLsN,SAAUtN,EACVjB,MAAO,CACL,aAAc,YAKtB,CACEmO,MAAOhD,GACPiD,UAAW,GACXhP,IAAK,UACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SACqB,IAAnBhF,EAAO4L,SAAoC,MAAnB5L,EAAO4L,QAC7B,yBACEzU,UAAU,0BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,YAE1C,0BAAM7I,UAAU,gBACfsE,GAGH,yBACEtE,UAAU,4BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,clBvJ7B,akB4JnBvJ,MAAO,CACL,aAAc,aAKtB,CACEmO,MAAO,GACPC,UAAW,GACXhP,IAAK,IACLiP,MAAO,KACPC,OAAQ,SAAC/E,GACP,OACE,kBAAC,GAAD,CACEqL,eAAgB,EAAK5U,MAAM4U,eAC3BpB,aAAc,EAAKxT,MAAMwT,aACzB/O,KAAM8E,EACN+K,YAAa,EAAKtU,MAAMsU,YACxBhB,YAAU,EACVC,QAAS,EAAKvT,MAAMuT,aAM9B,OACE,kBAAC,IAAD,CAAK7S,UAAU,sBAAsBqG,YAAU,iBAC5ChH,KAAKC,MAAMoV,YACV,kBAAC,IAAD,CAAK1U,UAAU,iDACb,kBAAC,KAAD,CACEA,UAAU,OACV6D,KAAK,YACL8C,QAAS,kBACP,EAAKrH,MAAMoV,YACP,EAAKpV,MAAMqV,wBACX,EAAKrV,MAAMsV,kBjBhKA,oBiBsKnB,KACJ,kBAAC,GAAD,CACElL,OAAO,oBACPD,QAASA,EACT5I,KAAMxB,KAAK0F,MAAMlE,Y,GA1LClB,IAAMP,W,8BCmXnByV,GAjXU,SAAC,GAoBnB,IAAD,QAnBJtF,EAmBI,EAnBJA,KACAuF,EAkBI,EAlBJA,KACAC,EAiBI,EAjBJA,wBACAC,EAgBI,EAhBJA,sBACAC,EAeI,EAfJA,sBACAC,EAcI,EAdJA,aACAC,EAaI,EAbJA,8BACAC,EAYI,EAZJA,QACAxB,EAWI,EAXJA,YACAyB,EAUI,EAVJA,gBACAV,EASI,EATJA,sBACAW,EAQI,EARJA,iBACAC,EAOI,EAPJA,uBACAC,EAMI,EANJA,cACAC,EAKI,EALJA,eACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WACI,EACuBzH,oBAAS,GADhC,mBACGjK,EADH,KACUkM,EADV,OAEqDjC,oBAAS,GAF9D,mBAEG0H,EAFH,KAEyBC,EAFzB,OAGuD3H,oBAAS,GAHhE,mBAGG4H,EAHH,KAG0BC,EAH1B,OAI2D7H,oBAC7D,GALE,mBAIG8H,EAJH,KAI4BC,EAJ5B,KAQJlP,qBAAU,YACJoO,GAAmBA,KACrBhF,GAAU,GACV0F,GAAyB,GACzBE,GAA0B,GAC1BE,GAA4B,MAE7B,CAACd,EAAiBC,IAErB,IAAMc,EAAc,SAACpF,GACnBA,EAAEqB,iBACFyC,KAQIF,EAAgB,SAAC/Q,GAEnBkR,EAAwBlB,WACxBkB,EAAwBT,UACxBS,EAAwBN,SACxBM,EAAwBR,QACxBQ,EAAwBsB,QACxBtB,EAAwBxU,OAExB8P,GAAU,GAEPyF,GACAE,GACAE,GAEDd,EAAQvR,IAGVwM,GAAU,IAgENC,EAAgBC,KAAhBD,YAER,OAA8B,IAAvBsD,EAAYnF,QAAgB4G,GAAmBC,EACpD,kBAAC,KAAD,CAAMtV,UAAU,gCAAgC2F,KAAK,kBAClDxB,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASwK,GAAkB/K,KAAK,QAAQ2M,UAAQ,KAG3D,kBAAC,IAAD,CAAKlJ,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAOlE,GACPzL,MAAOmW,EAAwBlB,WAE/B,kBAAC,KAAKnN,KAAN,CAAWf,KAAK,YAAY3F,UAAU,YACpC,kBAAC,IAAD,CACE2J,GAAG,YACH3J,UAAU,gBACV8Q,aAAciE,EAAwBlB,UACtChD,QAAQ,YACRjS,MAAOmW,EAAwBlB,UAC/B9C,SAAU,SAACC,GAAD,OAAOgE,EAAsBhE,IACvCI,aAAa,MACbC,UAAW,MAGduE,GACC,kBAAC,KAAKlP,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASyK,GAAgBhL,KAAK,aAK7C,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAOjE,GACP1L,MAAOmW,EAAwBT,UAE/B,kBAAC,KAAK5N,KAAN,CAAWf,KAAK,WAAW3F,UAAU,YACnC,kBAAC,KAAD,GACEA,UAAU,gBACV2J,GAAG,WACHkH,QAAQ,YAHV,2BAIY,YAJZ,8BAKgBkE,EAAwBT,UALxC,uBAMSS,EAAwBT,UANjC,2BAOY,SAACtD,GAAD,OAAOgE,EAAsBhE,MAPzC,8BAQe,OARf,2BASa,IATb,KAYD6E,GACC,kBAAC,KAAKnP,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASyK,GAAgBhL,KAAK,aAiC7C,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MTxOH,QSwOiB3P,MAAOmW,EAAwBxU,OACvD,kBAAC,KAAKmG,KAAN,CAAWf,KAAK,QAAQ3F,UAAU,YAChC,kBAAC,KAAD,GACEA,UAAU,gBACV2J,GAAG,QACHkH,QAAQ,SAHV,2BAIY,YAJZ,8BAKgBkE,EAAwBxU,OALxC,uBAMSwU,EAAwBxU,OANjC,2BAOY,SAACyQ,GAAD,OAAOgE,EAAsBhE,MAPzC,yBAQU,SAACA,GAAD,OA7HK,SAACA,IACnB,eACDsF,KAAKtF,EAAEuF,OAAO3X,QAAUoS,EAAEuF,OAAO3X,MAAM6P,OAAS,EACtDsH,GAAyB,GAEzBA,GAAyB,GAwHES,CAAqBxF,MARtC,8BASe,OATf,IAWC8E,GACC,kBAAC,KAAD,CAAO1R,QAAS0K,GAAajL,KAAK,QAAQ2M,UAAQ,OAK1D,kBAAC,IAAD,CAAKlJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAOhE,GAAM3L,MAAM,QAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,6CACnB,kBAACsQ,GAAD,GACEtQ,UAAU,YACV2F,KAAK,UAFP,2BAGY,YAHZ,uBAISoP,EAAwBsB,QAJjC,2BAKY,SAACpE,GAAD,OACRkD,EAA8BlD,EAAM,aANxC,+BArJO,SAACjO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,UAoJjC,OAaN,kBAAC,IAAD,CAAK7K,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAO9D,GAAQ7L,MAAOmW,EAAwBN,SACxD,kBAAC,KAAK/N,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,WACnC,oCACE,kBAAC,MAAD,GACE3F,UAAU,8BACVpB,MAAOmW,EAAwBN,QAC/B5D,QAAQ,WAHV,2BAIY,YAJZ,2BAKY,SAACjS,GAAD,OACRqW,EAAsBrW,EAAO,cANjC,GASE,kBAACmT,OAAD,CAAQnT,MAAM,KAAK0F,GACnB,kBAACyN,OAAD,CAAQnT,MAAM,KnB5RH,kBmBkSrB,kBAAC,IAAD,CAAK0I,KAAM,GAAIC,GAAI,EAAGvH,UAAU,0BAC9B,kBAAC,GAAD,CAAYuO,MAAM,SAAS3P,MAAOmW,EAAwBR,QACxD,kBAAC,KAAK7N,KAAN,CAAWf,KAAK,SAAS3F,UAAU,YACjC,kBAAC,KAAD,CACEyW,QAAS,KACT9M,GAAG,SACHkH,QAAQ,SACRjS,MAAOmW,EAAwBR,OAC/BxD,SAAUmE,EACVxG,OA1KO,WACjBqG,EAAwBR,OAAO9F,OAAS,GAC1CwH,GAA0B,GAE1BA,GAA0B,IAuKd7E,aAAa,QAEd4E,GACC,kBAAC,KAAD,CAAO5R,QAAS2K,GAAclL,KAAK,QAAQ2M,UAAQ,SAO/D,kBAAC,KAAK9J,KAAN,KACE,yBAAK1G,UAAU,qBACZqV,EACC,oCACE,kBAAC,KAAD,CACErV,UAAU,OACV6D,KAAK,YACL8C,QAAS,kBAAM6O,MAEd/Q,GAEH,kBAAC,KAAD,CACEZ,KAAK,UACL8C,QAAS,kBAAMiO,EAAc,sBlBrSrB,akB0SVU,EACF,oCACE,kBAAC,KAAD,CACEtV,UAAU,OACV6D,KAAK,YACL8C,QAAS,kBAAM8O,MAEdhR,GAEH,kBAAC,KAAD,CAAQZ,KAAK,UAAU8C,QAAS,WA3PrB,IAAC9C,EAEpBkR,EAAwBlB,WACxBkB,EAAwBT,UACxBS,EAAwBN,SACxBM,EAAwBR,QACxBQ,EAAwBsB,QACxBtB,EAAwBxU,OAExB8P,GAAU,GAEPyF,GACAE,GACAE,GAEDR,EAAS7R,IAGXwM,GAAU,KlBlDM,WkB+RR,OAGR,kBAAC,KAAK3J,KAAN,KACG2O,GAAmBC,EAAmB,KACrC,kBAAC,KAAD,CAAQtV,UAAU,OAAO6D,KAAK,YAAY8C,QAASyP,GAChD3R,GAGJ4Q,GAAmBC,EAAmB,KACrC,kBAAC,KAAD,CACEzR,KAAK,UACLuO,SAAS,SACTzL,QAAS,kBAAMiO,EAAc,aAE5BpQ,KAMT,oCACE,kBAAC,GAAD,CACEoP,YAAaA,EACbe,sBAAuBA,EACvBD,aAAW,EACXR,eA/PiB,SAACwC,GACtBnB,EAAuBmB,EAAQ,eA+P3B5D,aA5Pe,SAAC4D,GACpBf,EAAWe,EAAQ,iBA6PjB,kBAAC,KAAD,KACE,kBAAC,KAAKhQ,KAAN,KACE,yBAAK1G,UAAU,qBACb,kBAAC,KAAD,CAAQA,UAAU,OAAO6D,KAAK,YAAY8C,QAASyP,GAChD3R,GAEH,kBAAC,KAAD,CAAQZ,KAAK,UAAUuO,SAAS,SAASzL,QA7T/B,SAACqK,GACnBA,EAAEqB,iBACF9C,MA4TW/K,QCnIAmS,GAxNY,SAAC,GAerB,IAAD,EAdJ7B,EAcI,EAdJA,KACA5G,EAaI,EAbJA,OACA0I,EAYI,EAZJA,SACAjE,EAWI,EAXJA,SACAK,EAUI,EAVJA,aACAxD,EASI,EATJA,wBACAC,EAQI,EARJA,sBACAC,EAOI,EAPJA,sBACAC,EAMI,EANJA,8BACAkH,EAKI,EALJA,sBACAjD,EAII,EAJJA,YACA2B,EAGI,EAHJA,uBACAI,EAEI,EAFJA,WACAmB,EACI,EADJA,2BACI,EACW5G,KAAKC,UAAbC,EADH,oBAEIE,EAAgBC,KAAhBD,YAFJ,EAGuBlC,oBAAS,GAHhC,mBAGGjK,EAHH,KAGUkM,EAHV,KAqCJ,OACE,oCACE,wBAAIrQ,UAAU,anB5EgB,wBmB6E9B,yBAAKA,UAAU,4BACb,kBAAC,IAAD,eAASwP,EAAwBoB,wBAAjC,aAAS,EAA0C/K,OAAO,IAC1D,0BAAM7F,UAAU,WACbwP,EAAwBoB,mBAG7B,kBAAC,KAAD,CACE5Q,UAAU,gCACV2F,KAAK,iBACLyK,KAAMA,GAELjM,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASwK,GAAkB/K,KAAK,QAAQ2M,UAAQ,KAG3D,kBAAC,IAAD,CAAKlJ,KAAM,IACT,kBAAC,KAAD,CACEiL,QAASqE,EACTvD,KAAMV,EACNW,SAAUN,EACVO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,OAAQnP,GAEP,IACD,2BNzFV,8DMyF6C,KAErC,kBAAC,IAAD,CAAKkM,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MVxGiB,oBUyGjB3P,MAAO4Q,EAAwBoB,kBAE/B,kBAAC,KAAKlK,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,oBACnC,kBAAC,IAAD,CACE3F,UAAU,gBACV6Q,QAAQ,mBACRlH,GAAG,mBACHmH,aAActB,EAAwBoB,iBACtCG,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCpS,MAAO4Q,EAAwBoB,iBAC/BQ,aAAa,MACb2F,UAAQ,OAKhB,kBAAC,IAAD,CAAKzP,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MV1He,kBU2Hf3P,MAAO4Q,EAAwBiC,gBAE/B,kBAAC,KAAK/K,KAAN,CACE1G,UAAU,WACV2F,KAAK,iBACL+L,eAAe,WAEf,kBAAC,IAAD,CACE1R,UAAU,gBACV6Q,QAAQ,iBACRlH,GAAG,iBACHmH,aAActB,EAAwBiC,eACtCV,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCpS,MAAO4Q,EAAwBiC,eAC/BL,aAAa,MACb2F,UAAQ,OAKhB,kBAAC,IAAD,CAAKzP,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAO9D,GACP7L,MAAO4Q,EAAwBqC,SAE/B,kBAAC,KAAKnL,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,WACnC,oCACE,kBAAC,KAAD,CACE3F,UAAU,+BACVpB,MAAO4Q,EAAwBqC,QAC/BhB,QAAQ,UACRiB,SAAU,SAAClT,GAAD,OACR8Q,EAAsB9Q,EAAO,YAE/BmY,UAAQ,GAER,kBAAChF,OAAD,CAAQnT,MAAM,KAAK0F,GACnB,kBAACyN,OAAD,CAAQnT,MAAM,KpBjLL,kBoBuLnB,kBAAC,IAAD,CAAK0I,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAOhE,GAAM3L,MAAM,QAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,6CACnB,kBAACsQ,EAAD,CACEtQ,UAAU,SACV2F,KAAK,SACLmL,aAActB,EAAwBwC,OACtCpT,MAAO4Q,EAAwBwC,OAC/BjB,SAAU,SAACkB,GAAD,OACRtC,EAA8BsC,EAAM,WAEtCC,aAjJG,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QAiJ7B4E,UAAQ,SAOpB,kBAAC,KAAD,CAAS/W,UAAU,UACnB,kBAAC,IAAD,CAAMiO,SAAUC,EAAQ1H,KAAK,SAC3B,kBAAC,IAAD,CACEc,KAAM,GACNtH,UAAU,qDAEV,wBAAIA,UAAU,anBnJU,wBmBoJxB,6BACG,IACD,kBAAC,KAAD,CACEA,UAAU,OACV6D,KAAK,YACL8C,QAAS,kBAAMmQ,MnBvLA,qBmB6LrB,kBAAC,IAAD,CAAKxP,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,GAAD,CACEoM,YAAaA,EACbM,eAtJS,SAACwC,GACtBnB,EAAuBmB,EAAQ,iBAsJnB5D,aAnJO,SAAC4D,GACpBf,EAAWe,EAAQ,iBAmJPM,eAAa,MAInB,kBAAC,KAAKtQ,KAAN,KACE,yBAAK1G,UAAU,qBACb,kBAAC,KAAD,CAAQA,UAAU,OAAO6D,KAAK,YAAY8C,QAnKhC,SAACqK,GACrBA,EAAEqB,iBACFyC,MAkKarQ,GAEH,kBAAC,KAAD,CAAQZ,KAAK,UAAUuO,SAAS,SAASzL,QAtLtC,SAACqK,GACdA,EAAEqB,iBAEAuB,GACApE,EAAwBoB,kBACxBpB,EAAwBiC,gBACxBjC,EAAwBqC,SACxBrC,EAAwBwC,QAExB3B,GAAU,GACVwG,KAEAxG,GAAU,KnBNa,2BoBtCrB9E,GAAY7D,IAAZ6D,QAEA0L,GAASC,KAATD,KAEFE,GAAQ,CACZ,CACE1J,MpBnBgC,uBoBoBhClH,QAAS,iBAEX,CACEkH,MpB8BgC,uBoB7BhClH,QAAS,kBAEX,CACEkH,MpBsCqC,kBoBrCrClH,QAAS,iBA4XE6Q,GAxXU,WAAO,IAAD,EACChJ,mBAAS,GADV,mBACtBpK,EADsB,KACbqT,EADa,OAEDjJ,oBAAS,GAFR,mBAEtBF,EAFsB,KAEdoJ,EAFc,OAGGlJ,oBAAS,GAHZ,mBAGtBwI,EAHsB,KAGZW,EAHY,OAIyBnJ,mBAAS,CAC7DwC,iBAAkB,GAClBa,eAAgB,GAChBI,QAAS,GACTG,OAAQ,KARmB,mBAItBwF,EAJsB,KAIDC,EAJC,OAUoBrJ,mBAAS,IAV7B,mBAUtB6B,EAVsB,KAUAyH,EAVA,OAWgBtJ,mBAAS,IAXzB,mBAWtB4B,EAXsB,KAWF2H,EAXE,OAYyBvJ,mBAAS,CAC7DyF,UAAW,GACXS,SAAU,GACVlS,OAAQ,GACRqS,QAAS,GACTlU,MAAO,GAEP8V,OAAQ,GACR9B,OAAQ,KApBmB,mBAYtBqD,EAZsB,KAYDC,EAZC,OAsBSzJ,mBAAS,IAtBlB,mBAsBtBwF,EAtBsB,KAsBTkE,EAtBS,OAuBiB1J,oBAAS,GAvB1B,mBAuBtBiH,EAvBsB,KAuBL0C,EAvBK,OAwBmB3J,oBAAS,GAxB5B,mBAwBtBkH,EAxBsB,KAwBJ0C,EAxBI,OAyBW5J,oBAAS,GAzBpB,mBAyBtByB,EAzBsB,KAyBRoI,EAzBQ,QA0BO7J,oBAAS,GA1BhB,qBA0BtBwB,GA1BsB,MA0BVsI,GA1BU,SA2BO9J,oBAAS,GA3BhB,qBA2BtBwH,GA3BsB,MA2BVuC,GA3BU,SA4BO/J,oBAAS,GA5BhB,qBA4BtByH,GA5BsB,MA4BVuC,GA5BU,MA8BvB7I,GAAO,WACXwI,GAAmB,GACnBC,GAAoB,GACpBX,EAAWrT,EAAU,IAGjB8Q,GAAO,WACXiD,GAAmB,GACnBC,GAAoB,GACpBX,EAAWrT,EAAU,IAyCjB2R,GAAa,SAACe,EAAQ7S,GAC1B,IAAIwU,EAAa,OAAGzE,QAAH,IAAGA,OAAH,EAAGA,EAAaxG,QAAO,SAACrJ,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM3B,UAAWsU,KACnEoB,EAAeO,GACc,IAAzBA,EAAc5J,SAChBoJ,EAAuB,CACrBhE,UAAW,GACXS,SAAU,GACVlS,OAAQ,GACRqS,QAAS,GACTlU,MAAO,GAEP8V,OAAQ,GACR9B,OAAQ,KAEG,iBAAT1Q,GACFwT,EAAWrT,EAAU,KAKrB2Q,GAAwB,WAC5BoD,GAAmB,GACnBI,IAAc,GACdC,IAAc,GACdP,EAAuB,CACrBhE,UAAW,GACXS,SAAU,GACVlS,OAAQ,GACRqS,QAAS,GACTlU,MAAO,GAEP8V,OAAQ,GACR9B,OAAQ,MAINgB,GAAyB,SAACmB,EAAQ7S,GACzB,iBAATA,GACFwT,EAAWrT,EAAU,GAEvBmU,IAAc,GACdC,IAAc,GACdJ,GAAoB,GACpB,IAAIM,EAAe,GACnB1E,EAAY/G,SAAQ,SAAC+F,GACfA,EAAWxQ,SAAWsU,IACxB4B,EAAe1F,MAGnBiF,EAAuBS,IAmBnB7I,GAAwB,SAACuB,GACT,mBAAhBA,EAAEuF,OAAO5M,IAAqD,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OACrDyJ,IAAc,GAEE,qBAAhBlH,EAAEuF,OAAO5M,IACiB,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OAEfwJ,GAAgB,IAEhBA,GAAgB,GAChBC,IAAc,IAEhBT,EAAuB,eAClBD,EADiB,gBAEnBxG,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAItB8Q,GAAwB,SAAC9Q,EAAO+G,GACpC8R,EAAuB,eAAKD,EAAN,gBAA4B7R,EAAO/G,MAGrD+Q,GAAgC,SAACsC,EAAMtM,GAC3C8R,EAAuB,eAAKD,EAAN,gBAA4B7R,EAAOsM,MAGrD+C,GAAwB,SAAChE,GACT,cAAhBA,EAAEuF,OAAO5M,IAAgD,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OAChD0J,IAAc,GACW,aAAhBnH,EAAEuF,OAAO5M,IAA+C,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OACtD2J,IAAc,IAEdD,IAAc,GACdC,IAAc,IAEhBP,EAAuB,eAClBD,EADiB,gBAEnB5G,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAWtBqW,GAAwB,SAACrW,EAAO+G,GACpCkS,EAAuB,eAAKD,EAAN,gBAA4BjS,EAAO/G,MAGrDuW,GAAgC,SAAClD,EAAMtM,GAC3CkS,EAAuB,eAAKD,EAAN,gBAA4BjS,EAAOsM,MA2D3D,OACE,kBAAC,IAAMsG,SAAP,KACE,kBAAC,IAAMA,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBqF,UAAQ,KAE1B,kBAAC,IAAD,CAAKrF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAASA,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,6BACV,kBAAC,KAAWiH,KAAZ,KpBvTO,kBoByTT,kBAAC,KAAWA,KAAZ,KpBvSe,yBoB0SnB,kBAAC,IAAD,CAAK1G,UAAU,QACb,wBAAIA,UAAU,QpB3SG,wBoB6SnB,kBAAC,KAAD,CAAOA,UAAU,OAAOgE,QAASA,GAC9BmT,GAAMsB,KAAI,SAACC,GAAD,OACT,kBAACzB,GAAD,CAAMvY,IAAKga,EAAKjL,MAAOA,MAAOiL,EAAKjL,YAGvC,yBAAKzN,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,yBAAKtH,UAAU,0BACD,GAAXgE,EACC,kBAAC,GAAD,CACEuL,KAAMA,GACNC,wBAAyBgI,EACzB/H,sBAAuBA,GACvBC,sBAAuBA,GACvBC,8BACEA,GAEFE,aAAcA,EACdD,WAAYA,GACZE,wBAnKM,SAAClR,GAC/B8Y,EAAiB9Y,IAmKOqR,qBAAsBA,EACtBF,sBAjKI,SAACnR,GAC7B+Y,EAAe/Y,IAiKSoR,mBAAoBA,IAET,GAAXhM,EACF,kBAAC,GAAD,CACEuL,KAAMA,GACNuF,KAAMA,GACNC,wBAAyB6C,EACzB5C,sBAAuBA,GACvBC,sBAAuBA,GACvBE,8BACEA,GAEFD,aAjIL,SAACX,GACpBsD,EAAuB,eAClBD,EADiB,CAEpBrD,OAAQA,MA+Hca,QArRV,SAACvR,GACF,YAATA,GACFwT,EAAWrT,EAAU,GAEvB,IAAM0S,EAASiC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAC3CC,EAAS,eAAQlB,EAAR,CAA6BxV,OAAQsU,IACpDoB,EAAe,GAAD,oBAAKlE,GAAL,CAAkBkF,KAChCf,GAAmB,IA+QKrC,SA5QT,WACf9B,EAAY/G,SAAQ,SAAC9I,GACnB,GACEZ,KAAKC,UAAUW,KAAUZ,KAAKC,UAAUwU,IACxC7T,EAAK3B,SAAWwV,EAAoBxV,OACpC,CACA,IAAI2W,EAAQnF,EAAYoF,QAAQjV,GAC5BkV,EAAQ9V,KAAK+G,MAAM/G,KAAKC,UAAUwQ,IACtCqF,EAAMF,GAASnB,EACfE,EAAemB,OAGnBjB,GAAoB,IAiQIrC,WAAYA,GACZ/B,YAAaA,EACbyB,gBAAiBA,EACjBV,sBAAuBA,GACvBW,iBAAkBA,EAClBC,uBAAwBA,GACxBC,cAnMJ,WACpBuC,GAAmB,IAmMKtC,eAhMH,WACrBuC,GAAoB,IAgMIpC,WAAYA,GACZC,WAAYA,KAED,GAAX7R,EACF,kBAAC,GAAD,CACE8Q,KAAMA,GACN+B,sBAnIC,WACzBS,GAAU,GACV,IAAM4B,EAAQlP,KACVmP,EAAmB,GACvBvF,EAAY6E,KAAI,SAAC7Z,GACf,IAAImF,EAAO,CACT7C,WAAYtC,EAAMiV,UAClBxS,UAAWzC,EAAM0V,SACjB/T,MAAO3B,EAAM2B,MAEbwL,UAAWqN,SAASxa,EAAM6V,SAC1B5S,WAAYjD,EAAMyX,OAAO,GACrBxK,KAAOjN,EAAMyX,OAAO,IAAIvK,OAAO,cAC/B,GACJnK,SAAU/C,EAAMyX,OAAO,GACnBxK,KAAOjN,EAAMyX,OAAO,IAAIvK,OAAO,cAC/B,GACJ7J,cAAe,IAAMrD,EAAM2V,OAC3BxR,eAAgB,GAElBoW,EAAiBpQ,KAAKhF,MAExB,IAAMlD,EAAO,CACXwY,aAAc,CACZ1T,KAAM6R,EAAoB5G,iBAC1B3H,WAAYuO,EAAoB/F,eAChC1F,UAAWqN,SAAS5B,EAAoB3F,SACxChQ,WAAY2V,EAAoBxF,OAAO,GACnCnG,KAAO2L,EAAoBxF,OAAO,IAAIlG,OAAO,cAC7C,GACJnK,SAAU6V,EAAoBxF,OAAO,GACjCnG,KAAO2L,EAAoBxF,OAAO,IAAIlG,OAAO,cAC7C,IAENwN,aAAcH,GAEV/Y,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGpBI,IACGC,KAAKV,EAAW,oBAAqBY,EAAMT,GAC3CwD,MAAK,WACJ0T,GAAU,GACVhU,OAAOC,SAAW,+BAEnB4P,OAAM,SAAChP,GACFA,EAAMC,QAAQ8C,SAAS,QACzBqQ,GAAY,OAiFM/H,wBAAyBgI,EACzBzC,wBAAyB6C,EACzBnI,sBAAuBA,GACvBC,sBAAuBA,GACvBC,8BACEA,GAEFqF,sBAAuBA,GACvBC,sBAAuBA,GACvBE,8BACEA,GAEFvB,YAAaA,EACb0B,iBAAkBA,EAClBK,WAAYA,GACZJ,uBAAwBA,GACxBuB,2BA7RS,WACjCO,EAAWrT,EAAU,GACrB2Q,MA8RwBhC,SA3RT,WACfrP,OAAOC,SAAW,6BA2RMyP,aAxRL,WACnB1P,OAAOC,SAAW,6BAwRM2K,OAAQA,EACR0I,SAAUA,IAGZ,gDCzYlBrL,GAAY7D,IAAZ6D,QA+DOgO,GA7DG,WAAO,IAAD,EACc5Z,IAAMyO,UAAS,GAD7B,mBACfoL,EADe,KACHC,EADG,KAMtB,OACE,kBAAC,IAAMlB,SAAP,MACmB,KAAfiB,EACA,kBAAC,IAAMjB,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBqF,UAAQ,KAE1B,kBAAC,IAAD,CAAKrF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAASA,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,QrBuEE,yBqBrElB,yBAAKA,UAAU,gEACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,yBAAKtH,UAAU,iBACb,yBACEH,IAAK6Z,KACL3Z,IAAI,sBACJC,UAAU,UAGd,uBAAGA,UAAU,oBXfnC,sDWkBsB,kBAAC,IAAD,CAAKA,UAAU,iCACb,kBAAC,KAAD,CAASA,UAAU,UAErB,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,oDAEV,kBAAC,KAAD,CAAQ2G,QAvChB,WACd8S,GAAc,IAsCkC5V,KAAK,WrB9BtB,gCqB2C3B,kBAAC,GAAD,QC7DJ3D,GAAWC,EAAQ,IAGjBC,GAAU,CACdC,QAAS,CACP2L,cAJUhC,KAKV1J,OAAQ,+BACR,eAAgB,mCA4CL,O,gGAvCX,IAAMqZ,EAAaxW,KAAK+G,MAAM1K,EAAe,SAC7C,GAAIma,GAAcA,EAAW5X,UAAUI,gBAAiB,CACtD,IAAMD,EAAQhC,GAASa,IAAIyE,QACzBmU,EAAW5X,UAAUI,gBACrB,cACAhB,SAASjB,GAASuF,IAAIC,MACxB,OAAO0T,SAASlX,GAEhB,MAAO,K,4CAIT,OAAOxB,IAAM3B,IAAIkB,EAAW,mBAAoBG,M,qCAIhD,IAAMqR,EAAiBpS,KAAK6C,QAC5B,OAAOxB,IAAM3B,IACXkB,EAAW,gBAAkBwR,EAAiB,IAC9CrR,M,oCAKF,OAAOM,IAAM3B,IAAIkB,EAAW,WAAYG,M,qCAIxC,OAAOM,IAAM3B,IAAIkB,EAAW,YAAaG,M,iCAGzC,OAAOM,IAAM3B,IAAIkB,EAAW,QAASG,M,wCAGrBwZ,GAChB,OAAOlZ,IAAM3B,IAAIkB,EAAW,wBAA0B2Z,EAAWxZ,Q,MCLtD2G,oBAPf,SAAyBhC,GAEvB,MAAO,CACL8U,cAFwB9U,EAAM+U,UAAxBD,iBAMK9S,EAzCe,SAACzH,GAAW,IAAD,EACG8O,oBAAS,GADZ,mBAChC3C,EADgC,KACjBsO,EADiB,OAEX3L,oBAAS,GAFE,mBAEhCF,EAFgC,KAExBoJ,EAFwB,KAIvCrQ,qBAAU,YAERvD,EADqBpE,EAAboE,WCH2B,SAACA,GAChC,OAAOsW,GAAYC,sBAAsBrW,MAAK,SAAC/C,GAK3C,OAJA6C,EAAS,CACLG,K1BNiB,oB0BOjBC,QAAQ,CAAC+V,cAAchZ,EAAKA,QAEzBoD,QAAQC,aAEnB,SAACC,GACG,IAAMC,EACLD,EAAMvD,UACHuD,EAAMvD,SAASC,MAAQsD,EAAMvD,SAASC,KAAKuD,SAC3CD,EAAMC,SACND,EAAMhD,WASV,OARAuC,EAAS,CACLG,K1BjBc,mB0BoBlBH,EAAS,CACLG,K1BxBW,c0ByBXC,QAAQM,IAELH,QAAQI,iBDjBtB,CAACoH,IAEJxE,qBAAU,WACoB,OAAxB3H,EAAMua,cACRvC,GAAU,GACuB,OAAxBhY,EAAMua,eACfvC,GAAU,KAEX,CAAChY,EAAMua,gBAMV,OAAQ3L,GACkB,OAAxB5O,EAAMua,eACyB,IAA/Bva,EAAMua,cAAcpL,OAGpB,kBAAC,GAAD,CACE7B,cAAetN,EAAMua,cACrBvN,gBAXoB,WACtByN,GAAkBtO,IAWhByC,OAAQA,IALV,kBAAC,GAAD,SEtBagM,GAAkB,kBAAI,SAACxW,GAChC,OAAOsW,GAAYG,eAAevW,MAAK,SAAC/C,GAOpC,OANA6C,EAAS,CACLG,K3BHiB,oB2BIjBC,QAAQ,CAACsW,cAAcvZ,EAAKA,QAIzBoD,QAAQC,aAEnB,SAACC,GACG,IAAMC,EACLD,EAAMvD,UACHuD,EAAMvD,SAASC,MAAQsD,EAAMvD,SAASC,KAAKuD,SAC3CD,EAAMC,SACND,EAAMhD,WASV,OARAuC,EAAS,CACLG,K3BlBc,mB2BqBlBH,EAAS,CACLG,K3B1BW,c2B2BXC,QAAQM,IAELH,QAAQI,cCVnB+E,GAAWD,IAAXC,OAYAmC,IATN,kBAAClC,GAAA,EAAD,CACEC,MAAO,CACLC,SAAU,GACVC,MAAO,aAKM6Q,KAAXtI,OACYrK,IAAZ6D,SAEF+O,G,YACJ,WAAYhb,GAAQ,IAAD,uBACjB,4CAAMA,KAwJRiN,SAAW,SAAC3N,GAAW,IACbiC,EAAS,EAAKkE,MAAdlE,KACF2L,EAAW,EAAKC,SAAS5L,EAAMjC,GACrC,EAAKkJ,SAAS,CAAE4E,WAAYF,KA1J5B,IAAM/C,EAAU,CACd,CACEgE,MAAOpD,GACPqD,UAAW,YACXhP,IAAK,YACLiP,MAAO,MACPC,OAAQ,SAAC2M,GACP,MAAO,CACL1M,SAAU0M,EACVjb,MAAO,CACL,aAAc,iBAKtB,CACEmO,MAAOnD,GACPoD,UAAW,WACXhP,IAAK,WACLiP,MAAO,MACPC,OAAQ,SAAC4M,GACP,MAAO,CACL3M,SAAU2M,EACVlb,MAAO,CACL,aAAc,gBAKtB,CACEmO,MAAOjD,GACPkD,UAAW,gBACXhP,IAAK,gBACLiP,MAAO,MACPC,OAAQ,SAAC6M,GACP,MAAO,CACL5M,SAAU4M,EACVnb,MAAO,CACL,aAAc,oBAKtB,CACEmO,MAAO/C,GACPgD,UAAW,SACXhP,IAAK,SACLkP,OAAQ,SAACsD,GACP,IAAIoF,EAAO,GACPoE,GAAO,EACX,IAAK,IAAIC,KAAYzJ,EACE,GAAjBA,EAAIyJ,KACU,UAAZA,IACFA,EAAW,SACXD,GAAO,GAEO,eAAZC,IACFA,EAAW,SACXD,GAAO,GAEO,YAAZC,IACGD,IACHC,EAAW,QAII,GAAfrE,EAAK7H,OACP6H,GAAQqE,EACc,aAAbA,IACLrE,EAAKpP,SAAS,OAChBoP,EAAOqE,EAEPrE,GAAQ,KAAOqE,IAMvB,MAAO,CACL9M,SAAUyI,EACVhX,MAAO,CACL,aAAc,YAIpBqO,MAAO,OAET,CACEF,MAAOhD,GACPiD,UAAW,SACXhP,IAAK,SACLiP,MAAO,MACPC,OAAQ,WACN,MAAO,CACLC,SACE,yBAAK7N,UAAU,2BACb,0BAAMA,UAAU,gBACfsE,GAGLhF,MAAO,CACL,aAAc,aAKtB,CACEmO,MAAO9C,GACP+C,UAAW,UACXhP,IAAK,IACLiP,MAAO,MACPC,OAAQ,WACN,MAAO,CACLC,SAAU,kBAAC,GAAD,CAAauF,WAAS,IAChC9T,MAAO,CACL,aAAc,eArHP,OA2HjB,EAAKyF,MAAQ,CACX0E,QAASA,EACT5I,KAAM,GACNqN,QAAQ,GA9HO,E,iFAiIE,IACXxK,EAAarE,KAAKC,MAAlBoE,SACRrE,KAAKyI,SAAS,CAAEoG,QAAQ,IACxBxK,EAASwW,Q,uDAEsB5a,GAAQ,IAAD,OAChC8a,EAAkB9a,EAAlB8a,cACN/a,KAAKyI,SAAS,CAAEjH,KAAMuZ,EAAelM,QAAQ,IAAS,WACpD,EAAK3B,SAAS,S,+BAGTW,EAAKC,GACZ,OAAKA,GAA2B,KAAdA,GAAkC,OAAdA,EAG/BD,EAAIE,QAAO,SAAUC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAU9O,GACrC,GAAwB,kBAAb2O,EAAI3O,GACb,OAAO2O,EAAI3O,GAAKoH,cAAcoB,SAASiG,EAAUrH,qBAL9CoH,I,+BAiBT,OACE,oCACE,kBAAC,IAAD,CAAKlN,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,sBAAsBqG,YAAU,aAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYf,WAAS,EAACzE,KAAMxB,KAAKC,QACjC,kBAAC,GAAD,CAASU,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,4B1B3Lc,qB0B6LhB,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,GAAIxH,UAAU,2BAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,EAAGxH,UAAU,cAC9B,kBAAC,GAAD,CACE+N,Y1BzLN,S0B0LMxB,SAAUlN,KAAKkN,cAMvB,kBAAC,IAAD,CACEjF,KAAM,GACNE,GAAI,EACJxH,UAAU,iDAEV,kBAAC,IAAD,CAAMP,GAAG,sBACT,kBAACuO,GAAD,CAASpP,M1B/HH,qB0BoIZ,kBAAC,IAAD,CAAMqP,SAAU5O,KAAK0F,MAAMmJ,OAAQ1H,KAAK,SACtC,kBAAC,GAAD,CACEkD,OAAO,oBACPD,QAASpK,KAAK0F,MAAM0E,QACpB5I,KAAMxB,KAAK0F,MAAM2H,uB,GAzMb/M,IAAMP,WA6Nf2H,oBATf,SAAyBhC,GAGvB,MAAO,CACLqV,cAHwBrV,EAAMqO,UAAxBgH,cAINhW,QAHkBW,EAAMX,QAAlBA,WAOK2C,CAAyBuT,I,qBC7OlCM,I,OAAS,CACbC,WAAY,CACVvT,KAAM,MAGJwT,GAAa,CACjBD,WAAY,CACVvT,KAAM,KAkIKyT,G,YA7Hb,WAAYzb,GAAQ,IAAD,8BACjB,4CAAMA,KAQR0b,iBAAmB,SAAChK,GAClB,EAAKlJ,SAAS,CACZvH,MAAOyQ,EAAEuF,OAAO3X,SAXD,EAenBqc,UAAY,SAACjK,GAOX,GAAyB,KAArB,EAAKjM,MAAMxE,MAAc,CAC3B,IAAMM,EAAO,CACXN,MAAO,EAAKwE,MAAMxE,OAEpB,EAAKuH,SAAS,CAAE3D,OAAO,EAAO+J,QAAQ,IACtCxN,IAAMC,KAAKV,EAAW,uBAAwBY,EAXhC,CACdR,QAAS,CACPC,OAAQ,+BACR,eAAgB,oCAQ2CsD,MAAK,WAChE,EAAKkE,SAAS,CAAEoT,WAAW,EAAMhN,QAAQ,YAG3C,EAAKpG,SAAS,CAAE3D,OAAO,KA7BzB,EAAKY,MAAQ,CACXxE,MAAO,GACP4D,OAAO,EACP+W,WAAW,GALI,E,sEAmCT,IAAD,OACP,OACE,oCACE,kBAAC,IAAD,CAAKlb,UAAU,4BACb,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKA,UAAU,4BACb,kBAAC,IAAD,CACE2Q,GAAI,GACJnJ,GAAI,GACJxH,UAAU,2CAEV,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,eACvB,wBAAIA,UAAU,4BAA4B6K,KAE5C,kBAAC,IAAD,CAAK7K,UAAU,+BACb,yBAAKH,IAAKsb,KAAYpb,IAAI,aAAaC,UAAU,kBAEnD,kBAAC,IAAD,CAAKA,UAAU,QACb,uBAAGA,UAAU,wDACV8K,MAIP,kBAAC,IAAD,CACEtD,GAAI,CAAEF,KAAM,IACZC,GAAI,CAAED,KAAM,IACZoJ,GAAI,CAAEpJ,KAAM,IACZtH,UAAU,sCAEV,yBAAKA,UAAU,0EACZX,KAAK0F,MAAMmW,UAAY,sBAAwB,KAChD,kBAAC,IAAD,CAAKlb,UAAU,0BACb,4B3BAe,mB2BCf,uBAAGA,UAAU,yBjBpB3B,2EiBuBY,kBAAC,KAAD,iBACM4a,GADN,CAEEQ,IAAK,SAACC,GACJ,EAAKjL,KAAOiL,GAEd1V,KAAK,QACL2V,cAAe,CACbC,UAAU,KAGXlc,KAAK0F,MAAMZ,OACV,kBAAC,KAAD,CAAOC,QAAS0K,GAAajL,KAAK,QAAQ2M,UAAQ,IAEpD,kBAAC,GAAD,CAAYjC,MlBjHP,QkBiHqB3P,MAAOS,KAAK0F,MAAMxE,OAC1C,kBAAC,KAAKmG,KAAN,CAAWf,KAAK,SACd,kBAAC,IAAD,CACE9B,KAAK,QACL7D,UAAU,gBACV+N,YAAY,IACZnP,MAAOS,KAAK0F,MAAMxE,MAClBwQ,SAAU1R,KAAK2b,qBAKrB,kBAAC,KAAKtU,KAASoU,GACb,kBAAC,KAAD,CACEjX,KAAK,UACLuO,SAAS,SACTpS,UAAU,4BACV2G,QAAS,SAACqK,GAAD,OAAO,EAAKiK,cjBxDH,gCiB8DtB,yBAAKjb,UAAU,iCACb,kBAAC,KAAD,CAAQ6D,KAAK,OAAO7D,UAAU,QAC5B,kBAAC,IAAD,CAAMP,GAAG,UACN,IjBhEA,WiB+DH,IAEY,uBAAGO,UAAU,Q3B9CtB,uB,G2BnEMZ,aCRvB0b,GAAa,CACjBD,WAAY,CACVvT,KAAM,KA2LKkU,G,YAtLb,WAAYlc,GAAQ,IAAD,8BACjB,4CAAMA,KAURmc,iBAAmB,SAACzK,GAClB,EAAKlJ,SAAS,CACZtH,SAAUwQ,EAAEuF,OAAO3X,SAbJ,EAiBnB8c,wBAA0B,SAAC1K,GACzB,EAAKlJ,SAAS,CACZ6T,iBAAkB3K,EAAEuF,OAAO3X,SAnBZ,EAuBnBgd,cAAgB,SAAC5K,GACf5J,QAAQC,IAAI,aAAc,EAAK/H,OADV,MAEK,EAAKA,MAAMiE,SAASsY,OAAtC3C,EAFa,EAEbA,MAAO4C,EAFM,EAENA,OACTjb,EAAO,CACXL,SAAU,EAAKuE,MAAMvE,SACrB0Y,MAAOA,EACP4C,OAAQA,GASR,EAAK/W,MAAMvE,WAAa,EAAKuE,MAAM4W,kBAClC,EAAK5W,MAAMmR,yBAEZxV,IACGuL,IAAIhM,SAAW,2BAA4BY,EAXhC,CACdR,QAAS,CACPC,OAAQ,+BACR,eAAgB,oCASfsD,MAAK,WACJ,EAAKkE,SAAS,CAAEiU,WAAW,OAE5B5I,OAAM,SAAChP,GACFA,EAAMC,QAAQ8C,SAAS,WA/ChB,EAqDnB8U,iBAAmB,SAAChL,GACT,kEACDsF,KAAKtF,EAAEuF,OAAO3X,OAGpB,EAAKkJ,SAAS,CAAEoO,yBAAyB,IAFzC,EAAKpO,SAAS,CAAEoO,yBAAyB,KAtD3C,EAAKnR,MAAQ,CACXvE,SAAU,GACVmb,iBAAkB,GAClBxX,MAAO,QACP+R,wBAAyB,GACzB6F,WAAW,GAPI,E,sEA8DT,IAAD,OACP,OACE,oCACE,kBAAC,IAAD,CAAK/b,UAAU,4BACb,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKA,UAAU,4BACb,kBAAC,IAAD,CACE2Q,GAAI,GACJnJ,GAAI,GACJxH,UAAU,2CAEV,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,eACvB,wBAAIA,UAAU,4BAA4B6K,KAE5C,kBAAC,IAAD,CAAK7K,UAAU,+BACb,yBAAKH,IAAKsb,KAAYpb,IAAI,aAAaC,UAAU,kBAEnD,kBAAC,IAAD,CAAKA,UAAU,QACb,uBAAGA,UAAU,wDACV8K,MAIP,kBAAC,IAAD,CACEtD,GAAI,CAAEF,KAAM,IACZC,GAAI,CAAED,KAAM,IACZoJ,GAAI,CAAEpJ,KAAM,IACZtH,UAAU,sCAEV,yBAAKA,UAAU,0EACb,kBAAC,IAAD,CAAKA,UAAU,0BACb,4B5B7Ec,kB4B8Ed,uBAAGA,UAAU,yB5B7EG,yC4B+EjBX,KAAK0F,MAAMgX,UAAY,0BAA4B,KACpD,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAYxN,MnB5HJ,WmB4HqB3P,MAAOS,KAAK0F,MAAMvE,UAC7C,kBAAC,KAAKkG,KAAN,CACEf,KAAK,cACL3F,UAAU,eACVic,MAAO,CACL,CACEC,UAAU,EACV9X,QfjIU,qCeqId,kBAAC,IAAM+X,SAAP,CACEtL,QAAQ,cACRlH,GAAG,SACH/K,MAAOS,KAAK0F,MAAMvE,SAClBuQ,SAAU1R,KAAKoc,iBACf/M,OAAQ,SAACsC,GAAD,OAAO,EAAKgL,iBAAiBhL,OAGxC3R,KAAK0F,MAAMmR,yBACV,kBAAC,KAAD,CACE9R,QAAS4K,GACTnL,KAAK,QACL2M,UAAQ,KAKd,kBAAC,GAAD,CACEjC,MnBlJc,mBmBmJd3P,MAAOS,KAAK0F,MAAM4W,kBAElB,kBAAC,KAAKjV,KAAN,CACEf,KAAK,kBACL3F,UAAU,yBACVic,MAAO,CACL,CACEC,UAAU,EACV9X,Qf5Ja,iCe8Jf,gBAAGgY,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAG1d,GACX,OACGA,GACDwd,EAAc,iBAAmBxd,EAK5BqF,QAAQI,OfrKvC,oDekKiCJ,QAAQC,cAOvBqY,aAAc,CAAC,eACfC,aAAW,GAEX,kBAAC,IAAML,SAAP,CACEtL,QAAQ,kBACRlH,GAAG,aACH/K,MAAOS,KAAK0F,MAAM4W,iBAClB5K,SAAU1R,KAAKqc,4BAIrB,kBAAC,KAAKhV,KAASoU,GACb,kBAAC,KAAD,CACEjX,KAAK,UACLuO,SAAS,SACTpS,UAAU,4BACV2G,QAAS,SAACqK,GAAD,OAAO,EAAK4K,cAAc5K,K5BvJzB,4B,G4BlBF5R,aCsUbqd,G,2MA5Vb1X,MAAQ,CAAEwN,SAAS,G,EAEnBzJ,UAAY,WACVxF,OAAO8I,KACL,sDACA,W,wEAKF,OACE,oCpBca,MoBZX,kBAAC,KAAD,CAAQvI,KAAK,OAAO7D,UAAU,YAAY2G,QAAStH,KAAKyJ,WpBalC,kBoBVtB,kBAAC,KAAD,CACE2E,MpBSoB,iBoBRpB8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfhT,UAAU,uBACVuT,UAAQ,GAER,kBAAC,IAAD,CAAKvT,UAAU,mBACb,2BnBWV,mmBmBTY,wBAAIA,UAAU,IACZ,4BACE,2CACA,wBAAIA,UAAU,OACZ,kJAGG,mGAHH,qIAME,8EANF,4TAYa,qDAZb,KAeA,wBAAIA,UAAU,IAAd,8UAWJ,4BACE,uEACA,wBAAIA,UAAU,OACZ,kLAMA,4BACE,gDADF,qUAOiB,+DAPjB,KASA,4BACE,kDADF,qgBAYA,yJAQJ,4BACE,0DACA,wBAAIA,UAAU,OACZ,42BAmBA,ykBAeJ,4BACE,4DACA,uBAAGA,UAAU,QAAb,8bAUA,wBAAIA,UAAU,OACZ,4BACE,8CADF,qRASA,4BACE,iDADF,8ZAUA,4BACE,oDADF,weAaA,4BACE,gEADF,4yBAiBA,uKAQJ,4BACE,oEACA,wBAAIA,UAAU,OACZ,kkBAaA,4OAQJ,4BACE,sEACA,uBAAGA,UAAU,QAAb,0cAWF,4BACE,qDACA,uBAAGA,UAAU,QAAb,qlBAcF,4BACE,0CACA,uBAAGA,UAAU,QAAb,8gBAcF,4BACE,uDACA,uBAAGA,UAAU,QAAb,ugBAaF,4BACE,qDACA,uBAAGA,UAAU,QAAb,uVASF,4BACE,2DACA,uBAAGA,UAAU,QAAb,8pBAgBF,4BACE,sDACA,uBAAGA,UAAU,QAAb,oUAMqC,IACnC,2BACE,0BAAMA,UAAU,iBAAhB,KADF,kBAMJ,4BACE,yCACA,uBAAGA,UAAU,QAAb,oIAGgB,IACd,uBAAGkF,KAAK,6BAAR,iC,GAjVa9F,aCU3Bwb,GAAS,CACbC,WAAY,CACVvT,KAAM,KAGJwT,GAAa,CACjBD,WAAY,CACVvT,KAAM,KAINpH,GAAWC,EAAQ,IACjBuc,G,YACJ,WAAYpd,GAAQ,IAAD,8BACjB,4CAAMA,KACDqd,YAAc,EAAKA,YAAY9X,KAAjB,gBACnB,EAAKmW,iBAAmB,EAAKA,iBAAiBnW,KAAtB,gBACxB,EAAK4W,iBAAmB,EAAKA,iBAAiB5W,KAAtB,gBACxB,EAAKE,MAAQ,CACXxE,MAAO,GACPC,SAAU,GACVC,KAAM,cACN0D,MAAO,QACPyY,SAAS,GAVM,E,8EAaF5L,GACf3R,KAAKyI,SAAS,CACZvH,MAAOyQ,EAAEuF,OAAO3X,U,uCAGHoS,GACf3R,KAAKyI,SAAS,CACZtH,SAAUwQ,EAAEuF,OAAO3X,U,oCAIR,IAAD,OACZS,KAAKyI,SAAS,CACZ8U,SAAS,IAFC,MAIkBvd,KAAKC,MAA3BoE,EAJI,EAIJA,SAJI,EAIMgF,QAElBhF,EAASD,EAAMpE,KAAK0F,MAAMxE,MAAOlB,KAAK0F,MAAMvE,SAAUnB,KAAK0F,MAAMtE,OAC9DmD,MAAK,WACJN,OAAOC,SAASC,YAEjB2P,OAAM,WACL,EAAKrL,SAAS,CACZ8U,SAAS,EACTzY,MAAO,c,kCAKF,IAAD,EACkB9E,KAAK0F,MAAzBxE,EADE,EACFA,MAAOC,EADL,EACKA,SACf,OAAOD,EAAMkO,OAAS,GAAKjO,EAASiO,OAAS,I,+BAGrC,IAAD,SACyBpP,KAAKC,MAA7B0F,EADD,EACCA,WACJ6X,GAFG,EACazY,SACP,GACT0Y,GAAU,EACVC,GAAU,EACRC,EAAkBxd,EAAe,QAClCwd,IACHH,GAAS,EACTC,GAAU,EACVC,GAAU,GAEZ,IAAME,EAAoB9Z,KAAK+G,MAAM1K,EAAe,SAElDwd,GACAC,GAC+B,QAA/BA,EAAkBlb,YAElB8a,EAIoC,SAHlC3c,GAASa,IAAIyE,QACXyX,EAAkBlb,UAAUU,aAC5B,cACAtB,SAASjB,GAASuF,IAAIC,MAC1BoX,EAIoC,SAHlC5c,GAASa,IAAIyE,QACXyX,EAAkBlb,UAAUY,eAC5B,cACAxB,SAASjB,GAASuF,IAAIC,MAC1BqX,EAIoC,SAHlC7c,GAASa,IAAIyE,QACXyX,EAAkBlb,UAAUQ,eAC5B,cACApB,SAASjB,GAASuF,IAAIC,OAM5B,IAAMwX,EAAY7d,KAAK8d,YACvB,GAAInY,EAAY,CACd,GAAI8X,EACF,OAAO,kBAAC,IAAD,CAAUrd,GAAG,2BACf,GAAIsd,EACT,OAAO,kBAAC,IAAD,CAAUtd,GAAG,2BACf,GAAIod,EACT,OAAO,kBAAC,IAAD,CAAUpd,GAAG,8BAKxB,OACE,oCACE,kBAAC,IAAD,CAAKO,UAAU,4BACb,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKA,UAAU,4BACb,kBAAC,IAAD,CACE2Q,GAAI,GACJnJ,GAAI,GACJxH,UAAU,2CAEV,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,eACvB,wBAAIA,UAAU,4BAA4B6K,KAE5C,kBAAC,IAAD,CAAK7K,UAAU,+BACb,yBAAKH,IAAKsb,KAAYpb,IAAI,aAAaC,UAAU,kBAEnD,kBAAC,IAAD,CAAKA,UAAU,QACb,uBAAGA,UAAU,wDACV8K,IAEH,uBAAG9K,UAAU,+DpBxHzB,oRoB6HQ,kBAAC,IAAD,CACEwH,GAAI,CAAEF,KAAM,IACZC,GAAI,CAAED,KAAM,IACZoJ,GAAI,CAAEpJ,KAAM,IACZtH,UAAU,sCAEV,yBAAKA,UAAU,0EACb,kBAAC,IAAD,CAAMiO,SAAU5O,KAAK0F,MAAM6X,QAASpW,KAAK,SAClB,QAApBnH,KAAK0F,MAAMZ,OACV,kBAAC,KAAD,CACEC,QAAQ,kCACRP,KAAK,QACL2M,UAAQ,IAGZ,kBAAC,IAAD,CAAKxQ,UAAU,0BACb,4B9BrEK,Y8BwEP,kBAAC,KAAD,eACEA,UAAU,kBACN4a,GAFN,CAGEwC,SAAU/d,KAAKsd,YACfvB,IAAK,SAACC,GACJ,EAAKjL,KAAOiL,GAEd1V,KAAK,QACL2V,cAAe,CACbC,UAAU,KAGZ,kBAAC,GAAD,CAAYhN,MrBlLT,QqBkLuB3P,MAAOS,KAAK0F,MAAMxE,OAC1C,kBAAC,KAAKmG,KAAN,CACEf,KAAK,QACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS0K,GACTjL,KAAM,WAIV,kBAAC,IAAD,CACEA,KAAK,QACL7D,UAAU,gBACV+N,YAAY,IACZnP,MAAOS,KAAK0F,MAAMxE,MAClBwQ,SAAU1R,KAAK2b,qBAIrB,kBAAC,GAAD,CAAYzM,MrBrMN,WqBqMuB3P,MAAOS,KAAK0F,MAAMvE,UAC7C,kBAAC,KAAKkG,KAAN,CACEf,KAAK,WACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QjBxMI,gCiB4MR,kBAAC,IAAD,CACEP,KAAK,WACL7D,UAAU,gBACVpB,MAAOS,KAAK0F,MAAMvE,SAClBuQ,SAAU1R,KAAKoc,qBAIrB,yBAAKzb,UAAU,cACb,kBAAC,IAAD,CAAMP,GAAG,mBAAT,I9BzHW,oB8B4Hb,kBAAC,KAAKiH,KAASoU,GACb,kBAAC,KAAD,CACE/D,UAAWmG,EACXrZ,KAAK,UACLuO,SAAS,SACTpS,UAAU,4BACV2G,QAAS,WACP,EAAKgW,gB9BrIN,iB8BgJf,kBAAC,IAAD,CAAK3c,UAAU,iCACb,kBAAC,GAAD,Y,GAvNUZ,aAsOL2H,oBARf,SAAyBhC,GAGvB,MAAO,CACLC,WAHqBD,EAAMiC,KAArBhC,WAINZ,QAHkBW,EAAMX,QAAlBA,WAMK2C,CAAyB2V,IC/PhCjV,GAAUC,IAAVD,MAsFO4V,G,2MA5EbtY,MAAQ,CACN6C,WAAW,G,EAGbC,OAAS,WACP,EAAKC,SAAS,CACZF,WAAY,EAAK7C,MAAM6C,a,wEAIjB,IAAD,EACHG,EAAa,GAQjB,OAPA,UAAI1I,KAAKC,MAAMuB,YAAf,aAAI,EAAiB0C,YACflE,KAAKC,MAAMuB,KAAK0C,SAAS7D,SAASwH,SAAS,WAC7Ca,EAAa,IACJ1I,KAAKC,MAAMuB,KAAK0C,SAAS7D,SAASwH,SAAS,cACpDa,EAAa,MAIf,oCACGpI,IAAMqI,cACL3I,KAAK0F,MAAM6C,UAAYM,KAAqBD,KAC5C,CACEjI,UAAW,4BACX2G,QAAStH,KAAKwI,SAGlB,kBAAC,GAAD,CACE7H,UACGX,KAAK0F,MAAM6C,UAER,mCADA,yCAGNhB,QAAS,KACTuB,aAAW,EACXP,UAAWvI,KAAK0F,MAAM6C,WAEtB,kBAAC,KAAD,CAAMQ,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAACP,IACrD,kBAAC,KAAKrB,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,yBAInB,IACD,kBAAC,IAAD,CAAMP,GAAG,0B/BkBS,qB+BhBpB,kBAAC,KAAKiH,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,sBAInB,IACD,kBAAC,IAAD,CAAMP,GAAG,2B/BMU,uB+BHvB,yBAAKO,UAAU,WACb,uBAAGkF,KAAK,IAAIlF,UAAU,OAAO+W,UAAQ,G/BpE7B,Q+BuER,uBAAG7R,KAAK,IAAIlF,UAAU,OAAO+W,UAAQ,G/BxE7B,e,G+BKOpX,IAAMP,WCazBmM,GAAY7D,IAAZ6D,QAEJrL,GAAWC,EAAQ,IAmRRmd,GAlRQ,SAAChe,GACtB,IAAMuE,EAAOrE,EAAe,YACtB+F,EAAW1B,EACb3D,GAASa,IAAIyE,QAAQ3B,EAAM,cAAc1C,SAASjB,GAASuF,IAAIC,MAC/D,GAJ4B,EAKV0I,mBAAS,CAC7BmP,WAAY,GACZC,OAAQ,GACRC,WAAY,KARkB,mBAKzBC,EALyB,KAKpBC,EALoB,OAUcvP,oBAAS,GAVvB,mBAUzBwP,EAVyB,KAURC,EAVQ,OAWNzP,oBAAS,GAXH,mBAWzBjK,EAXyB,KAWlB2Z,EAXkB,OAYA1P,mBAAS,IAZT,mBAYzB2P,EAZyB,KAYfC,EAZe,OAa+B5P,oBAC7D,GAd8B,mBAazB8H,EAbyB,KAaAC,EAbA,KAiBhClP,qBAAU,WACR6W,GAAS,GACT3H,GAA4B,GAC5B,IAAMpS,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCue,EAAWha,EACb7D,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaC,WAClB,cACAC,SAASjB,GAASuF,IAAIC,MACxB,IACAxF,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaI,UAClB,cACAF,SAASjB,GAASuF,IAAIC,MACxB,GACJsY,EAAYD,KACX,IAEH,IASME,EAAiB,SAACjN,GACtB2M,EAAO,eACFD,EADC,gBAEH1M,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UA6C5B,OACE,kBAAC,IAAM2Z,SAAP,KACE,kBAAC,IAAMA,SAAP,KACE,kBAAC,IAAD,CAAKvY,UAAU,gBACC,WAAbuF,EACC,kBAAC,GAAD,CAAgBH,WAAS,IACV,UAAbG,EACF,kBAAC,GAAD,CAAgBF,UAAQ,IACT,WAAbE,EACF,kBAAC,GAAD,CAAgBD,WAAS,IACvB,MAEN,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACgB,WAAbuF,EACC,kBAAC,GAAD,CAAc1E,KAAMvB,IACL,WAAbiG,EACF,kBAAC,GAAD,CAAY1E,KAAMvB,IACH,UAAbiG,EACF,kBAAC,GAAD,MACE,KACJ,kBAAC,GAAD,CAASvF,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,QhCpGG,sBgCoGjB,IACyB+d,IAG3B,yBAAK/d,UAAU,oBACb,kBAAC,KAAD,CACEuS,QAASqL,EACTvK,KAxED,WACX7T,EAAe,SACjBmE,EAAYsB,UAuEEqO,SAnEG,WACf9T,EAAe,SACjBmE,EAAYsB,UAkEEsO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,OAAQnP,GAER,2BtBhKlB,4FsBkKgB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK+C,KAAM,IACT,kBAAC,KAAD,CAAMtH,UAAU,iCACd,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CACEmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,IACrCxH,UAAU,WAEV,kBAAC,IAAD,CAAKsH,KAAM,EAAGtH,UAAU,cACrBmE,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CACEtC,QnB1KR,yBmB2KQP,KAAK,WAIX,kBAAC,GAAD,CACE0K,MvB3KA,mBuB4KA3P,MAAO8e,EAAIH,YAEX,kBAAC,KAAK7W,KAAN,CACEf,KAAK,kBACL3F,UAAU,eACVic,MAAO,CACL,CACEC,UAAU,EACV9X,QnBxLA,yCmB4LJ,kBAAC,IAAM+X,SAAP,CACEtL,QAAQ,kBACRlH,GAAG,aACH/K,MAAO8e,EAAIH,WACXxM,SAAUkN,OAKlB,kBAAC,IAAD,CAAK3W,KAAM,EAAGtH,UAAU,cACtB,kBAAC,GAAD,CACEuO,MvBlMJ,euBmMI3P,MAAO8e,EAAIF,QAEX,kBAAC,KAAK9W,KAAN,CACEf,KAAK,cACL3F,UAAU,eACVic,MAAO,CACL,CACEC,UAAU,EACV9X,QnB/MJ,qCmBmNA,kBAAC,IAAM+X,SAAP,CACEtL,QAAQ,cACRlH,GAAG,SACH/K,MAAO8e,EAAIF,OACXzM,SAAUkN,EACVvP,OAAQ,SAACsC,GAAD,OAhKjB,SAACA,GACf,kEACDsF,KAAKtF,EAAEuF,OAAO3X,OAGpBuX,GAA4B,GAF5BA,GAA4B,GA6JiB6F,CAAiBhL,OAGnCkF,GACC,kBAAC,KAAD,CACE9R,QAAS4K,GACTnL,KAAK,QACL2M,UAAQ,MAKhB,kBAAC,IAAD,CAAKlJ,KAAM,EAAGtH,UAAU,cACtB,kBAAC,GAAD,CACEuO,MvBjOA,mBuBkOA3P,MAAO8e,EAAID,YAEX,kBAAC,KAAK/W,KAAN,CACEf,KAAK,kBACL3F,UAAU,yBACVic,MAAO,CACL,CACEC,UAAU,EACV9X,QnB3OD,iCmB6OD,gBAAGgY,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAG1d,GACX,OACGA,GACDwd,EAAc,iBAAmBxd,EAK5BqF,QAAQI,OnBpPrD,oDmBiP+CJ,QAAQC,cASvBqY,aAAc,CAAC,eACfC,aAAW,GAEX,kBAAC,IAAML,SAAP,CACEtL,QAAQ,kBACRlH,GAAG,aACH/K,MAAO8e,EAAID,WACX1M,SAAUkN,SAQtB,kBAAC,KAAKvX,KAAN,KACE,yBAAK1G,UAAU,QACb,kBAAC,KAAD,CACE6D,KAAK,UACLuO,SAAS,SACTzL,QAhMP,WACnB,IAAMuS,EAAQlP,KACRnJ,EAAO,CACXqd,aAAcR,EAAIH,WAClBY,aAAcT,EAAIF,OAClB7B,iBAAkB+B,EAAID,YAElBrd,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGhBod,EAAIF,SAAWE,EAAID,YAAevH,GACpCxV,IACGuL,IAAIhM,EAAW,kBAAmBY,EAAMT,GACxCwD,MAAK,WACJka,GAAS,GACTD,GAAmB,MAEpB1K,OAAM,SAAChP,GACFA,EAAMC,QAAQ8C,SAAS,QACzB4W,GAAS,QhC/DC,uB,kBiCqHPM,G,2MAzJbrZ,MAAQ,CAAEwN,SAAS,EAAO8L,YAAa,GAAIC,QAAS,I,EAEpDxV,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,K,EAIbI,SAAW,WACT,EAAK7K,SAAS,CACZyK,SAAS,IAEX,EAAKjT,MAAMif,QAAQ,EAAKxZ,MAAMsZ,YAAa,EAAKtZ,MAAMuZ,U,EAGxDtL,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,K,EAIbiM,aAAe,SAACxN,GACd,EAAKlJ,SAAS,CACZuW,YAAarN,EAAEyN,cAAcC,UAC7BJ,QAAStN,EAAEyN,cAAc9U,M,wEAK3B,OACE,oCACE,kBAAC,KAAD,CAAQ9F,KAAK,OAAO7D,UAAU,YAAY2G,QAAStH,KAAKyJ,WACtD,0BAAM9I,UAAU,yBjCcF,YiCXhB,kBAAC,KAAD,CACEA,UAAU,aACVyN,MjCSc,WiCRd8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,gBACV7N,UAAW,qBAEb0T,OjC1BoB,MiC2BpBC,WjC7BkB,UiC+BlB,kBAAC,IAAD,CAAK3T,UAAU,OAAOqG,YAAU,WAC9B,yBACErG,UACyB,MAAvBX,KAAK0F,MAAMuZ,QACP,0BACA,iBAEN3U,GAAI,EACJhD,QAAStH,KAAKmf,cAEd,kBAAC,KAAD,CAAS/Q,MlChDU,qBkCiDjB,0BAAMzN,UAAU,oCAIpB,yBACEA,UACyB,MAAvBX,KAAK0F,MAAMuZ,QACP,0BACA,iBAEN3U,GAAI,EACJhD,QAAStH,KAAKmf,cAEd,kBAAC,KAAD,CAAS/Q,MlC7DC,YkC8DR,0BAAMzN,UAAU,yBAGpB,yBACEA,UACyB,MAAvBX,KAAK0F,MAAMuZ,QACP,0BACA,iBAEN3U,GAAI,EACJhD,QAAStH,KAAKmf,cAEd,kBAAC,KAAD,CAAS/Q,MlCzED,UkC0EN,0BAAMzN,UAAU,uBAGpB,yBACEA,UACyB,MAAvBX,KAAK0F,MAAMuZ,QACP,0BACA,iBAEN3U,GAAI,EACJhD,QAAStH,KAAKmf,cAEd,kBAAC,KAAD,CAAS/Q,MlCrFO,kBkCsFd,0BAAMzN,UAAU,+BAGpB,yBACEA,UACyB,MAAvBX,KAAK0F,MAAMuZ,QACP,0BACA,iBAEN3U,GAAI,EACJhD,QAAStH,KAAKmf,cAEd,kBAAC,KAAD,CAAS/Q,MlCjGF,SkCkGL,0BAAMzN,UAAU,sBAGpB,yBACEA,UACyB,MAAvBX,KAAK0F,MAAMuZ,QACP,0BACA,iBAEN3U,GAAI,EACJhD,QAAStH,KAAKmf,cAEd,kBAAC,KAAD,CAAS/Q,MlC7GO,kBkC8Gd,0BAAMzN,UAAU,+BAGpB,yBACEA,UACyB,MAAvBX,KAAK0F,MAAMuZ,QACP,0BACA,iBAEN3U,GAAI,EACJhD,QAAStH,KAAKmf,cAEd,kBAAC,KAAD,CAAS/Q,MlCzHH,QkC0HJ,0BAAMzN,UAAU,4B,GAhJNZ,a,yCCSlB2S,GAAWsI,KAAXtI,OAyOO4M,GAvOc,SAAC,GAUvB,IATLpP,EASI,EATJA,KACAqP,EAQI,EARJA,mBACAnP,EAOI,EAPJA,sBACAC,EAMI,EANJA,sBACAC,EAKI,EALJA,8BACA4O,EAII,EAJJA,QACAM,EAGI,EAHJA,YACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,oBACI,EACkC3Q,mBAAS,CAC7C4Q,SAAU,KAFR,gCAKuB5Q,oBAAS,IALhC,mBAKGjK,EALH,KAKUkM,EALV,OAMkCjC,oBAAS,GAN3C,mBAMgB6Q,GANhB,aAOW/O,KAAKC,UAAbC,EAPH,oBA2DIE,EAAgBC,KAAhBD,YAER,OACE,kBAAC,KAAD,CACEjK,YAAU,uBACVrG,UAAU,wCACV2F,KAAK,iBACLyK,KAAMA,GAELjM,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASwK,GAAkB/K,KAAK,QAAQ2M,UAAQ,KAG3D,kBAAC,GAAD,CACEjC,MzBhGsB,iByBiGtB3P,MAAOggB,EAAmBM,eAE1B,kBAAC,KAAKxY,KAAN,CACE1G,UAAU,WACV2F,KAAK,gBACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,CAAE+a,qBrBxGW,kCqB4G1B,kBAAC,KAAD,CACEC,WAAS,EACT/N,UAAW,GACXzS,MAAOggB,EAAmBM,cAC1BnO,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCtC,OAAQ,SAACsC,GAAD,OAxDO,SAACA,GACxB,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACGC,KACCV,EAAW,gBACX,CAAEof,aAAcT,EAAmBM,eACnC9e,GAEDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACNie,EAAmB5N,EAAIrQ,KAAK,GAAI,0BAsCfye,IACf3V,GAAG,gBACH3J,UAAU,gBACV6Q,QAAQ,gBACRO,aAAa,QAEU,kBAAxB2N,GACCH,EAAmBM,cAChB5N,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChCmQ,EAAmBM,cAAczQ,OAAS,GACxC,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGK,gBAAvBuN,GACC,kBAAC,KAAD,CACE3a,QAAS6K,GACTpL,KAAK,QACL2M,UAAQ,MAKhB,kBAAC,GAAD,CAAYjC,MzB1IS,cyB0IW3P,MAAOggB,EAAmBvS,aACxD,kBAAC,KAAK3F,KAAN,CACE1G,UAAU,WACV2F,KAAK,cACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,CAAEmb,kBrB7IQ,+BqBiJvB,kBAAC,KAAD,CACEvf,UAAU,gBACVpB,MAAOggB,EAAmBvS,YAC1B0E,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCrH,GAAG,cACHkH,QAAQ,cACRO,aAAa,UAInB,kBAAC,GAAD,CAAY7C,MAAOhE,GAAM3L,MAAM,SAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,oCACnB,kBAACsQ,EAAD,CACEtQ,UAAU,iDACV2F,KAAK,QACL/G,MAAOggB,EAAmBY,MAC1BzO,SAAU,SAACkB,GAAD,OAAUtC,EAA8BsC,EAAM,UACxDC,aAjHW,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QAiHrC8J,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,CAAE8K,sBAMrB,kBAAC,GAAD,CAAYX,MAAO9D,GAAQ7L,MAAOggB,EAAmBa,QACnD,kBAAC,KAAK/Y,KAAN,CACE1G,UAAU,WACV2F,KAAK,SACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QrBjLe,0BqBqLnB,oCACE,kBAAC,KAAD,CACEpE,UAAU,8BACVpB,MAAOggB,EAAmBa,OAC1B5O,QAAQ,SACRiB,SAAU,SAAClT,GAAD,OAAW8Q,EAAsB9Q,EAAO,YAElD,kBAAC,GAAD,CAAQA,MAAM,KAAK0F,GACnB,kBAAC,GAAD,CAAQ1F,MAAM,KnChNG,iBmCqNzB,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,IACnB,kBAAC,KAAK0G,KAAN,CACE1G,UAAU,iBACV2F,KAAK,SACL+Z,cAAc,YAEd,kBAAC,GAAD,CAAarZ,YAAU,mBAAmBkY,QAASA,IAClDM,EAAYD,EAAmBe,gBAC9B,yBAAK3f,UAAU,2CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,iDACb,0BAAMA,UAAU,oCACd,uBAAGA,UAAU,kCACV4f,KAAgBhB,EAAmBiB,WAGtC,0BACE7f,UAAU,mEACVyN,MAAOoR,EAAYD,EAAmBe,gBAErCd,EAAYD,EAAmBe,sBAShD,kBAAC,KAAKjZ,KAAN,KACE,kBAAC,KAAD,CACE7C,KAAK,UACLuO,SAAS,SACTzL,QA3MY,SAACqK,GACnBA,EAAEqB,iBAEAuM,EAAmBM,eACnBN,EAAmBM,cAAc5N,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAClE7C,OAAS,GACZmQ,EAAmBvS,aACnBuS,EAAmBvS,YAAYiF,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAChE7C,OAAS,GACZmQ,EAAmBiB,UACnBjB,EAAmBa,QACnBb,EAAmBY,MAEQ,iBAAvBT,IACF1O,GAAU,GACV4O,GAAe,GACf1P,KAGFc,GAAU,IAyLNhK,YAAU,eAET7B,M,qBC/OLsb,G,YACJ,WAAYxgB,GAAQ,IAAD,8BACjB,4CAAMA,KA2CRiN,SAAW,SAAC3N,GAAW,IACbmhB,EAAiB,EAAKhb,MAAtBgb,aACFvT,EAAW,EAAKC,SAASsT,EAAcnhB,GAC7C,EAAKkJ,SAAS,CAAE4E,WAAYF,KA/CX,EAkDnBwT,MAAQ,WACN,EAAKlY,SAAS,CACZmY,mBAAmB,KApDJ,EAwDnB7J,YAAc,WACZ,EAAK9W,MAAMwV,QAzDM,EA4DnBoL,YAAc,WAC0C,IAAlD,EAAK5gB,MAAM6gB,eAAeC,aAAa3R,OACzC,EAAKnP,MAAMiQ,OAEX,EAAKzH,SAAS,CAAEuY,WAAW,KA9D7B,EAAKtb,MAAQ,CACXgb,aAAc,GACdE,kBAAmB,QACnBI,WAAW,EACXnS,QAAQ,GANO,E,iFAUE,IACXxK,EAAarE,KAAKC,MAAlBoE,SACRrE,KAAKyI,SAAS,CAAEoG,QAAQ,IACxBxK,EAASwW,Q,yCAGQoG,GAAY,IAAD,OACtBlG,EAAkB/a,KAAKC,MAAvB8a,cACFkG,EAAUlG,eAAiBA,GAC7B/a,KAAKyI,SACH,CACEiY,aAAc3F,EACdlM,QAAQ,IAEV,WACE,EAAK3B,SAAS,S,+BAMbW,EAAKC,GACZ,OAAKA,GAA2B,KAAdA,GAAkC,OAAdA,EAG/BD,EAAIE,QAAO,SAAUC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAU9O,GACrC,GAAwB,kBAAb2O,EAAI3O,GACb,OAAO2O,EAAI3O,GAAKoH,cAAcoB,SAASiG,EAAUrH,qBAL9CoH,I,+BAmCD,IAAD,OAEDqT,EAAe,CACnBC,gBAF0BnhB,KAAKC,MAAM6gB,eAA/BK,gBAGNzP,SAAU1R,KAAKC,MAAM2V,uBAGjBxL,EAAU,CACd,CACEgE,MAAOpD,GACPqD,UAAW,YACXhP,IAAK,YACLiP,MAAO,OAET,CACEF,MAAOnD,GACPoD,UAAW,WACXhP,IAAK,WACLiP,MAAO,OAET,CACEF,MAAOjD,GACPkD,UAAW,gBACXhP,IAAK,gBACLiP,MAAO,OAET,CACEF,MAAO/C,GACPgD,UAAW,SACXE,OAAQ,SAACsD,GACP,IAAIoF,EAAO,GACX,IAAK,IAAIqE,KAAYzJ,EACE,GAAjBA,EAAIyJ,KACU,UAAZA,IACFA,EAAW,UAEG,eAAZA,IACFA,EAAW,UAEG,YAAZA,IACFA,EAAW,OAGM,GAAfrE,EAAK7H,OAAa6H,GAAQqE,EACzBrE,GAAQ,KAAOqE,GAGxB,OAAO,8BAAOrE,IAEhB3I,MAAO,OAET,CACEF,MAAOhD,GACPiD,UAAW,GACXhP,IAAK,IACLiP,MAAO,MAMPC,OAAQ,kBACN,yBAAK5N,UAAU,2BACb,0BAAMA,UAAU,gBACfsE,MAKT,OACE,6BACE,kBAAC,IAAD,CAAK+B,YAAU,uBAAuBiB,KAAM,IAC1C,kBAAC,IAAD,CAAKtH,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,GAAIxH,UAAU,2BAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,EAAGxH,UAAU,cAC9B,kBAAC,KAAD,CACE+N,YnChIO,cmCiIPxB,SAAUlN,KAAKkN,gBAO1BlN,KAAK0F,MAAMsb,WACV,kBAAC,KAAD,CAAOjc,QtBjJoB,yBsBiJYP,KAAK,QAAQ2M,UAAQ,IAE9D,kBAAC,IAAD,CAAMvC,SAAU5O,KAAK0F,MAAMmJ,OAAQ1H,KAAK,SACtC,yBAAKmD,GAAG,kBACN,kBAAC,KAAD,CACE4W,aAAcA,EACd9W,QAASA,EACTK,WAAYzK,KAAK0F,MAAM2H,WACvBhD,OAAO,uBAGX,yBAAK1J,UAAU,qBACb,kBAAC,KAAD,CACEA,UAAU,OACV6D,KAAK,YACLyF,MAAO,CAAEmX,OAAQ,SACjB9Z,QAAS,kBAAM,EAAKyP,eACpB/P,YAAU,eAET5B,GAEH,kBAAC,KAAD,CACEzE,UAAU,KACV6D,KAAK,UACL8C,QAAS,kBAAM,EAAKuZ,eACpB7Z,YAAU,eAET7B,U,GAtLoB7E,IAAMP,WAuM1B2H,oBARf,SAAyBhC,GAGvB,MAAO,CACLqV,cAHwBrV,EAAMqO,UAAxBgH,cAINhW,QAHkBW,EAAMX,QAAlBA,WAMK2C,CAAyB+Y,IC9MhCY,GAAavX,IAAbuX,SA2JOC,GAtJgB,SAAC,GAMzB,IAAD,EALJ7L,EAKI,EALJA,KACA8L,EAII,EAJJA,iBACAC,EAGI,EAHJA,eACAV,EAEI,EAFJA,eACAtB,EACI,EADJA,YACI,EACW3O,KAAKC,UAAbC,EADH,oBAUE0Q,EAAoBX,EAAeY,aAAatI,KACpD,SAACuI,GAAD,OAAaA,EAAQzG,UAAY,IAAMyG,EAAQxG,YAGzClK,EAAgBC,KAAhBD,YAER,OACE,kBAAC,KAAD,CACEjK,YAAU,yBACVrG,UAAU,yBACV2F,KAAK,iBACLyK,KAAMA,GAEN,kBAAC,KAAK1J,KAAN,CAAWf,KAAK,iBACd,oCACE,kBAAC,GAAD,CACEyZ,WAAS,EACTrI,UAAQ,EACR1F,UAAW,GACXzS,MAAOiiB,EAAe3B,cACtBvV,GAAG,gBACH3J,UAAU,+BACV6Q,QAAQ,oBAId,kBAAC,KAAKnK,KAAN,CAAWf,KAAK,eACd,oCACE,kBAAC,GAAD,CACEoR,UAAQ,EACR/W,UAAU,4BACVpB,MAAOiiB,EAAexU,YACtB1C,GAAG,cACHkH,QAAQ,kBAKd,kBAAC,KAAKnK,KAAN,CAAW1G,UAAU,oCACnB,oCACE,kBAACsQ,EAAD,CACEtQ,UAAU,wCACV2F,KAAK,QACL/G,MAAOiiB,EAAerB,MACtBvD,MAAO,CACL,CACEgF,UAAU,EACV/E,UAAU,EACV9X,QAAS,CAAE8K,kBAGf6H,UAAQ,MAId,yBAAK/W,UAAU,qBACb,yBAAKA,UAAU,8BACb,kBAAC,KAAK0G,KAAN,CAAWf,KAAK,UACd,oCACE,kBAAC,KAAD,CACE3F,UAAU,gBACVpB,MAAOiiB,EAAepB,OACtB5O,QAAQ,SACRkG,UAAQ,GAER,kBAAC,KAAOhF,OAAR,CAAenT,MAAM,KAAK0F,GAC1B,kBAAC,KAAOyN,OAAR,CAAenT,MAAM,KrC1FN,aqC0F4C,QAKnE,yBAAKoB,UAAU,8BACb,kBAAC,KAAK0G,KAAN,CAAWf,KAAK,aACd,oCACE,kBAAC,IAAD,CACE3F,UAAU,gBACV6Q,QAAQ,cACRlH,GAAImX,EACJ/J,UAAQ,EACRnY,MAAOkiB,EAAkBI,KAAK,YAMxC,kBAAC,KAAKxa,KAAN,CAAW1G,UAAU,iBACnB,kBAAC,KAAK0G,KAAN,CAAW1G,UAAU,kBACnB,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,iDACb,0BAAMA,UAAU,oCACd,uBAAGA,UAAU,iCAAiCkF,KAAK,IAAIic,IAAI,IACxDvB,KAAgBiB,EAAehB,WAGlC,0BACE7f,UAAU,mEACVyN,MAAM,IAELoR,EAAYgC,EAAelB,sBAS1C,yBAAK3f,UAAU,qBACb,kBAAC,MAAD,GACE6D,KAAK,YACL7D,UAAU,QAFZ,sBAGO,aAHP,uBAIS,CAAEygB,OAAQ,UAJnB,0BAKW,UALX,0BArHgB,SAACzP,GACrBA,EAAEqB,iBACFyC,OAmHI,2BAOY,iBAPZ,GASGrQ,GAEH,kBAAC,KAAD,CACEZ,KAAK,UACL7D,UAAU,KACVoS,SAAS,SACTzL,QAhIgB,SAACqK,GACvB4P,KAgIMva,YAAU,iBpC7FE,aqCzBdkF,GAAY7D,IAAZ6D,QAEA0L,GAASC,KAATD,KAEFE,GAAQ,CACZ,CACE1J,MtCtBgC,csCuBhClH,QAAS,iBAEX,CACEkH,MtCzBgC,kBsC0BhClH,QAAS,kBAEX,CACEkH,MtC5BgC,mBsC6BhClH,QAAS,iBAITrG,GAAWC,EAAQ,IA6NRihB,GA5NS,SAAC9hB,GAAW,IAAD,EACH8O,mBAAS,GADN,mBAC1BpK,EAD0B,KACjBqT,EADiB,OAELjJ,oBAAS,GAFJ,mBAE1BF,EAF0B,KAElBoJ,EAFkB,OAGWlJ,mBAAS,CACnD8Q,cAAe,GACf7S,YAAa,GACboT,OAAQ,GACRD,MAAO,GACP6B,MAAO,GACP1B,cAAe,GACfE,SAAU,KAVqB,mBAG1BgB,EAH0B,KAGVS,EAHU,OAaqBlT,mBAAS,IAb9B,mBAa1B2Q,EAb0B,KAaLwC,EAbK,OAcWnT,mBAAS,CACnD2S,aAAc,GACdP,gBAAiB,GACjBJ,aAAc,KAjBiB,mBAc1BD,EAd0B,KAcVqB,EAdU,KAoB3BjS,EAAO,WACX8H,EAAWrT,EAAU,IAGjB8Q,EAAO,WACXuC,EAAWrT,EAAU,IA2BjB6a,EAAc,SAAClV,GACnB,OAAQA,GACN,IAAK,IACH,MtC7EyB,oBsC8E3B,IAAK,IACH,MtC9EgB,WsC+ElB,IAAK,IACH,MtC/Ec,SsCgFhB,IAAK,IACH,MtChFsB,iBsCiFxB,IAAK,IACH,MtCjFa,QsCkFf,IAAK,IACH,MtClFsB,iBsCmFxB,IAAK,IACH,MtCnFY,OsCoFd,QACE,MAAO,KA0Eb,OACE,oCACE,kBAAC,IAAD,CAAK3J,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,sBAAsBqG,YAAU,mBAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYf,WAAS,EAACzE,KAAMvB,IAC5B,kBAAC,GAAD,CAASU,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,2BACV,kBAAC,KAAWiH,KAAZ,KrCjJa,sBqCmJf,kBAAC,KAAWA,KAAZ,KrCjJsB,8BqCoJ1B,kBAAC,IAAD,CAAK1G,UAAU,QACb,wBAAIA,UAAU,QrClJ5B,qCqCoJY,kBAAC,KAAD,CAAOA,UAAU,OAAOgE,QAASA,GAC9BmT,GAAMsB,KAAI,SAACC,GAAD,OACT,kBAAC,GAAD,CAAMha,IAAKga,EAAKjL,MAAOA,MAAOiL,EAAKjL,YAGvC,kBAAC,IAAD,CAAMQ,SAAUC,EAAQ1H,KAAK,SAC3B,yBAAKxG,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,yBAAKtH,UAAU,iBACD,GAAXgE,EACC,kBAAC,GAAD,CACEuL,KAAMA,EACNqP,mBAAoBiC,EACpBpR,sBAtJI,SAACuB,GAC7BsQ,EAAkB,eAAKT,EAAN,gBAAuB7P,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAsJvC8Q,sBAnJI,SAAC9Q,EAAO+G,GACpC2b,EAAkB,eAAKT,EAAN,gBAAuBlb,EAAO/G,MAmJvB+Q,8BAhJY,SAACsC,EAAMtM,GAC3C2b,EAAkB,eAAKT,EAAN,gBAAuBlb,EAAOsM,MAkJvB6M,mBA/IC,SAAClgB,EAAO+G,GACjC4b,EAAuB3iB,IA+IC2f,QA5IV,SAACkD,EAAQ9X,GACvB2X,EAAkB,eACbT,EADY,CAEflB,cAAehW,EACfkW,SAAU4B,MAyIY5C,YAAaA,EACbE,oBAAqBA,EACrB1Y,YAAU,yBAEC,GAAXrC,EACF,kBAAC,GAAD,CACEuL,KAAMA,EACNuF,KAAMA,EACN+L,eAAgBA,EAChBV,eAAgBA,EAChBlL,sBA1HI,SAACuL,EAAiBO,GAAkB,IAAD,EAC3DW,EAAc,GACZ3d,EAAOZ,KAAK+G,MAAM1K,EAAe,SAMnCmiB,EALaZ,EAAa3T,QAC5B,kBAAYwU,EAAZ,EAAGvf,QAAH,QACE,UAACqf,SAAD,aAAC,EAAalU,MAAK,qBAAGnL,UAA2Buf,SAGhCC,QAAO,SAACC,EAAaC,GAYxC,OAXAD,EAAY/Y,KAAK,CACf1G,QAAS0f,EAAa1f,QACtB2f,YAAa,EACbC,iBAAkB,EAClBC,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,SAGrBoc,IACN,IACHJ,EAAW,UAAGA,SAAH,aAAG,EAAaS,OAAOR,GAClCH,EAAkB,eACbrB,EADY,CAEfK,gBAAiBA,EACjBO,aAAcA,EACdX,aAAcsB,QAiGmB,GAAX1d,EACF,kBAAC,GAAD,CACE8Q,KAAMA,EACN8L,iBAhGJ,gCAAAwB,EAAAC,OAAA,gDACdte,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjC0Z,EAAQlP,KAERnJ,EAAO,CACXyhB,eAAgB,CACd3c,KAAMkb,EAAe3B,cACrBqD,UAAW1B,EAAexU,YAC1BxK,WAAYgf,EAAerB,MAAM,GAC7B3T,KAAOgV,EAAerB,MAAM,IAAI1T,OAAO,cACvC,GACJnK,SAAUkf,EAAerB,MAAM,GAC3B3T,KAAOgV,EAAerB,MAAM,IAAI1T,OAAO,cACvC,GACJC,UAAW8U,EAAepB,OAC1B+C,gBAAiBpJ,SAASyH,EAAelB,eACzCuC,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5Bgc,YAAavB,EAAeC,cAGxBhgB,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGpBgX,GAAU,GACV5W,IAAMC,KAAKV,EAAW,WAAYY,EAAMT,GAASwD,MAAK,WACpDN,OAAOC,SAAW,6BAnCA,sCAiGIsd,eAAgBA,EAChBV,eAAgBA,EAChBtB,YAAaA,IAGf,c,8BCrPlBtT,GAAY7D,IAAZ6D,QAqEOkX,GAnEU,SAACnjB,GAAW,IAAD,EACE8O,oBAAS,GADX,mBAC3BoL,EAD2B,KACfC,EADe,KAMlC,OACE,kBAAC,IAAMlB,SAAP,MACmB,KAAfiB,EACA,kBAAC,IAAMjB,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMvB,EAAMuB,OAClC,kBAAC,GAAD,CAASwF,YAAU,YAAYrG,UAAU,IACvC,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,QtC4BD,sBsC1Bf,yBAAKA,UAAU,gEACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,yBAAKtH,UAAU,iBACb,yBACEH,IAAK6iB,KACL3iB,IAAI,iBACJC,UAAU,UAGd,uBAAGA,UAAU,oB5BnCnC,sD4BqCwB,6B5BnCxB,sC4BsCsB,kBAAC,IAAD,CAAKA,UAAU,iCACb,kBAAC,KAAD,CAASA,UAAU,UAErB,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,oDAEV,kBAAC,KAAD,CACEqG,YAAU,gBACVM,QA3CV,WACd8S,GAAc,IA2CU5V,KAAK,WtCLX,mBsCmBd,kBAAC,GAAD,QCIO8e,G,2MAjEb5d,MAAQ,CAAEwN,SAAS,G,EAEnBzJ,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,K,EAIbI,SAAW,WACT,EAAK7K,SAAS,CACZyK,SAAS,IAEX,EAAKqQ,iB,EAGP5P,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,K,+EAKX,IACMnS,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IACGuS,OAAOhT,EAAW,WAAaZ,KAAKC,MAAM4T,UAAW9S,GACrDwD,MAAK,WACJN,OAAOC,SAAW,6BAEnB4P,OAAM,SAAChP,S,+BAIV,OACE,oCACE,uBAAGwC,QAAStH,KAAKyJ,WvCGH,UuCFd,kBAAC,KAAD,CACE2E,MvCaoB,iBuCZpB8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,iBAEZ6F,OvC5BoB,MuC6BpBC,WvC5BmB,MuC8BnB,2B7BzDR,uD,G6BF+BvU,aCmDlByjB,G,2MAvCb9d,MAAQ,CACNwN,SAAS,G,EAGXyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIbyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIb0B,oBAAsB,SAAC1B,GACrB,EAAKzK,SAAS,CAAEyK,a,wEAIhB,OACE,oCACE,kBAAC,IAAD,CACEjM,UAAU,SACVC,SA5CO+P,EA4CUjX,KAAKC,MAAMuB,KA3CpC,6BACE,4BACE,kBAAC,IAAD,CAAMpB,GAAI,CAAEC,SAAU,qBAAsBqF,MAAOuR,IACjD,4BACE,uBAAGpR,KAAK,sBxC8CE,QwC9C8B,MAG5C,4BACE,kBAAC4d,GAAD,CACE5P,UAAWoD,EAAKyM,WAChBC,YAAa1M,EAAK3Q,WAkClBiB,QAAQ,QACR2L,QAASlT,KAAK0F,MAAMwN,QACpB4B,gBAAiB9U,KAAK4U,qBAEtB,0BAAMjU,UAAU,iBACd,yBAAKH,IAAKuU,KAAUrU,IAAI,UAAUC,UAAU,YAlDxC,IAACsW,M,GAkBY3W,IAAMP,W,UC4DpB6jB,GAhFQ,SAAC,GAAyC,IAAvCpiB,EAAsC,EAAtCA,KAAMqiB,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAAkB,EACjB/U,qBADiB,mBACvDgV,EADuD,KACvCC,EADuC,KAG9Dpc,qBAAU,WACRqc,MACC,CAACziB,IAEJ,IAAMyiB,EAAmB,WACvBD,EAAmBxiB,IAQf4I,EAAU,CACd,CAAEgE,MhCpBc,OgCoBDC,UAAW,aAAchP,IAAK,aAAciP,MAAO,OAClE,CACEF,MhCrBiB,UgCsBjBC,UAAW,cACXhP,IAAK,cACLiP,MAAO,MACP4V,UAAU,EACV3V,OAAQ,SAACsD,EAAKrI,GAAN,OACN,kBAAC,IAAD,CAAKvB,KAAM,GAAItH,UAAU,0CACvB,kBAAC,KAAD,CACEpB,MAAM,UACN4kB,QAAStS,EACTH,SAAU,SAACC,GAAD,OAAOmS,EAAYta,IAC7BkO,UAAQ,OAiBhB,CACEtJ,MAAO9C,GACP+C,UAAW,UACXhP,IAAK,UACLiP,MAAO,MACPC,OAAQ,SAAC6V,EAAM5a,GAAP,OACN,0BACElC,QAAS,SAACqK,IA3CD,SAACtS,EAAKsS,GACrBA,EAAEqB,iBACF6Q,EAAaxkB,GA0CLglB,CAAS7a,EAAQmI,IAEnBhR,UAAU,0FASlB,OACE,yBAAKA,UAAU,oBACb,kBAAC,KAAD,CACEA,UAAU,cACV2jB,OAPO,CACXC,UAAW,MAOPC,aAAc,iBAAM,gBACpBpa,QAASA,EACTK,WAAYsZ,EACZ1Z,OAAQ,a,UC9BDoa,I,OA5CI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,cAAenjB,EAAW,EAAXA,KAAW,EAC5BuN,oBAAS,GADmB,mBACnD6V,EADmD,KAC1CC,EAD0C,OAExB9V,mBAAS,IAFe,mBAEnD+V,EAFmD,KAExCC,EAFwC,KAoB1D,OACE,oCACGH,GACC,kBAAC,KAAD,CACE5d,YAAU,QACVjC,QAAO,UAAK+f,EAAL,0CACPtgB,KAAK,QACL2M,UAAQ,IAGZ,kBAAC,KAAD,CACEnK,YAAU,aAEVjG,QAAS2jB,EACThW,Y1CXuB,kB0CYvBsW,aAAc,SAACC,EAAYC,GAAb,OACsD,IAAlEA,EAAO3lB,MAAMkH,cAAckT,QAAQsL,EAAWxe,gBAEhDgM,SAAU,SAAC0S,EAAKD,GAAN,OAlCO,SAAC3lB,EAAO2lB,GAClB1jB,EAAKuM,QAAO,SAACqX,GAAD,OAAOA,EAAEpiB,UAAYkiB,EAAOliB,WAC1CoM,OAAS,GAChByV,GAAW,GACXE,EAAaxlB,IAGbolB,EAAcplB,EAAO2lB,GA2BQG,CAAeF,EAAKD,IAC/CxT,SAAU,kBAvBdmT,GAAW,QACXE,EAAa,UCJblkB,GAAWC,EAAQ,IACjBwkB,G,2MACJ5f,MAAQ,CACNwN,SAAS,EACTqS,iBAAkB,GAClBC,YAAa,GACbC,YAAa,GACb5W,QAAQ,G,EAGVpF,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,EACTwN,aAAc,GACd8E,YAAa,EAAKvlB,MAAMyhB,aAAapb,KACrCuN,UAAW,EAAK5T,MAAMyhB,aAAagC,WACnC7U,QAAQ,KAGVxK,EADqB,EAAKpE,MAAlBoE,UACCwW,MACT,EAAK6K,uB,EAGPA,oBAAsB,WACpB,IACM3kB,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACG3B,IACCkB,EAAW,wBAA0B,EAAKX,MAAMyhB,aAAagC,WAC7D3iB,GAEDwD,MAAK,SAACsN,GACL,EAAKpJ,SAAS,CACZ8c,iBAAkB1T,EAAIrQ,KACtBqN,QAAQ,Q,EAKhByE,SAAW,SAAC3B,GACV,EAAKlJ,SAAS,CACZyK,SAAS,IAGX,IACMnS,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACGC,KAAKV,EAAW,qBAAsB,EAAK8E,MAAM+f,YAAa1kB,GAC9DwD,MAAK,SAACsN,GACL,EAAK6T,sBACL,EAAKjd,SAAS,CACZgd,YAAa,QAGhB3R,OAAM,SAAChP,Q,EAGZgf,YAAc,SAACta,GACb,IAAI+b,EAAgB,aAAO,EAAK7f,MAAM6f,kBAClC7L,EAAQ6L,EAAiBI,WAC3B,SAACC,GAAD,OAAQA,EAAG5iB,UAAYwG,EAAOxG,WAEhCuiB,EAAiB7L,GAAjB,eACK6L,EAAiB7L,GADtB,CAEEiJ,aAAcnZ,EAAOmZ,cAEvB,EAAKla,SAAS,CAAE8c,qBAEhB,IAAIE,EAAW,aAAO,EAAK/f,MAAM+f,aAC7BI,EAASJ,EAAYE,WAAU,SAACC,GAAD,OAAQA,EAAG5iB,UAAYwG,EAAOxG,WACjEyiB,EAAYI,GAAZ,eACKJ,EAAYI,GADjB,CAEElD,aAAcnZ,EAAOmZ,cAEvB,EAAKla,SAAS,CAAEgd,iB,EAGlB9R,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,K,EAIb2Q,aAAe,SAACtkB,GAEHA,EAAMyD,QADjB,IAGM8iB,EACJ,EAAKpgB,MAAM+f,aACX,EAAK/f,MAAM+f,YAAY1X,QAAO,SAAU4T,GACtC,OAAOA,EAAQ3e,UAAYzD,EAAMyD,WAErC,EAAKyF,SAAS,CACZgd,YAAaK,IAEf,IACM/kB,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,kCAElBO,KAAMsC,KAAKC,UAAU,CAAEf,QAASzD,EAAMyD,WAExC3B,IACGuS,OAAOhT,EAAW,wBAA0BrB,EAAMmkB,WAAY3iB,GAC9DwD,MAAK,WACJ,EAAKmhB,yBAEN5R,OAAM,SAAChP,Q,EAGZiR,QAAU,SAACxW,EAAOwB,GAChB,IAAM2D,EAAOZ,KAAK+G,MAAM1K,EAAe,SADX,EAGc,EAAKuF,MAAvC6f,EAHoB,EAGpBA,iBAAkBE,EAHE,EAGFA,YACpBM,EAAI,CACRrC,WAAY,EAAKhe,MAAMmO,UACvB7Q,QAAS+W,SAAShZ,EAAQiC,SAC1B2f,aAAa,EACbC,kBAAkB,EAClB/gB,WAAYd,EAAQxB,OAEhBymB,EAAI,CACRtC,WAAY,EAAKhe,MAAMmO,UACvB7Q,QAAS+W,SAAShZ,EAAQiC,SAC1B2f,aAAa,EACbC,kBAAkB,EAClBC,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5B,EAAKoC,SAAS,CACZ8c,iBAAiB,GAAD,oBAAMA,GAAN,CAAwBQ,IACxCN,YAAY,GAAD,oBAAMA,GAAN,CAAmBO,O,+HAMf/E,GAAY,IACvBlG,EAAkB/a,KAAKC,MAAvB8a,cACF+K,EAAW,GACf,GAAI7E,EAAUlG,eAAiBA,EAAe,CAC5C,IAAK,IAAIkL,EAAI,EAAGA,EAAIlL,EAAc3L,OAAQ6W,IACxCH,EAASpc,KAAK,CACZnK,MAAOwb,EAAckL,GAAG/K,UAAU4H,OAChC,IACA/H,EAAckL,GAAG9K,UAEnBnY,QAAS+X,EAAckL,GAAGjjB,UAG9BhD,KAAKyI,SAAS,CAAEiY,aAAcoF,O,+BAKhC,OACE,oCACE,uBAAGxe,QAAStH,KAAKyJ,W3CvHL,Q2CwHZ,kBAAC,KAAD,CACE9I,UAAU,iBACVuS,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,gBACV7N,UAAW,qBAEb0T,O3C1IU,O2C2IVC,WAAYjP,GAEZ,6BjC9KoC,iCiC8KpC,IACoCrF,KAAK0F,MAAM8f,aAG/C,kBAAC,IAAD,CAAK7kB,UAAU,iCACb,kBAAC,IAAD,CAAKsH,KAAM,IAAK0D,KAGlB,kBAAC,IAAD,CAAMiD,SAAU5O,KAAK0F,MAAMmJ,OAAQ1H,KAAK,SACtC,kBAAC,GAAD,CACE3F,KAAMxB,KAAK0F,MAAM6f,iBACjB1B,aAAc7jB,KAAK6jB,aACnBC,YAAa9jB,KAAK8jB,eAGtB,kBAAC,IAAD,CAAKnjB,UAAU,qBACb,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,GAAD,CACEyc,WAAY1kB,KAAK0F,MAAMgb,aACvBiE,cAAe3kB,KAAK+V,QACpBvU,KAAMxB,KAAK0F,MAAM6f,mBAEnB,+BjCnMkB,4B,GiCtBFxlB,aA6Of2H,oBAXf,SAAyBhC,GAIvB,MAAO,CACLwgB,eAJyBxgB,EAAMygB,gBAAzBD,eAKNnL,cAJwBrV,EAAMqO,UAAxBgH,cAKNhW,QAJkBW,EAAMX,QAAlBA,WAQK2C,CAAyB4d,IClOpCzkB,GAAWC,EAAQ,IACfiJ,GAAWD,IAAXC,OAUAmC,IAPN,kBAAClC,GAAA,EAAD,CACEC,MAAO,CACLC,SAAU,GACVC,MAAO,aAIO9B,IAAZ6D,SA2ROka,G,YAxRb,WAAYnmB,GAAQ,IAAD,8BACjB,4CAAMA,KA2CRmM,cAAgB,SAAC5C,EAAQ6C,GACvB,IAAMhK,EAAUmH,EAAOlH,SAASgK,WAAW,MAAO,KAClD,GAAI,IAAIC,KAAS,IAAIA,KAAKlK,GAAU,CAClC,IAAMqC,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCqB,EAAO,CACX0hB,UAAW1Z,EAAO0Z,UAClBC,gBAAiB3Z,EAAO2Z,gBACxBO,WAAYla,EAAOka,WACnBpd,KAAMkD,EAAOlD,KACb9D,WAAYgK,KAAOhD,EAAOhH,WAAW8J,WAAW,MAAO,MAAMG,OAC3D,cAEFnK,SAAUkK,KAAOnK,EAAQiK,WAAW,IAAK,MAAMG,OAAO,cACtDC,UAAmB,WAARL,EAAmB,EAAI,EAClCga,WAAYtM,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAItBtF,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IACGuL,IAAIhM,EAAW,WAAaY,EAAKkiB,WAAYliB,EAAMT,GACnDwD,MAAK,WACJsI,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAOlD,KACPuF,KAEJ,EAAK5L,MAAMgN,0BAGfJ,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAOlD,KACPwF,MA/FW,EAiHnBoB,SAAW,SAAC3N,GAAW,IACbiC,EAAS,EAAKkE,MAAdlE,KACF2L,EAAW,EAAKC,SAAS5L,EAAMjC,GACrC,EAAKkJ,SAAS,CAAE4E,WAAYF,EAAUG,SAAU/N,KAlHhD,EAAKmG,MAAQ,CACXlE,KAAM,GACN6L,WAAY,GACZC,SAAU,IALK,E,iFASE,IAAD,OACZgZ,EAAatmB,KAAKC,MAAlBqmB,SACE,OAARA,QAAQ,IAARA,KAAU9Y,SAAQ,SAAC+Y,GACjBA,EAAQ/jB,WAAagK,KAAO+Z,EAAQ/jB,YACjCkL,MACAC,QACAlB,OAAO,kBACV8Z,EAAQjkB,SAAWkK,KAAO+Z,EAAQjkB,UAC/BoL,MACAC,QACAlB,OAAO,qBAEZzM,KAAKyI,SAAS,CAAEjH,KAAM8kB,IAAY,WAChC,EAAKpZ,SAAS,S,uDAIeU,GAAY,IACK,EADN,OACtC5N,KAAKC,MAAMqmB,WAAa1Y,EAAU0Y,WACpC,UAAA1Y,EAAU0Y,gBAAV,SAAoB9Y,SAAQ,SAAC+Y,GAC3BA,EAAQ/jB,WAAagK,KAAO+Z,EAAQ/jB,YACjCkL,MACAC,QACAlB,OAAO,kBACV8Z,EAAQjkB,SAAWkK,KAAO+Z,EAAQjkB,UAC/BoL,MACAC,QACAlB,OAAO,qBAEZzM,KAAKyI,SAAS,CAAEjH,KAAMoM,EAAU0Y,WAAY,WAC1C,EAAKpZ,SAAS,EAAKxH,MAAM4H,gB,+BA6DtBO,EAAKC,GACZ,OAAKA,GAA2B,KAAdA,GAAkC,OAAdA,EAG/BD,EAAIE,QAAO,SAAUC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAU9O,GACrC,GAAwB,kBAAb2O,EAAI3O,GACb,OAAO2O,EAAI3O,GAAKoH,cAAcoB,SAASiG,EAAUrH,qBAL9CoH,I,+BAiBD,IAAD,OACDzD,EAAU,CACd,CACEgE,MnCnJoB,emCoJpBC,UAAW,OACXhP,IAAK,OACLiP,MAAO,MACPC,OAAQ,SAACjI,GACP,MAAO,CACLkI,SAAUlI,EACVrG,MAAO,CACL,aAAc,mBAKtB,CACEmO,MnC/JkB,amCgKlBC,UAAW,aACXhP,IAAK,aACLiP,MAAO,MACPC,OAAQ,SAAC/L,GACP,MAAO,CACLgM,SAAUhM,EACVvC,MAAO,CACL,aAAc,iBAKtB,CACEmO,MnC5KgB,WmC6KhBC,UAAW,WACXhP,IAAK,WACLiP,MAAO,MACPC,OAAQ,SAACjM,GACP,MAAO,CACLkM,SAAUlM,EACVrC,MAAO,CACL,aAAc,eAKtB,CACEmO,MnCrLmB,cmCsLnBC,UAAW,GACXhP,IAAK,IACLiP,MAAO,MACPC,OAAQ,SAACmT,GACP,MAAO,CACLlT,SACE,6BACE,kBAAC,GAAD,CAAiBkT,aAAcA,KAGnCzhB,MAAO,CACL,aAAc,kBAKtB,CACEmO,MAAOhD,GACPiD,UAAW,GACXhP,IAAK,IACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SACuB,IAArBhF,EAAOkD,UACL,yBACE/L,UAAU,0BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,YAE1C,0BAAM7I,UAAU,gBACfsE,GAGH,yBACEtE,UAAU,4BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,c7CnP7B,a6CwPnBvJ,MAAO,CACL,aAAc,aAKtB,CACEmO,MAAO,GACPC,UAAW,GACXhP,IAAK,IACLiP,MAAO,KACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SAAU,kBAAC,GAAD,CAAgBhN,KAAMgI,IAChCvJ,MAAO,CACL,aAAc,cAOxB,OACE,oCACE,kBAAC,IAAD,CAAKU,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMxB,KAAKC,MAAMuB,OACvC,kBAAC,GAAD,CAASb,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,4B5C3Ne,sB4C6NjB,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,GAAIxH,UAAU,2BAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,EAAGxH,UAAU,cAC9B,kBAAC,GAAD,CACE+N,Y5CpQN,S4CqQMxB,SAAUlN,KAAKkN,cAMvB,kBAAC,IAAD,CACEjF,KAAM,GACNE,GAAI,EACJxH,UAAU,iDAEV,kBAAC,IAAD,CAAMP,GAAG,wBACP,kBAACuO,GAAD,CAASpP,MAAM,uBAKvB,kBAAC,IAAD,CAAMqP,SAAU5O,KAAKC,MAAM4O,OAAQ1H,KAAK,SACtC,kBAAC,GAAD,CACEkD,OAAO,aACPD,QAASA,EACT5I,KAAMxB,KAAK0F,MAAM2H,uB,GA7QP/M,IAAMP,WCKrB2H,oBAPf,SAAyBhC,GAEvB,MAAO,CACL8gB,aAFuB9gB,EAAM+gB,YAAvBD,gBAMK9e,EA1CU,SAACzH,GAAW,IAAD,EACQ8O,oBAAS,GADjB,mBAC3B3C,EAD2B,KACZsO,EADY,OAEN3L,oBAAS,GAFH,mBAE3BF,EAF2B,KAEnBoJ,EAFmB,KAIlCrQ,qBAAU,YAERvD,EADqBpE,EAAboE,WCD0B,SAACA,GAC/B,OAAOsW,GAAY+L,cAAcniB,MAAK,SAAC/C,GAOnC,OANA6C,EAAS,CACLG,KhDHe,kBgDIfC,QAAQ,CAAC+hB,aAAahlB,EAAKA,QAIxBoD,QAAQC,aAEnB,SAACC,GACG,IAAMC,EACLD,EAAMvD,UACHuD,EAAMvD,SAASC,MAAQsD,EAAMvD,SAASC,KAAKuD,SAC3CD,EAAMC,SACND,EAAMhD,WASV,OARAuC,EAAS,CACLG,KhDlBY,iBgDqBhBH,EAAS,CACLG,KhD5BW,cgD6BXC,QAAQM,IAELH,QAAQI,iBDrBtB,CAACoH,IAEJxE,qBAAU,WACmB,OAAvB3H,EAAMumB,aACRvO,GAAU,GACsB,OAAvBhY,EAAMumB,cACfvO,GAAU,KAEX,CAAChY,EAAMumB,eAMV,OAAQ3X,GACiB,OAAvB5O,EAAMumB,cACwB,IAA9BvmB,EAAMumB,aAAapX,OAGnB,kBAAC,GAAD,CACEkX,SAAUrmB,EAAMumB,aAChBvZ,gBAXoB,WACtByN,GAAkBtO,IAWhB5K,KAAMvB,EACN4O,OAAQA,IANV,kBAAC,GAAD,CAAkBrN,KAAMvB,OEsDb0mB,GA9EY,SAAC,GAMrB,IALL7C,EAKI,EALJA,YACA8C,EAII,EAJJA,YACAC,EAGI,EAHJA,qBACAxE,EAEI,EAFJA,YACAyE,EACI,EADJA,eACI,EAC0B/X,oBAAS,GADnC,mBACGmE,EADH,KACY6T,EADZ,KAgBJ,OACE,oCACE,kBAAC,KAAD,CAAQviB,KAAK,UAAU8C,QAAS,kBAflB,EAAAyb,EAAAC,OAAA,gDAChB+D,GAAW,GADK,uC/CyDE,U+CvChB,kBAAC,KAAD,CACEpmB,UAAU,iBACVuS,QAASA,EACTc,KAAM,kBAhBV+S,GAAW,QACXD,KAgBI7S,SAAU,WAZd8S,GAAW,IAaP7S,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,gBACV7N,UAAW,qBAEb0T,O/C0BY,O+CzBZC,WAAYjP,GAEZ,6BACG2hB,0BAA2B,IAC5B,2BAAIH,EAAqBhH,eAF3B,I/C/Ce,U+CkDb,6BAHF,IAGS,0BAAMlf,UAAU,eAAhB,KAAuC,KAEhD,6BACE,kBAAC,IAAD,CAAKA,UAAU,gBACb,kBAAC,IAAD,CAAKsH,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GAAItH,UAAU,qBACtBgL,KAGJib,GACCA,EAAYxN,KAAI,SAACC,GACf,IAAIiJ,EAAMD,EAAY4E,MAAK,SAACC,GAAD,OAAOA,EAAElkB,UAAYqW,EAAKrW,WACrD,OACE,kBAAC,IAAD,CAAKrC,UAAU,sCACb,kBAAC,IAAD,CAAKsH,KAAM,IAAX,UAAmBoR,EAAK6B,UAAxB,YAAqC7B,EAAK8B,WAC1C,kBAAC,IAAD,CAAKlT,KAAM,IACT,kBAAC,KAAD,CACEkc,WAAS7B,GAA2B,IAApBA,EAAIK,aACpBjL,UAAQ,EACRhG,SAAU,SAACC,GAAD,OAAOmS,EAAYzK,e,gFCxEtC8N,GAAgB,SAAC3lB,EAAM4lB,GA4ClC,OA1CoB5lB,EACjBuM,QACC,SAACsL,GAAD,OACEA,EAAKgO,gBAAgBC,cAAczf,SAASuf,EAAIE,gBAChDjO,EAAKkO,4BACFD,cACAzf,SAASuf,EAAIE,gBAChBjO,EAAK2G,aAAasH,cAAczf,SAASuf,EAAIE,gBAC7CjO,EAAKtU,QAAQuiB,cAAczf,SAASuf,EAAIE,kBAE3ClO,KAAI,SAACC,GACJ,IAAIgO,EAAkBhO,EAAKgO,gBAAgBpV,QACzC,IAAIuV,OAAOJ,EAAK,OAChB,SAACK,GAAD,iEACsDA,EADtD,cAGEF,EAA8BlO,EAAKkO,4BAA4BtV,QACjE,IAAIuV,OAAOJ,EAAK,OAChB,SAACK,GAAD,iEACsDA,EADtD,cAGE9D,EAActK,EAAK2G,aAAa/N,QAClC,IAAIuV,OAAOJ,EAAK,OAChB,SAACK,GAAD,iEACsDA,EADtD,cAGEC,EAAcrO,EAAKtU,QAAQkN,QAC7B,IAAIuV,OAAOJ,EAAK,OAChB,SAACK,GAAD,iEACsDA,EADtD,cAGF,OAAO,eACFpO,EADL,CAEEgO,gBAAiBA,EACjBE,4BAA6BA,EAC7BxiB,QAAS2iB,EACTnB,QAAS,CACPjgB,KAAMqd,EACND,WAAYrK,EAAKqK,kB,kBCbvB7iB,GAAWC,EAAQ,IACVoL,GAAU,SAACjM,GAAW,IAAD,EACJ8O,mBAAS,IADL,mBACzBqR,EADyB,KACjBuH,EADiB,OAEQ5Y,mBAAS,IAFjB,mBAEzB6Y,EAFyB,KAEXC,EAFW,OAGF9Y,mBAAS,IAHP,mBAGzBwX,EAHyB,KAGhBuB,EAHgB,OAIQ/Y,mBAAS,IAJjB,mBAIzBgZ,EAJyB,KAIXC,EAJW,OAKIjZ,mBAAS,IALb,mBAKzBkZ,EALyB,KAKbC,EALa,OAMInZ,mBAAS,IANb,mBAMzBoZ,EANyB,KAMbC,EANa,OAOErZ,mBAAS,IAPX,mBAOzBsZ,EAPyB,KAOdC,EAPc,OAQoBvZ,mBAAS,IAR7B,mBAQzBwZ,EARyB,KAQLC,EARK,OASoBzZ,mBAAS,IAT7B,mBASzB0Z,EATyB,KASLC,EATK,OAUkB3Z,mBAAS,IAV3B,mBAUzB4Z,EAVyB,KAUNC,EAVM,OAWc7Z,mBAAS,IAXvB,mBAWzB8Z,EAXyB,KAWRC,GAXQ,QAYc/Z,mBAAS,IAZvB,qBAYzBga,GAZyB,MAYRC,GAZQ,SAaYja,mBAAS,IAbrB,qBAazBka,GAbyB,MAaTC,GAbS,MAehCthB,qBAAU,WACR,IAAMiS,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGpBI,IACG3B,IACCkB,EACE,sBACAmZ,SACElZ,GAASa,IAAIyE,QAAQzB,EAAKhC,UAAUM,QAAS,cAAclB,SACzDjB,GAASuF,IAAIC,OAGnBtF,GAEDwD,MAAK,SAACsN,GACL,IAAIrQ,EAAO,GACXqQ,EAAIrQ,KAAK4X,KAAI,SAAC7Z,GAAD,OACXiC,EAAKkI,KAAK,CACRwF,MAAO3P,EAAMygB,aACbzgB,MAAOA,EAAMmkB,gBAGjBsE,EAAgBxmB,QAEnB,IAEHoG,qBAAU,gBACwBuhB,IAA5BlpB,EAAMmpB,aAAa5kB,MAAuBvE,EAAMiT,SAClDmW,IAAc,KAEf,CAACzB,EAAcxH,EAAQmG,IAE1B3e,qBAAU,WACR,GAAgC,iBAA5B3H,EAAMmpB,aAAa5kB,KAAyB,CAC9C,IAAM8kB,EAAgBT,EAAgB9a,QACpC,SAACwb,GAAD,OAAQA,EAAGhqB,QAAUU,EAAMmpB,aAAa7pB,SAEpCiqB,EAAQ5B,EAAa7Z,QACzB,SAAC0b,GAAD,OAAQA,IAAOxpB,EAAMmpB,aAAa7pB,SAEpCsoB,EAAgB2B,GAChBV,GAAmBQ,GAErB,GAAgC,mBAA5BrpB,EAAMmpB,aAAa5kB,KAA2B,CAChD,IAAMklB,EAAgBX,GAAgBhb,QACpC,SAACwb,GAAD,OAAQA,EAAGhqB,QAAUU,EAAMmpB,aAAa7pB,SAEpCoqB,EAAQpD,EAAQxY,QAAO,SAAC0b,GAAD,OAAQA,IAAOxpB,EAAMmpB,aAAa7pB,SAC/DuoB,EAAW6B,GACXX,GAAmBU,GAErB,GAAgC,kBAA5BzpB,EAAMmpB,aAAa5kB,KAA0B,CAC/C,IAAMolB,EAAeX,GAAelb,QAClC,SAACwb,GAAD,OAAQA,EAAGhqB,QAAUU,EAAMmpB,aAAa7pB,SAEpCsqB,EAAWzJ,EAAOrS,QAAO,SAAC0b,GAAD,OAAQA,IAAOxpB,EAAMmpB,aAAa7pB,SACjEooB,EAAUkC,GACVX,GAAkBU,MAEnB,CAAC3pB,EAAMmpB,eAEV,IAAMU,GAAiB,CACrB,CAAE5a,MlD7F2B,MkD6FD3P,MAAO,GACnC,CAAE2P,MlD7F8B,SkD6FD3P,MAAO,GACtC,CAAE2P,MlD7F4B,OkD6FD3P,MAAO,IAEhCwqB,GAAgB,CACpB,CAAE7a,MlD7FoB,MkD6FD3P,MAAO,GAC5B,CAAE2P,MlDhGqB,OkDgGD3P,MAAO,GAC7B,CAAE2P,MlDhGuB,SkDgGD3P,MAAO,IAE3ByqB,GAAiBjC,EAYjBsB,GAAgB,SAAC1U,GACrB,IAAIsV,EAAc,eACZ7J,EAAOhR,OAAS,GAAK,CAAE1C,UAAW0T,GADtB,GAEZwH,EAAaxY,OAAS,GAAK,CAAE8a,iBAAkBtC,GAFnC,GAGZrB,EAAQnX,OAAS,GAAK,CAAEsU,WAAY6C,IAE1C+B,EAAalI,GACb8H,EAAcN,GACdQ,EAAc7B,GACdmC,EAAsBK,IACtBH,EAAqBK,IACrBT,EAAsBK,GACtB,IAAMhP,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCmN,EAAWnN,EAAe,YAC1BY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdkpB,EACJvpB,EACA,yCACAmZ,SACElZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAEtB+jB,EAAU,eACXH,EADW,CAEdvG,WACEuG,EAAevG,YAAcuG,EAAevG,WAAW5hB,WACzD4K,UACEud,EAAevd,WAAaud,EAAevd,UAAU5K,WACvDooB,iBACED,EAAeC,kBACfD,EAAeC,iBAAiBpoB,aAE9BuoB,EACmB,KAAvBpqB,EAAMqqB,aACFH,EAAU,WAAarmB,KAAKC,UAAUqmB,GACtCD,EACA,WACArmB,KAAKC,UAAUqmB,GACf,WACAnqB,EAAMqqB,aAERC,EAAe,GACnBlpB,IAAM3B,IAAI2qB,EAAUtpB,GAASwD,MAAK,SAACsN,GAG/B0Y,GAFU,OAARjd,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,EAEN+X,GAActV,EAAIrQ,KAAM8L,GAExBuE,EAAIrQ,KAErBvB,EAAMuqB,0BACJD,EACA,QACA1B,EACAI,GACAF,OAGApU,GACF1U,EAAM0U,QA+FV,OACE,6BACE,kBAAC,IAAD,CAAK1M,KAAM,GAAIgC,MAAO,CAAEqE,MAAO,UAC7B,yBAAK3N,UAAU,IACb,kBAAC,IAAD,CAAKA,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAK,MACR,4BjD5NQ,WiD8NV,kBAAC,IAAD,CAAKA,KAAK,KAAKtH,UAAU,8BACvB,kBAAC,KAAD,CACE6D,KAAK,OACL7D,UAAU,iBACV2G,QAAS,kBApDH,WAClB,IAAMuS,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCmN,EAAWnN,EAAe,YAC1BY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdkpB,EACJvpB,EACA,yCACAmZ,SACElZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAGxBkkB,EAAe,GACnBlpB,IAAM3B,IAAIyqB,EAASppB,GAASwD,MAAK,SAACsN,GAG9B0Y,GAFU,OAARjd,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,EAEN+X,GAActV,EAAIrQ,KAAM8L,GAExBuE,EAAIrQ,KAErBvB,EAAMuqB,0BAA0BD,EAAc,QAAS,GAAI,GAAI,IAC/D1C,EAAgB,IAChBiB,GAAmB,IACnBnB,EAAU,IACVuB,GAAkB,IAClBF,GAAmB,IACnBlB,EAAW,OAEb7nB,EAAM0U,OAeqB8V,KjDjOV,WiDwOX,kBAAC,KAAD,CAAS9pB,UAAU,oBACnB,kBAAC,cAAD,CACE+pB,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,GAEX,kBAAC,IAAD,CAAKnqB,UAAU,+CACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAKsH,KAAK,KAAKtH,UAAU,oBACvB,4BjDlPW,kBiDoPb,kBAAC,IAAD,CAAKsH,KAAK,MACR,kBAAC,KAAS8iB,MAAV,CACEpqB,UAAU,8BACV2F,KAAK,eACLvF,QAAS+oB,GACTvqB,MAAOqoB,EACPlW,SA/FlB,SAA4BsZ,GAC1B,IAAIC,EAAWpC,EACXmC,EAAc5b,OAAS,EACzB4b,EAAc5R,KAAI,SAAC+L,GACZ8F,EAAShE,MAAK,SAACsC,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAGtC8F,EAAWA,EAASld,QAAO,SAACwb,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAFhD8F,EAASvhB,KAAKogB,GAAe7C,MAAK,SAACiE,GAAD,OAASA,EAAI3rB,QAAU4lB,SAM7D8F,EAAW,GAEbnC,GAAmBmC,GACnBpD,EAAgBmD,QAsFN,yBAAKrqB,UAAU,cACb,kBAAC,IAAD,CAAKsH,KAAK,KAAKtH,UAAU,oBACvB,4BAAKyK,KAEP,kBAAC,IAAD,CAAKnD,KAAK,MACR,kBAAC,KAAS8iB,MAAV,CACEpqB,UAAU,8BACV2F,KAAK,SACL/G,MAAO6gB,EACPrf,QAASgpB,GACTrY,SAhJlB,SAAsBsZ,GACpB,IAAIC,EAAWhC,GACX+B,EAAc5b,OAAS,EACzB4b,EAAc5R,KAAI,SAAC+L,GACZ8F,EAAShE,MAAK,SAACsC,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAGtC8F,EAAWA,EAASld,QAAO,SAACwb,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAFhD8F,EAASvhB,KAAKqgB,GAAc9C,MAAK,SAACiE,GAAD,OAASA,EAAI3rB,QAAU4lB,SAM5D8F,EAAW,GAEb/B,GAAkB+B,GAClBtD,EAAUqD,QAsIA,yBAAKrqB,UAAU,cACb,kBAAC,IAAD,CAAKsH,KAAK,KAAKtH,UAAU,oBACvB,4BjD/VK,YiDiWP,kBAAC,IAAD,CAAKsH,KAAK,MACR,kBAAC,KAAS8iB,MAAV,CACEpqB,UAAU,8BACV2F,KAAK,UACLvF,QAASipB,GACTzqB,MAAOgnB,EACP7U,SA7IlB,SAAuBsZ,GACrB,IAAIC,EAAWlC,GACXiC,EAAc5b,OAAS,EACzB4b,EAAc5R,KAAI,SAAC+L,GACZ8F,EAAShE,MAAK,SAACsC,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAGtC8F,EAAWA,EAASld,QAAO,SAACwb,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAFhD8F,EAASvhB,KAAKsgB,GAAe/C,MAAK,SAACiE,GAAD,OAASA,EAAI3rB,QAAU4lB,SAM7D8F,EAAW,GAEbjC,GAAmBiC,GACnBnD,EAAWkD,WAsIP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/iB,KAAK,KAAKtH,UAAU,mBACvB,kBAAC,KAAD,CACE6D,KAAK,UACL7D,UAAU,OACV2G,QAAS,kBAAM+hB,IAAc,KjDlStB,SiDsST,kBAAC,KAAD,CAAQ7kB,KAAK,YAAY8C,QA/PlB,SAACqK,GAChBkW,EAAgBI,GAChBN,EAAUU,GACVP,EAAWK,GACXW,GAAmBP,GACnBW,GAAkBP,GAClBK,GAAmBP,GACnBxoB,EAAM0U,SAyPKtP,QAgDA8lB,G,2MAtCbzlB,MAAQ,CACNwN,SAAS,G,EAGXyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIb0B,oBAAsB,SAAC1B,GACrB,EAAKzK,SAAS,CAAEyK,a,wEAGhB,OACE,oCACE,kBAAC,IAAD,CACEjM,UAAU,SACVC,QACE,kBAAC,GAAD,CACEyN,KAAM3U,KAAK2U,KACX2V,aAActqB,KAAKC,MAAMqqB,aACzBlB,aAAcppB,KAAKC,MAAMmpB,aACzBoB,0BAA2BxqB,KAAKC,MAAMuqB,0BACtCtX,QAASlT,KAAK0F,MAAMwN,UAGxB3L,QAAQ,QACR2L,QAASlT,KAAK0F,MAAMwN,QACpB4B,gBAAiB9U,KAAK4U,qBAEtB,0BAAMjU,UAAU,2B,GAhCEL,IAAMP,W,qBCtX9Bc,GAAWC,EAAQ,IACfugB,GAAavX,IAAbuX,SAgHO+J,G,YA9Gb,WAAYnrB,GAAQ,IAAD,8BACjB,4CAAMA,KAORwJ,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,KAVM,EAcnBI,SAAW,WACT,EAAK7K,SAAS,CACZyK,SAAS,IAGX,IAAM2G,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SAEjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAIhBO,EAAO,CACT6pB,UAAW,EAAK3lB,MAAM4lB,SACtBjE,gBAAiB,EAAKpnB,MAAMsrB,QAC5B1I,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5BhF,IAAMC,KAAKV,EAAW,YAAaY,EAAMT,GAASwD,MAAK,SAACsN,GACnC,MAAfA,EAAIuO,SACN,EAAK3X,SAAS,CAAE6iB,SAAU,KAC1B,EAAKE,QAAQ7mB,QAAQ8mB,cACrB,EAAKxrB,MAAMyrB,YAAY7Z,EAAIrQ,KAAK6lB,sBA7CnB,EAkDnB1T,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,EACToY,SAAU,KAEZ,EAAKE,QAAQ7mB,QAAQ8mB,eAvDJ,EA0DnBE,aAAe,SAACha,GACd,EAAKlJ,SAAS,CAAE6iB,SAAU3Z,EAAEuF,OAAO3X,SAzDnC,EAAKisB,QAAUlrB,IAAMsrB,YACrB,EAAKlmB,MAAQ,CACXwN,SAAS,EACToY,SAAU,IALK,E,sEA8DT,IAAD,OACP,OACE,oCACE,kBAAC,KAAD,CAAQhkB,QAAStH,KAAKyJ,UAAWjF,KAAK,OAAO7D,UAAU,kBACrD,0BAAMA,UAAU,yBlDYD,ekDTjB,kBAAC,KAAD,CACEA,UAAU,aACVyN,MlDOe,ckDNf8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,gBACV7N,UAAW,qBAEb0T,OlD9DoB,MkD+DpBC,WlDjEkB,UkDmElB,kBAAC,IAAD,CAAK3T,UAAU,OAAOqG,YAAU,aAC9B,kBAAC,KAAD,CACErG,UAAU,iBACV2F,KAAK,iBACLyV,IAAK/b,KAAKwrB,SAEV,kBAAC,KAAKnkB,KAAN,CAAW1G,UAAU,OAAO2F,KAAK,gBAC/B,kBAAC,GAAD,CACE3F,UAAU,gBACV+N,YlDjBM,gBkDkBN8C,QAAQ,eACRjS,MAAOS,KAAK0F,MAAM4lB,SAClB5Z,SAAU,SAACC,GAAD,OAAO,EAAKga,aAAaha,e,GApG7BrR,IAAMP,WCXtB8rB,GAAcC,KAAdD,UAmEOE,G,2MAhEbrmB,MAAQ,CACNsmB,QAAQ,EACRC,QAAS,EACTC,UAAW,GACXC,eAAgB,I,EAGlBC,WAAa,WACX,EAAK3jB,SAAS,CACZujB,QAAQ,EACRC,QAAU,EAAKvmB,MAAMsmB,OAEjB,EAAKtmB,MAAMumB,QAAU,EADrB,EAAKvmB,MAAMumB,QAAU,K,EAK7BI,UAAY,WACV,EAAK5jB,SAAS,CACZujB,QAAQ,EACRC,QAAU,EAAKvmB,MAAMsmB,OAEjB,EAAKtmB,MAAMumB,QAAU,EADrB,EAAKvmB,MAAMumB,QAAU,K,+EAKb5S,GACd,OACE,yBAAK1Y,UAAU,mBAAmBtB,IAAKW,KAAK0F,MAAMumB,SAChD,0BAAMtrB,UAAU,aACb6L,KAAO6M,EAAKiT,YAAY5e,MAAMC,QAAQlB,OAAO,kCAAyB,IACtE4M,EAAKxX,WAFR,IAEqBwX,EAAKrX,WAE1B,kBAAC6pB,GAAD,CACEU,SAAU,CACRC,KAAM,EACNC,YAAY,EACZC,OAAQ,YACRC,SAAU3sB,KAAKosB,aAGhB/S,EAAKgS,c,+BAMJ,IAAD,OACP,OAAOrrB,KAAKC,MAAM2sB,UAAUxT,KAAI,SAACC,GAAD,OAC9B,yBAAK1Y,UAAU,YAAYqG,YAAU,cAClC,EAAK6lB,gBAAgBxT,GACrB,EAAK3T,MAAMsmB,QACV,uBACEhlB,YAAU,WACVrG,UAAU,6BACV2G,QAAS,EAAK+kB,WnDcD,qB,GmDrEAtsB,aCoFV+sB,IAlFOhB,KAAdD,U,YAGN,WAAY5rB,GAAQ,IAAD,8BACjB,4CAAMA,KASRyR,SAAW,SAAC8a,GACV,EAAK/jB,SAAS,CAAE+jB,UAThB,EAAK9mB,MAAQ,CACX8mB,KAAM,EACNO,MAAO,GACPZ,eAAgB,IAElB,EAAKa,SAAW,EAAKA,SAASxnB,KAAd,gBAPC,E,iFAejBxF,KAAKyI,SAAS,CAAE0jB,eAAgBnsB,KAAKC,MAAMonB,kBAC3CrnB,KAAKgtB,SAAShtB,KAAKC,MAAMonB,mB,+BAGlB8E,GAAiB,IAAD,OAEjBprB,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,kCAElBgsB,OAAQ,CAAE5F,gBAAiB8E,IAG7B9qB,IAAM3B,IAAIkB,EAAW,YAAaG,GAASwD,MAAK,SAACsN,GAC/C,EAAKpJ,SAAS,CACZskB,MAAOlb,EAAIrQ,Y,+BAKP,IAAD,OACCurB,EAAU/sB,KAAK0F,MAAfqnB,MACR,OACE,oCACE,yBAAKziB,GAAG,YAAY3J,UAAWX,KAAKC,MAAMitB,MAAOlmB,YAAU,SACzD,2BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKiB,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,uEACb,kBAAC,IAAD,CAAKsH,KAAK,MACR,4BpDmCC,UoDjCH,kBAAC,KAAD,CACEX,QAAStH,KAAKyJ,UACdjF,KAAK,OACL7D,UAAU,4CAEV,0BACEA,UAAU,wBACV2G,QAAS,SAACqK,GAAD,OAAO,EAAK1R,MAAMktB,aAAaxb,QAI9C,kBAAC,KAAD,CAAShR,UAAU,eACnB,kBAAC,IAAD,CAAKsH,KAAK,KAAKtH,UAAU,QACvB,kBAAC,GAAD,CACE4qB,QAASvrB,KAAKC,MAAMonB,gBACpBqE,YAAa1rB,KAAKgtB,WAEpB,kBAAC,IAAD,CAAKrsB,UAAU,eACb,kBAAC,GAAD,CAAYisB,UAAWG,e,GApExBhtB,c,UCWbqtB,GAAY,CAChB,CAAE9iB,GAAI,EAAGhE,KtDEe,yBsDDxB,CAAEgE,GAAI,EAAGhE,KtDEe,gCsDDxB,CAAEgE,GAAI,EAAGhE,KtDEe,kBsDDxB,CAAEgE,GAAI,EAAGhE,KtDEgB,8BsDCrB+mB,GAAa,CACjB,CAAE/iB,GAAI,EAAGhE,KtDNe,OsDOxB,CAAEgE,GAAI,EAAGhE,KtDTgB,QsDUzB,CAAEgE,GAAI,EAAGhE,KtDTkB,WsDYvBgnB,GAAmB,CACvB,CAAEhjB,GAAI,EAAGhE,KtDjBsB,OsDkB/B,CAAEgE,GAAI,EAAGhE,KtDjByB,UsDkBlC,CAAEgE,GAAI,EAAGhE,KtDjBuB,SsDsJnBinB,G,YAjIb,aAAe,IAAD,8BACZ,+CACK7nB,MAAQ,CACX8nB,QAAS,GACTC,SAAU,IAEZ,EAAKC,WAAa,EAAKA,WAAWloB,KAAhB,gBANN,E,0EAUe,KAAvBxF,KAAK0F,MAAM8nB,QACbxtB,KAAKyI,SAAS,CACZ+kB,QAAS,cAGXxtB,KAAKyI,SAAS,CACZ+kB,QAAS,O,0CAMbxtB,KAAK2tB,aAAa3tB,KAAKC,MAAMonB,mB,mCAGlB8E,GAAiB,IAAD,OAErBprB,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACG3B,IACCkB,EAAW,4CAA8CurB,EACzDprB,GAEDwD,MAAK,SAACsN,GACL,EAAKpJ,SAAS,CAAEglB,SAAU5b,EAAIrQ,Y,kCAIxBosB,GACV,IAAIxG,EAAM,GAqBV,OApBAgG,GAAUhU,KAAI,SAACyU,GACTA,EAAEvjB,KAAOsjB,EAASE,qBACpB1G,EAAMyG,EAAEvnB,KACJsnB,EAASG,cACXV,GAAWjU,KAAI,SAACC,GACVuU,EAASG,cAAgB1U,EAAK/O,KAChC8c,EAAMA,EAAM,OAAS/N,EAAK/S,KAAO,WAKnCsnB,EAASI,qBACXV,GAAiBlU,KAAI,SAACC,GAChBuU,EAASI,qBAAuB3U,EAAK/O,KACvC8c,EAAMA,EAAM,OAAS/N,EAAK/S,KAAO,eAMpC8gB,I,+BAGC,IAAD,OACCqG,EAAaztB,KAAK0F,MAAlB+nB,SACR,OACE,oCAEE,yBAAKnjB,GAAG,YAAY3J,UAAWX,KAAKC,MAAMitB,OACxC,2BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjlB,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,uEACb,kBAAC,IAAD,CAAKsH,KAAK,MACR,4BrDhDI,aqDkDN,kBAAC,KAAD,CACEX,QAAStH,KAAKyJ,UACdjF,KAAK,OACL7D,UAAU,4CAEV,0BACEA,UAAU,wBACV2G,QAAS,SAACqK,GAAD,OAAO,EAAK1R,MAAMguB,gBAAgBtc,QAIjD,kBAAC,KAAD,CAAShR,UAAU,eACnB,kBAAC,cAAD,CACE+pB,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,GAEX,kBAAC,IAAD,CAAK7iB,KAAK,KAAKtH,UAAU,aACvB,kBAAC,KAAD,KACG8sB,EAASrU,KAAI,SAACC,GAAD,OACZ,kBAAC,KAAShS,KAAV,KACE,0BAAM1G,UAAU,aACb6L,KAAO6M,EAAKiT,YACV5e,MACAC,QACAlB,OAAO,iCAAwB,IACjC4M,EAAK/S,MAER,6BACCia,KAAgB,EAAK2N,YAAY7U,oB,GAnHrCtZ,aCiDRouB,G,YAlFb,aAAe,IAAD,8BACZ,+CACKzoB,MAAQ,CACX8nB,QAAS,GACTY,WAAY,IAEd,EAAKV,WAAa,EAAKA,WAAWloB,KAAhB,gBANN,E,0EAUe,KAAvBxF,KAAK0F,MAAM8nB,QACbxtB,KAAKyI,SAAS,CACZ+kB,QAAS,cAGXxtB,KAAKyI,SAAS,CACZ+kB,QAAS,O,0CAKbxtB,KAAKquB,WAAWruB,KAAKC,MAAMyjB,c,iCAGlB7P,GAAY,IAAD,OAEd9S,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACG3B,IAAIkB,EAAW,sBAAwBiT,EAAW9S,GAClDwD,MAAK,SAACsN,GACL,EAAKpJ,SAAS,CAAE2lB,WAAYvc,EAAIrQ,Y,+BAI5B,IAAD,OACC4sB,EAAepuB,KAAK0F,MAApB0oB,WACR,OACE,oCACE,yBAAK9jB,GAAG,YAAY3J,UAAWX,KAAKC,MAAMitB,OACxC,2BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjlB,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,uEACb,kBAAC,IAAD,CAAKsH,KAAK,MACR,4BtDqBO,gBsDnBT,kBAAC,KAAD,CACEX,QAAStH,KAAKyJ,UACdjF,KAAK,OACL7D,UAAU,4CAEV,0BACEA,UAAU,wBACV2G,QAAS,SAACqK,GAAD,OAAO,EAAK1R,MAAMquB,eAAe3c,QAIhD,kBAAC,KAAD,CAAShR,UAAU,eACnB,kBAAC,IAAD,CACEsH,KAAK,KACLtH,UAAU,mDAETytB,EAAWhV,KAAI,SAACC,GAAD,OACd,kBAAC,KAAD,KAAMA,EAAK,oC,GAvERtZ,aCwBnBc,GAAWC,EAAQ,IACfugB,GAAavX,IAAbuX,SACA3O,GAAWsI,KAAXtI,OACF2a,GAAa,CACjB,CAAE/iB,GAAI,EAAGhE,KxDXe,OwDYxB,CAAEgE,GAAI,EAAGhE,KxDdgB,QwDezB,CAAEgE,GAAI,EAAGhE,KxDdkB,WwDiBvBgnB,GAAmB,CACvB,CAAEhjB,GAAI,EAAGhE,KxDtBsB,OwDuB/B,CAAEgE,GAAI,EAAGhE,KxDtByB,UwDuBlC,CAAEgE,GAAI,EAAGhE,KxDtBuB,SwDmpBnBioB,GA1nBE,SAAC,GAWX,IAAD,IAVJC,EAUI,EAVJA,aACA5G,EASI,EATJA,aACAxH,EAQI,EARJA,OACAqO,EAOI,EAPJA,qBACAC,EAMI,EANJA,eACApE,EAKI,EALJA,aACAqE,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,OACAC,EACI,EADJA,QACI,EACWje,KAAKC,UAAbC,EADH,sBAEsChC,mBAAS,IAF/C,mBAEGggB,EAFH,KAEkBC,EAFlB,OAG0BjgB,mBAAS,IAHnC,mBAGGhK,EAHH,KAGYkqB,EAHZ,OAI0BlgB,mBAAS,IAJnC,mBAIGmgB,EAJH,KAIYC,EAJZ,OAKkCpgB,mBAAS,CAC7CqgB,gBAAgB,EAChBC,QAAS,KAPP,mBAKGC,EALH,KAKgBC,EALhB,OAS0CxgB,mBAAS,CACrDygB,oBAAoB,EACpBH,QAAS,KAXP,mBASGI,EATH,KASoBC,EATpB,OAcwC3gB,mBAAS,CACnD4gB,mBAAmB,EACnBN,QAAS,KAhBP,mBAcGO,EAdH,KAcmBC,EAdnB,OAmB0B9gB,oBAAS,GAnBnC,mBAmBG+gB,EAnBH,KAmBYC,EAnBZ,OAoB4BhhB,mBAAS,IApBrC,oBAoBGzB,GApBH,MAoBa0iB,GApBb,MAsBJpoB,qBAAU,WACRooB,GAAY1F,KACX,CAACA,EAAckE,EAAanH,kBAE/Bzf,qBAAU,WACRqoB,KACAvoB,KACA,IAAI+lB,EAAWyC,SAASC,eAAe,cACnCC,EAAOF,SAASC,eAAe,UAC/BE,EAAUH,SAASC,eAAe,aACR,IAA1BP,EAAeP,UACjBQ,EAAkB,CAAER,QAAS,GAAIM,mBAAmB,IACpDU,EAAQC,UAAU1wB,OAAO,aAEA,IAAvB0vB,EAAYD,UACdE,EAAe,CAAEF,QAAS,GAAID,gBAAgB,IAC9CgB,EAAKE,UAAU1wB,OAAO,aAEO,IAA3B6vB,EAAgBJ,UAClBK,EAAmB,CAAEL,QAAS,GAAIG,oBAAoB,IACtD/B,EAAS6C,UAAU1wB,OAAO,eAE3B,CAAC4uB,EAAanH,gBAAiBsH,IAElC/mB,qBAAU,WACR,GAAImnB,EAAc3f,OAAS,EACzB,GAAI9B,GAAS8B,OAAS,EAAG,CACvB,IAAImhB,EAAQ,EACZxB,EAAc3V,KAAI,SAAC7Z,GAIjB,OAHIA,EAAMwF,QAAQ8C,SAAS,aACzB0oB,GAAS,GAEJA,KAET,IAAIC,EAAqBN,SAASO,qBAAqB,QACrDF,EAAQ,GAENC,GACFA,EAAmBE,gBAAe,EAAO,CAAEC,MAAO,YAE/C,CACL,IAAIC,EAAcV,SAASW,uBAAuB,mBAChDX,SAASW,uBAAuB,mBAAmBzhB,OAAS,GAE1DwhB,GACFA,EAAYF,gBAAe,EAAO,CAAEC,MAAO,WAIhD,CAAC5B,EAAezE,IAEnB1iB,qBAAU,WACR,IAAMkpB,OACsC3H,IAA1C+F,EAAQV,EAAanH,iBACjB6H,EAAQV,EAAanH,iBACrB,GACN4H,EAAW6B,KACV,CAACtC,EAAanH,kBAEjB,IAAM4I,GAAqB,oCAAAlN,EAAAC,OAAA,gDACnBnJ,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGhB8vB,EAAS,GAEXA,EADEvC,EAAanH,gBAAgBxf,SAAS,SAClC,UAAG2mB,EAAanH,uBAAhB,aAAG,EACLvlB,WACDmQ,QAAQ,gBAAiB,IAEnBuc,EAAanH,gBAEpB7lB,EAAO,CACT6lB,gBAAiB0J,EACjB/tB,QAAS+W,SACPlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5BhF,IACGC,KAAKV,EAAW,wBAAyBY,EAAMT,GAC/CwD,MAAK,SAAOsN,GAAP,SAAAkR,EAAAC,OAAA,gDACJgM,EAAiBnd,EAAIrQ,MADjB,wCA9BiB,sCAmDrBwvB,GAAqB,WACzB,IAEoD,EAF9CnX,EAAQlP,KACVomB,EAAS,GACTvC,EAAanH,gBAAgBxf,SAAS,SACxCkpB,EAAM,UAAGvC,EAAanH,uBAAhB,aAAG,EACLvlB,WACDmQ,QAAQ,gBAAiB,IAE5B8e,EAASvC,EAAanH,gBAExB,IAAM3iB,EAAOZ,KAAK+G,MAAM1K,EAAe,SACvC,GAAI4E,EAAQqK,OAAS,EAAG,CACtB,IAAMrO,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAIhBO,EAAO,CACTwB,QAAS+W,SACPlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1Bqd,WAAY8K,EAAa9K,WACzB2D,gBAAiB0J,EACjBhsB,QAASA,EACT8d,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5BhF,IACGC,KAAKV,EAAW,yBAA0BY,EAAMT,GAChDwD,MAAK,SAACsN,GACc,MAAfA,EAAIuO,SACqB,IAAvBvO,EAAIrQ,KAAKkL,WAA0C,IAAvBmF,EAAIrQ,KAAKkL,WACvCgiB,EAAe,EAAGqC,GAEpBf,GAAY,IACZpB,EAAW/c,GACXod,EAAW,IACXE,EAAW,eAAKD,EAAN,gBAAgB6B,EAAS,MACnClC,EAAOoC,KAAKntB,KAAKC,UAAU8N,EAAIrQ,WAKvCuP,EAAKmgB,eAAe,CAAEC,SAAU,MAG5BzpB,GAAU,WACdsnB,GAAiB,SAACD,GAAmB,IAAD,IAC9BqC,EAAU,GAEd,GACErC,GACAA,EAAc3f,SACd,UAAAuf,EAAStH,uBAAT,eAA0BvlB,WAAWmQ,QAAQ,gBAAiB,QAA9D,UACE8c,EAAc,GAAG1H,uBADnB,aACE,EACIvlB,WACDmQ,QAAQ,gBAAiB,KAC9B,CACA,IAAMof,EAAoBtC,EAAchhB,QACtC,SAACsL,GAAD,eACE,UAAAA,EAAKgO,uBAAL,eAAsBvlB,WAAWmQ,QAAQ,gBAAiB,QAA1D,UACA0c,EAAStH,uBADT,aACA,EAA0BvlB,WAAWmQ,QAAQ,gBAAiB,QAElEmf,EAAO,uBAAOC,GAAP,CAA0B1C,SAEjCyC,EAAO,aAAOrC,GAEhB,OAAOqC,MAILjE,GAAe,SAACxb,GACpB,IAAIob,EAAQmD,SAASC,eAAe,UAChCmB,aACFvB,GAAW,GAEkB,IAA3BN,EAAgBJ,SAClBK,EAAmB,CAAEL,QAAS,GAAIG,oBAAoB,IAE1B,IAA1BI,EAAeP,SACjBQ,EAAkB,CAAER,QAAS,GAAIM,mBAAmB,IAE1B,KAAxBL,EAAYD,SACdtC,EAAMuD,UAAUiB,IAAI,YACpBhC,EAAe,CAAEF,QAAS,YAAaD,gBAAgB,MAEvDrC,EAAMuD,UAAU1wB,OAAO,YACvB2vB,EAAe,CAAEF,QAAS,GAAID,gBAAgB,KAEjCc,SAASC,eAAe,cAC9BG,UAAU1wB,OAAO,YACZswB,SAASC,eAAe,aAC9BG,UAAU1wB,OAAO,aAGrBquB,GAAkB,SAACtc,GACvB,IAAI8b,EAAWyC,SAASC,eAAe,cACnCmB,aACFvB,GAAW,GAEc,IAAvBT,EAAYD,SACdE,EAAe,CAAEF,QAAS,GAAID,gBAAgB,IAElB,IAA1BQ,EAAeP,SACjBQ,EAAkB,CAAER,QAAS,GAAIM,mBAAmB,IAEtB,KAA5BF,EAAgBJ,SAClB5B,EAAS6C,UAAUiB,IAAI,YACvB7B,EAAmB,CAAEL,QAAS,YAAaG,oBAAoB,MAE/D/B,EAAS6C,UAAU1wB,OAAO,YAC1B8vB,EAAmB,CAAEL,QAAS,GAAIG,oBAAoB,KAE5CU,SAASC,eAAe,UAC9BG,UAAU1wB,OAAO,YACTswB,SAASC,eAAe,aAC9BG,UAAU1wB,OAAO,aAGrB0uB,GAAiB,SAAC3c,GACtB,IAAI0e,EAAUH,SAASC,eAAe,aAClCmB,aACFvB,GAAW,GAEc,IAAvBT,EAAYD,SACdE,EAAe,CAAEF,QAAS,GAAID,gBAAgB,IAEjB,IAA3BK,EAAgBJ,SAClBK,EAAmB,CAAEL,QAAS,GAAIG,oBAAoB,IAEzB,KAA3BI,EAAeP,SACjBgB,EAAQC,UAAUiB,IAAI,YACtB1B,EAAkB,CAAER,QAAS,YAAaM,mBAAmB,MAE7DU,EAAQC,UAAU1wB,OAAO,YACzBiwB,EAAkB,CAAER,QAAS,GAAIM,mBAAmB,KAEvCO,SAASC,eAAe,cAC9BG,UAAU1wB,OAAO,YACdswB,SAASC,eAAe,UAC9BG,UAAU1wB,OAAO,aAGnB4xB,GAAe,SAACC,GACpB,MAAO,CAAEC,OAAQD,IAGnB,GAAInH,EAAc,CAAC,IAAD,GACkD,GAUf,GAUe,MApBlE,GAAIkE,EAAajH,4BAA4B1f,SAAS,WACpD2mB,EAAajH,4BAAb,WAA2CiH,EAAajH,mCAAxD,cAA2C,GACvCzlB,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAajH,4BAA8BiH,EAAajH,4BAA4BtV,QAClF,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,cAIJ,GAAI+G,EAAaxO,aAAanY,SAAS,WACrC2mB,EAAaxO,aAAb,WAA4BwO,EAAaxO,oBAAzC,cAA4B,GACxBle,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAaxO,aAAewO,EAAaxO,aAAa/N,QACpD,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,cAIJ,cAAI+G,EAAanH,uBAAjB,cAAI,GAA8BvlB,WAAW+F,SAAS,WACpD2mB,EAAanH,gBAAb,WAA+BmH,EAAanH,uBAA5C,cAA+B,GAC3BvlB,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAanH,gBAAb,WAA+BmH,EAAanH,uBAA5C,cAA+B,GAC3BvlB,WACDmQ,QACC,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,cAINsH,EAAc3V,KAAI,SAACC,GACsB,IAAD,EAAlCA,EAAKtU,QAAQ8C,SAAS,YACxBwR,EAAKtU,QAAL,UAAesU,EAAKtU,eAApB,aAAe,EAAcjD,WAAWmQ,QAAQ,gBAAiB,IACjEoH,EAAKtU,QAAUsU,EAAKtU,QAAQkN,QAC1B,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,gBAIFpO,EAAKtU,QAAUsU,EAAKtU,QAAQkN,QAAQ,kBAAmB,UACvDoH,EAAKtU,QAAUsU,EAAKtU,QAAQkN,QAC1B,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,eAIJ,OAAO,eACFpO,EADL,CAEEtU,QAASsU,EAAKtU,iBAGb,CAAC,IAAD,SACLypB,EAAajH,4BAAb,WAA2CiH,EAAajH,mCAAxD,cAA2C,GACvCzlB,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAaxO,aAAb,WAA4BwO,EAAaxO,oBAAzC,cAA4B,GACxBle,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAanH,gBAAb,WAA+BmH,EAAanH,uBAA5C,cAA+B,GAC3BvlB,WACDmQ,QAAQ,gBAAiB,IAC5B8c,EAAc3V,KAAI,SAACC,GAAU,IAAD,EAI1B,OAHAA,EAAKtU,QAAL,UAAesU,EAAKtU,eAApB,aAAe,EACXjD,WACDmQ,QAAQ,kBAAmB,UACvB,eACFoH,EADL,CAEEtU,QAASsU,EAAKtU,aAIpB,IAAI4sB,GAAgB5C,EAAc3f,OAASof,EAAaoD,sBACxD,OACE,kBAAC,IAAD,CACE3pB,KAAM,GACNE,GAAI,GACJxH,UACEmuB,EAAU,yBAA2B,gCAEvC9nB,YAAU,YAEV,kBAAC,IAAD,CAAKiB,KAAM,GAAItH,UAAU,SACvB,kBAAC,IAAD,CAAKA,UAAU,uDACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,IACjB,yBAAKxH,UAAU,IACb,wBACEkxB,wBAAyBL,GACvBhD,EAAajH,+BAGjB,uBACEtd,MAAO,CAAEmX,OAAQ,EAAG3M,QAAS,SAAUqd,MAAO,QAC9CD,wBAAyBL,GACvBhD,EAAaxO,gBATnB,YAaE,uBACE/V,MAAO,CAAEmX,OAAQ,EAAG3M,QAAS,SAAUqd,MAAO,UAC9CD,wBAAyBL,GACvBhD,EAAanH,qBAKrB,kBAAC,IAAD,CAAKpf,KAAM,GAAIE,GAAI,IACjB,yBAAKxH,UAAU,mDACb,yBAAKA,UAAU,wBACb,+BvDvXa,iBuDwXb,kBAAC,KAAD,CACEyG,UAAU,EACV7H,MAAOqoB,EACPlW,SAAU,SAACqgB,GAAD,aACRtD,EACEsD,EADkB,UAElBvD,EAAanH,uBAFK,aAElB,EACIvlB,WACDmQ,QAAQ,gBAAiB,OAI/Bqb,GAAiBlU,KAAI,SAAC4Y,GAAD,OACpB,kBAAC,GAAD,CAAQzyB,MAAOyyB,EAAE1nB,IAAK0nB,EAAE1rB,WAI9B,yBAAK3F,UAAU,wBACb,+BAAQyK,IACR,kBAAC,KAAD,CACEhE,UAAU,EACV7H,MAAO6gB,EACP1O,SAAU,SAACqgB,GAAD,aACRrD,EACEqD,EADY,UAEZvD,EAAanH,uBAFD,aAEZ,EACIvlB,WACDmQ,QAAQ,gBAAiB,OAI/Bob,GAAWjU,KAAI,SAAC6Y,GAAD,OACF,IAAX7R,GAA2B,IAAXA,GAA0B,IAAT6R,EAAE3nB,GAKlC,kBAAC,GAAD,CAAQ/K,MAAO0yB,EAAE3nB,IAAK2nB,EAAE3rB,MAJxB,kBAAC,GAAD,CAAQ/G,MAAO0yB,EAAE3nB,GAAIoN,UAAQ,GAC1Bua,EAAE3rB,WAQb,yBAAK3F,UAAU,sCACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIC,GAAI,GACjB,0BACEoC,GAAG,SACH3J,UAAU,mBACV2G,QAAS,SAACqK,GAAD,OAAOwb,SAIpB,kBAAC,IAAD,CAAKllB,KAAM,GAAIC,GAAI,GACjB,0BACEoC,GAAG,aACH3J,UAAU,qBACV2G,QAAS,SAACqK,GAAD,OAAOsc,SAGpB,kBAAC,IAAD,CAAKhmB,KAAM,GAAIC,GAAI,GACjB,0BACEoC,GAAG,YACH3J,UAAU,mBACV2G,QAAS,SAACqK,GAAD,OAAO2c,aAS5B,kBAAC,IAAD,CAAK3tB,UAAU,WACb,yBACEA,UACE2uB,EAAYF,gBACZK,EAAgBD,oBAChBI,EAAeD,kBACXG,EACE,cACA,OACF,SAIN,yBAAKnvB,UAAU,YACb,kBAAC,cAAD,CAAYiqB,cAAe,IAAKE,WAAW,GACzC,kBAAC,IAAD,CAAK7iB,KAAM,GAAItH,UAAU,mBACtBouB,EAAc3V,KAAI,SAAC8Y,EAAKxY,GAAN,OACjB,6BACGiY,KAAkBjY,EACjB,kBAAC,KAAD,CAASyY,OAAK,GvD3cb,auD4cC,KACHD,EAAIntB,QAAQ8C,SACX,qCAEA,kBAAC,KAAD,CAASsqB,OAAK,GvD/cD,yBuDgdX,KACHD,EAAIntB,QAAQ8C,SAAS,8BACpB,kBAAC,KAAD,CAASsqB,OAAK,GvDjdR,kBuDkdJ,KACHD,EAAIntB,QAAQ8C,SACX,sCAEFqqB,EAAIntB,QAAQ8C,SACV,8BACE,KACF,yBACElH,UACEuxB,EAAIE,qBACA,oCACA,qCAGN,yBACEzxB,UACEuxB,EAAIE,qBACA,WACA,gBAGN,uBACE7F,UAAQ,EAERsF,wBAAyBL,GACvBU,EAAIntB,WAIR,0BAAMpE,UAAU,aACb,IACA6L,KAAO0lB,EAAI5F,YAAY+F,OAAO7lB,OAAU,OACrCA,KAAO0lB,EAAI5F,YACR5e,MACAC,QACAlB,OAAO,WACVD,KAAO0lB,EAAI5F,YACR5e,MACAC,QACAlB,OAAO,uBACbylB,EAAIE,sBAAJ,aACOF,EAAIrwB,WADX,YACyBqwB,EAAIlwB,qBAUhD,kBAAC,IAAD,CACEiG,KAAM,GACNtH,UACE2uB,EAAYF,gBACZK,EAAgBD,oBAChBI,EAAeD,kBACX,gBACA,kBAIN,yBAAKhvB,UAAU,YACb,kBAAC,KAAD,CACEA,UAAU,iBACV2F,KAAK,iBACLyK,KAAMA,GAEN,kBAAC,GAAD,CACEpQ,UAAU,gBACV2J,GAAG,WACHhE,KAAMkoB,EAAanH,gBACnB3Y,YvDzhBa,qCuD0hBbgD,SAAU,SAACC,GAAD,OA1cP,SAACA,GACpBsd,EAAWtd,EAAEuF,OAAO3X,OACpB4vB,EAAW,eAAKD,EAAN,gBAAgBvd,EAAEuF,OAAO5Q,KAAOqL,EAAEuF,OAAO3X,SAwclBosB,CAAaha,IAC9BpS,MAAOwF,EACPutB,UAvcF,SAAC3gB,GACf,GAAKA,EAAE4gB,QAAwB,KAAd5gB,EAAE6gB,SAAoB7gB,EAAE8gB,SAAyB,KAAd9gB,EAAE6gB,QAAiB,CACrE,IAAIE,EAAWxC,SAASyC,cAAc,kBACtCD,EAASnzB,MAAQmzB,EAASnzB,MAAQ,OAE/BoS,EAAE4gB,QAAW5gB,EAAEihB,UAAajhB,EAAE8gB,SAAyB,KAAd9gB,EAAE6gB,UAC9C7gB,EAAEqB,iBACFge,OAicchf,UAAW,OAGf,0BACErR,UAAU,YACV2G,QAAS,kBAAM0pB,OAEf,yBAAKxwB,IAAKqyB,KAAMnyB,IAAI,qBAK5B,yBAAKC,UAAU,gDAEZ2uB,EAAYF,eACX,kBAAC,GAAD,CACElC,MAAOoC,EAAYD,QACnBhI,gBAAe,UAAEmH,EAAanH,uBAAf,aAAE,EACbvlB,WACDmQ,QAAQ,gBAAiB,IAC5Bkb,aAAc,kBAAMA,QAEpB,KACHsC,EAAgBD,mBACf,kBAAC,GAAD,CACEtC,MAAOuC,EAAgBJ,QACvBhI,gBAAe,UAAEmH,EAAanH,uBAAf,aAAE,EACbvlB,WACDmQ,QAAQ,gBAAiB,IAC5Bgc,gBAAiB,kBAAMA,QAEvB,KACH2B,EAAeD,kBACd,kBAAC,GAAD,CACEzC,MAAO0C,EAAeP,QACtB3L,WAAY8K,EAAa9K,WACzB4K,eAAgB,kBAAMA,QAEtB,UCvpBZztB,GAAWC,EAAQ,IACfiJ,GAAWD,IAAXC,OAkFO+oB,GAjFe,SAAC7yB,GAC7B,IAAMqN,EAAWylB,iBAAO,IAGlB7lB,EAAW,SAACyE,GAChB,IAAIyV,EAAMzV,EAAEqhB,OACZ1lB,EAAS3I,QAAUyiB,EACnB,IAAM6L,EAAYhzB,EAAMizB,iBAAiB9Z,KAAI,SAACgH,GAE5C,OADAA,EAASA,EAAO7gB,SAGd0qB,EAAc,eACZgJ,EAAU7jB,OAAS,GAAK,CAAE1C,UAAWumB,GADzB,GAEZhzB,EAAMkzB,kBAAkB/jB,OAAS,GAAK,CACxC8a,iBAAkBjqB,EAAMkzB,kBAAkB/Z,KAAI,SAACga,GAAD,OAASA,EAAI7zB,UAH7C,GAKZU,EAAMozB,kBAAkBjkB,OAAS,GAAK,CACxCsU,WAAYzjB,EAAMozB,kBAAkBja,KAAI,SAACka,GAAD,OAAQA,EAAG/zB,WAGjD6qB,EAAU,eACXH,EADW,CAEdvG,WACEuG,EAAevG,YAAcuG,EAAevG,WAAW5hB,WACzD4K,UACEud,EAAevd,WAAaud,EAAevd,UAAU5K,WACvDooB,iBACED,EAAeC,kBACfD,EAAeC,iBAAiBpoB,aAE9B+X,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdkpB,EACJvpB,EACA,yCACAmZ,SACElZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAEtBgkB,EACI,KAARjD,EACI+C,EAAU,WAAarmB,KAAKC,UAAUqmB,GACtCD,EACA,WACArmB,KAAKC,UAAUqmB,GACf,WACAhD,EAAItlB,WACVT,IAAM3B,IAAI2qB,EAAUtpB,GAASwD,MAAK,SAACsN,GACjC5R,EAAMszB,gBAAgBjmB,EAAS3I,SAC/BxE,EAAe,WAAYmN,EAAS3I,SACpC,IAAI4lB,EAAe,GAGjBA,EAFEjd,EAAS3I,QAAQyK,OAAS,EAEb+X,GAActV,EAAIrQ,KAAM8L,EAAS3I,SAEjCkN,EAAIrQ,KAErBvB,EAAMuzB,iBAAiBjJ,OAI3B,OACE,kBAAC,GAAD,CACEjkB,KAAK,SACLgE,GAAG,SACHoE,YxDvDgB,SwDwDhBgD,SAAU,SAACC,GAAD,OAAOzE,EAASyE,EAAEuF,OAAO3X,QACnC2N,SAAUA,EACV6E,aAAa,SCpEX8Z,GAAcC,KAAdD,UAEJhrB,GAAWC,EAAQ,IAgVR2yB,GA/UoB,SAACxzB,GA4HlC,OACE,yBAAKU,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsH,KAAM,GACNE,GAAI,EACJxH,UACEV,EAAMyzB,QACF,8BACA,wBAGN,kBAAC,IAAD,CAAKzrB,KAAM,GAAItH,UAAU,wCACvB,4BzD3EiB,gByD4EC,IAChB,kBAAC,KAAD,CAAOA,UAAU,OAAO4vB,MAAOtwB,EAAM0zB,eAGvC,kBAAC,GAAD,CACErJ,aAAcrqB,EAAMqqB,aACpBlB,aAAcnpB,EAAMmpB,aACpBoB,0BAA2BvqB,EAAMuqB,6BAIrC,kBAAC,IAAD,CAAKviB,KAAM,GAAItH,UAAU,qBACvB,kBAAC,cAAD,CACE+pB,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,GAEX,oCACG7qB,EAAMkzB,kBAAkB/Z,KAAI,SAAC5X,EAAMkY,GAAP,OAC3B,oCACE,kBAAC,KAAD,CACExG,SAAS,EACT7T,IAAKqa,EACLka,UAAQ,EACRC,QAAS,kBACP5zB,EAAM6zB,kBAAkB,eAAgBtyB,EAAKjC,QAE/CoB,UAAU,QzDxGT,UyDiGH,KASa,8BAAOa,EAAK0N,YAI5BjP,EAAMozB,kBAAkBja,KAAI,SAACmN,EAAS7M,GAAV,OAC3B,oCACE,kBAAC,KAAD,CACExG,SAAS,EACT0gB,UAAQ,EACRC,QAAS,kBACP5zB,EAAM6zB,kBAAkB,iBAAkBvN,EAAQhnB,QAEpDoB,UAAU,OACVtB,IAAKqa,GzD1MJ,UyDmMH,KASa,8BAAO6M,EAAQrX,MAAf,UAIhBjP,EAAMizB,iBAAiB9Z,KAAI,SAACgH,EAAQ1G,GAAT,OAC1B,oCACE,kBAAC,KAAD,CACExG,SAAS,EACT0gB,UAAQ,EACRC,QAAS,kBACP5zB,EAAM6zB,kBAAkB,gBAAiB1T,EAAO7gB,QAElDoB,UAAU,OACVtB,IAAKqa,GAEJtO,GATH,KASY,8BAAOgV,EAAOlR,MAAd,aAOtB,kBAAC,IAAD,CAAKjH,KAAM,GAAItH,UAAU,wBACvB,kBAAC,KAAD,CAAMoQ,KAAM9Q,EAAM8Q,MAChB,kBAAC,KAAK1J,KAAN,CAAWf,KAAK,SAASgE,GAAG,UAC1B,kBAAC,GAAD,CACE4oB,iBAAkBjzB,EAAMizB,iBACxBC,kBAAmBlzB,EAAMkzB,kBACzBE,kBAAmBpzB,EAAMozB,kBACzBE,gBAAiBtzB,EAAMszB,gBACvBC,iBAAkBvzB,EAAMuzB,sBAKhC,kBAAC,cAAD,CACE9I,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,GAEX,kBAAC,IAAD,CAAK7iB,KAAM,GAAItH,UAAU,mBACtBV,EAAM8zB,cAAc3kB,OAAS,EAC5BnP,EAAM8zB,cAAc3a,KAAI,SAACC,GAAU,IAAD,IAChC,OACE,yBACE1Y,WACE,UAAAV,EAAMuuB,aAAanH,uBAAnB,eACIvlB,WACDmQ,QAAQ,gBAAiB,QAF5B,UAGAoH,EAAKgO,uBAHL,aAGA,EACIvlB,WACDmQ,QAAQ,gBAAiB,KACxB,qBACA,cAEN3K,QAAS,kBAAMrH,EAAM+zB,oBAAoB3a,KAEzC,yBAAK1Y,UAAU,kCACb,uBACE4rB,UAAQ,EACRtiB,MAAO,CAAEgqB,WAAY,QACrBtzB,UAAU,iBACVkxB,wBAAyB5xB,EAAMuxB,aAC7BnY,EAAKkO,+BAGT,0BAAM5mB,UAAU,SACb,IACA6L,KAAO6M,EAAKiT,YAAY+F,OAAO7lB,OAAU,OACtCA,KAAO6M,EAAKiT,YACT5e,MACAC,QACAlB,OAAO,SACVD,KAAO6M,EAAKiT,YACT5e,MACAC,QACAlB,OAAO,cAGlB,yBAAK9L,UAAU,kCACb,kBAAC,GAAD,CACE4rB,UAAQ,EACR5rB,UAAU,2CAEV,0BACEA,UAAU,eACVkxB,wBAAyB5xB,EAAMuxB,aAC7BnY,EAAK2G,gBAPX,aAWE,0BACErf,UAAU,eACVkxB,wBAAyB5xB,EAAMuxB,aAC7BnY,EAAKgO,oBAIX,0BAAM1mB,UAAU,SACb,IACD,kBAAC,KAAD,CAAO4vB,MAAOlX,EAAKuY,8BAO7B,yBAAKjxB,UAAU,ezDrOE,wByD2OxBV,EAAMuuB,aACL,kBAAC,GAAD,CACEA,aAAcvuB,EAAMuuB,aACpB5G,aAAc3nB,EAAM2nB,aACpBxH,OAAQngB,EAAMmgB,OACdqO,qBA/SmB,SAACsD,EAAO1K,GACnC,IAAMxN,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdO,EAAO,CACX6lB,gBAAiBA,EACjBhB,WAAYtM,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1B6jB,iBAAkB6H,GAGhBmC,EAAoB,CACtBlxB,QAAS+W,SACPlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1Bqd,WAAYzjB,EAAMuuB,aAAa9K,WAC/B2D,gBAAiBA,EACjBtiB,QAAQ,qCAAD,OACK,IAAVgtB,EAAc,MAAkB,IAAVA,EAAc,SAAW,QAEjDlP,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5BhF,IACGuL,IAAIhM,EAAW,qCAAsCY,EAAMT,GAC3DwD,MAAK,SAACsN,GACc,MAAfA,EAAIuO,SACNngB,EAAMk0B,mBACNl0B,EAAM4nB,gBAAgBkK,GACtB1wB,IACGC,KACCV,EAAW,yBACXszB,EACAnzB,GAEDwD,MAAK,SAAChD,GACmB,MAApBA,EAAS6e,QACXngB,EAAM4uB,OAAOoC,KAAKntB,KAAKC,UAAUxC,EAASC,eAyP9CktB,eAlPa,SAACqD,EAAO1K,GAC7B,IAAMxN,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdO,EAAO,CACX6lB,gBAAiBA,EACjBhB,WAAYtM,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1BqG,UAAWqlB,GAETmC,EAAoB,CACtBlxB,QAAS+W,SACPlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1Bqd,WAAYzjB,EAAMuuB,aAAa9K,WAC/B2D,gBAAiBA,EACjBtiB,QAAQ,8BAAD,OACK,IAAVgtB,EAAc,MAAkB,IAAVA,EAAc,OAAS,UAE/ClP,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5BhF,IACGuL,IAAIhM,EAAW,8BAA+BY,EAAMT,GACpDwD,MAAK,SAACsN,GACc,MAAfA,EAAIuO,SACNngB,EAAMk0B,mBACNl0B,EAAM0nB,UAAUoK,GAChB1wB,IACGC,KACCV,EAAW,yBACXszB,EACAnzB,GAEDwD,MAAK,SAAChD,GACmB,MAApBA,EAAS6e,QACXngB,EAAM4uB,OAAOoC,KAAKntB,KAAKC,UAAUxC,EAASC,eA6L9C8oB,aAAcrqB,EAAMqqB,aACpBqE,SAAU1uB,EAAM0uB,SAChBE,OAAQ5uB,EAAM4uB,OACdD,WAAY3uB,EAAM2uB,WAClB5nB,YAAU,WACV8nB,QAAS7uB,EAAM6uB,UAGjB,kBAAC,IAAD,CACE7mB,KAAM,GACNE,GAAI,GACJxH,UAAU,gGAEV,kBAAC,IAAD,CAAKA,UAAU,+BACb,yBACEH,IAAKP,EAAMm0B,WACX1zB,IAAI,uBACJuJ,MAAO,CAAEoqB,QAAS,UAGtB,4BzDrQ4B,4ByDsQ5B,+BzDrQuB,qC0DnEpBC,GAlBW,SAACr0B,GAAD,OACxB,kBAAC,IAAD,CACEgI,KAAM,GACNE,GAAI,GACJxH,UAAU,gGAEV,kBAAC,IAAD,CAAKA,UAAU,+BACb,yBACEH,IAAKP,EAAMojB,cACX3iB,IAAI,uBACJuJ,MAAO,CAAEoqB,QAAS,UAGtB,4BhDGF,qEiDJaE,GAZC,SAAC1lB,GAAD,OACd,kBAAC,IAAD,CACE5G,KAAM,GACNE,GAAI,GACJxH,UAAU,gGAEV,kBAAC,IAAD,CAAKA,UAAU,+BACb,kBAAC,IAAD,CAAMwG,KAAK,QAAQqtB,I3DsFF,a2DtFgB5lB,SAAUC,OCT7ChO,GAAWC,EAAQ,IAEV2zB,GAAsB,SACjCC,EACAC,EACAC,GAEA,IAAIlb,EAAQ,EAENmb,EAAaH,EAcnB,OAZAA,EAAqBtb,KAAI,SAAC7Z,GACxB,IACO,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO8nB,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,QAA3D,OACA0iB,QADA,IACAA,OADA,EACAA,EAAUtN,iBAEV,OAAQ3N,EAAQgb,EAAqB/a,QAAQpa,MAIjDs1B,EAAWC,OAAOpb,EAAO,GAED,CAAIkb,GAAJ,oBAAwBC,KAIrCE,GAAuB,SAClCJ,EACAK,EACAC,EACAC,GAsBA,IApBA,IAAMxwB,EAAOZ,KAAK+G,MAAM1K,EAAe,SAEjCg1B,EAAsBH,EAAuBjnB,QACjD,SAACA,GAAD,OACQ,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQsZ,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,QAA5D,OACE0iB,QADF,IACEA,OADF,EACEA,EAAUtN,kBACZsN,EAAS9R,aACP9I,SACElZ,GAASa,IAAIyE,QAAQzB,EAAKhC,UAAUM,QAAS,cAAclB,SACzDjB,GAASuF,IAAIC,QAGnBsuB,EAAStN,kBAAoB4N,KAG3BG,EAAuBJ,EAAuBjnB,QAClD,SAACsL,GAAD,OACM,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMgO,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,QAA1D,OACA0iB,QADA,IACAA,OADA,EACAA,EAAUtN,oBAELhO,EAAO,EAAGA,EAAO8b,EAAoB/lB,OAAQiK,IAAQ,CAAC,IAAD,KAE1D,UAAA+b,EAAqB,UAArB,eAAyB/N,gBACtBvlB,WACAmQ,QAAQ,gBAAiB,QAF5B,UAGEkjB,EAAoB9b,UAHtB,aAGE,EAA2BgO,gBACxBvlB,WACAmQ,QAAQ,gBAAiB,MACoB,IAAlDmjB,EAAqB,GAAGxD,uBAExBsD,GAAe,SAACvB,GAAD,OAAiBA,EAAc,OAKvC0B,GAAoC,SAC/C1G,EACA2G,EACAnC,EACAD,EACAqC,EACAjL,EACAkL,EACAN,EACAO,EACAjH,GAEA,GACE2E,EAAkB/jB,OAAS,GAC3B8jB,EAAiB9jB,OAAS,GAC1BmmB,EAAenmB,OAAS,GACxBkb,EAAalb,OAAS,EAsBtB,IApBA,IAAM1K,EAAOZ,KAAK+G,MAAM1K,EAAe,SAEjCg1B,EAAmB,OAAGG,QAAH,IAAGA,OAAH,EAAGA,EAAkBvnB,QAC5C,SAACA,GAAD,aACQ,OAANA,QAAM,IAANA,OAAA,YAAAA,EAAQsZ,uBAAR,eAAyBvlB,WAAWmQ,QAAQ,gBAAiB,QAA7D,OACE0c,QADF,IACEA,OADF,EACEA,EAAUtH,kBACZsH,EAAS9L,aACP9I,SACElZ,GAASa,IAAIyE,QAAQzB,EAAKhC,UAAUM,QAAS,cAAclB,SACzDjB,GAASuF,IAAIC,SAGX,OAARsoB,QAAQ,IAARA,OAAA,EAAAA,EAAUtH,mBAAoBmH,EAAanH,mBAGzC+N,EAAoB,OAAGE,QAAH,IAAGA,OAAH,EAAGA,EAAkBvnB,QAC7C,SAACsL,GAAD,aACM,OAAJA,QAAI,IAAJA,OAAA,YAAAA,EAAMgO,uBAAN,eAAuBvlB,WAAWmQ,QAAQ,gBAAiB,QAA3D,OACA0c,QADA,IACAA,OADA,EACAA,EAAUtH,oBAELhO,EAAO,EAAGA,EAAO8b,EAAoB/lB,OAAQiK,IAAQ,CAAC,IAAD,UAC5D,IACE,UAAA+b,EAAqB,UAArB,yBAAyB/N,uBAAzB,eACIvlB,WACDmQ,QAAQ,gBAAiB,QAF5B,UAGEkjB,EAAoB9b,UAHtB,uBAGE,EAA2BgO,uBAH7B,aAGE,EACIvlB,WACDmQ,QAAQ,gBAAiB,MACqB,KAAnD,UAAAmjB,EAAqB,UAArB,eAAyBxD,uBAEpB4D,EAAiB7wB,SACpBuwB,GAAe,SAACvB,GAAD,OAAiBA,EAAc,KAUhD8B,EARgCH,EAAiBlc,KAAI,SAACC,GAAD,OACnDA,EAAKgO,mBAAL,OAAyBsH,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAUtH,iBAAnC,eAEShO,EAFT,CAGMuY,sBAAuBvY,EAAKuY,sBAAwB,IAEtDvY,QAQDqc,GAAe,SAACrpB,GAC3BlM,EAAkB,iBAClBA,EAAkB,UAEhBA,EADU,YAARkM,EACgB,UAEA,YAEpBlM,EAAkB,YAClBA,EAAkB,WAGPw1B,GAAe,SAC1BC,EACAjB,EACAZ,EACA8B,EACAxpB,GACI,IAAD,cACGypB,EACI,YAARzpB,EACIupB,EAAoBrP,QACpBqP,EAAoBG,SACpBC,EACI,YAAR3pB,EAAoBsoB,EAASjR,WAAaiR,EAASsB,YAC/CC,EACI,YAAR7pB,EAAoBsoB,EAAS3U,aAAe2U,EAASwB,cACnDC,EAAqB,GACzB,IACG,UAAAR,EAAoBxV,cAApB,eAA4BvY,SAAS8sB,EAASjoB,UAAU5K,eAAxD,UACC8zB,EAAoBS,eADrB,aACC,EAA6BxuB,SAC3B8sB,EAASzK,iBAAiBpoB,eAF7B,OAICg0B,QAJD,IAICA,OAJD,EAICA,EAAyBjuB,SAASmuB,EAAyBl0B,eAC3D,UAAA8zB,EAAoBtoB,gBAApB,eAA8B8B,QAAS,GACvCulB,EAAStN,gBACNC,cACAzf,SAFH,UAEY+tB,EAAoBtoB,gBAFhC,aAEY,EAA8Bga,gBAC5CqN,EAASpN,4BACND,cACAzf,SAFH,UAEY+tB,EAAoBtoB,gBAFhC,aAEY,EAA8Bga,gBAC1C4O,EACG5O,cACAzf,SAFH,UAEY+tB,EAAoBtoB,gBAFhC,aAEY,EAA8Bga,gBAC1CqN,EAAS5vB,QACNuiB,cACAzf,SAFH,UAEY+tB,EAAoBtoB,gBAFhC,aAEY,EAA8Bga,eAC1C,CAAC,IAAD,EACID,EAAkBsN,EAAStN,gBAAgBpV,QAC7C,IAAIuV,OAAOoO,EAAoBtoB,SAAU,OACzC,SAACma,GAAD,iEACsDA,EADtD,cAGEF,EAA8BoN,EAASpN,4BAA4BtV,QACrE,IAAIuV,OAAOoO,EAAoBtoB,SAAU,OACzC,SAACma,GAAD,iEACsDA,EADtD,cAGE6O,EAAWJ,EAA2BjkB,QACxC,IAAIuV,OAAOoO,EAAoBtoB,SAAU,OACzC,SAACma,GAAD,iEACsDA,EADtD,cAGEC,EAAciN,EAAS5vB,QAAQkN,QACjC,IAAIuV,OAAOoO,EAAoBtoB,SAAU,OACzC,SAACma,GAAD,iEACsDA,EADtD,cAGI8O,EACI,YAARlqB,EAAA,eAESsoB,EAFT,CAGMtN,gBAAiBA,EACjBE,4BAA6BA,EAC7BxiB,QAAS2iB,EACTnB,QAAS,CACPjgB,KAAMgwB,EACN5S,WAAYsS,KARpB,eAYSrB,EAZT,CAaMtN,gBAAiBA,EACjBE,4BAA6BA,EAC7BxiB,QAAS2iB,EACTqO,SAAU,CACRzvB,KAAMgwB,EACNL,YAAaD,KAYrBI,EARCP,EAAgBhuB,SAAhB,UACC0uB,EAAoBlP,uBADrB,aACC,EACIvlB,WACDmQ,QAAQ,gBAAiB,KAKT8hB,EAFH,uBAAOA,GAAP,CAAsBwC,SAK1CH,EAAqBrC,EAEvB,OAAOqC,GAGF,SAASI,GACdC,EACArW,EACAsW,EACAC,EACAC,EACAC,EACAxqB,GACC,IAAD,IAQuB,EAKhB,GAZPsqB,EAAqBF,GACrBG,EAAoBxW,GACpByW,EAAkBH,GAClBv2B,EACE,gBADF,UAEE8N,OAAOmU,OAAOqU,UAFhB,aAEE,EAA8Brd,KAAI,SAAC5X,GAAD,OAAUA,EAAKjC,UAEvC,YAAR8M,GACFlM,EACE,UADF,UAEE8N,OAAOmU,OAAOsU,UAFhB,aAEE,EAAqBtd,KAAI,SAAC5X,GAAD,OAAUA,EAAKjC,UAG1CY,EACE,WADF,UAEE8N,OAAOmU,OAAOsU,UAFhB,aAEE,EAAqBtd,KAAI,SAAC5X,GAAD,OAAUA,EAAKjC,UAG5CY,EACE,SADF,UAEE8N,OAAOmU,OAAOhC,UAFhB,aAEE,EAAuBhH,KAAI,SAAC5X,GAAD,OAAUA,EAAKjC,UAIvC,IAAMiyB,GAAe,SAACC,GAC3B,MAAO,CAAEC,OAAQD,ICxPXvlB,GAAY7D,IAAZ6D,QAEJrL,GAAWC,EAAQ,IAylBRg2B,GAxlBS,SAAC72B,GAAW,IAAD,EACS8O,mBAAS,IADlB,mBAC1BglB,EAD0B,KACXP,EADW,OAEKzkB,mBAAS,IAFd,mBAE1BgoB,EAF0B,KAEbC,EAFa,OAGiBjoB,mBAAS,IAH1B,mBAG1BokB,EAH0B,KAGPwD,EAHO,OAIiB5nB,mBAAS,IAJ1B,mBAI1BskB,EAJ0B,KAIP4D,EAJO,OAKeloB,mBAAS,IALxB,mBAK1BmkB,EAL0B,KAKR0D,EALQ,OAMO7nB,mBAAS,IANhB,mBAM1Bqa,EAN0B,KAMZ8N,EANY,OAOOnoB,mBAAS,IAPhB,mBAO1Byf,EAP0B,KAOZ2I,EAPY,OAQOpoB,mBAAS,IARhB,mBAQ1B6Y,EAR0B,KAQZC,EARY,OASL9Y,mBAAS,IATJ,mBAS1BqR,EAT0B,KASlBuH,EATkB,OAUO5Y,mBAAS,IAVhB,mBAU1Bub,EAV0B,KAUZiJ,EAVY,OAWLxkB,mBAAS,MAXJ,mBAW1B8f,EAX0B,KAWlBuI,GAXkB,QAYDroB,mBAAS,IAZR,qBAY1B4f,GAZ0B,MAYhB0I,GAZgB,SAaKtoB,mBAAS,GAbd,qBAa1B4kB,GAb0B,MAabuB,GAba,SAcenmB,mBAAS,IAdxB,qBAc1BumB,GAd0B,MAcRG,GAdQ,SAeH1mB,oBAAS,GAfN,qBAe1B2kB,GAf0B,MAejB4D,GAfiB,SAgBHvoB,oBAAS,GAhBN,qBAgB1B+f,GAhB0B,MAgBjByI,GAhBiB,MAiB3BC,GAAYzE,iBAAO,MACnByC,GAAmBzC,kBAAO,GAlBC,GAmBlBliB,KAAKC,UAAbC,GAnB0B,wBAoBLhC,oBAAS,GApBJ,qBAoB1BF,GApB0B,MAoBlBoJ,GApBkB,MAsBjCrQ,qBAAU,WACRusB,KACAzsB,KAEAguB,GAAa,aACZ,IAEH9tB,qBAAU,WACR,IAAM0F,EACJnN,EAAe,aAAeA,EAAe,YAAY2B,WACvD21B,EAAqB,GACrBC,EAAsB,GACV,OAAhBpC,SAAgB,IAAhBA,OAAkBlc,KAAI,YAA0B,IAAvBiO,EAAsB,EAAtBA,gBACnBsQ,EAAU,GAIZA,GAFF,OAAItQ,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBxf,SAAS,YAErB,OAAGwf,QAAH,IAAGA,OAAH,EAAGA,EAAiBvlB,WAAWmQ,QAAQ,gBAAiB,IAErDoV,EAEZoQ,EAAmB/tB,KAAKiuB,MAKxBD,EAHGD,EAAmB5vB,SAAnB,OAA4B8mB,SAA5B,IAA4BA,QAA5B,EAA4BA,GAAUtH,iBAGnBiO,GAFH,uBAAOA,IAAP,CAAyB3G,KAI9C8G,GAAoBiC,GAEpBrC,GACE1G,GACA+I,EACAvE,EACAD,EACAG,EACA/I,EACAkL,GACAN,GACAO,GACAjH,IAEU,OAARlhB,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,GAAKomB,GAAiB7wB,UAC3C6wB,GAAiB7wB,SAAU,KAE5B,CAACgqB,GAAU2G,KAEd,IAAM5tB,GAAU,WACd,IAAMhD,EAAOZ,KAAK+G,MAAM1K,EAAe,SACvCq3B,GAAU7yB,QAAU,IAAIizB,UlEpGS,0CkEsG7B7d,SACElZ,GAASa,IAAIyE,QACXzB,EAAKhC,UAAUI,gBACf,cACAhB,SAASjB,GAASuF,IAAIC,OAE1B,KAEJmxB,GAAU7yB,QAAQkzB,OAAS,WACzBT,GAAUI,GAAU7yB,SACpBoD,QAAQC,IAAI,cAEdwvB,GAAU7yB,QAAQmzB,UAAY,SAAC/F,GAC7BhqB,QAAQC,IAAI,4BAA6B+pB,GACzC,IAAI4C,EAAW7wB,KAAK+G,MAAMknB,EAAMvwB,MAGhC,GAFA61B,GAAY1C,GACZoD,GAAkBpD,GACdA,EAAS5vB,QAAQ8C,SAAS,qCAAsC,CAClE,IACMmwB,GADFC,EAAQtD,EAAS5vB,QAAQ6B,MAAM,MACZqxB,EAAM7oB,OAAS,GAChCinB,EACgB,QAApB2B,EAAShF,OAAmB,EAAwB,WAApBgF,EAAShF,OAAsB,EAAI,EACrEnL,EAAgBwO,QACX,GAAI1B,EAAS5vB,QAAQ8C,SAAS,8BAA+B,CAClE,IAAIowB,EACED,GADFC,EAAQtD,EAAS5vB,QAAQ6B,MAAM,MACZqxB,EAAM7oB,OAAS,GAChCgR,EACgB,QAApB4X,EAAShF,OAAmB,EAAwB,SAApBgF,EAAShF,OAAoB,EAAI,EACnErL,EAAUvH,KAGdoX,GAAU7yB,QAAQuzB,QAAU,WAC1BnwB,QAAQC,IAAI,sBAEdwvB,GAAU7yB,QAAQwzB,QAAU,SAACrzB,GAC3BiD,QAAQC,IAAI,mBAAoBlD,KAK9BizB,GAAoB,SAACpD,GACzB,IAAMjwB,EAAOZ,KAAK+G,MAAM1K,EAAe,SAGrCw0B,EAASyD,eAAevwB,SACtBkS,SACElZ,GAASa,IAAIyE,QAAQzB,EAAKhC,UAAUM,QAAS,cAAclB,SACzDjB,GAASuF,IAAIC,SAKnBmtB,GAAiB,SAACO,GAChB,IAAMkB,EACJ90B,EAAe,WAAaA,EAAe,UACvCk4B,EACJl4B,EAAe,kBACfA,EAAe,iBAAiByG,MAAM,KAClC0xB,EACJn4B,EAAe,WAAaA,EAAe,UAAUyG,MAAM,KACvD2xB,EACJp4B,EAAe,YAAcA,EAAe,WAAWyG,MAAM,KACzD0G,EACJnN,EAAe,aAAeA,EAAe,YAAY2B,WAEvD+zB,EAAkB,GACtB9B,EAAc3a,KAAI,YAA0B,IAAvBiO,EAAsB,EAAtBA,gBACfsQ,EAAU,GAIZA,EAFEtQ,EAAgBxf,SAAS,WAEjBwf,EAAgBvlB,WAAWmQ,QAAQ,gBAAiB,IAEpDoV,EAEZwO,EAAgBnsB,KAAKiuB,MAEvB,IAAI/C,EAAkBD,EAClBK,EAAyBjB,EACzByE,GAAgB,EAChBC,GAAe,EACfC,GAAgB,EAChBC,GAAe,EACfC,EAAkC,GAElChD,EAAsB,CACxBS,QAAS,GACTjW,OAAQ,GACRmG,QAAS,GACTjZ,SAAU,IAGS,OAAjB+qB,IAAqC,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcjpB,QAAS,IAClDopB,GAAgB,EAChB5C,EAAmB,eACdA,EADc,CAEjBS,QAASgC,KAGO,OAAhBC,IAAmC,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAalpB,QAAS,IAChDqpB,GAAe,EACf7C,EAAmB,eACdA,EADc,CAEjBxV,OAAQkY,KAGS,OAAjBC,IAAqC,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcnpB,QAAS,IAClDspB,GAAgB,EAChB9C,EAAmB,eACdA,EADc,CAEjBrP,QAASgS,KAGI,OAAbjrB,IAA6B,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,IAC1CupB,GAAe,EACf/C,EAAmB,eACdA,EADc,CAEjBtoB,SAAUA,MAIVkrB,GAAiBC,GAAgBC,GAAiBC,KACpD3D,EAAyBW,GACvBC,EACAjB,EACAK,EACAa,EACA,YAIA8C,IAOFC,EANsB,CACpBjE,EAAStN,gBACTsN,EAASpN,4BACToN,EAAS3U,aACT2U,EAAS5vB,SAE2CqU,KAAI,SAAC7Z,GAAD,OACxDA,EAAM+nB,cAAczf,SAASyF,EAASga,mBAIvCqR,GACAH,GACAC,GACAC,GAII7C,EAAgBhuB,SAAS8sB,EAAStN,mBACrC2N,EAAsB,uBAAOA,GAAP,CAA+BL,IACrDa,GAAiB7wB,SAAU,GAG/B,IAAM+vB,EAAuBM,EAAuB5b,KAAI,SAAC7Z,GAEvD,OACEA,EAAM8nB,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,MACxD0iB,EAAStN,iBACXsN,EAAS9R,aACP9I,SACElZ,GAASa,IAAIyE,QACXzB,EAAKhC,UAAUM,QACf,cACAlB,SAASjB,GAASuF,IAAIC,QAE5BsuB,EAAStN,kBAAoB4N,GAGzB11B,EAAMgoB,4BAA4B1f,SAAS,aAC7C+sB,EAAe,eACVA,EADU,CAEbrN,4BAA6BhoB,EAAMgoB,+BAGnChoB,EAAM8nB,gBAAgBxf,SAAS,aACjC+sB,EAAe,eACVA,EADU,CAEbvN,gBAAiB9nB,EAAM8nB,mBAGvB9nB,EAAMygB,aAAanY,SAAS,aAC9B+sB,EAAe,eACVA,EADU,CAEbrO,QAAS,CACPjgB,KAAM/G,EAAMygB,iBAKlB4U,EAAe,eACVA,EADU,CAEbhD,sBAAuBryB,EAAMqyB,sBAAwB,KAMvDryB,EAAM8nB,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,MACxD0iB,EAAStN,iBACXsN,EAAS9R,aACP9I,SACElZ,GAASa,IAAIyE,QACXzB,EAAKhC,UAAUM,QACf,cACAlB,SAASjB,GAASuF,IAAIC,QAIxB9G,EAAMgoB,4BAA4B1f,SAAS,aAC7C+sB,EAAe,eACVA,EADU,CAEbrN,4BAA6BhoB,EAAMgoB,+BAGnChoB,EAAM8nB,gBAAgBxf,SAAS,aACjC+sB,EAAe,eACVA,EADU,CAEbvN,gBAAiB9nB,EAAM8nB,mBAGvB9nB,EAAMygB,aAAanY,SAAS,aAC9B+sB,EAAe,eACVA,EADU,CAEbrO,QAAS,CACPjgB,KAAM/G,EAAMygB,iBAIX4U,GAIAr1B,KAKRi5B,GACAC,GACAC,GACAC,GAGD5D,GACEJ,EACAK,EACAC,EACAC,IAgCJ,OA3BEsD,IACCH,EAAaxwB,SAAS8sB,EAASzK,iBAAiBpoB,YAE5B4yB,EAErB+D,IACCH,EAAYzwB,SAAS8sB,EAASjoB,UAAU5K,YAEpB4yB,EAErBgE,IACCH,EAAa1wB,SAAS8sB,EAASjR,WAAW5hB,YAEtB4yB,EAErBiE,IACCC,EAAgC/wB,UAAS,GAErB6sB,EAGAD,GACnBC,EACAC,EACAC,OAqCV,IAAMT,GAAmB,WACvB,IAAMta,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdo3B,EACJl4B,EAAe,kBACfA,EAAe,iBAAiByG,MAAM,KAClC0xB,EACJn4B,EAAe,WAAaA,EAAe,UAAUyG,MAAM,KACvD2xB,EACJp4B,EAAe,YAAcA,EAAe,WAAWyG,MAAM,KAC3DiyB,EAAiB,eACfR,GACFA,EAAajpB,OAAS,GAAK,CAAE8a,iBAAkBmO,GAF9B,GAGfC,GAAeA,EAAYlpB,OAAS,GAAK,CAAE1C,UAAW4rB,GAHvC,GAIfC,GACFA,EAAanpB,OAAS,GAAK,CAAEsU,WAAY6U,IAYvCpO,EACJvpB,EACA,yCACAmZ,SACElZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAGtByyB,EACJxO,EAAalb,OAAS,GACO,IAA7B+jB,EAAkB/jB,QACU,IAA5B8jB,EAAiB9jB,QACY,IAA7BikB,EAAkBjkB,OACd+a,EAAU,WAAaG,EACvBA,EAAalb,OAAS,IACrB+jB,EAAkB/jB,OAAS,GAC1B8jB,EAAiB9jB,OAAS,GAC1BikB,EAAkBjkB,OAAS,GAC7B+a,EACA,WACArmB,KAAKC,UAAU80B,GACf,WACAvO,EACwB,IAAxBA,EAAalb,SACZ+jB,EAAkB/jB,OAAS,GAC1B8jB,EAAiB9jB,OAAS,GAC1BikB,EAAkBjkB,OAAS,GAC7B+a,EAAU,WAAarmB,KAAKC,UAAU80B,GACtC,GACFn0B,IACEo0B,EAAe1pB,OAAS,EAC1B/N,IAAM3B,IAAIo5B,EAAgB/3B,GAASwD,MAAK,SAACsN,GACvC2hB,EAAiB3hB,EAAIrQ,SAGvBH,IAAM3B,IAAIyqB,EAASppB,GAASwD,MAAK,SAACsN,GAChC,IAAIknB,EAAgB,EACpB/B,EAAenlB,EAAIrQ,MACnBgyB,EAAiB3hB,EAAIrQ,MACrByW,IAAU,GACVwd,GAAoB5jB,EAAIrQ,MACFqQ,EAAIrQ,KAAKghB,QAC7B,SAACC,EAAaC,EAAchJ,GACgB,GAAtCgJ,EAAakP,uBACfmH,MAGJ,IAEF7D,GAAe6D,QAgEvB,OACE,oCACE,kBAAC,IAAD,CAAKp4B,UAAU,gBACb,kBAAC,GAAD,CAAgBoF,WAAS,KAE3B,kBAAC,IAAD,CAAKpF,UAAU,sBAAsBqG,YAAU,cAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcjB,WAAS,EAACvE,KAAMvB,IAC9B,kBAAC,GAAD,CAASU,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,QACZ,8BACE,kBAACq4B,GAAA,EAAD,CACEr4B,UAAU,2CACVyN,MAAM,mBACN9G,QAAS,kBAzE3BgwB,IAAW,QACXC,IAAW,O7DhbiB,qB6D8fjB1oB,GACC,kBAAC,GAAD,CAASA,OAAQA,MACdA,KAAqB,OAAXkoB,QAAW,IAAXA,OAAA,EAAAA,EAAa3nB,QAAS,EACnC,kBAAC,GAAD,CACEof,aAAcA,EACduF,cAAeA,EACfjF,QAASA,GACTlH,aAAcA,EACdxH,OAAQA,EACRkK,aAAcA,EACdqE,SAAUA,GACVE,OAAQA,EACRD,WA7DG,SAACJ,GAElB,IADA,IAAIyK,EAAuBzK,EAAahtB,KAC/B6X,EAAO,EAAGA,EAAO0a,EAAc3kB,OAAS,EAAGiK,IAEhD0a,EAAc1a,GAAMgO,gBACjBvlB,WACAmQ,QAAQ,gBAAiB,MAC5Buc,EAAahtB,KAAK6lB,gBACfvlB,WACAmQ,QAAQ,gBAAiB,MAE5BgnB,EAAoB,eACfA,EADe,CAElBrH,sBAAuBmC,EAAc1a,GAAMuY,yBAK/CqH,EAAqBrH,uBACrBqH,EAAqBrH,sBAAwB,GAC7C+B,GAAc,GAGduB,GADkBvB,GAAc,IAwCpBS,WAAYA,KACZ5C,aAAcA,GACd+B,gBAAiBA,EACjBC,iBAAkBA,EAClBQ,oBA5FY,SAACxF,GACvB8C,cACFgG,IAAW,GACXC,IAAW,KAGb/D,GAAiB,SAACO,GAOhB,OANcA,EAAc3a,KAAI,SAAC7Z,GAAD,OAC9BA,EAAM8nB,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,MAC1Duc,EAAanH,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,IADjE,eAESuc,EAFT,CAEuBoD,sBAAuB,IAC1CryB,QAIJivB,EAAaoD,sBAAwB,GAAK+B,GAAc,IAE1DuB,GADkBvB,GAAc,GAGlCxzB,EAAe,SAAUquB,EAAanH,iBACtC8P,EAAgB3I,GAChB3G,EAAgB2G,EAAatE,kBAC7BvC,EAAU6G,EAAa9hB,YAuET0c,aAAcA,EACd0K,kBAlMhB,SAA2BtvB,EAAMjF,GAC/B23B,EAAgB,CAAE1yB,OAAMjF,WAkMV2zB,iBAAkBA,EAClBG,kBAAmBA,EACnBF,kBAAmBA,EACnB3I,0BA9NkB,SAChChpB,EACAgD,EACAqkB,EACAI,EACAF,GAGAyN,GACE3N,EACAI,EACAF,EACA4N,EACAC,EACAK,EACA,WAEFzD,EAAiBhyB,GACJ,UAATgD,GACFuM,GAAKmgB,eAAe,CAAE1U,OAAQ,MA4MlB2X,iBAAkBA,GAClBxM,UAAWA,EACXE,gBAAiBA,EACjB8L,YAAaA,GACbD,QAASA,KAGX,kBAAC,GAAD,CAAmBrQ,cAAeA,aCzmB1Cjb,I,OAA2BC,IAA3BD,OA4FO4V,IA5FoB3V,IAApB6wB,OAAoB7wB,IAAZ6D,Q,2MAgBrBxG,MAAQ,CACN6C,WAAW,G,EAGbC,OAAS,WACP,EAAKC,SAAS,CACZF,WAAY,EAAK7C,MAAM6C,a,wEAIjB,IAAD,EACHG,EAAa,GAQjB,OAPA,UAAI1I,KAAKC,MAAMuB,YAAf,aAAI,EAAiB0C,YACflE,KAAKC,MAAMuB,KAAK0C,SAAS7D,SAASwH,SAAS,WAC7Ca,EAAa,IACJ1I,KAAKC,MAAMuB,KAAK0C,SAAS7D,SAASwH,SAAS,cACpDa,EAAa,MAIf,oCACGpI,IAAMqI,cACL3I,KAAK0F,MAAM6C,UAAYM,KAAqBD,KAC5C,CACEjI,UAAW,4BACX2G,QAAStH,KAAKwI,SAGlB,kBAAC,GAAD,CACE7H,UACGX,KAAK0F,MAAM6C,UAER,mCADA,yCAGNhB,QAAS,KACTuB,aAAW,EACXP,UAAWvI,KAAK0F,MAAM6C,WAEtB,kBAAC,KAAD,CAAMQ,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAACP,IACrD,kBAAC,KAAKrB,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,0BAInB,IACD,kBAAC,IAAD,CAAMP,GAAG,0B9DYS,qB8DVpB,kBAAC,KAAKiH,KAAN,CACEhI,IAAI,IACJ6J,KACE,0BAAMvI,UAAU,eACd,0BAAMA,UAAU,sBAInB,IACD,kBAAC,IAAD,CAAMP,GAAG,2B9DAU,uB8DGvB,yBAAKO,UAAU,WACb,uBAAGkF,KAAK,IAAIlF,UAAU,OAAO+W,UAAQ,G9D1E7B,Q8D6ER,uBAAG7R,KAAK,IAAIlF,UAAU,OAAO+W,UAAQ,G9D9E7B,e,G8DWOpX,IAAMP,Y,0CClBpBonB,GAAgB,SAAC3lB,EAAM4lB,GA4ChC,OA1CoB5lB,EACjBuM,QACC,SAACsL,GAAD,OACEA,EAAKgO,gBAAgBC,cAAczf,SAASuf,EAAIE,gBAChDjO,EAAKkO,4BACFD,cACAzf,SAASuf,EAAIE,gBAChBjO,EAAK8c,cAAc7O,cAAczf,SAASuf,EAAIE,gBAC9CjO,EAAKtU,QAAQuiB,cAAczf,SAASuf,EAAIE,kBAE3ClO,KAAI,SAACC,GACJ,IAAIgO,EAAkBhO,EAAKgO,gBAAgBpV,QACzC,IAAIuV,OAAOJ,EAAK,OAChB,SAACK,GAAD,iEACsDA,EADtD,cAGEF,EAA8BlO,EAAKkO,4BAA4BtV,QACjE,IAAIuV,OAAOJ,EAAK,OAChB,SAACK,GAAD,iEACsDA,EADtD,cAGE0R,EAAe9f,EAAK8c,cAAclkB,QACpC,IAAIuV,OAAOJ,EAAK,OAChB,SAACK,GAAD,iEACsDA,EADtD,cAGEC,EAAcrO,EAAKtU,QAAQkN,QAC7B,IAAIuV,OAAOJ,EAAK,OAChB,SAACK,GAAD,iEACsDA,EADtD,cAGF,OAAO,eACFpO,EADL,CAEEgO,gBAAiBA,EACjBE,4BAA6BA,EAC7BxiB,QAAS2iB,EACTqO,SAAU,CACRzvB,KAAM6yB,EACNlD,YAAa5c,EAAK4c,mBCZ1Bp1B,I,OAAWC,EAAQ,KACVoL,GAAU,SAACjM,GAAW,IAAD,EACJ8O,mBAAS,IADL,mBACzBqR,EADyB,KACjBuH,EADiB,OAEQ5Y,mBAAS,IAFjB,mBAEzB6Y,EAFyB,KAEXC,EAFW,OAGA9Y,mBAAS,IAHT,mBAGzBgnB,EAHyB,KAGfqD,EAHe,OAIUrqB,mBAAS,IAJnB,mBAIzBsqB,EAJyB,KAIVC,EAJU,OAKIvqB,mBAAS,IALb,mBAKzBkZ,EALyB,KAKbC,EALa,OAMMnZ,mBAAS,IANf,mBAMzBwqB,EANyB,KAMZC,EANY,OAOEzqB,mBAAS,IAPX,mBAOzBsZ,EAPyB,KAOdC,EAPc,OAQoBvZ,mBAAS,IAR7B,mBAQzBwZ,EARyB,KAQLC,EARK,OASsBzZ,mBAAS,IAT/B,mBASzB0qB,EATyB,KASJC,EATI,OAUkB3qB,mBAAS,IAV3B,mBAUzB4Z,EAVyB,KAUNC,EAVM,OAWc7Z,mBAAS,IAXvB,mBAWzB8Z,EAXyB,KAWRC,GAXQ,QAYgB/Z,mBAAS,IAZzB,qBAYzB4qB,GAZyB,MAYPC,GAZO,SAaY7qB,mBAAS,IAbrB,qBAazBka,GAbyB,MAaTC,GAbS,MAehCthB,qBAAU,WACR,IAAMiS,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGpBI,IACG3B,IACCkB,EACE,uBACAmZ,SACElZ,GAASa,IAAIyE,QAAQzB,EAAKhC,UAAUM,QAAS,cAAclB,SACzDjB,GAASuF,IAAIC,OAGnBtF,GAEDwD,MAAK,SAACsN,GACL,IAAIrQ,EAAO,GACXqQ,EAAIrQ,KAAK4X,KAAI,SAAC7Z,GAAD,OACXiC,EAAKkI,KAAK,CACRwF,MAAO3P,EAAMw2B,SAASzvB,KACtB/G,MAAOA,EAAMw2B,SAASE,iBAG1BqD,EAAiB93B,QAEpB,IAEHoG,qBAAU,gBACwBuhB,IAA5BlpB,EAAMmpB,aAAa5kB,MAAuBvE,EAAMiT,SAClDmW,IAAc,KAEf,CAACzB,EAAcxH,EAAQ2V,IAE1BnuB,qBAAU,WACR,GAAgC,iBAA5B3H,EAAMmpB,aAAa5kB,KAAyB,CAC9C,IAAM8kB,EAAgBT,EAAgB9a,QACpC,SAACwb,GAAD,OAAQA,EAAGhqB,QAAUU,EAAMmpB,aAAa7pB,SAEpCiqB,EAAQ5B,EAAa7Z,QACzB,SAAC0b,GAAD,OAAQA,IAAOxpB,EAAMmpB,aAAa7pB,SAEpCsoB,EAAgB2B,GAChBV,GAAmBQ,GAErB,GAAgC,oBAA5BrpB,EAAMmpB,aAAa5kB,KAA4B,CACjD,IAAMq1B,EAAiBF,GAAiB5rB,QACtC,SAACwb,GAAD,OAAQA,EAAGhqB,QAAUU,EAAMmpB,aAAa7pB,SAEpCu6B,EAAS/D,EAAShoB,QAAO,SAAC0b,GAAD,OAAQA,IAAOxpB,EAAMmpB,aAAa7pB,SACjE65B,EAAYU,GACZF,GAAoBC,GAEtB,GAAgC,kBAA5B55B,EAAMmpB,aAAa5kB,KAA0B,CAC/C,IAAMolB,EAAeX,GAAelb,QAClC,SAACwb,GAAD,OAAQA,EAAGhqB,QAAUU,EAAMmpB,aAAa7pB,SAEpCsqB,EAAWzJ,EAAOrS,QAAO,SAAC0b,GAAD,OAAQA,IAAOxpB,EAAMmpB,aAAa7pB,SACjEooB,EAAUkC,GACVX,GAAkBU,MAEnB,CAAC3pB,EAAMmpB,eAEV,IAAMU,GAAiB,CACrB,CAAE5a,MjE9F2B,MiE8FD3P,MAAO,GACnC,CAAE2P,MjE9F8B,SiE8FD3P,MAAO,GACtC,CAAE2P,MjE9F4B,OiE8FD3P,MAAO,IAEhCwqB,GAAgB,CACpB,CAAE7a,MjE9FoB,MiE8FD3P,MAAO,GAC5B,CAAE2P,MjEjGqB,OiEiGD3P,MAAO,GAC7B,CAAE2P,MjEjGuB,SiEiGD3P,MAAO,IAE3Bw6B,GAAkBV,EAYlBhQ,GAAgB,SAAC1U,GACrB,IAAIsV,EAAc,eACZ7J,EAAOhR,OAAS,GAAK,CAAE1C,UAAW0T,GADtB,GAEZwH,EAAaxY,OAAS,GAAK,CAAE8a,iBAAkBtC,GAFnC,GAGZmO,EAAS3mB,OAAS,GAAK,CAAE6mB,YAAaF,IAE5CzN,EAAalI,GACb8H,EAAcN,GACd4R,EAAezD,GACf2D,EAAuBC,IACvB/Q,EAAqBK,IACrBT,EAAsBK,GACtB,IAAMhP,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCmN,EAAWnN,EAAe,YAC1BY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdkpB,EACJvpB,EACA,0CACAmZ,SACElZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAEtB+jB,EAAU,eACXH,EADW,CAEdgM,YACEhM,EAAegM,aAAehM,EAAegM,YAAYn0B,WAC3D4K,UACEud,EAAevd,WAAaud,EAAevd,UAAU5K,WACvDooB,iBACED,EAAeC,kBACfD,EAAeC,iBAAiBpoB,aAE9BuoB,EACmB,KAAvBpqB,EAAMqqB,aACFH,EAAU,WAAarmB,KAAKC,UAAUqmB,GACtCD,EACA,WACArmB,KAAKC,UAAUqmB,GACf,WACAnqB,EAAMqqB,aAERC,EAAe,GACnBlpB,IAAM3B,IAAI2qB,EAAUtpB,GAASwD,MAAK,SAACsN,GAG/B0Y,GAFU,OAARjd,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,EAEN+X,GAActV,EAAIrQ,KAAM8L,GAExBuE,EAAIrQ,KAErBvB,EAAMuqB,0BACJD,EACA,QACA1B,EACAI,GACA0Q,OAGAhlB,GACF1U,EAAM0U,QA+FV,OACE,6BACE,kBAAC,IAAD,CAAK1M,KAAM,GAAIgC,MAAO,CAAEqE,MAAO,UAC7B,yBAAK3N,UAAU,IACb,kBAAC,IAAD,CAAKA,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAK,MACR,4BhE7NQ,WgE+NV,kBAAC,IAAD,CAAKA,KAAK,KAAKtH,UAAU,8BACvB,kBAAC,KAAD,CACE6D,KAAK,OACL7D,UAAU,iBACV2G,QAAS,kBApDH,WAClB,IAAMuS,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCmN,EAAWnN,EAAe,YAC1BY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdkpB,EACJvpB,EACA,0CACAmZ,SACElZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAGxBkkB,EAAe,GACnBlpB,IAAM3B,IAAIyqB,EAASppB,GAASwD,MAAK,SAACsN,GAG9B0Y,GAFU,OAARjd,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,EAEN+X,GAActV,EAAIrQ,KAAM8L,GAExBuE,EAAIrQ,KAErBvB,EAAMuqB,0BAA0BD,EAAc,QAAS,GAAI,GAAI,IAC/D1C,EAAgB,IAChBiB,GAAmB,IACnBnB,EAAU,IACVuB,GAAkB,IAClB0Q,GAAoB,IACpBR,EAAY,OAEdn5B,EAAM0U,OAeqB8V,KhElOV,WgEyOX,kBAAC,KAAD,CAAS9pB,UAAU,oBACnB,kBAAC,cAAD,CACE+pB,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,GAEX,kBAAC,IAAD,CAAKnqB,UAAU,+CACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAKsH,KAAK,KAAKtH,UAAU,oBACvB,4BhEnPW,kBgEqPb,kBAAC,IAAD,CAAKsH,KAAK,MACR,kBAAC,KAAS8iB,MAAV,CACEpqB,UAAU,8BACV2F,KAAK,eACLvF,QAAS+oB,GACTvqB,MAAOqoB,EACPlW,SA/FlB,SAA4BsZ,GAC1B,IAAIC,EAAWpC,EACXmC,EAAc5b,OAAS,EACzB4b,EAAc5R,KAAI,SAAC+L,GACZ8F,EAAShE,MAAK,SAACsC,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAGtC8F,EAAWA,EAASld,QAAO,SAACwb,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAFhD8F,EAASvhB,KAAKogB,GAAe7C,MAAK,SAACiE,GAAD,OAASA,EAAI3rB,QAAU4lB,SAM7D8F,EAAW,GAEbnC,GAAmBmC,GACnBpD,EAAgBmD,QAsFN,yBAAKrqB,UAAU,cACb,kBAAC,IAAD,CAAKsH,KAAK,KAAKtH,UAAU,oBACvB,4BAAKyK,KAEP,kBAAC,IAAD,CAAKnD,KAAK,MACR,kBAAC,KAAS8iB,MAAV,CACEpqB,UAAU,8BACV2F,KAAK,SACL/G,MAAO6gB,EACPrf,QAASgpB,GACTrY,SAhJlB,SAAsBsZ,GACpB,IAAIC,EAAWhC,GACX+B,EAAc5b,OAAS,EACzB4b,EAAc5R,KAAI,SAAC+L,GACZ8F,EAAShE,MAAK,SAACsC,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAGtC8F,EAAWA,EAASld,QAAO,SAACwb,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAFhD8F,EAASvhB,KAAKqgB,GAAc9C,MAAK,SAACiE,GAAD,OAASA,EAAI3rB,QAAU4lB,SAM5D8F,EAAW,GAEb/B,GAAkB+B,GAClBtD,EAAUqD,QAsIA,yBAAKrqB,UAAU,cACb,kBAAC,IAAD,CAAKsH,KAAK,KAAKtH,UAAU,oBACvB,4BhE/VM,agEiWR,kBAAC,IAAD,CAAKsH,KAAK,MACR,kBAAC,KAAS8iB,MAAV,CACEpqB,UAAU,8BACV2F,KAAK,WACLvF,QAASg5B,GACTx6B,MAAOw2B,EACPrkB,SA7IlB,SAAwBsZ,GACtB,IAAIC,EAAW0O,GACX3O,EAAc5b,OAAS,EACzB4b,EAAc5R,KAAI,SAAC+L,GACZ8F,EAAShE,MAAK,SAACsC,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAGtC8F,EAAWA,EAASld,QAAO,SAACwb,GAAD,OAAQA,EAAGhqB,QAAU4lB,KAFhD8F,EAASvhB,KAAKqwB,GAAgB9S,MAAK,SAACiE,GAAD,OAASA,EAAI3rB,QAAU4lB,SAM9D8F,EAAW,GAEb2O,GAAoB3O,GACpBmO,EAAYpO,WAsIR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/iB,KAAK,KAAKtH,UAAU,mBACvB,kBAAC,KAAD,CACE6D,KAAK,UACL7D,UAAU,OACV2G,QAAS,kBAAM+hB,IAAc,KhEnStB,SgEuST,kBAAC,KAAD,CAAQ7kB,KAAK,YAAY8C,QA/PlB,SAACqK,GAChBkW,EAAgBI,GAChBN,EAAUU,GACV+Q,EAAYG,GACZzQ,GAAmBP,GACnBW,GAAkBP,GAClBiR,GAAoBH,GACpBx5B,EAAM0U,SAyPKtP,QAgDA8lB,G,2MAtCbzlB,MAAQ,CACNwN,SAAS,G,EAGXyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIb0B,oBAAsB,SAAC1B,GACrB,EAAKzK,SAAS,CAAEyK,a,wEAGhB,OACE,oCACE,kBAAC,IAAD,CACEjM,UAAU,SACVC,QACE,kBAAC,GAAD,CACEyN,KAAM3U,KAAK2U,KACX2V,aAActqB,KAAKC,MAAMqqB,aACzBlB,aAAcppB,KAAKC,MAAMmpB,aACzBoB,0BAA2BxqB,KAAKC,MAAMuqB,0BACtCtX,QAASlT,KAAK0F,MAAMwN,UAGxB3L,QAAQ,QACR2L,QAASlT,KAAK0F,MAAMwN,QACpB4B,gBAAiB9U,KAAK4U,qBAEtB,0BAAMjU,UAAU,2B,GAhCEL,IAAMP,WChY1B8rB,GAAcC,KAAdD,UAmEOE,G,2MAhEbrmB,MAAQ,CACNsmB,QAAQ,EACRC,QAAS,EACTC,UAAW,GACXC,eAAgB,I,EAGlBC,WAAa,WACX,EAAK3jB,SAAS,CACZujB,QAAQ,EACRC,QAAU,EAAKvmB,MAAMsmB,OAEjB,EAAKtmB,MAAMumB,QAAU,EADrB,EAAKvmB,MAAMumB,QAAU,K,EAK7BI,UAAY,WACV,EAAK5jB,SAAS,CACZujB,QAAQ,EACRC,QAAU,EAAKvmB,MAAMsmB,OAEjB,EAAKtmB,MAAMumB,QAAU,EADrB,EAAKvmB,MAAMumB,QAAU,K,+EAKb5S,GACd,OACE,yBAAK1Y,UAAU,mBAAmBtB,IAAKW,KAAK0F,MAAMumB,SAChD,0BAAMtrB,UAAU,aACb6L,KAAO6M,EAAKiT,YAAY5e,MAAMC,QAAQlB,OAAO,kCAAyB,IACtE4M,EAAKxX,WAFR,IAEqBwX,EAAKrX,WAE1B,kBAAC,GAAD,CACEuqB,SAAU,CACRC,KAAM,EACNC,YAAY,EACZC,OAAQ,YACRC,SAAU3sB,KAAKosB,aAGhB/S,EAAKgS,c,+BAMJ,IAAD,OACP,OAAOrrB,KAAKC,MAAM2sB,UAAUxT,KAAI,SAACC,GAAD,OAC9B,yBAAK1Y,UAAU,YAAYqG,YAAU,cAClC,EAAK6lB,gBAAgBxT,GACrB,EAAK3T,MAAMsmB,QACV,uBACEhlB,YAAU,WACVrG,UAAU,6BACV2G,QAAS,EAAK+kB,WjEcD,qB,GiErEAtsB,aCoFV+sB,IAlFOhB,KAAdD,U,YAGN,WAAY5rB,GAAQ,IAAD,8BACjB,4CAAMA,KASRyR,SAAW,SAAC8a,GACV,EAAK/jB,SAAS,CAAE+jB,UAThB,EAAK9mB,MAAQ,CACX8mB,KAAM,EACNO,MAAO,GACPZ,eAAgB,IAElB,EAAKa,SAAW,EAAKA,SAASxnB,KAAd,gBAPC,E,iFAejBxF,KAAKyI,SAAS,CAAE0jB,eAAgBnsB,KAAKC,MAAMonB,kBAC3CrnB,KAAKgtB,SAAShtB,KAAKC,MAAMonB,mB,+BAGlB8E,GAAiB,IAAD,OAEjBprB,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,kCAElBgsB,OAAQ,CAAE5F,gBAAiB8E,IAG7B9qB,IAAM3B,IAAIkB,EAAW,YAAaG,GAASwD,MAAK,SAACsN,GAC/C,EAAKpJ,SAAS,CACZskB,MAAOlb,EAAIrQ,Y,+BAKP,IAAD,OACCurB,EAAU/sB,KAAK0F,MAAfqnB,MACR,OACE,oCACE,yBAAKziB,GAAG,YAAY3J,UAAWX,KAAKC,MAAMitB,MAAOlmB,YAAU,SACzD,2BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKiB,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,uEACb,kBAAC,IAAD,CAAKsH,KAAK,MACR,4BlEmCC,UkEjCH,kBAAC,KAAD,CACEX,QAAStH,KAAKyJ,UACdjF,KAAK,OACL7D,UAAU,4CAEV,0BACEA,UAAU,wBACV2G,QAAS,SAACqK,GAAD,OAAO,EAAK1R,MAAMktB,aAAaxb,QAI9C,kBAAC,KAAD,CAAShR,UAAU,eACnB,kBAAC,IAAD,CAAKsH,KAAK,KAAKtH,UAAU,QACvB,kBAAC,GAAD,CACE4qB,QAASvrB,KAAKC,MAAMonB,gBACpBqE,YAAa1rB,KAAKgtB,WAEpB,kBAAC,IAAD,CAAKrsB,UAAU,eACb,kBAAC,GAAD,CAAYisB,UAAWG,e,GApExBhtB,cCYbqtB,GAAY,CAChB,CAAE9iB,GAAI,EAAGhE,KpECe,yBoEAxB,CAAEgE,GAAI,EAAGhE,KpECe,gCoEAxB,CAAEgE,GAAI,EAAGhE,KpECe,kBoEAxB,CAAEgE,GAAI,EAAGhE,KpEEgB,+BoECrB+mB,GAAa,CACjB,CAAE/iB,GAAI,EAAGhE,KpEPe,OoEQxB,CAAEgE,GAAI,EAAGhE,KpEVgB,QoEWzB,CAAEgE,GAAI,EAAGhE,KpEVkB,WoEavBgnB,GAAmB,CACvB,CAAEhjB,GAAI,EAAGhE,KpElBsB,OoEmB/B,CAAEgE,GAAI,EAAGhE,KpElByB,UoEmBlC,CAAEgE,GAAI,EAAGhE,KpElBuB,SoEyJnBinB,G,YAnIb,aAAe,IAAD,8BACZ,+CACK7nB,MAAQ,CACX8nB,QAAS,GACTC,SAAU,IAEZ,EAAKC,WAAa,EAAKA,WAAWloB,KAAhB,gBANN,E,0EAUe,KAAvBxF,KAAK0F,MAAM8nB,QACbxtB,KAAKyI,SAAS,CACZ+kB,QAAS,cAGXxtB,KAAKyI,SAAS,CACZ+kB,QAAS,O,0CAMbxtB,KAAK2tB,aAAa3tB,KAAKC,MAAMonB,mB,mCAGlB8E,GAAiB,IAAD,OAErBprB,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACG3B,IACCkB,EACE,oDACAurB,EACFprB,GAEDwD,MAAK,SAACsN,GACL,EAAKpJ,SAAS,CAAEglB,SAAU5b,EAAIrQ,Y,kCAIxBosB,GACV,IAAIxG,EAAM,GAqBV,OApBAgG,GAAUhU,KAAI,SAACyU,GACTA,EAAEvjB,KAAOsjB,EAASE,qBACpB1G,EAAMyG,EAAEvnB,KACJsnB,EAASG,cACXV,GAAWjU,KAAI,SAACC,GACVuU,EAASG,cAAgB1U,EAAK/O,KAChC8c,EAAMA,EAAM,OAAS/N,EAAK/S,KAAO,WAKnCsnB,EAASI,qBACXV,GAAiBlU,KAAI,SAACC,GAChBuU,EAASI,qBAAuB3U,EAAK/O,KACvC8c,EAAMA,EAAM,OAAS/N,EAAK/S,KAAO,eAMpC8gB,I,+BAGC,IAAD,OACCqG,EAAaztB,KAAK0F,MAAlB+nB,SACR,OACE,oCAEE,yBAAKnjB,GAAG,YAAY3J,UAAWX,KAAKC,MAAMitB,OACxC,2BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjlB,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,uEACb,kBAAC,IAAD,CAAKsH,KAAK,MACR,4BnEnDI,amEqDN,kBAAC,KAAD,CACEX,QAAStH,KAAKyJ,UACdjF,KAAK,OACL7D,UAAU,4CAEV,0BACEA,UAAU,wBACV2G,QAAS,SAACqK,GAAD,OAAO,EAAK1R,MAAMguB,gBAAgBtc,QAIjD,kBAAC,KAAD,CAAShR,UAAU,eACnB,kBAAC,cAAD,CACE+pB,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,GAEX,kBAAC,IAAD,CAAK7iB,KAAK,KAAKtH,UAAU,aACvB,kBAAC,KAAD,KACG8sB,EAASrU,KAAI,SAACC,GAAD,OACZ,kBAAC,KAAShS,KAAV,KACE,0BAAM1G,UAAU,aACb6L,KAAO6M,EAAKiT,YACV5e,MACAC,QACAlB,OAAO,iCAAwB,IACjC4M,EAAK/S,MAER,6BACCia,KAAgB,EAAK2N,YAAY7U,oB,GArHrCtZ,aCsDRouB,G,YAxFb,aAAe,IAAD,8BACZ,+CACKzoB,MAAQ,CACX8nB,QAAS,GACTY,WAAY,IAEd,EAAKV,WAAa,EAAKA,WAAWloB,KAAhB,gBANN,E,0EAUe,KAAvBxF,KAAK0F,MAAM8nB,QACbxtB,KAAKyI,SAAS,CACZ+kB,QAAS,cAGXxtB,KAAKyI,SAAS,CACZ+kB,QAAS,O,0CAKbxtB,KAAKquB,WAAWruB,KAAKC,MAAMg2B,e,iCAGlB+D,GAAa,IAAD,OAEfj5B,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACG3B,IAAIkB,EAAW,yBAA2Bo5B,EAAYj5B,GACtDwD,MAAK,SAACsN,GACL,IAAIooB,EAAsB,GAC1BpoB,EAAIrQ,KAAK4X,KAAI,SAAC7Z,GACZ,IAAMmF,EAAOnF,EAAMmF,KAAK7C,WAAa,IAAMtC,EAAMmF,KAAK1C,UAEtD,OADAi4B,EAAoBvwB,KAAK,CAAE,qBAAsBhF,IAC1Cu1B,KAET,EAAKxxB,SAAS,CAAE2lB,WAAY6L,S,+BAIxB,IAAD,OACC7L,EAAepuB,KAAK0F,MAApB0oB,WACR,OACE,oCACE,yBAAK9jB,GAAG,YAAY3J,UAAWX,KAAKC,MAAMitB,OACxC,2BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjlB,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,uEACb,kBAAC,IAAD,CAAKsH,KAAK,MACR,4BpEeO,gBoEbT,kBAAC,KAAD,CACEX,QAAStH,KAAKyJ,UACdjF,KAAK,OACL7D,UAAU,4CAEV,0BACEA,UAAU,wBACV2G,QAAS,SAACqK,GAAD,OAAO,EAAK1R,MAAMquB,eAAe3c,QAIhD,kBAAC,KAAD,CAAShR,UAAU,eACnB,kBAAC,IAAD,CACEsH,KAAK,KACLtH,UAAU,mDAETytB,EAAWhV,KAAI,SAACC,GAAD,OACd,kBAAC,KAAD,KAAMA,EAAK,oC,GA7ERtZ,aCkBfshB,GAAavX,IAAbuX,SAEFgM,GAAa,CACjB,CAAE/iB,GAAI,EAAGhE,KtEJe,OsEKxB,CAAEgE,GAAI,EAAGhE,KtEPgB,QsEQzB,CAAEgE,GAAI,EAAGhE,KtEPkB,WsEUvBgnB,GAAmB,CACvB,CAAEhjB,GAAI,EAAGhE,KtEfsB,OsEgB/B,CAAEgE,GAAI,EAAGhE,KtEfyB,UsEgBlC,CAAEgE,GAAI,EAAGhE,KtEfuB,SsEkB9BzF,GAAWC,EAAQ,IA0mBRytB,GAzmBE,SAAC,GAWX,IAAD,IAVJC,EAUI,EAVJA,aACA5G,EASI,EATJA,aACAxH,EAQI,EARJA,OACAqO,EAOI,EAPJA,qBACAC,EAMI,EANJA,eACApE,EAKI,EALJA,aACAqE,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,OACAC,EACI,EADJA,QACI,EACWje,KAAKC,UAAbC,EADH,sBAEsChC,mBAAS,IAF/C,mBAEGggB,EAFH,KAEkBC,EAFlB,OAG0BjgB,mBAAS,IAHnC,mBAGGhK,EAHH,KAGYkqB,EAHZ,OAI0BlgB,mBAAS,IAJnC,mBAIGmgB,EAJH,KAIYC,EAJZ,OAKkCpgB,mBAAS,CAC7CqgB,gBAAgB,EAChBC,QAAS,KAPP,mBAKGC,EALH,KAKgBC,EALhB,OAS0CxgB,mBAAS,CACrDygB,oBAAoB,EACpBH,QAAS,KAXP,mBASGI,EATH,KASoBC,EATpB,OAcwC3gB,mBAAS,CACnD4gB,mBAAmB,EACnBN,QAAS,KAhBP,mBAcGO,EAdH,KAcmBC,EAdnB,OAmB0B9gB,oBAAS,GAnBnC,mBAmBG+gB,EAnBH,KAmBYC,EAnBZ,OAoB4BhhB,mBAAS,IApBrC,oBAoBGzB,GApBH,MAoBa0iB,GApBb,MAsBJpoB,qBAAU,WACRooB,GAAY1F,KACX,CAACA,EAAckE,EAAanH,kBAE/Bzf,qBAAU,WACRsyB,KACAxyB,KACA,IAAI+lB,EAAWyC,SAASC,eAAe,cACnCC,EAAOF,SAASC,eAAe,UAC/BE,EAAUH,SAASC,eAAe,aACR,IAA1BP,EAAeP,UACjBQ,EAAkB,CAAER,QAAS,GAAIM,mBAAmB,IACpDU,EAAQC,UAAU1wB,OAAO,aAEA,IAAvB0vB,EAAYD,UACdE,EAAe,CAAEF,QAAS,GAAID,gBAAgB,IAC9CgB,EAAKE,UAAU1wB,OAAO,aAEO,IAA3B6vB,EAAgBJ,UAClBK,EAAmB,CAAEL,QAAS,GAAIG,oBAAoB,IACtD/B,EAAS6C,UAAU1wB,OAAO,eAE3B,CAAC4uB,EAAanH,gBAAiBsH,IAElC/mB,qBAAU,WACR,GAAImnB,EAAc3f,OAAS,EACzB,GAAI9B,GAAS8B,OAAS,EAAG,CACvB,IAAImhB,EAAQ,EACZxB,EAAc3V,KAAI,SAAC7Z,GAIjB,OAHIA,EAAMwF,QAAQ8C,SAAS,aACzB0oB,GAAS,GAEJA,KAET,IAAIC,EAAqBN,SAASO,qBAAqB,QACrDF,EAAQ,GAENC,GACFA,EAAmBE,gBAAe,EAAO,CAAEC,MAAO,YAE/C,CACL,IAAIC,EAAcV,SAASW,uBAAuB,oBAChDX,SAASW,uBAAuB,oBAAoBzhB,OAAS,GAE3DwhB,GACFA,EAAYF,gBAAe,EAAO,CAAEC,MAAO,WAIhD,CAAC5B,EAAezE,IAEnB1iB,qBAAU,WACR,IAAMkpB,OACsC3H,IAA1C+F,EAAQV,EAAanH,iBACjB6H,EAAQV,EAAanH,iBACrB,GACN4H,EAAW6B,KACV,CAACtC,EAAanH,kBAEjB,IAAM6S,GAAsB,oCAAAnX,EAAAC,OAAA,gDACpBnJ,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGhB8vB,EAAS,GAEXA,EADEvC,EAAanH,gBAAgBxf,SAAS,SAClC,UAAG2mB,EAAanH,uBAAhB,aAAG,EACLvlB,WACDmQ,QAAQ,gBAAiB,IAEnBuc,EAAanH,gBAEpB7lB,EAAO,CACT6lB,gBAAiB0J,EACjB/tB,QAAS+W,SACPlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5BhF,IACGC,KAAKV,EAAW,yBAA0BY,EAAMT,GAChDwD,MAAK,SAAOsN,GAAP,SAAAkR,EAAAC,OAAA,gDACJgM,EAAiBnd,EAAIrQ,MADjB,wCA9BkB,sCAmDtBwvB,GAAqB,WACzB,IAAMnX,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACvC,GAAI4E,EAAS,CACX,IASoD,EAT9ChE,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAIhB8vB,EAAS,GACb,GAAIvC,EAAanH,gBAAgBxf,SAAS,SACxCkpB,EAAM,UAAGvC,EAAanH,uBAAhB,aAAG,EACLvlB,WACDmQ,QAAQ,gBAAiB,SAE5B8e,EAASvC,EAAanH,gBAGxB,IAAI7lB,EAAO,CACTwB,QAAS+W,SACPlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1B4vB,YAAazH,EAAayH,YAC1B5O,gBAAiB0J,EACjBhsB,QAASA,EACT8d,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5BhF,IACGC,KAAKV,EAAW,0BAA2BY,EAAMT,GACjDwD,MAAK,SAACsN,GACc,MAAfA,EAAIuO,SACqB,IAAvBvO,EAAIrQ,KAAKkL,WAA0C,IAAvBmF,EAAIrQ,KAAKkL,WACvCgiB,EAAe,EAAGqC,GAEpBf,GAAY,IACZpB,EAAW/c,GACXod,EAAW,IACXE,EAAW,eAAKD,EAAN,gBAAgB6B,EAAS,MACnClC,EAAOoC,KAAKntB,KAAKC,UAAU8N,EAAIrQ,WAKvCuP,EAAKmgB,eAAe,CAAEC,SAAU,MAG5BzpB,GAAU,WACdsnB,GAAiB,SAACD,GAAmB,IAAD,IAC9BqC,EAAU,GAEd,GACErC,GACAA,EAAc3f,SACd,UAAAuf,EAAStH,uBAAT,eAA0BvlB,WAAWmQ,QAAQ,gBAAiB,QAA9D,UACE8c,EAAc,GAAG1H,uBADnB,aACE,EACIvlB,WACDmQ,QAAQ,gBAAiB,KAC9B,CACA,IAAMof,EAAoBtC,EAAchhB,QACtC,SAACsL,GAAD,eACE,UAAAA,EAAKgO,uBAAL,eAAsBvlB,WAAWmQ,QAAQ,gBAAiB,QAA1D,UACA0c,EAAStH,uBADT,aACA,EAA0BvlB,WAAWmQ,QAAQ,gBAAiB,QAElEmf,EAAO,uBAAOC,GAAP,CAA0B1C,SAEjCyC,EAAO,aAAOrC,GAEhB,OAAOqC,MAILjE,GAAe,SAACxb,GACpB,IAAIob,EAAQmD,SAASC,eAAe,UAChCmB,aACFvB,GAAW,GAEkB,IAA3BN,EAAgBJ,SAClBK,EAAmB,CAAEL,QAAS,GAAIG,oBAAoB,IAE1B,IAA1BI,EAAeP,SACjBQ,EAAkB,CAAER,QAAS,GAAIM,mBAAmB,IAE1B,KAAxBL,EAAYD,SACdtC,EAAMuD,UAAUiB,IAAI,YACpBhC,EAAe,CAAEF,QAAS,YAAaD,gBAAgB,MAEvDrC,EAAMuD,UAAU1wB,OAAO,YACvB2vB,EAAe,CAAEF,QAAS,GAAID,gBAAgB,KAEjCc,SAASC,eAAe,cAC9BG,UAAU1wB,OAAO,YACZswB,SAASC,eAAe,aAC9BG,UAAU1wB,OAAO,aAGrBquB,GAAkB,SAACtc,GACvB,IAAI8b,EAAWyC,SAASC,eAAe,cACnCmB,aACFvB,GAAW,GAEc,IAAvBT,EAAYD,SACdE,EAAe,CAAEF,QAAS,GAAID,gBAAgB,IAElB,IAA1BQ,EAAeP,SACjBQ,EAAkB,CAAER,QAAS,GAAIM,mBAAmB,IAEtB,KAA5BF,EAAgBJ,SAClB5B,EAAS6C,UAAUiB,IAAI,YACvB7B,EAAmB,CAAEL,QAAS,YAAaG,oBAAoB,MAE/D/B,EAAS6C,UAAU1wB,OAAO,YAC1B8vB,EAAmB,CAAEL,QAAS,GAAIG,oBAAoB,KAE5CU,SAASC,eAAe,UAC9BG,UAAU1wB,OAAO,YACTswB,SAASC,eAAe,aAC9BG,UAAU1wB,OAAO,aAGrB0uB,GAAiB,SAAC3c,GACtB,IAAI0e,EAAUH,SAASC,eAAe,aAClCmB,aACFvB,GAAW,GAEc,IAAvBT,EAAYD,SACdE,EAAe,CAAEF,QAAS,GAAID,gBAAgB,IAEjB,IAA3BK,EAAgBJ,SAClBK,EAAmB,CAAEL,QAAS,GAAIG,oBAAoB,IAEzB,KAA3BI,EAAeP,SACjBgB,EAAQC,UAAUiB,IAAI,YACtB1B,EAAkB,CAAER,QAAS,YAAaM,mBAAmB,MAE7DU,EAAQC,UAAU1wB,OAAO,YACzBiwB,EAAkB,CAAER,QAAS,GAAIM,mBAAmB,KAEvCO,SAASC,eAAe,cAC9BG,UAAU1wB,OAAO,YACdswB,SAASC,eAAe,UAC9BG,UAAU1wB,OAAO,aAGnB4xB,GAAe,SAACC,GACpB,MAAO,CAAEC,OAAQD,IAGnB,GAAInH,EAAc,CAAC,IAAD,GACkD,GAUd,GAUc,MApBlE,GAAIkE,EAAajH,4BAA4B1f,SAAS,WACpD2mB,EAAajH,4BAAb,WAA2CiH,EAAajH,mCAAxD,cAA2C,GACvCzlB,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAajH,4BAA8BiH,EAAajH,4BAA4BtV,QAClF,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,cAIJ,GAAI+G,EAAa2H,cAActuB,SAAS,WACtC2mB,EAAa2H,cAAb,WAA6B3H,EAAa2H,qBAA1C,cAA6B,GACzBr0B,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAa2H,cAAgB3H,EAAa2H,cAAclkB,QACtD,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,cAIJ,cAAI+G,EAAanH,uBAAjB,cAAI,GAA8BvlB,WAAW+F,SAAS,WACpD2mB,EAAanH,gBAAb,WAA+BmH,EAAanH,uBAA5C,cAA+B,GAC3BvlB,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAanH,gBAAb,WAA+BmH,EAAanH,uBAA5C,cAA+B,GAC3BvlB,WACDmQ,QACC,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,cAINsH,EAAc3V,KAAI,SAACC,GACsB,IAAD,EAAlCA,EAAKtU,QAAQ8C,SAAS,YACxBwR,EAAKtU,QAAL,UAAesU,EAAKtU,eAApB,aAAe,EAAcjD,WAAWmQ,QAAQ,gBAAiB,IACjEoH,EAAKtU,QAAUsU,EAAKtU,QAAQkN,QAC1B,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,gBAIFpO,EAAKtU,QAAUsU,EAAKtU,QAAQkN,QAAQ,kBAAmB,UACvDoH,EAAKtU,QAAUsU,EAAKtU,QAAQkN,QAC1B,IAAIuV,OAAO8C,EAAc,OACzB,SAAC7C,GAAD,iEACsDA,EADtD,eAIJ,OAAO,eACFpO,EADL,CAEEtU,QAASsU,EAAKtU,iBAGb,CAAC,IAAD,SACLypB,EAAajH,4BAAb,WAA2CiH,EAAajH,mCAAxD,cAA2C,GACvCzlB,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAa2H,cAAb,WAA6B3H,EAAa2H,qBAA1C,cAA6B,GACzBr0B,WACDmQ,QAAQ,gBAAiB,IAC5Buc,EAAanH,gBAAb,WAA+BmH,EAAanH,uBAA5C,cAA+B,GAC3BvlB,WACDmQ,QAAQ,gBAAiB,IAC5B8c,EAAc3V,KAAI,SAACC,GAAU,IAAD,EAI1B,OAHAA,EAAKtU,QAAL,UAAesU,EAAKtU,eAApB,aAAe,EACXjD,WACDmQ,QAAQ,kBAAmB,UACvB,eACFoH,EADL,CAEEtU,QAASsU,EAAKtU,aAIpB,IAAI4sB,GAAgB5C,EAAc3f,OAASof,EAAaoD,sBACxD,OACE,kBAAC,IAAD,CACE3pB,KAAM,GACNE,GAAI,GACJxH,UACEmuB,EAAU,yBAA2B,gCAEvC9nB,YAAU,YAEV,kBAAC,IAAD,CAAKiB,KAAM,GAAItH,UAAU,SACvB,kBAAC,IAAD,CAAKA,UAAU,uDACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,IACjB,yBAAKxH,UAAU,IACb,wBACEkxB,wBAAyBL,GACvBhD,EAAajH,+BAGjB,uBACEtd,MAAO,CAAEmX,OAAQ,EAAG3M,QAAS,SAAUqd,MAAO,QAC9CD,wBAAyBL,GACvBhD,EAAa2H,iBATnB,YAaE,uBACElsB,MAAO,CAAEmX,OAAQ,EAAG3M,QAAS,SAAUqd,MAAO,UAC9CD,wBAAyBL,GACvBhD,EAAanH,qBAKrB,kBAAC,IAAD,CAAKpf,KAAM,GAAIE,GAAI,IACjB,yBAAKxH,UAAU,mDACb,yBAAKA,UAAU,wBACb,+BrElXa,iBqEmXb,kBAAC,KAAD,CACEyG,UAAU,EACV7H,MAAOqoB,EACPlW,SAAU,SAACqgB,GAAD,aACRtD,EACEsD,EADkB,UAElBvD,EAAanH,uBAFK,aAElB,EACIvlB,WACDmQ,QAAQ,gBAAiB,OAI/Bqb,GAAiBlU,KAAI,SAAC4Y,GAAD,OACpB,kBAACtf,OAAD,CAAQnT,MAAOyyB,EAAE1nB,IAAK0nB,EAAE1rB,WAI9B,yBAAK3F,UAAU,wBACb,+BAAQyK,IACR,kBAAC,KAAD,CACEhE,UAAU,EACV7H,MAAO6gB,EACP1O,SAAU,SAACqgB,GAAD,aACRrD,EACEqD,EADY,UAEZvD,EAAanH,uBAFD,aAEZ,EACIvlB,WACDmQ,QAAQ,gBAAiB,OAI/Bob,GAAWjU,KAAI,SAAC6Y,GAAD,OACF,IAAX7R,GAA2B,IAAXA,GAA0B,IAAT6R,EAAE3nB,GAKlC,kBAACoI,OAAD,CAAQnT,MAAO0yB,EAAE3nB,IAAK2nB,EAAE3rB,MAJxB,kBAACoM,OAAD,CAAQnT,MAAO0yB,EAAE3nB,GAAIoN,UAAQ,GAC1Bua,EAAE3rB,WAQb,yBAAK3F,UAAU,sCACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIC,GAAI,GACjB,0BACEoC,GAAG,SACH3J,UAAU,mBACV2G,QAAS,SAACqK,GAAD,OAAOwb,SAIpB,kBAAC,IAAD,CAAKllB,KAAM,GAAIC,GAAI,GACjB,0BACEoC,GAAG,aACH3J,UAAU,qBACV2G,QAAS,SAACqK,GAAD,OAAOsc,SAGpB,kBAAC,IAAD,CAAKhmB,KAAM,GAAIC,GAAI,GACjB,0BACEoC,GAAG,YACH3J,UAAU,mBACV2G,QAAS,SAACqK,GAAD,OAAO2c,aAS5B,kBAAC,IAAD,CAAK3tB,UAAU,WACb,yBACEA,UACE2uB,EAAYF,gBACZK,EAAgBD,oBAChBI,EAAeD,kBACXG,EACE,cACA,OACF,SAIN,yBAAKnvB,UAAU,YACb,kBAAC,cAAD,CAAYiqB,cAAe,IAAKE,WAAW,GACzC,kBAAC,IAAD,CAAK7iB,KAAM,GAAItH,UAAU,mBACtBouB,EAAc3V,KAAI,SAAC8Y,EAAKxY,GAAN,OACjB,6BACGiY,KAAkBjY,EACjB,kBAAC,KAAD,CAASyY,OAAK,GrEtcb,aqEucC,KACJ,yBACExxB,UACEuxB,EAAIE,qBACA,qCACA,sCAGN,yBACEzxB,UACEuxB,EAAIE,qBACA,WACA,gBAGN,uBACE7F,UAAQ,EAERsF,wBAAyBL,GAAaU,EAAIntB,WAG5C,0BAAMpE,UAAU,aACb,IACA6L,KAAO0lB,EAAI5F,YAAY+F,OAAO7lB,OAAU,OACrCA,KAAO0lB,EAAI5F,YACR5e,MACAC,QACAlB,OAAO,WACVD,KAAO0lB,EAAI5F,YACR5e,MACAC,QACAlB,OAAO,uBACbylB,EAAIE,sBAAJ,aACOF,EAAIrwB,WADX,YACyBqwB,EAAIlwB,qBAS9C,kBAAC,IAAD,CACEiG,KAAM,GACNtH,UACE2uB,EAAYF,gBACZK,EAAgBD,oBAChBI,EAAeD,kBACX,gBACA,kBAIN,yBAAKhvB,UAAU,YACb,kBAAC,KAAD,CACEA,UAAU,iBACV2F,KAAK,iBACLyK,KAAMA,GAEN,kBAAC,GAAD,CACEpQ,UAAU,gBACV2J,GAAG,WACHoE,YAAY,sCACZgD,SAAU,SAACC,GAAD,OAzbP,SAACA,GACpBsd,EAAWtd,EAAEuF,OAAO3X,OACpB4vB,EAAW,eAAKD,EAAN,gBAAgBvd,EAAEuF,OAAO5Q,KAAOqL,EAAEuF,OAAO3X,SAublBosB,CAAaha,IAC9BpS,MAAOwF,EACPutB,UAtbF,SAAC3gB,GACf,GAAKA,EAAE4gB,QAAwB,KAAd5gB,EAAE6gB,SAAoB7gB,EAAE8gB,SAAyB,KAAd9gB,EAAE6gB,QAAiB,CACrE,IAAIE,EAAWxC,SAASyC,cAAc,kBACtCD,EAASnzB,MAAQmzB,EAASnzB,MAAQ,OAE/BoS,EAAE4gB,QAAW5gB,EAAEihB,UAAajhB,EAAE8gB,SAAyB,KAAd9gB,EAAE6gB,UAC9C7gB,EAAEqB,iBACFge,OAgbchf,UAAW,OAGf,0BACErR,UAAU,YACV2G,QAAS,kBAAM0pB,OAEf,yBAAKxwB,IAAKqyB,KAAMnyB,IAAI,qBAK5B,yBAAKC,UAAU,gDAEZ2uB,EAAYF,eACX,kBAAC,GAAD,CACElC,MAAOoC,EAAYD,QACnBhI,gBAAe,UAAEmH,EAAanH,uBAAf,aAAE,EACbvlB,WACDmQ,QAAQ,gBAAiB,IAC5Bkb,aAAc,kBAAMA,QAEpB,KACHsC,EAAgBD,mBACf,kBAAC,GAAD,CACEtC,MAAOuC,EAAgBJ,QACvBhI,gBAAe,UAAEmH,EAAanH,uBAAf,aAAE,EACbvlB,WACDmQ,QAAQ,gBAAiB,IAC5Bgc,gBAAiB,kBAAMA,QAEvB,KACH2B,EAAeD,kBACd,kBAAC,GAAD,CACEzC,MAAO0C,EAAeP,QACtB4G,YAAazH,EAAayH,YAC1B3H,eAAgB,kBAAMA,QAEtB,UChoBZztB,GAAWC,EAAQ,IACfiJ,GAAWD,IAAXC,OAkFOowB,GAjFgB,SAACl6B,GAC9B,IAAMqN,EAAWylB,iBAAO,IAGlB7lB,EAAW,SAACyE,GAChB,IAAIyV,EAAMzV,EAAEqhB,OACZ1lB,EAAS3I,QAAUyiB,EACnB,IAAM6L,EAAYhzB,EAAMizB,iBAAiB9Z,KAAI,SAACgH,GAE5C,OADAA,EAASA,EAAO7gB,SAGd0qB,EAAc,eACZgJ,EAAU7jB,OAAS,GAAK,CAAE1C,UAAWumB,GADzB,GAEZhzB,EAAMkzB,kBAAkB/jB,OAAS,GAAK,CACxC8a,iBAAkBjqB,EAAMkzB,kBAAkB/Z,KAAI,SAACga,GAAD,OAASA,EAAI7zB,UAH7C,GAKZU,EAAMm6B,mBAAmBhrB,OAAS,GAAK,CACzC6mB,YAAah2B,EAAMm6B,mBAAmBhhB,KAAI,SAACka,GAAD,OAAQA,EAAG/zB,WAGnD6qB,EAAU,eACXH,EADW,CAEdgM,YACEhM,EAAegM,aAAehM,EAAegM,YAAYn0B,WAC3D4K,UACEud,EAAevd,WAAaud,EAAevd,UAAU5K,WACvDooB,iBACED,EAAeC,kBACfD,EAAeC,iBAAiBpoB,aAE9B+X,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdkpB,EACJvpB,EACA,0CACAmZ,SACElZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAEtBgkB,EACI,KAARjD,EACI+C,EAAU,WAAarmB,KAAKC,UAAUqmB,GACtCD,EACA,WACArmB,KAAKC,UAAUqmB,GACf,WACAhD,EAAItlB,WACVT,IAAM3B,IAAI2qB,EAAUtpB,GAASwD,MAAK,SAACsN,GACjC5R,EAAMszB,gBAAgBjmB,EAAS3I,SAC/BxE,EAAe,WAAYmN,EAAS3I,SACpC,IAAI4lB,EAAe,GAGjBA,EAFEjd,EAAS3I,QAAQyK,OAAS,EAEb+X,GAActV,EAAIrQ,KAAM8L,EAAS3I,SAEjCkN,EAAIrQ,KAErBvB,EAAMuzB,iBAAiBjJ,OAI3B,OACE,kBAAC,GAAD,CACEjkB,KAAK,SACLgE,GAAG,SACHoE,YtEvDgB,SsEwDhBgD,SAAU,SAACC,GAAD,OAAOzE,EAASyE,EAAEuF,OAAO3X,QACnC2N,SAAUA,EACV6E,aAAa,SCnEX8Z,GAAcC,KAAdD,UAEJhrB,GAAWC,EAAQ,IAsRRu5B,GArRqB,SAACp6B,GA+DnC,OACE,yBAAKU,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsH,KAAM,GACNE,GAAI,EACJxH,UACEV,EAAMyzB,QACF,8BACA,wBAGN,kBAAC,IAAD,CAAKzrB,KAAM,GAAItH,UAAU,wCACvB,4BvEfiB,gBuEgBC,IAChB,kBAAC,KAAD,CAAOA,UAAU,OAAO4vB,MAAOtwB,EAAM0zB,eAGvC,kBAAC,GAAD,CACErJ,aAAcrqB,EAAMqqB,aACpBlB,aAAcnpB,EAAMmpB,aACpBoB,0BAA2BvqB,EAAMuqB,6BAIrC,kBAAC,IAAD,CAAKviB,KAAM,GAAItH,UAAU,qBACvB,kBAAC,cAAD,CACE+pB,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,GAEX,oCACG7qB,EAAMkzB,kBAAkB/Z,KAAI,SAAC5X,EAAMkY,GAAP,OAC3B,oCACE,kBAAC,KAAD,CACExG,SAAS,EACT7T,IAAKqa,EACLka,UAAQ,EACRC,QAAS,kBACP5zB,EAAM6zB,kBAAkB,eAAgBtyB,EAAKjC,QAE/CoB,UAAU,QvE5CT,UuEqCH,KASa,8BAAOa,EAAK0N,YAI5BjP,EAAMm6B,mBAAmBhhB,KAAI,SAAC2c,EAAUrc,GAAX,OAC5B,oCACE,kBAAC,KAAD,CACExG,SAAS,EACT0gB,UAAQ,EACRC,QAAS,kBACP5zB,EAAM6zB,kBACJ,kBACAiC,EAASx2B,QAGboB,UAAU,OACVtB,IAAKqa,GvEhJH,WuEsIJ,KAYc,8BAAOqc,EAAS7mB,MAAhB,UAIjBjP,EAAMizB,iBAAiB9Z,KAAI,SAACgH,EAAQ1G,GAAT,OAC1B,oCACE,kBAAC,KAAD,CACExG,SAAS,EACT0gB,UAAQ,EACRC,QAAS,kBACP5zB,EAAM6zB,kBAAkB,gBAAiB1T,EAAO7gB,QAElDoB,UAAU,OACVtB,IAAKqa,GAEJtO,GATH,KASY,8BAAOgV,EAAOlR,MAAd,aAOtB,kBAAC,IAAD,CAAKjH,KAAM,GAAItH,UAAU,wBACvB,kBAAC,KAAD,CAAMoQ,KAAM9Q,EAAM8Q,MAChB,kBAAC,KAAK1J,KAAN,CAAWf,KAAK,SAASgE,GAAG,UAC1B,kBAAC,GAAD,CACE4oB,iBAAkBjzB,EAAMizB,iBACxBC,kBAAmBlzB,EAAMkzB,kBACzBiH,mBAAoBn6B,EAAMm6B,mBAC1B7G,gBAAiBtzB,EAAMszB,gBACvBC,iBAAkBvzB,EAAMuzB,sBAKhC,kBAAC,cAAD,CACE9I,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,GAEX,kBAAC,IAAD,CAAK7iB,KAAM,GAAItH,UAAU,mBACtBV,EAAM8zB,cAAc3kB,OAAS,EAC5BnP,EAAM8zB,cAAc3a,KAAI,SAACC,GAAU,IAAD,IAChC,OACE,yBACE1Y,WACE,UAAAV,EAAMuuB,aAAanH,uBAAnB,eACIvlB,WACDmQ,QAAQ,gBAAiB,QAF5B,UAGAoH,EAAKgO,uBAHL,aAGA,EACIvlB,WACDmQ,QAAQ,gBAAiB,KACxB,qBACA,cAEN3K,QAAS,kBAAMrH,EAAM+zB,oBAAoB3a,KAEzC,yBAAK1Y,UAAU,kCACb,uBACE4rB,UAAQ,EACRtiB,MAAO,CAAEgqB,WAAY,QACrBtzB,UAAU,iBACVkxB,wBAAyB5xB,EAAMuxB,aAC7BnY,EAAKkO,+BAGT,0BAAM5mB,UAAU,SACb,IACA6L,KAAO6M,EAAKiT,YAAY+F,OAAO7lB,OAAU,OACtCA,KAAO6M,EAAKiT,YACT5e,MACAC,QACAlB,OAAO,SACVD,KAAO6M,EAAKiT,YACT5e,MACAC,QACAlB,OAAO,cAGlB,yBAAK9L,UAAU,kCACb,kBAAC,GAAD,CACE4rB,UAAQ,EACR5rB,UAAU,2CAEV,0BACEA,UAAU,eACVkxB,wBAAyB5xB,EAAMuxB,aAC7BnY,EAAK8c,iBAPX,aAWE,0BACEx1B,UAAU,eACVkxB,wBAAyB5xB,EAAMuxB,aAC7BnY,EAAKgO,oBAIX,0BAAM1mB,UAAU,SACb,IACD,kBAAC,KAAD,CAAO4vB,MAAOlX,EAAKuY,8BAO7B,yBAAKjxB,UAAU,evE5KE,wBuEkLxBV,EAAMuuB,aACL,kBAAC,GAAD,CACEA,aAAcvuB,EAAMuuB,aACpB5G,aAAc3nB,EAAM2nB,aACpBxH,OAAQngB,EAAMmgB,OACdqO,qBArPmB,SAACsD,EAAO1K,GACnC,IAAMxN,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdO,EAAO,CACX6lB,gBAAiBA,EACjBhB,WAAYtM,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1B6jB,iBAAkB6H,GAGpB1wB,IACGuL,IAAIhM,EAAW,sCAAuCY,EAAMT,GAC5DwD,MAAK,SAACsN,GACc,MAAfA,EAAIuO,SACNngB,EAAMk0B,mBACNl0B,EAAM4nB,gBAAgBkK,QA4NpBrD,eAvNa,SAACqD,EAAO1K,GAC7B,IAAMxN,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdO,EAAO,CACX6lB,gBAAiBA,EACjBhB,WAAYtM,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1BqG,UAAWqlB,GAGb1wB,IACGuL,IAAIhM,EAAW,+BAAgCY,EAAMT,GACrDwD,MAAK,SAACsN,GACc,MAAfA,EAAIuO,SACNngB,EAAMk0B,mBACNl0B,EAAM0nB,UAAUoK,QA8LdzH,aAAcrqB,EAAMqqB,aACpBqE,SAAU1uB,EAAM0uB,SAChBE,OAAQ5uB,EAAM4uB,OACdD,WAAY3uB,EAAM2uB,WAClB5nB,YAAU,WACV8nB,QAAS7uB,EAAM6uB,UAGjB,kBAAC,IAAD,CACE7mB,KAAM,GACNE,GAAI,GACJxH,UAAU,gGAEV,kBAAC,IAAD,CAAKA,UAAU,+BACb,yBACEH,IAAKP,EAAMq6B,YACX55B,IAAI,wBACJuJ,MAAO,CAAEoqB,QAAS,UAGtB,4BvE5M4B,4BuE6M5B,+BvE5MuB,qCwEnEpBkG,GAlBY,SAACt6B,GAAD,OACzB,kBAAC,IAAD,CACEgI,KAAM,GACNE,GAAI,GACJxH,UAAU,gGAEV,kBAAC,IAAD,CAAKA,UAAU,+BACb,yBACEH,IAAKP,EAAMu6B,eACX95B,IAAI,wBACJuJ,MAAO,CAAEoqB,QAAS,UAGtB,4B9DKF,sE+DIMnoB,GAAY7D,IAAZ6D,QAEJrL,GAAWC,EAAQ,IAylBR25B,GAxlBU,SAACx6B,GAAW,IAAD,EACQ8O,mBAAS,IADjB,mBAC3BglB,EAD2B,KACZP,EADY,OAEIzkB,mBAAS,IAFb,mBAE3BgoB,EAF2B,KAEdC,EAFc,OAGNjoB,oBAAS,GAHH,mBAG3BF,EAH2B,KAGnBoJ,EAHmB,OAIgBlJ,mBAAS,IAJzB,mBAI3BokB,EAJ2B,KAIRwD,EAJQ,OAKkB5nB,mBAAS,IAL3B,mBAK3BqrB,EAL2B,KAKPM,EALO,OAMc3rB,mBAAS,IANvB,mBAM3BmkB,EAN2B,KAMT0D,EANS,OAOM7nB,mBAAS,IAPf,mBAO3Bqa,EAP2B,KAOb8N,EAPa,OAQMnoB,mBAAS,IARf,mBAQ3Byf,EAR2B,KAQb2I,EARa,OASMpoB,mBAAS,IATf,mBAS3B6Y,EAT2B,KASbC,EATa,OAUN9Y,mBAAS,IAVH,mBAU3BqR,EAV2B,KAUnBuH,EAVmB,OAWM5Y,mBAAS,IAXf,oBAW3Bub,GAX2B,MAWbiJ,GAXa,SAYNxkB,mBAAS,MAZH,qBAY3B8f,GAZ2B,MAYnBuI,GAZmB,SAaFroB,mBAAS,IAbP,qBAa3B4f,GAb2B,MAajB0I,GAbiB,SAcItoB,mBAAS,GAdb,qBAc3B4kB,GAd2B,MAcduB,GAdc,SAecnmB,mBAAS,IAfvB,qBAe3BumB,GAf2B,MAeTG,GAfS,SAgBJ1mB,oBAAS,GAhBL,qBAgB3B2kB,GAhB2B,MAgBlB4D,GAhBkB,SAiBJvoB,oBAAS,GAjBL,qBAiB3B+f,GAjB2B,MAiBlByI,GAjBkB,MAkB5BC,GAAYzE,iBAAO,MACnByC,GAAmBzC,kBAAO,GAnBE,GAoBnBliB,KAAKC,UAAbC,GApB2B,qBAsBlCnJ,qBAAU,WACRusB,KACAzsB,KAEAguB,GAAa,cACZ,IAEH9tB,qBAAU,WACR,IAAM0F,EACJnN,EAAe,aAAeA,EAAe,YAAY2B,WACvD21B,EAAqB,GACrBC,EAAsB,GACV,OAAhBpC,SAAgB,IAAhBA,OAAkBlc,KAAI,YAA0B,IAAvBiO,EAAsB,EAAtBA,gBACnBsQ,EAAU,GAIZA,GAFF,OAAItQ,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBxf,SAAS,YAErB,OAAGwf,QAAH,IAAGA,OAAH,EAAGA,EAAiBvlB,WAAWmQ,QAAQ,gBAAiB,IAErDoV,EAEZoQ,EAAmB/tB,KAAKiuB,MAKxBD,EAHGD,EAAmB5vB,SAAnB,OAA4B8mB,SAA5B,IAA4BA,QAA5B,EAA4BA,GAAUtH,iBAGnBiO,GAFH,uBAAOA,IAAP,CAAyB3G,KAI9C8G,GAAoBiC,GAEpBrC,GACE1G,GACA+I,EACAvE,EACAD,EACAkH,EACA9P,GACAkL,GACAN,GACAO,GACAjH,IAEU,OAARlhB,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,GAAKomB,GAAiB7wB,UAC3C6wB,GAAiB7wB,SAAU,KAE5B,CAACgqB,GAAU2G,KAEd,IAAM5tB,GAAU,WACd,IAAMhD,EAAOZ,KAAK+G,MAAM1K,EAAe,SACvCq3B,GAAU7yB,QAAU,IAAIizB,U9EjG1B,2C8EmGM7d,SACElZ,GAASa,IAAIyE,QACXzB,EAAKhC,UAAUI,gBACf,cACAhB,SAASjB,GAASuF,IAAIC,OAE1B,KAEJmxB,GAAU7yB,QAAQkzB,OAAS,WACzBT,GAAUI,GAAU7yB,SACpBoD,QAAQC,IAAI,cAEdwvB,GAAU7yB,QAAQmzB,UAAY,SAAC/F,GAC7BhqB,QAAQC,IAAI,4BAA6B+pB,GACzC,IAAI4C,EAAW7wB,KAAK+G,MAAMknB,EAAMvwB,MAChC61B,GAAY1C,GACZoD,GAAkBpD,IAGpB6C,GAAU7yB,QAAQuzB,QAAU,WAC1BnwB,QAAQC,IAAI,sBAEdwvB,GAAU7yB,QAAQwzB,QAAU,SAACrzB,GAC3BiD,QAAQC,IAAI,mBAAoBlD,KAK9BizB,GAAoB,SAACpD,GACzB,IAAMjwB,EAAOZ,KAAK+G,MAAM1K,EAAe,SAGrCw0B,EAASyD,eAAevwB,SACtBkS,SACElZ,GAASa,IAAIyE,QAAQzB,EAAKhC,UAAUM,QAAS,cAAclB,SACzDjB,GAASuF,IAAIC,SAKnBmtB,GAAiB,SAACO,GAChB,IAAMkB,EACJ90B,EAAe,WAAaA,EAAe,UACvCk4B,EACJl4B,EAAe,kBACfA,EAAe,iBAAiByG,MAAM,KAClC0xB,EACJn4B,EAAe,WAAaA,EAAe,UAAUyG,MAAM,KACvD+zB,EACJx6B,EAAe,aAAeA,EAAe,YAAYyG,MAAM,KAC3D0G,EACJnN,EAAe,aAAeA,EAAe,YAAY2B,WAEvD+zB,EAAkB,GACtB9B,EAAc3a,KAAI,YAA0B,IAAvBiO,EAAsB,EAAtBA,gBACfsQ,EAAU,GAIZA,EAFEtQ,EAAgBxf,SAAS,WAEjBwf,EAAgBvlB,WAAWmQ,QAAQ,gBAAiB,IAEpDoV,EAEZwO,EAAgBnsB,KAAKiuB,MAEvB,IAAI/C,EAAkBD,EAClBK,EAAyBjB,EACzByE,GAAgB,EAChBC,GAAe,EACfmC,GAAiB,EACjBjC,GAAe,EACfC,EAAkC,GAElChD,EAAsB,CACxBS,QAAS,GACTjW,OAAQ,GACR2V,SAAU,GACVzoB,SAAU,IAGS,OAAjB+qB,IAAqC,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcjpB,QAAS,IAClDopB,GAAgB,EAChB5C,EAAmB,eACdA,EADc,CAEjBS,QAASgC,KAGO,OAAhBC,IAAmC,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAalpB,QAAS,IAChDqpB,GAAe,EACf7C,EAAmB,eACdA,EADc,CAEjBxV,OAAQkY,KAGU,OAAlBqC,IAAuC,OAAbA,QAAa,IAAbA,OAAA,EAAAA,EAAevrB,QAAS,IACpDwrB,GAAiB,EACjBhF,EAAmB,eACdA,EADc,CAEjBG,SAAU4E,KAGG,OAAbrtB,IAA6B,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU8B,QAAS,IAC1CupB,GAAe,EACf/C,EAAmB,eACdA,EADc,CAEjBtoB,SAAUA,MAIVkrB,GAAiBC,GAAgBmC,GAAkBjC,KACrD3D,EAAyBW,GACvBC,EACAjB,EACAK,EACAa,EACA,aAIA8C,IAOFC,EANsB,CACpBjE,EAAStN,gBACTsN,EAASpN,4BACToN,EAASwB,cACTxB,EAAS5vB,SAE2CqU,KAAI,SAAC7Z,GAAD,OACxDA,EAAM+nB,cAAczf,SAASyF,EAASga,mBAIvCqR,GACAH,GACAC,GACAmC,GAII/E,EAAgBhuB,SAAS8sB,EAAStN,mBACrC2N,EAAsB,uBAAOA,GAAP,CAA+BL,IACrDa,GAAiB7wB,SAAU,GAG/B,IAAM+vB,EAAuBM,EAAuB5b,KAAI,SAAC7Z,GAEvD,OACEA,EAAM8nB,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,MACxD0iB,EAAStN,iBACXsN,EAAS9R,aACP9I,SACElZ,GAASa,IAAIyE,QACXzB,EAAKhC,UAAUM,QACf,cACAlB,SAASjB,GAASuF,IAAIC,QAE5BsuB,EAAStN,kBAAoB4N,GAGzB11B,EAAMgoB,4BAA4B1f,SAAS,aAC7C+sB,EAAe,eACVA,EADU,CAEbrN,4BAA6BhoB,EAAMgoB,+BAGnChoB,EAAM8nB,gBAAgBxf,SAAS,aACjC+sB,EAAe,eACVA,EADU,CAEbvN,gBAAiB9nB,EAAM8nB,mBAGvB9nB,EAAM42B,cAActuB,SAAS,aAC/B+sB,EAAe,eACVA,EADU,CAEbmB,SAAU,CACRzvB,KAAM/G,EAAM42B,kBAKlBvB,EAAe,eACVA,EADU,CAEbhD,sBAAuBryB,EAAMqyB,sBAAwB,KAMvDryB,EAAM8nB,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,MACxD0iB,EAAStN,iBACXsN,EAAS9R,aACP9I,SACElZ,GAASa,IAAIyE,QACXzB,EAAKhC,UAAUM,QACf,cACAlB,SAASjB,GAASuF,IAAIC,QAIxB9G,EAAMgoB,4BAA4B1f,SAAS,aAC7C+sB,EAAe,eACVA,EADU,CAEbrN,4BAA6BhoB,EAAMgoB,+BAGnChoB,EAAM8nB,gBAAgBxf,SAAS,aACjC+sB,EAAe,eACVA,EADU,CAEbvN,gBAAiB9nB,EAAM8nB,mBAGvB9nB,EAAM42B,cAActuB,SAAS,aAC/B+sB,EAAe,eACVA,EADU,CAEbmB,SAAU,CACRzvB,KAAM/G,EAAM42B,kBAIXvB,GAIAr1B,KAKRi5B,GACAC,GACAmC,GACAjC,GAGD5D,GACEJ,EACAK,EACAC,EACAC,IAgCJ,OA3BEsD,IACCH,EAAaxwB,SAAS8sB,EAASzK,iBAAiBpoB,YAE5B4yB,EAErB+D,IACCH,EAAYzwB,SAAS8sB,EAASjoB,UAAU5K,YAEpB4yB,EAErBkG,IACCD,EAAc9yB,SAAS8sB,EAASsB,YAAYn0B,YAExB4yB,EAErBiE,IACCC,EAAgC/wB,UAAS,GAErB6sB,EAGAD,GACnBC,EACAC,EACAC,OAqCV,IAAMT,GAAmB,WACvB,IAAMta,EAAQlP,KACRjG,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCY,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGdo3B,EACJl4B,EAAe,kBACfA,EAAe,iBAAiByG,MAAM,KAClC0xB,EACJn4B,EAAe,WAAaA,EAAe,UAAUyG,MAAM,KACvD+zB,EACJx6B,EAAe,aAAeA,EAAe,YAAYyG,MAAM,KAC7DiyB,EAAiB,eACfR,GACFA,EAAajpB,OAAS,GAAK,CAAE8a,iBAAkBmO,GAF9B,GAGfC,GAAeA,EAAYlpB,OAAS,GAAK,CAAE1C,UAAW4rB,GAHvC,GAIfqC,GACFA,EAAcvrB,OAAS,GAAK,CAAE6mB,YAAa0E,IAYzCxQ,EACJvpB,EACA,0CACAmZ,SACElZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAGtByyB,EACJxO,GAAalb,OAAS,GACO,IAA7B+jB,EAAkB/jB,QACU,IAA5B8jB,EAAiB9jB,QACa,IAA9BgrB,EAAmBhrB,OACf+a,EAAU,WAAaG,GACvBA,GAAalb,OAAS,IACrB+jB,EAAkB/jB,OAAS,GAC1B8jB,EAAiB9jB,OAAS,GAC1BgrB,EAAmBhrB,OAAS,GAC9B+a,EACA,WACArmB,KAAKC,UAAU80B,GACf,WACAvO,GACwB,IAAxBA,GAAalb,SACZ+jB,EAAkB/jB,OAAS,GAC1B8jB,EAAiB9jB,OAAS,GAC1BgrB,EAAmBhrB,OAAS,GAC9B+a,EAAU,WAAarmB,KAAKC,UAAU80B,GACtC,GACFn0B,IACEo0B,EAAe1pB,OAAS,EAC1B/N,IAAM3B,IAAIo5B,EAAgB/3B,GAASwD,MAAK,SAACsN,GACvC2hB,EAAiB3hB,EAAIrQ,SAGvBH,IAAM3B,IAAIyqB,EAASppB,GAASwD,MAAK,SAACsN,GAChC,IAAIknB,EAAgB,EACpB/B,EAAenlB,EAAIrQ,MACnBgyB,EAAiB3hB,EAAIrQ,MACrByW,GAAU,GACVwd,GAAoB5jB,EAAIrQ,MACFqQ,EAAIrQ,KAAKghB,QAC7B,SAACC,EAAaC,EAAchJ,GACgB,GAAtCgJ,EAAakP,uBACfmH,MAGJ,IAEF7D,GAAe6D,QAgEvB,OACE,oCACE,kBAAC,IAAD,CAAKp4B,UAAU,gBACb,kBAAC,GAAD,CAAgBoF,WAAS,KAE3B,kBAAC,IAAD,CAAKpF,UAAU,sBAAsBqG,YAAU,eAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcjB,WAAS,EAACvE,KAAMvB,IAC9B,kBAAC,GAAD,CAASU,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,QACZ,8BACE,kBAACq4B,GAAA,EAAD,CACEr4B,UAAU,2CACVyN,MAAM,mBACN9G,QAAS,kBAzE3BgwB,IAAW,QACXC,IAAW,OzEpakB,sByEkflB1oB,EACC,kBAAC,IAAD,CACE5G,KAAM,GACNE,GAAI,GACJxH,UAAU,gGAEV,kBAAC,IAAD,CAAKA,UAAU,+BACb,kBAAC,IAAD,CACEwG,KAAK,QACLqtB,IAAI,aACJ5lB,SAAUC,OAIbA,IAAqB,OAAXkoB,QAAW,IAAXA,OAAA,EAAAA,EAAa3nB,QAAS,EACnC,kBAAC,GAAD,CACEof,aAAcA,EACduF,cAAeA,EACfjF,QAASA,GACTlH,aAAcA,EACdxH,OAAQA,EACRkK,aAAcA,GACdqE,SAAUA,GACVE,OAAQA,GACRD,WAzEG,SAACJ,GAElB,IADA,IAAIyK,EAAuBzK,EAAahtB,KAC/B6X,EAAO,EAAGA,EAAO0a,EAAc3kB,OAAS,EAAGiK,IAEhD0a,EAAc1a,GAAMgO,gBACjBvlB,WACAmQ,QAAQ,gBAAiB,MAC5Buc,EAAahtB,KAAK6lB,gBACfvlB,WACAmQ,QAAQ,gBAAiB,MAE5BgnB,EAAoB,eACfA,EADe,CAElBrH,sBAAuBmC,EAAc1a,GAAMuY,yBAK/CqH,EAAqBrH,uBACrBqH,EAAqBrH,sBAAwB,GAC7C+B,GAAc,GAGduB,GADkBvB,GAAc,IAoDpB2G,YAAaA,KACb9I,aAAcA,GACd+B,gBAAiBA,GACjBC,iBAAkBA,EAClBQ,oBAxGY,SAACxF,GACvB8C,cACFgG,IAAW,GACXC,IAAW,KAGb/D,GAAiB,SAACO,GAOhB,OANcA,EAAc3a,KAAI,SAAC7Z,GAAD,OAC9BA,EAAM8nB,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,MAC1Duc,EAAanH,gBAAgBvlB,WAAWmQ,QAAQ,gBAAiB,IADjE,eAESuc,EAFT,CAEuBoD,sBAAuB,IAC1CryB,QAIJivB,EAAaoD,sBAAwB,GAAK+B,GAAc,IAE1DuB,GADkBvB,GAAc,GAGlCxzB,EAAe,SAAUquB,EAAanH,iBACtC8P,EAAgB3I,GAChB3G,EAAgB2G,EAAatE,kBAC7BvC,EAAU6G,EAAa9hB,YAmFT0c,aAAcA,EACd0K,kBA9MhB,SAA2BtvB,EAAMjF,GAC/B23B,EAAgB,CAAE1yB,OAAMjF,WA8MV2zB,iBAAkBA,EAClBkH,mBAAoBA,EACpBjH,kBAAmBA,EACnB3I,0BA1OkB,SAChChpB,EACAgD,EACAqkB,EACAI,EACA0Q,GAGAnD,GACE3N,EACAI,EACA0Q,EACAhD,EACAC,EACA8D,EACA,YAEFlH,EAAiBhyB,GACJ,UAATgD,GACFuM,GAAKmgB,eAAe,CAAE1U,OAAQ,MAwNlB2X,iBAAkBA,GAClBxM,UAAWA,EACXE,gBAAiBA,EACjB8L,YAAaA,GACbD,QAASA,KAGX,kBAAC,GAAD,CAAoB8G,eAAgBA,aClmBhD35B,GAAWC,EAAQ,IACfoL,GAAY7D,IAAZ6D,QA0CO2uB,G,iLAvCX,IAAMr2B,EAAOrE,EAAe,YACtB+F,EAAW1B,EACb3D,GAASa,IAAIyE,QAAQ3B,EAAM,cAAc1C,SAASjB,GAASuF,IAAIC,MAC/D,GACJ,OACE,oCACE,kBAAC,IAAD,CAAK1F,UAAU,gBACC,WAAbuF,EACC,kBAAC,GAAD,CAAgBH,WAAS,IACV,UAAbG,EACF,kBAAC,GAAD,CAAgBF,UAAQ,IACT,WAAbE,EACF,kBAAC,GAAD,CAAgBD,WAAS,IACvB,MAEN,kBAAC,IAAD,CAAKtF,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACgB,WAAbuF,EACC,kBAAC,GAAD,CAAc1E,KAAMxB,KAAKC,QACV,WAAbiG,EACF,kBAAC,GAAD,CAAY1E,KAAMxB,KAAKC,QACR,UAAbiG,EACF,kBAAC,GAAD,MACE,KAEJ,kBAAC,GAAD,CAASvF,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,OAAOsJ,MAAO,CAAE6wB,eAAgB,WAC7C,wBAAIn6B,UAAU,QhEkB9B,8E,GgEhD6BL,IAAMP,WCqGtBg7B,G,2MAjGbr1B,MAAQ,CAAEwN,SAAS,G,EAEnBzJ,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,K,EAIbI,SAAW,WACT,EAAK7K,SAAS,CACZyK,SAAS,IAEX,EAAKjT,MAAM+6B,yB,EAGbrnB,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,IAEX,EAAKjT,MAAMg7B,6B,wEAGH,IAAD,IACP,OACE,oCACE,kBAAC,KAAD,CAAQz2B,KAAK,OAAO7D,UAAU,iBAAiB2G,QAAStH,KAAKyJ,WAC3D,8B3EKyB,iC2EH3B,kBAAC,KAAD,CACE2E,M3EGoB,iB2EFpB8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjBzT,UAAW,oBACX6N,SAAU,iBAEZ6F,O3ERkB,mB2ESlBC,W3ErBkB,U2EuBlB,kBAAC,KAAD,CAAM3T,UAAU,iCACd,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,cACvB,yBAAKA,UAAU,mB3EZK,sB2EaG,IACrB,0BAAMA,UAAU,kBAAkBX,KAAKC,MAAMyE,OAE/C,kBAAC,GAAD,CAAYwK,MlEvDE,ekEuDmB3P,MAAM,IACrC,kBAAC,KAAK8H,KAAN,CACEf,KAAK,SACL3F,UAAU,MACVic,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,CAACm2B,mB9DlEE,sC8DsEhB,kBAAC,IAAMpe,UAAP,GACEnc,UAAU,gBACV6Q,QAAQ,UAFV,2BAGY,YAHZ,uBAIQ,IAJR,MAQJ,kBAAC,GAAD,CAAYtC,MlEzEM,mBkEyEmB3P,MAAM,IACzC,kBAAC,KAAK8H,KAAN,CACEf,KAAK,aACL3F,UAAU,MACVic,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,CAACo2B,sB9DjFK,oC8DqFnB,kBAAC,IAAMre,UAAP,GACEnc,UAAU,gBACV6Q,QAAQ,cAFV,2BAGY,YAHZ,uBAIQ,IAJR,c,GAlFUzR,aCoBpBkR,GAAgBC,KAAhBD,YA0LOmqB,GAxLQ,SAACn7B,GAAW,IAAD,QAChC,OACE,kBAAC,KAAD,CACEiT,SAAS,EACTc,KAAM/T,EAAMo7B,aACZpnB,SAAUhU,EAAMq7B,iBAChBpnB,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,iBAEZ6F,O5EZsB,S4EatBC,W5EdsB,U4EgBtB,kBAAC,IAAD,CAAM1F,SAAU3O,EAAM4O,OAAQ1H,KAAK,SACjC,kBAAC,KAAD,CAAMxG,UAAU,gCAAgC2F,KAAK,kBACnD,6B5ErBsB,oB4EsBtB,6BACA,yBAAK3F,UAAU,4BACb,kBAAC,IAAD,KAASV,EAAMs7B,eAAe/0B,OAAO,IACrC,0BAAM7F,UAAU,WAAWV,EAAMs7B,iBAElCt7B,EAAM6E,OACL,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASwK,GAAkB/K,KAAK,QAAQ2M,UAAQ,KAG3D,kBAAC,IAAD,CAAKlJ,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAOlE,GACPzL,MAAOU,EAAMu7B,kBAAkBhnB,WAE/B,kBAAC,KAAKnN,KAAN,CAAWf,KAAK,YAAY3F,UAAU,YACpC,kBAAC,IAAD,CACE2J,GAAG,YACH3J,UAAU,gBACV8Q,aAAcxR,EAAMu7B,kBAAkBhnB,UACtChD,QAAQ,YACRjS,MAAOU,EAAMu7B,kBAAkBhnB,UAC/B9C,SAAU,SAACC,GAAD,OAAO1R,EAAMw7B,yBAAyB9pB,IAChDI,aAAa,MACbC,UAAW,MAGd/R,EAAMsW,YACL,kBAAC,KAAKlP,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASyK,GAAgBhL,KAAK,aAK7C,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAOjE,GACP1L,MAAOU,EAAMu7B,kBAAkBvmB,UAE/B,kBAAC,KAAK5N,KAAN,CAAWf,KAAK,WAAW3F,UAAU,YACnC,kBAAC,KAAD,GACEA,UAAU,gBACV2J,GAAG,WACHkH,QAAQ,YAHV,2BAIY,YAJZ,8BAKgBvR,EAAMu7B,kBAAkBvmB,UALxC,uBAMShV,EAAMu7B,kBAAkBvmB,UANjC,2BAOY,SAACtD,GAAD,OAAO1R,EAAMw7B,yBAAyB9pB,MAPlD,8BAQe,OARf,2BASa,IATb,KAYD1R,EAAMuW,YACL,kBAAC,KAAKnP,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASyK,GAAgBhL,KAAK,aAK7C,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MnElHP,QmEkHqB3P,MAAOU,EAAMu7B,kBAAkBt6B,OACvD,kBAAC,KAAKmG,KAAN,CAAWf,KAAK,QAAQ3F,UAAU,YAChC,kBAAC,KAAD,GACEA,UAAU,gBACV2J,GAAG,QACHkH,QAAQ,SAHV,2BAIY,YAJZ,8BAKgBvR,EAAMu7B,kBAAkBt6B,OALxC,uBAMSjB,EAAMu7B,kBAAkBt6B,OANjC,2BAOY,SAACyQ,GAAD,OAAO1R,EAAMw7B,yBAAyB9pB,MAPlD,yBAQU,SAACA,GAAD,OAAO1R,EAAMkX,qBAAqBxF,MAR5C,8BASe,OATf,kCAYC1R,EAAMwW,sBACL,kBAAC,KAAD,CACE1R,QAAS0K,GACTjL,KAAK,QACL2M,UAAQ,OAMlB,kBAAC,IAAD,CAAKlJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAOhE,GAAM3L,MAAM,SAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,6CACnB,kBAAC,IAAD,GACEA,UAAU,YACV2F,KAAK,SAFP,2BAGY,YAHZ,uBAISrG,EAAMu7B,kBAAkBrmB,OAJjC,2BAKY,SAACvC,GAAD,OACR3S,EAAMy7B,iCAAiC9oB,EAAM,YANjD,8BAQgB3S,EAAM4S,cARtB,OAaN,kBAAC,IAAD,CAAK5K,KAAM,GAAIC,GAAI,EAAGvH,UAAU,0BAC9B,kBAAC,GAAD,CACEuO,MAAO/D,GACP5L,MAAOU,EAAMu7B,kBAAkBtmB,QAE/B,kBAAC,KAAK7N,KAAN,CAAWf,KAAK,SAAS3F,UAAU,YACjC,kBAAC,KAAD,CACEyW,QAAS,KACT9M,GAAG,SACHkH,QAAQ,SACRC,aAAcxR,EAAMu7B,kBAAkBtmB,OACtC3V,MAAOU,EAAMu7B,kBAAkBtmB,OAC/BxD,SAAUzR,EAAM4V,aAChBxG,OAAQ,SAACsC,GAAD,OAAO1R,EAAM07B,eAAehqB,IACpCI,aAAa,QAEd9R,EAAM0W,uBACL,kBAAC,KAAD,CACE5R,QAAS2K,GACTlL,KAAK,QACL2M,UAAQ,OAMlB,kBAAC,IAAD,CAAKlJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAO9D,GACP7L,MAAOU,EAAMu7B,kBAAkBpmB,SAE/B,kBAAC,KAAK/N,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,WACnC,oCACE,kBAAC,MAAD,GACE3F,UAAU,8BACVpB,MAAOU,EAAMu7B,kBAAkBpmB,QAC/B5D,QAAQ,WAHV,2BAIY,YAJZ,2BAKY,SAACjS,GAAD,OACRU,EAAM27B,yBAAyBr8B,EAAO,cAN1C,GASE,kBAACmT,OAAD,CAAQnT,MAAM,KAAK0F,GACnB,kBAACyN,OAAD,CAAQnT,MAAM,K7ExMP,sB6EkNzB,kBAAC,GAAD,CACEmF,KAAMzE,EAAMu7B,kBAAkBhnB,UAC9BwmB,sBAAuB/6B,EAAM+6B,sBAC7BC,0BAA2Bh7B,EAAMg7B,8BCtLjChqB,GAAgBC,KAAhBD,YA2MO4qB,GAzMU,SAAC57B,GAAW,IAAD,QAClC,OACE,kBAAC,KAAD,CACEiT,SAAS,EACTc,KAAM/T,EAAM67B,oBACZ7nB,SAAUhU,EAAM87B,0BAChB7nB,UAAQ,EACR5F,MAAO,KACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,iBAEZ6F,O7ETwB,M6EUxBC,W7EZsB,U6EatBvM,QAAQC,IAAI,iBAAkB/H,EAAM4O,QACpC,kBAAC,IAAD,CAAMD,SAAU3O,EAAM4O,OAAQ1H,KAAK,SACjC,kBAAC,KAAD,CAAMxG,UAAU,gCAAgC2F,KAAK,kBAClDrG,EAAM6E,OACL,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASwK,GAAkB/K,KAAK,QAAQ2M,UAAQ,KAG3D,kBAAC,IAAD,CAAKlJ,KAAM,IACT,6B7E3BmB,mB6E4BnB,6BACA,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAOlE,GACPzL,MAAOU,EAAMu7B,kBAAkBhnB,WAE/B,kBAAC,KAAKnN,KAAN,CAAWf,KAAK,YAAY3F,UAAU,YACpC,kBAAC,IAAD,CACE2J,GAAG,YACH3J,UAAU,gBACV8Q,aAAcxR,EAAMu7B,kBAAkBhnB,UACtChD,QAAQ,YACRjS,MAAOU,EAAMu7B,kBAAkBhnB,UAC/B9C,SAAU,SAACC,GAAD,OAAO1R,EAAMw7B,yBAAyB9pB,IAChDI,aAAa,MACbC,UAAW,MAGd/R,EAAMsW,YACL,kBAAC,KAAKlP,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASyK,GAAgBhL,KAAK,aAK7C,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAOjE,GACP1L,MAAOU,EAAMu7B,kBAAkBvmB,UAE/B,kBAAC,KAAK5N,KAAN,CAAWf,KAAK,WAAW3F,UAAU,YACnC,kBAAC,KAAD,GACEA,UAAU,gBACV2J,GAAG,WACHkH,QAAQ,YAHV,2BAIY,YAJZ,8BAKgBvR,EAAMu7B,kBAAkBvmB,UALxC,uBAMShV,EAAMu7B,kBAAkBvmB,UANjC,2BAOY,SAACtD,GAAD,OAAO1R,EAAMw7B,yBAAyB9pB,MAPlD,8BAQe,OARf,2BASa,IATb,KAYD1R,EAAMuW,YACL,kBAAC,KAAKnP,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASyK,GAAgBhL,KAAK,aAiC7C,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MpExIP,QoEwIqB3P,MAAOU,EAAMu7B,kBAAkBt6B,OACvD,kBAAC,KAAKmG,KAAN,CAAWf,KAAK,QAAQ3F,UAAU,YAChC,kBAAC,KAAD,GACEA,UAAU,gBACV2J,GAAG,QACHkH,QAAQ,SAHV,2BAIY,YAJZ,8BAKgBvR,EAAMu7B,kBAAkBt6B,OALxC,uBAMSjB,EAAMu7B,kBAAkBt6B,OANjC,2BAOY,SAACyQ,GAAD,OAAO1R,EAAMw7B,yBAAyB9pB,MAPlD,yBAQU,SAACA,GAAD,OAAO1R,EAAMkX,qBAAqBxF,MAR5C,8BASe,OATf,IAWC1R,EAAMwW,sBACL,kBAAC,KAAD,CACE1R,QAAS0K,GACTjL,KAAK,QACL2M,UAAQ,OAMlB,kBAAC,IAAD,CAAKlJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAOhE,GAAM3L,MAAM,SAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,6CACnB,kBAAC,IAAD,GACEA,UAAU,YACV2F,KAAK,SAFP,2BAGY,YAHZ,uBAISrG,EAAMu7B,kBAAkBrmB,OAJjC,2BAKY,SAACvC,GAAD,OACR3S,EAAMy7B,iCAAiC9oB,EAAM,YANjD,8BAQgB3S,EAAM4S,cARtB,OAaN,kBAAC,IAAD,CAAK5K,KAAM,GAAIC,GAAI,EAAGvH,UAAU,0BAC9B,kBAAC,GAAD,CACEuO,MAAO/D,GACP5L,MAAOU,EAAMu7B,kBAAkBtmB,QAE/B,kBAAC,KAAK7N,KAAN,CAAWf,KAAK,SAAS3F,UAAU,YACjC,kBAAC,KAAD,CACEyW,QAAS,KACT9M,GAAG,SACHkH,QAAQ,SACRjS,MAAOU,EAAMu7B,kBAAkBtmB,OAC/BxD,SAAUzR,EAAM4V,aAChBxG,OAAQpP,EAAM07B,eACd5pB,aAAa,QAEd9R,EAAM0W,uBACL,kBAAC,KAAD,CACE5R,QAAS2K,GACTlL,KAAK,QACL2M,UAAQ,OAMlB,kBAAC,IAAD,CAAKlJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAO9D,GACP7L,MAAOU,EAAMu7B,kBAAkBpmB,SAE/B,kBAAC,KAAK/N,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,WACnC,oCACE,kBAAC,MAAD,GACE3F,UAAU,8BACVpB,MAAOU,EAAMu7B,kBAAkBpmB,QAC/B5D,QAAQ,WAHV,2BAIY,YAJZ,2BAKY,SAACjS,GAAD,OACRU,EAAM27B,yBAAyBr8B,EAAO,cAN1C,GASE,kBAACmT,OAAD,CAAQnT,MAAM,KAAK0F,GACnB,kBAACyN,OAAD,CAAQnT,MAAM,K9E5NP,wB+EyCvB2M,GAAY7D,IAAZ6D,QAwoBO8vB,GAtoBI,SAAC/7B,GAAW,IAAD,EACtBoJ,EAAUC,cADY,EAEcyF,oBAAS,GAFvB,mBAErB3C,EAFqB,KAENsO,EAFM,OAGA3L,oBAAS,GAHT,mBAGrBF,EAHqB,KAGboJ,EAHa,OAISlJ,oBAAS,GAJlB,mBAIrBktB,EAJqB,KAITC,EAJS,OAK4BntB,oBAAS,GALrC,mBAKrB0H,EALqB,KAKC0lB,EALD,OAM8BptB,oBAAS,GANvC,mBAMrB4H,EANqB,KAMEylB,EANF,OAOmCrtB,oBAC7D,GAR0B,mBAOrB8H,EAPqB,KAOIC,EAPJ,OAUQ/H,oBAAS,GAVjB,mBAUrBwH,EAVqB,KAUTuC,EAVS,OAWQ/J,oBAAS,GAXjB,mBAWrByH,EAXqB,KAWTuC,EAXS,OAYgBhK,mBAAS,IAZzB,mBAYrBwsB,EAZqB,KAYLc,EAZK,QAakBttB,mBAAS,IAb3B,qBAarButB,GAbqB,MAaJC,GAbI,SAcsBxtB,mBAAS,CACzDyF,UAAW,GACXS,SAAU,GACVG,QAAS,GACTlU,MAAO,GAEPiU,MAAO,GACPD,OAAQ,KArBkB,qBAcrBsmB,GAdqB,MAcFgB,GAdE,SAuBUztB,oBAAS,GAvBnB,qBAuBrB0tB,GAvBqB,MAuBRC,GAvBQ,SAwBsB3tB,oBAAS,GAxB/B,qBAwBrB4tB,GAxBqB,MAwBFC,GAxBE,SAyB0B7tB,mBAAS,CAC7DzI,KAAM,GACNsD,WAAY,GACZizB,OAAQ,GACRzc,OAAQ,GACR0c,MAAO,KA9BmB,qBAyBrBC,GAzBqB,MAyBAC,GAzBA,SAgCUjuB,mBAAS,IAhCnB,qBAgCrBwF,GAhCqB,MAgCRkE,GAhCQ,SAkCC5L,IAAaowB,kBAlCd,qBAkCrBC,GAlCqB,MAkChBC,GAlCgB,SAmCbtsB,KAAKC,UAAbC,GAnCqB,qBAoCtBuB,GAAK,UAAGrS,EAAMm9B,qBAAT,aAAG,EAAqBnQ,OAAO3iB,GAE1C1C,qBAAU,WACR,IACM7G,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBgX,GAAU,GACV5W,IAAM3B,IAAIkB,EAAQ,0BAAsB0R,GAAtB,KAAgCvR,GAASwD,MAAK,SAACsN,GAC/D,IAAMrQ,EAAI,OAAGqQ,QAAH,IAAGA,OAAH,EAAGA,EAAKrQ,KAClBw7B,GAAuB,CACrB12B,KAAM9E,EAAKwY,aAAa1T,KACxBsD,WAAYpI,EAAKwY,aAAapQ,WAC9BwW,OAAQ5e,EAAKwY,aAAatN,UAAU5K,WACpCg7B,MAAO,CACLtwB,KAAOhL,EAAKwY,aAAaxX,WAAY,cACrCgK,KAAOhL,EAAKwY,aAAa1X,SAAU,iBAGvCyO,GAAKmgB,eAAe,CAClB5qB,KAAM9E,EAAKwY,aAAa1T,KACxBsD,WAAYpI,EAAKwY,aAAapQ,aAEhC,IAAIyzB,EAAgB,GACpB77B,EAAK87B,YAAYlkB,KAAI,SAAC7Z,GACfA,EAAMg+B,cACTF,EAAa,uBACRA,GADQ,CAEX,CACE7oB,UAAWjV,EAAMsC,WACjBoT,SAAU1V,EAAMyC,UAChBoT,QAAS7V,EAAMmN,UAAU5K,WACzBZ,MAAO3B,EAAM2B,MACbiU,MAAO,CACL3I,KAAOjN,EAAMiD,WAAY,cACzBgK,KAAOjN,EAAM+C,SAAU,eAEzB4S,OAAQ3V,EAAMqD,qBAKtB6V,GAAe4kB,GACfplB,GAAU,QAEX,CAAC7L,IAEJ,IA4BMiK,GAAW,WACf9B,GAAY/G,SAAQ,SAAC9I,GACnB,GACEZ,KAAKC,UAAUW,KAAUZ,KAAKC,UAAUy3B,KACxC92B,EAAKxD,QAAUs6B,GAAkBt6B,MACjC,CACA,IAAIwY,EAAQnF,GAAYoF,QAAQjV,GAC5BkV,EAAQ9V,KAAK+G,MAAM/G,KAAKC,UAAUwQ,KACtCqF,EAAMF,GAAS8hB,GACf,IAAMgC,EAAa,GACnB5jB,EAAMR,KAAI,SAAC7Z,GACTA,EAAK,eACAA,EADA,CAEH4V,MAAO,CACL3I,KAAOjN,EAAM4V,MAAM,GAAI,cACvB3I,KAAOjN,EAAM4V,MAAM,GAAI,iBAG3BqoB,EAAW9zB,KAAKnK,MAElBkZ,GAAe+kB,OAGnBC,MAGIhC,GAA2B,SAAC9pB,GACZ,cAAhBA,EAAEuF,OAAO5M,IAAgD,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OAChD0J,GAAc,GACW,aAAhBnH,EAAEuF,OAAO5M,IAA+C,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OACtD2J,GAAc,IAEdD,GAAc,GACdC,GAAc,IAEhByjB,GAAqB,eAChBhB,GADe,gBAEjB7pB,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAItBsW,GAAe,SAACX,GACpBsnB,GAAqB,eAChBhB,GADe,CAElBtmB,OAAQA,MAaN0mB,GAA2B,SAACr8B,EAAO+G,GACvCk2B,GAAqB,eAAKhB,GAAN,gBAA0Bl1B,EAAO/G,MAGjDm8B,GAAmC,SAAC9oB,EAAMtM,GAC9Ck2B,GAAqB,eAAKhB,GAAN,gBAA0Bl1B,EAAOsM,MAGjDuE,GAAuB,SAACxF,GACnB,eACDsF,KAAKtF,EAAEuF,OAAO3X,OAGpB48B,GAAwB,GAFxBA,GAAwB,IAMtBR,GAAiB,SAAChqB,GAElB6pB,GAAkBtmB,OAAO9F,OAAS,IAD1B,SACsC6H,KAAKtF,EAAEuF,OAAO3X,OAC9D68B,GAAyB,GAEzBA,GAAyB,IAiBvBqB,GAAyB,WAC7B,IACM18B,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGdO,EAAO,CACXK,WAAY25B,GAAkBhnB,UAC9BxS,UAAWw5B,GAAkBvmB,SAC7B/T,MAAOo7B,GACP15B,cAAe44B,GAAkBtmB,OACjCxI,UAAWqN,SAASyhB,GAAkBpmB,SACtC5S,WAAYg5B,GAAkBrmB,MAAM,GAChC3I,KAAOgvB,GAAkBrmB,MAAM,IAAI1I,OAAO,cAC1C,GACJnK,SAAUk5B,GAAkBrmB,MAAM,GAC9B3I,KAAOgvB,GAAkBrmB,MAAM,IAAI1I,OAAO,cAC1C,GACJ3J,gBAAiBiX,SAASzH,KAE5B2F,GAAU,GACV5W,IAAMuL,IAAIhM,EAAW,cAAeY,EAAMT,GAASwD,MAAK,WAEtD24B,GAAIQ,KAAK,CACP1wB,YpE7N2C,coE+NzCuuB,EpE7NR,mCoE+NMt0B,UANgB,eAQlBgR,GAAU,GACVykB,IAAe,OAIb7pB,GAAe,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QAqBzCyC,GAAgB,WACpBinB,GAAqB,CACnBhoB,UAAW,GACXS,SAAU,GACVG,QAAS,GACTlU,MAAO,GAEPiU,MAAO,GACPD,OAAQ,KAEVgnB,GAAe,GACfpjB,GAAc,GACdC,GAAc,GACd6jB,IAAqB,IAqGf3rB,GAAgBC,KAAhBD,YACR,OACE,oCACGksB,GACD,kBAAC,IAAD,CAAKx8B,UAAU,gBACb,kBAAC,GAAD,CAAgBqF,UAAQ,KAE1B,kBAAC,IAAD,CAAKrF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,Q9ElbM,yB8EobtB,kBAAC,IAAD,CAAMiO,SAAUC,EAAQ1H,KAAK,SAC3B,yBAAKxG,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CACEA,KAAM,GACNtH,UAAU,qDAEV,wBAAIA,UAAU,a9E5bF,wB8E6bZ,6BACE,kBAAC,KAAD,CACE6D,KAAK,OACL7D,UAAU,kCACV2G,QAAS,kBA3PnB,WACd,IAAMiC,EAAI,wBAAoB+I,IAC9BjJ,EAAQK,KAAKH,EAAM,iBAyPoBo0B,KAEf,0BAAMh9B,UAAU,qBAChB,0BAAMA,UAAU,0B9EnchB,mB8EycN,yBAAKA,UAAU,4BACb,kBAAC,IAAD,KAASo8B,GAAoBz2B,KAAKE,OAAO,IACzC,0BAAM7F,UAAU,WACbo8B,GAAoBz2B,OAGzB,kBAAC,KAAD,CACE3F,UAAU,gCACV2F,KAAK,iBACLs3B,SAzVL,SAACxb,KA0VIrR,KAAMA,IAEN,kBAAC,IAAD,CAAK9I,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MrEldC,oBqEmdD3P,MAAOw9B,GAAoBz2B,MAE3B,kBAAC,KAAKe,KAAN,CACE1G,UAAU,WACV2F,KAAK,OACLgE,GAAG,QAEH,kBAAC,IAAD,CACE3J,UAAU,gBACV2J,GAAG,OACHhE,KAAK,OACLkL,QAAQ,oBACRC,aAAcsrB,GAAoBz2B,KAClC/G,MAAOw9B,GAAoBz2B,KAC3BoR,UAAQ,OAKhB,kBAAC,IAAD,CAAKzP,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MrEveD,kBqEweC3P,MAAOw9B,GAAoBnzB,YAE3B,kBAAC,KAAKvC,KAAN,CACE1G,UAAU,WACV2F,KAAK,aACLgE,GAAG,aACH+H,eAAe,WAEf,kBAAC,IAAD,CACE1R,UAAU,gBACV2J,GAAG,aACHhE,KAAK,aACLkL,QAAQ,oBACRC,aACEsrB,GAAoBnzB,WAEtBrK,MAAOw9B,GAAoBnzB,WAC3B8N,UAAQ,OAKhB,kBAAC,IAAD,CAAKzP,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAO9D,GACP7L,MAAOw9B,GAAoB3c,QAE3B,kBAAC,KAAK/Y,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,WACnC,oCACE,kBAAC,KAAD,CACE3F,UAAU,+BACVpB,MAAOw9B,GAAoB3c,OAC3B5O,QAAQ,SACRiB,SAAU,SAAClT,GAAD,OACRs+B,2BACEt+B,EACA,WAGJmY,UAAQ,GAER,kBAAChF,OAAD,CAAQnT,MAAM,KAAK0F,GACnB,kBAACyN,OAAD,CAAQnT,MAAM,K/EniBrB,kB+E2iBH,kBAAC,IAAD,CAAK0I,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAOhE,GAAM3L,MAAM,SAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,6CACnB,kBAACsQ,GAAD,CACEtQ,UAAU,SACV2F,KAAK,QACL/G,MAAOw9B,GAAoBD,MAC3BplB,UAAQ,aAY5B,yBAAK/W,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,qDAEV,kBAAC,IAAD,CAAKA,UAAU,SACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIC,GAAI,IACjB,wBAAIvH,UAAU,a9EzgBJ,yB8E2gBZ,kBAAC,IAAD,CACEsH,KAAM,GACNC,GAAI,GACJvH,UAAU,sFAEV,kBAAC,KAAD,CACEA,UAAU,OACV6D,KAAK,YACL8C,QAAS,kBAAMiO,O9EjjBZ,sB8EwjBX,kBAAC,IAAD,CAAKtN,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACvCoM,GAAYnF,OAAS,EACpB,kBAAC,GAAD,CACEmF,YAAaA,GACbjC,MAAOyH,SAASzH,IAChBrF,gBA1YF,WACtByN,GAAkBtO,IA0YMyI,eAtTG,SAAC3T,GAC5Bw7B,IAAe,GACfR,GAAe,GACfpjB,GAAc,GACdC,GAAc,GACdojB,GAAwB,GACxBC,GAAyB,GACzB,IAAInjB,EAAe,GACnB1E,GAAY/G,SAAQ,SAAC+F,GACfA,EAAWrS,QAAUA,IACvB+X,EAAe1F,MAGnBipB,GAAqBvjB,GACrBojB,EAAkBpjB,EAAazE,WAC/B+nB,GAAmBtjB,EAAa/X,QAwSRuS,aA3MK,SAACvS,GAC9B,IAAI8X,EAAa,OAAGzE,SAAH,IAAGA,QAAH,EAAGA,GAAaxG,QAAO,SAACrJ,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMxD,SAAUA,KAC9Dwd,EAAW,GACfnK,GAAY6E,KAAI,SAAC7Z,GACX2B,IAAU3B,EAAM2B,QAAOwd,EAAWnf,EAAMiV,cAE9CiE,GAAeO,GACf,IACMjY,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IAAMuS,OAAOhT,EAAQ,qBAAiBM,GAASH,GAASwD,MAAK,WAE3D24B,GAAIQ,KAAK,CACP1wB,YAAa0R,EpEtWnB,kCoEuWMzX,UAHgB,mBA4LIsO,cAAeA,GACf/B,SAAO,EACPsqB,YAAU,EACVvqB,YAAU,IAGZ,kBAAC,IAAD,CAAKtL,KAAM,GAAIE,GAAI,IACjB,kBAAC,IAAD,CAAKxH,UAAU,0B9EpkBZ,mB8EykBN87B,GACC,kBAACsB,GAAD,CACEj5B,MAAOm3B,EACPZ,aAneL,WAEjBG,GAAkBhnB,WAClBgnB,GAAkBvmB,UAClBumB,GAAkBpmB,SAClBomB,GAAkBtmB,QAClBsmB,GAAkBrmB,OAClBqmB,GAAkBt6B,OAElBg7B,GAAe,GACVzlB,GAAyBE,GAC5BN,MAGF6lB,GAAe,IAsdOZ,iBAxeD,WACvBoB,IAAe,IAweSnoB,YAAaA,GACbgC,WAAYA,EACZC,WAAYA,EACZ+kB,eAAgBA,EAChBC,kBAAmBA,GACnB3oB,aAAcA,GACd4oB,yBAA0BA,GAC1BC,iCACEA,GAEF7lB,aAAcA,GACd+lB,yBAA0BA,GAC1BzkB,qBAAsBA,GACtBV,qBAAsBA,EACtBklB,eAAgBA,GAChBhlB,sBAAuBA,EACvBqkB,sBAvYI,aAwYJC,0BAtYQ,aAyYRpsB,OAAQA,IAER8tB,GACF,kBAAC,GAAD,CACE73B,MAAOm3B,EACPH,oBAhUE,WAC1B,IACM/6B,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGd+8B,EAAgB,CACpB98B,MAAOs6B,GAAkBt6B,MACzB0B,cAAe,IAAM44B,GAAkBtmB,OAEvCxR,eAAgB,EAChB7B,WAAY25B,GAAkBhnB,UAC9BxS,UAAWw5B,GAAkBvmB,SAC7BzS,WAAYg5B,GAAkBrmB,MAAM,GAChC3I,KAAOgvB,GAAkBrmB,MAAM,IAAI1I,OAAO,cAC1C,GACJnK,SAAUk5B,GAAkBrmB,MAAM,GAC9B3I,KAAOgvB,GAAkBrmB,MAAM,IAAI1I,OAAO,cAC1C,GACJC,UAAWqN,SAASyhB,GAAkBpmB,SACtCtS,gBAAiBiX,SAASzH,KAEtB9Q,EAAO,CACXyY,aAAc,CAAC+jB,IAEXX,EAAa,uBACd9oB,IADc,CAEjB,CACEC,UAAWwpB,EAAcn8B,WACzBoT,SAAU+oB,EAAch8B,UACxBoT,QAAS4oB,EAActxB,UAAU5K,WACjCZ,MAAO88B,EAAc98B,MACrBiU,MAAO,CACL3I,KAAOwxB,EAAcx7B,WAAY,cACjCgK,KAAOwxB,EAAc17B,SAAU,eAEjC4S,OAAQ8oB,EAAcp7B,iBAIxB44B,GAAkBhnB,WAClBgnB,GAAkBvmB,UAClBumB,GAAkBpmB,SAClBomB,GAAkBtmB,QAClBsmB,GAAkBrmB,OAClBqmB,GAAkBt6B,OAElBg7B,GAAe,GAEZzlB,GACAE,GACAE,IAED4B,GAAe4kB,GACfplB,GAAU,GACV5W,IAAMC,KAAKV,EAAW,cAAeY,EAAMT,GAASwD,MAAK,SAACsN,GAExDqrB,GAAIQ,KAAK,CACP1wB,YACEwuB,GAAkBhnB,UpE7UY,gCoE8UhCvN,UAJgB,eAMlBgR,GAAU,GACV2kB,IAAqB,QAIzBV,GAAe,IA2POH,0BAvgBQ,WAChCa,IAAqB,IAygBGroB,YAAaA,GACbgC,WAAYA,EACZC,WAAYA,EACZglB,kBAAmBA,GACnB3oB,aAAcA,GACd4oB,yBAA0BA,GAC1BC,iCACEA,GAEF7lB,aAAcA,GACd+lB,yBAA0BA,GAC1BzkB,qBAAsBA,GACtBV,qBAAsBA,EACtBklB,eAAgBA,GAChBhlB,sBAAuBA,EACvBgG,iBA5aD,SAAChL,GACf,kEACDsF,KAAKtF,EAAEuF,OAAO3X,OAGpBuX,GAA4B,GAF5BA,GAA4B,IA0aND,wBAAyBA,EACzBhI,OAAQA,IAGV,gDC7mBlB3C,GAAY7D,IAAZ6D,QAq5BO+xB,GAn5BC,SAACh+B,GAAW,IAAD,QACI4M,IAAaowB,kBADjB,mBAClBC,EADkB,KACbC,EADa,KAEnB9zB,EAAUC,cAFS,EAGVuH,KAAKC,UAAbC,EAHkB,sBAIGhC,oBAAS,GAJZ,mBAIlBF,EAJkB,KAIVoJ,EAJU,OAKiBlJ,oBAAS,GAL1B,mBAKlB3C,EALkB,KAKHsO,EALG,KAMnBpI,EAAK,UAAGrS,EAAMm9B,qBAAT,aAAG,EAAqBnQ,OAAO3iB,GANjB,EAOEyE,oBAAS,GAPX,mBAOlBjK,EAPkB,KAOXkM,EAPW,OAQYjC,oBAAS,GARrB,mBAQlBktB,EARkB,KAQNC,EARM,OAS+BntB,oBAAS,GATxC,mBASlB0H,EATkB,KASI0lB,EATJ,OAUiCptB,oBAAS,GAV1C,mBAUlB4H,EAVkB,KAUKylB,EAVL,OAWsCrtB,oBAC7D,GAZuB,mBAWlB8H,GAXkB,KAWOC,GAXP,QAc+B/H,mBAAS,IAdxC,qBAclB6B,GAdkB,MAcIH,GAdJ,SAe2B1B,mBAAS,IAfpC,qBAelB4B,GAfkB,MAeED,GAfF,SAgBuB3B,mBAAS,IAhBhC,qBAgBlBwC,GAhBkB,MAgBA2sB,GAhBA,SAiBmCnvB,mBAAS,IAjB5C,qBAiBlBovB,GAjBkB,MAiBMC,GAjBN,SAkBmBrvB,mBAAS,IAlB5B,qBAkBlBwsB,GAlBkB,MAkBFc,GAlBE,SAmBqBttB,mBAAS,IAnB9B,qBAmBlButB,GAnBkB,MAmBDC,GAnBC,SAoB6BxtB,mBAAS,CAC7DzI,KAAM,GACNsD,WAAY,GACZizB,OAAQ,GACRzc,OAAQ,GACR0c,MAAO,KAzBgB,qBAoBlBC,GApBkB,MAoBGC,GApBH,SA2ByBjuB,mBAAS,CACzDyF,UAAW,GACXS,SAAU,GACVG,QAAS,GACTlU,MAAO,GAEPiU,MAAO,GACPD,OAAQ,KAlCe,qBA2BlBsmB,GA3BkB,MA2BCgB,GA3BD,SAoCaztB,mBAAS,IApCtB,qBAoClBwF,GApCkB,MAoCLkE,GApCK,SAqCa1J,oBAAS,GArCtB,qBAqClB0tB,GArCkB,MAqCLC,GArCK,SAsCyB3tB,oBAAS,GAtClC,qBAsClB4tB,GAtCkB,MAsCCC,GAtCD,SAuCa7tB,oBAAS,GAvCtB,qBAuClBsvB,GAvCkB,MAuCLC,GAvCK,SAwCevvB,oBAAS,GAxCxB,qBAwClByB,GAxCkB,MAwCJoI,GAxCI,SAyCW7J,oBAAS,GAzCpB,qBAyClBwB,GAzCkB,MAyCNsI,GAzCM,SA0CW9J,oBAAS,GA1CpB,qBA0ClBwH,GA1CkB,MA0CNuC,GA1CM,SA2CW/J,oBAAS,GA3CpB,qBA2ClByH,GA3CkB,MA2CNuC,GA3CM,SA4CShK,mBAAS,IA5ClB,qBA4ClBwvB,GA5CkB,MA4CPC,GA5CO,MA8CzB52B,qBAAU,WACR,IACM7G,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBgX,GAAU,GACV5W,IAAM3B,IAAIkB,EAAQ,0BAAsB0R,EAAtB,KAAgCvR,GAASwD,MAAK,SAACsN,GAC/D,IAAMrQ,EAAI,OAAGqQ,QAAH,IAAGA,OAAH,EAAGA,EAAKrQ,KAClBw7B,GAAuB,CACrB12B,KAAM9E,EAAKwY,aAAa1T,KACxBsD,WAAYpI,EAAKwY,aAAapQ,WAC9BwW,OAAQ5e,EAAKwY,aAAatN,UAAU5K,WACpCg7B,MAAO,CACLtwB,KAAOhL,EAAKwY,aAAaxX,WAAY,cACrCgK,KAAOhL,EAAKwY,aAAa1X,SAAU,iBAGvC47B,GAAoB18B,EAAKwY,aAAa1T,MACtC83B,GAA0B58B,EAAKwY,aAAapQ,YAC5C40B,GAAah9B,EAAKwY,aAAatN,UAAU5K,YACzCiP,EAAKmgB,eAAe,CAClB5qB,KAAM9E,EAAKwY,aAAa1T,KACxBsD,WAAYpI,EAAKwY,aAAapQ,aAEhC,IAAIyzB,EAAgB,GACpB77B,EAAK87B,YAAYlkB,KAAI,SAAC7Z,GACfA,EAAMg+B,cACTF,EAAa,uBACRA,GADQ,CAEX,CACE7oB,UAAWjV,EAAMsC,WACjBoT,SAAU1V,EAAMyC,UAChBoT,QAAS7V,EAAMmN,UAAU5K,WACzBZ,MAAO3B,EAAM2B,MACbiU,MAAO,CACL3I,KAAOjN,EAAMiD,WAAY,cACzBgK,KAAOjN,EAAM+C,SAAU,eAEzB4S,OAAQ3V,EAAMqD,qBAKtBqV,GAAU,GACVQ,GAAe4kB,QAEhB,CAACjxB,IAEJ,IAkFMiK,GAAW,WACf9B,GAAY/G,SAAQ,SAAC9I,GACnB,GACEZ,KAAKC,UAAUW,KAAUZ,KAAKC,UAAUy3B,KACxC92B,EAAKxD,QAAUs6B,GAAkBt6B,MACjC,CACA,IAAIwY,EAAQnF,GAAYoF,QAAQjV,GAC5BkV,EAAQ9V,KAAK+G,MAAM/G,KAAKC,UAAUwQ,KACtCqF,EAAMF,GAAS8hB,GACf,IAAMgC,EAAa,GACnB5jB,EAAMR,KAAI,SAAC7Z,GACTA,EAAK,eACAA,EADA,CAEH4V,MAAO,CACL3I,KAAOjN,EAAM4V,MAAM,GAAI,cACvB3I,KAAOjN,EAAM4V,MAAM,GAAI,iBAG3BqoB,EAAW9zB,KAAKnK,MAElBkZ,GAAe+kB,OAGnBC,MAOIgB,GAA6B,SAAC9sB,GACd,eAAhBA,EAAEuF,OAAO5M,IAAiD,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OACjDyJ,IAAc,GACW,SAAhBlH,EAAEuF,OAAO5M,IAA2C,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OAClDwJ,IAAgB,IAEhBA,IAAgB,GAChBC,IAAc,IAEhBmkB,GAAuB,eAClBD,GADiB,gBAEnBprB,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAYtBk8B,GAA2B,SAAC9pB,GACZ,cAAhBA,EAAEuF,OAAO5M,IAAgD,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OAChD0J,IAAc,GACW,aAAhBnH,EAAEuF,OAAO5M,IAA+C,KAA1BqH,EAAEuF,OAAO3X,MAAM6P,OACtD2J,IAAc,IAEdD,IAAc,GACdC,IAAc,IAEhByjB,GAAqB,eAChBhB,GADe,gBAEjB7pB,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAItBsW,GAAe,SAACX,GACpBsnB,GAAqB,eAChBhB,GADe,CAElBtmB,OAAQA,MAIN0mB,GAA2B,SAACr8B,EAAO+G,GACvCk2B,GAAqB,eAAKhB,GAAN,gBAA0Bl1B,EAAO/G,MAGjDm8B,GAAmC,SAAC9oB,EAAMtM,GAC9Ck2B,GAAqB,eAAKhB,GAAN,gBAA0Bl1B,EAAOsM,MAGjDuE,GAAuB,SAACxF,GACnB,eACDsF,KAAKtF,EAAEuF,OAAO3X,OAGpB48B,GAAwB,GAFxBA,GAAwB,IAMtBR,GAAiB,SAAChqB,GAElB6pB,GAAkBtmB,OAAO9F,OAAS,IAD1B,SACsC6H,KAAKtF,EAAEuF,OAAO3X,OAC9D68B,GAAyB,GAEzBA,GAAyB,IAmGvBqB,GAAyB,WAC7B,IACM18B,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGdO,EAAO,CACXK,WAAY25B,GAAkBhnB,UAC9BxS,UAAWw5B,GAAkBvmB,SAC7B/T,MAAOo7B,GAEP15B,cAAe44B,GAAkBtmB,OACjCxI,UAAWqN,SAASyhB,GAAkBpmB,SACtC5S,WAAYg5B,GAAkBrmB,MAAM,GAChC3I,KAAOgvB,GAAkBrmB,MAAM,IAAI1I,OAAO,cAC1C,GACJnK,SAAUk5B,GAAkBrmB,MAAM,GAC9B3I,KAAOgvB,GAAkBrmB,MAAM,IAAI1I,OAAO,cAC1C,GACJ3J,gBAAiBiX,SAASzH,IAE5B2F,GAAU,GACV5W,IAAMuL,IAAIhM,EAAW,cAAeY,EAAMT,GAASwD,MAAK,WAEtD24B,EAAIQ,KAAK,CACP1wB,YrE/Y2C,cqEiZzCuuB,GrE/YR,mCqEiZMt0B,UANgB,eAQlBgR,GAAU,GACVykB,IAAe,OAab7pB,GAAe,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QAqBzCyC,GAAgB,WACpBinB,GAAqB,CACnBhoB,UAAW,GACXS,SAAU,GACVG,QAAS,GACTlU,MAAO,GAEPiU,MAAO,GACPD,OAAQ,KAEVgnB,GAAe,GACfpjB,IAAc,GACdC,IAAc,GACd6jB,IAAqB,IAsGf3rB,GAAgBC,KAAhBD,YAER,OACE,oCACGksB,EACD,kBAAC,IAAD,CAAKx8B,UAAU,gBACb,kBAAC,GAAD,CAAgBqF,UAAQ,KAE1B,kBAAC,IAAD,CAAKrF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,Q/EhmBG,sB+EmmBnB,kBAAC,IAAD,CAAMiO,SAAUC,EAAQ1H,KAAK,SAC3B,yBAAKxG,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CACEA,KAAM,GACNtH,UAAU,qDAEV,wBAAIA,UAAU,a/E3mBL,qB+E4mBT,6BACE,kBAAC,KAAD,CACE6D,KAAK,OACL7D,UAAU,4CACV2G,QA9eT,WACfg3B,IAAe,KA+eS,0BAAM39B,UAAU,qBAChB,0BAAMA,UAAU,qC/EhlBtB,W+EolBK09B,GACC,kBAAC,GAAD,CACE5wB,IAAK8D,GACLkC,aApTK,WAC/B,IACM1S,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACGuS,OAAOhT,EAAQ,6BAAyB0R,EAAzB,KAAmCvR,GAClDwD,MAAK,WACJN,OAAOC,SAAW,gCAwSIyP,aAzTD,WACzB2qB,IAAe,IAyTW5qB,WAAS,IAGX,uCAIN,yBAAK/S,UAAU,4BACb,kBAAC,IAAD,KAAS4Q,GAAiB/K,OAAO,IACjC,0BAAM7F,UAAU,WAAW4Q,KAE7B,kBAAC,KAAD,CACE5Q,UAAU,gCACVoQ,KAAMA,GAELjM,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CACEtC,QAASwK,GACT/K,KAAK,QACL2M,UAAQ,KAId,kBAAC,IAAD,CAAKlJ,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAM,oBACN3P,MAAOw9B,GAAoBz2B,MAE3B,kBAAC,KAAKe,KAAN,CACE1G,UAAU,sBACV2F,KAAK,OACLgE,GAAG,QAEH,kBAAC,KAAD,GACE3J,UAAU,gBACV2J,GAAG,OACHhE,KAAK,QAHP,2BAIY,YAJZ,8BAKgBy2B,GAAoBz2B,MALpC,uBAMSy2B,GAAoBz2B,MAN7B,2BAOY,SAACqL,GAAD,OACR8sB,GAA2B9sB,MAR/B,yBAUU,SAACA,GAAD,OApiBZ,SAACA,GAC7B,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGhB0Q,EAAEuF,OAAO3X,QAAUgS,GACrBlQ,IACGC,KACCV,EAAW,qBACX,CAAEgR,kBAAmBmrB,GAAoBz2B,MACzCvF,GAEDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACNiP,GAAwBoB,EAAIrQ,KAAK,OAIvCiP,IAAwB,GA8gBqBqB,CAAsBH,MAVvC,yBAWU,QAXV,8BAYe,OAZf,2BAaa,IAbb,IAe0B,kBAAzBf,IACCmsB,GAAoBz2B,KACjB2L,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChC2tB,GAAoBz2B,KAAK8I,OAAS,GAChC,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGM,gBAAxBvB,IACC,kBAAC,KAAD,CACE7L,QlE5rBpC,sFkE6rBoCP,KAAK,QACL2M,UAAQ,KAIbX,IACC,kBAAC,KAAKnJ,KAAN,KACE,kBAAC,KAAD,CACEtC,QAASyK,GACThL,KAAK,aAMf,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MtEntBD,kBsEotBC3P,MAAOw9B,GAAoBnzB,YAE3B,kBAAC,KAAKvC,KAAN,CACE1G,UAAU,sBACV2F,KAAK,aACLgE,GAAG,cAEH,kBAAC,KAAD,GACE3J,UAAU,2BACV2F,KAAK,aACLgE,GAAG,aACHkH,QAAQ,cAJV,2BAKY,YALZ,8BAOIurB,GAAoBnzB,YAPxB,uBASSmzB,GAAoBnzB,YAT7B,2BAUY,SAAC+H,GAAD,OACR8sB,GAA2B9sB,MAX/B,yBAaU,SAACA,GAAD,OAlkBd,SAACA,GAC3B,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGhB0Q,EAAEuF,OAAO3X,QAAU4+B,GACrB98B,IACGC,KACCV,EAAW,uBACX,CAAEiC,MAAOk6B,GAAoBnzB,YAC7B7I,GAEDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACNkP,GAAsBmB,EAAIrQ,KAAK,OAIrCkP,IAAsB,GA4iBuB6B,CAAoBZ,MAbrC,8BAce,OAdf,2BAea,IAfb,IAiBwB,kBAAvBhB,IACCosB,GAAoBnzB,WACjBqI,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChC2tB,GAAoBnzB,WAAWwF,OAC7B,GACA,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGI,gBAAtBxB,IACC,kBAAC,KAAD,CACE5L,QlElvBpC,oFkEmvBoCP,KAAK,QACL2M,UAAQ,KAIbZ,IACC,kBAAC,KAAKlJ,KAAN,KACE,kBAAC,KAAD,CACEtC,QAASyK,GACThL,KAAK,aAMf,kBAAC,IAAD,CAAKyD,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAO9D,GACP7L,MAAOw9B,GAAoB3c,QAE3B,kBAAC,KAAK/Y,KAAN,CACE1G,UAAU,sBACV2F,KAAK,UAEL,oCACE,kBAAC,KAAD,CACE3F,UAAU,+BACVpB,MAAOw9B,GAAoB3c,OAC3B5O,QAAQ,SACRiB,SAAU,SAAClT,GAAD,OAhhBX,SAACA,EAAO+G,GACzC02B,GAAuB,eAAKD,GAAN,gBAA4Bz2B,EAAO/G,KAghBrBs+B,CACEt+B,EACA,YAIJ,kBAACmT,OAAD,CAAQnT,MAAM,KAAK0F,GACnB,kBAACyN,OAAD,CAAQnT,MAAM,KhFhzBrB,kBgFwzBH,kBAAC,IAAD,CAAK0I,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAOhE,GAAM3L,MAAM,SAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,6CACnB,kBAACsQ,GAAD,CACEtQ,UAAU,SACV2F,KAAK,QACL/G,MAAOw9B,GAAoBD,MAC3BprB,SAAU,SAACkB,GAAD,OAniBD,SAACA,EAAMtM,GAChD02B,GAAuB,eAAKD,GAAN,gBAA4Bz2B,EAAOsM,KAmiBvB8rB,CACE9rB,EACA,UAGJC,aAAcA,UAO1B,kBAAC,KAAKxL,KAAN,KACE,yBAAK1G,UAAU,qBACb,kBAAC,KAAD,CACE6D,KAAK,UACLuO,SAAS,SACTzL,QA/dJ,WACtB,IACMvG,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGdO,EAAO,CACXsB,gBAAiBwP,EACjBhM,KAAMy2B,GAAoBz2B,KAC1BsD,WAAYmzB,GAAoBnzB,WAChCpH,WAAYu6B,GAAoBD,MAAM,GAClCtwB,KAAOuwB,GAAoBD,MAAM,IAAIrwB,OAAO,cAC5C,GACJnK,SAAUy6B,GAAoBD,MAAM,GAChCtwB,KAAOuwB,GAAoBD,MAAM,IAAIrwB,OAAO,cAC5C,GACJC,UAAWqN,SAASgjB,GAAoB3c,SAEpC/d,EAAUmK,KAAOuwB,GAAoBD,MAAM,IAAIrwB,OAAO,cAC5D,GAAIswB,GAAoB3c,SAAWme,GACjC,GAAI,IAAIhyB,KAAS,IAAIA,KAAKlK,GACpB06B,GAAoBz2B,MAAQy2B,GAAoBnzB,WAEtB,kBAAzBgH,IACCmsB,GAAoBz2B,OAASiL,IACP,kBAAvBZ,IACCosB,GAAoBnzB,aAAeu0B,KAErCntB,GAAU,GACV3P,IACGuL,IAAIhM,EAAW,oBAAqBY,EAAMT,GAC1CwD,MAAK,WACJN,OAAOC,SAAW,gCAIxB8M,GAAU,OAEP,CAELksB,EAAIQ,KAAK,CACP1wB,YAAa8C,GACb7I,UAHgB,oBAOhB81B,GAAoBz2B,MAAQy2B,GAAoBnzB,YAClDoH,GAAU,GACViH,GAAU,GACV5W,IAAMuL,IAAIhM,EAAW,oBAAqBY,EAAMT,GAASwD,MAAK,WAC5DN,OAAOC,SAAW,gCAGpB8M,GAAU,K/EpXI,U+E+xBM,kBAAC,KAAD,CACErQ,UAAU,OACV6D,KAAK,YACL8C,QAlYN,WACpB,GAAIrH,EAAMiE,SAASwB,MAAO,CACxB,IAAM6D,EAAI,2BAAuB+I,GACjCjJ,EAAQK,KAAKH,QAEbtF,OAAOC,SAAW,8BA+XOmB,SASf,yBAAK1E,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsH,KAAM,GACNC,GAAI,GACJvH,UAAU,qDAEV,wBAAIA,UAAU,a/E10BH,sB+E40Bb,kBAAC,IAAD,CACEsH,KAAM,GACNC,GAAI,GACJvH,UAAU,sFAEV,kBAAC,KAAD,CACEA,UAAU,OACV6D,KAAK,YACL8C,QAAS,kBAAMiO,O/Er1BR,oB+E01BVhB,GAAYnF,OAAS,EACpB,kBAAC,GAAD,CACEmF,YAAaA,GACbtH,gBAvnBE,WACtByN,GAAkBtO,IAunBEkG,MAAOyH,SAASzH,GAChBuC,eA3ZO,SAAC3T,GAC5Bw7B,IAAe,GACfR,GAAe,GACfpjB,IAAc,GACdC,IAAc,GACdojB,GAAwB,GACxBC,GAAyB,GACzB,IAAInjB,EAAe,GACnB1E,GAAY/G,SAAQ,SAAC+F,GACfA,EAAWrS,QAAUA,IACvB+X,EAAe1F,MAGnBipB,GAAqBvjB,GACrBojB,GAAkBpjB,EAAazE,WAC/B+nB,GAAmBtjB,EAAa/X,QA6YZuS,aA/SS,SAACvS,GAC9B,IAAI8X,EAAa,OAAGzE,SAAH,IAAGA,QAAH,EAAGA,GAAaxG,QAAO,SAACrJ,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMxD,SAAUA,KAElEqT,GAAY6E,KAAI,SAAC7Z,GACX2B,IAAU3B,EAAM2B,OAAkB3B,EAAMiV,aAE9CiE,GAAeO,GACf,IACMjY,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IAAMuS,OAAOhT,EAAQ,qBAAiBM,GAASH,GAASwD,MAAK,WAE3D24B,EAAIQ,KAAK,CACP1wB,YAAa2xB,QrEliBnB,kCqEmiBM13B,UAHgB,mBAgSAsO,cAAeA,GACf/B,SAAO,EACPD,YAAU,IAGZ,kBAAC,IAAD,CAAKtL,KAAM,GAAIE,GAAI,IACjB,kBAAC,IAAD,CAAKxH,UAAU,0B/En2BR,mB+Ew2BV87B,GACC,kBAACsB,GAAD,CACEj5B,MAAOm3B,EACPZ,aArrBD,WAEjBG,GAAkBhnB,WAClBgnB,GAAkBvmB,UAClBumB,GAAkBpmB,SAClBomB,GAAkBtmB,QAClBsmB,GAAkBrmB,OAClBqmB,GAAkBt6B,OAElBg7B,GAAe,GACVzlB,GAAyBE,GAC5BN,MAGF6lB,GAAe,IAwqBGZ,iBA9rBG,WACvBoB,IAAe,IA8rBKnoB,YAAaA,GACbgnB,eAAgBA,GAChBhlB,WAAYA,GACZC,WAAYA,GACZglB,kBAAmBA,GACnB3oB,aAAcA,GACd4oB,yBAA0BA,GAC1BC,iCACEA,GAEF7lB,aAAcA,GACd+lB,yBAA0BA,GAC1BzkB,qBAAsBA,GACtBV,qBAAsBA,EACtBklB,eAAgBA,GAChBhlB,sBAAuBA,EACvBqkB,sBAljBQ,aAmjBRC,0BAjjBY,aAkjBZpsB,OAAQA,IAER8tB,GACF,kBAAC,GAAD,CACE73B,MAAOm3B,EACPH,oBAlaM,WAC1B,IACM/6B,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGd+8B,EAAgB,CACpB98B,MAAOs6B,GAAkBt6B,MACzB0B,cAAe,IAAM44B,GAAkBtmB,OAEvCxR,eAAgB,EAChB7B,WAAY25B,GAAkBhnB,UAC9BxS,UAAWw5B,GAAkBvmB,SAC7BzS,WAAYg5B,GAAkBrmB,MAAM,GAChC3I,KAAOgvB,GAAkBrmB,MAAM,IAAI1I,OAAO,cAC1C,GACJnK,SAAUk5B,GAAkBrmB,MAAM,GAC9B3I,KAAOgvB,GAAkBrmB,MAAM,IAAI1I,OAAO,cAC1C,GACJC,UAAWqN,SAASyhB,GAAkBpmB,SACtCtS,gBAAiBiX,SAASzH,IAEtB9Q,EAAO,CACXyY,aAAc,CAAC+jB,IAEXX,EAAa,uBACd9oB,IADc,CAEjB,CACEC,UAAWwpB,EAAcn8B,WACzBoT,SAAU+oB,EAAch8B,UACxBoT,QAAS4oB,EAActxB,UAAU5K,WACjCZ,MAAO88B,EAAc98B,MACrBiU,MAAO,CACL3I,KAAOwxB,EAAcx7B,WAAY,cACjCgK,KAAOwxB,EAAc17B,SAAU,eAEjC4S,OAAQ8oB,EAAcp7B,iBAKxB44B,GAAkBhnB,WAClBgnB,GAAkBvmB,UAClBumB,GAAkBpmB,SAClBomB,GAAkBtmB,QAClBsmB,GAAkBrmB,OAClBqmB,GAAkBt6B,OAElBg7B,GAAe,GAEZzlB,GACAE,GACAE,KAED4B,GAAe4kB,GACfplB,GAAU,GACV5W,IAAMC,KAAKV,EAAW,cAAeY,EAAMT,GAASwD,MAAK,SAACsN,GAExDqrB,EAAIQ,KAAK,CACP1wB,YACEwuB,GAAkBhnB,UrEzgBY,gCqE0gBhCvN,UAJgB,eAMlBgR,GAAU,GACV2kB,IAAqB,QAIzBV,GAAe,IA4VGH,0BAntBY,WAChCa,IAAqB,IAmtBDroB,YAAaA,GACbgC,WAAYA,GACZC,WAAYA,GACZglB,kBAAmBA,GACnB3oB,aAAcA,GACd4oB,yBAA0BA,GAC1BC,iCACEA,GAEF7lB,aAAcA,GACd+lB,yBAA0BA,GAC1BzkB,qBAAsBA,GACtBV,qBAAsBA,EACtBkG,iBAtmBG,SAAChL,GACf,kEACDsF,KAAKtF,EAAEuF,OAAO3X,OAGpBuX,IAA4B,GAF5BA,IAA4B,IAomBVD,wBAAyBA,GACzB8kB,eAAgBA,GAChBhlB,sBAAuBA,EACvB9H,OAAQA,IAGV,8CC96Bd3C,GAAY7D,IAAZ6D,QA6IO+xB,GA3IC,WACd,IACQhtB,EAAgBC,KAAhBD,YACR,OACE,oCACE,kBAAC,IAAD,CAAKtQ,UAAU,gBACb,kBAAC,GAAD,CAAgBqF,UAAQ,KAE1B,kBAAC,IAAD,CAAKrF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,QAAd,iBAEF,yBAAKA,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,yBAAKtH,UAAU,4BACb,kBAAC,IAAD,UACA,0BAAMA,UAAU,WAAhB,iBAEF,kBAAC,KAAD,CACEA,UAAU,gCACV2F,KAAK,GACLs3B,SAzBH,SAACxb,MA2BE,kBAAC,IAAD,CAAKna,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,aAChB,kBAAC,KAAK7H,KAAN,CACE1G,UAAU,WACV2F,KAAK,oBACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,6BAIb,kBAAC,IAAD,CACEpE,UAAU,gBACV6Q,QAAQ,iBAKhB,kBAAC,IAAD,CAAKvJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,WAChB,kBAAC,KAAK7H,KAAN,CACE1G,UAAU,WACV2F,KAAK,UACL+L,eAAe,UACfuK,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,2BAIb,kBAAC,IAAD,CACEpE,UAAU,gBACV6Q,QAAQ,iBAKhB,kBAAC,IAAD,CAAKvJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,YAChB,kBAAC,KAAK7H,KAAN,CACE1G,UAAU,WACV2F,KAAK,WACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,yBACTP,KAAM,WAIV,kBAAC,IAAD,CACE7D,UAAU,gBACV6Q,QAAQ,gBAKhB,kBAAC,IAAD,CAAKvJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,UAChB,kBAAC,KAAK7H,KAAN,CACE1G,UAAU,WACV2F,KAAK,SACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,0BAIb,kBAAC,IAAD,CACEpE,UAAU,gBACV6Q,QAAQ,cAKhB,kBAAC,IAAD,CAAKvJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,eAChB,kBAAC,KAAK7H,KAAN,CAAW1G,UAAU,6CACnB,kBAACsQ,EAAD,CAAatQ,UAAU,gBAMjC,kBAAC,KAAK0G,KAAN,KACE,yBAAK1G,UAAU,qBACb,kBAAC,KAAD,CAAQ6D,KAAK,UAAUuO,SAAS,UAAhC,UAGA,kBAAC,KAAD,CAAQpS,UAAU,OAAO6D,KAAK,aAA9B,sBC3FtB3D,GAAWC,EAAQ,IACfugB,GAAavX,IAAbuX,SAEAnV,IADW8O,KAAXtI,OACYrK,IAAZ6D,SAobO0yB,GAnbK,SAAC3+B,GAAW,IAAD,EACS8O,mBAAS,CAC7CzM,SAAU,GACV4gB,UAAW,GACXC,gBAAiB,GACjBO,WAAY,GACZpd,KAAM,GACN9D,WAAY,GACZkK,UAAW,KARgB,mBACtBmyB,EADsB,KACTC,EADS,OAUa/vB,mBAAS,IAVtB,mBAUtBgwB,EAVsB,KAUPC,EAVO,OAWGjwB,mBAAS,IAXZ,mBAWtByR,EAXsB,KAWZye,EAXY,OAYDlwB,oBAAS,GAZR,mBAYtBF,EAZsB,KAYdoJ,EAZc,OAayBlJ,mBAAS,IAblC,mBAatB2Q,EAbsB,KAaDwf,EAbC,OAcAryB,IAAaowB,kBAdb,mBActBC,EAdsB,KAcjBC,EAdiB,OAeFpuB,oBAAS,GAfP,mBAetBjK,EAfsB,KAefkM,EAfe,OAiBSjC,oBAAS,GAjBlB,gCAkBd8B,KAAKC,WAAbC,EAlBsB,oBAmBzB7M,EAAWi7B,cAUT3f,EAAc,SAAClV,GACnB,OAAQA,GACN,IAAK,IACH,MlFvDyB,oBkFwD3B,IAAK,IACH,MlFxDgB,WkFyDlB,IAAK,IACH,MlFzDc,SkF0DhB,IAAK,IACH,MlF1DsB,iBkF2DxB,IAAK,IACH,MlF3Da,QkF4Df,IAAK,IACH,MlF5DsB,iBkF6DxB,IAAK,IACH,MlF7DY,OkF8Dd,QACE,MAAO,KAyBb1C,qBAAU,WACR,IAAMuY,EAAQ3T,KAAOtI,EAASwB,MAAMlD,WAAY,kBAAkBiK,OAChE,cAEI2yB,EAAQ5yB,KAAOtI,EAASwB,MAAMpD,SAAU,kBAAkBmK,OAC9D,cAEE4yB,EAAQ,CAAC7yB,KAAO2T,EAAO,cAAe3T,KAAO4yB,EAAO,eACxDN,EAAe,CACbx8B,SAAU,GACV4gB,UAAWhf,EAASwB,MAAMwd,UAC1BC,gBAAiBjf,EAASwB,MAAMyd,gBAChCO,WAAYxf,EAASwB,MAAMge,WAC3Bpd,KAAMpC,EAASwB,MAAMY,KACrB9D,WAAY68B,EACZ3yB,UAAWxI,EAASwB,MAAMgH,UAAU5K,aAEtCk9B,EAAiB96B,EAASwB,MAAMgH,UAAU5K,YAC1C,IAAMmV,EAvCQ,SAAC3M,GACf,OAAQA,GACN,IAAK,IACH,MAAO,uEACT,IAAK,IACH,MAAO,4DACT,IAAK,IACH,MAAO,0DACT,IAAK,IACH,MAAO,kEACT,IAAK,IACH,MAAO,yDACT,IAAK,IACH,MAAO,kEACT,IAAK,IACH,MAAO,wDACT,QACE,MAAO,IAsBEg1B,CAAQp7B,EAASwB,MAAMyd,gBAAgBrhB,YACpDm9B,EAAYhoB,GACZlG,EAAKmgB,eAAe,CAClB5qB,KAAMpC,EAASwB,MAAMY,KACrB4c,UAAWhf,EAASwB,MAAMwd,cAE3B,IAEH,IAAM9S,EAAwB,SAACuB,GAC7BmtB,EAAe,eAAKD,EAAN,gBAAoBltB,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAoErDggC,EAAc,SAAC/9B,GACnB,IAAMqY,EAAQlP,KACV4P,EAAYskB,EAAYnb,kBACrBmb,EAAYnb,WACnB,IAAM3iB,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGpBgX,GAAU,GACV5W,IAAMuL,IAAIhM,EAAW,WAAa2Z,EAAW/Y,EAAMT,GAASwD,MAAK,SAACsN,GAChE,GAAmB,MAAfA,EAAIuO,OAAgB,CAEtB8c,EAAIQ,KAAK,CACP1wB,YvEjOR,kDuEkOQ/F,UAHgB,eAKlBhD,OAAOC,SAAW,+BAmChB+M,EAAgBC,KAAhBD,YAER,OACE,oCACGksB,EACD,kBAAC,IAAD,CAAKx8B,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,sBAAsBqG,YAAU,aAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYf,WAAS,EAACzE,KAAMvB,IAE5B,kBAAC,GAAD,CAASU,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,4BjF7PY,iBiF+Pd,kBAAC,IAAD,CAAMiO,SAAUC,EAAQ1H,KAAK,SAC3B,yBAAKxG,UAAU,oBACb,kBAAC,KAAD,CACEqG,YAAU,uBACVrG,UAAU,wCACV2F,KAAK,iBACLyK,KAAMA,GAELjM,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CACEtC,QAASwK,GACT/K,KAAK,QACL2M,UAAQ,KAKd,kBAAC,GAAD,CAAYjC,MxEvSF,iBwEuSyB3P,MAAOs/B,EAAYv4B,MACpD,kBAAC,KAAKe,KAAN,CACE1G,UAAU,WACV2F,KAAK,OACLgE,GAAG,OACHsS,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,CAAE+a,qBpE9SH,kCoEkTZ,kBAAC,GAAD,CACEC,WAAS,EACT/N,UAAW,GACXzS,MAAOs/B,EAAYv4B,KACnBoL,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCtC,OAAQ,SAACsC,GAAD,OA9EP,SAACA,GACxB,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGhB0Q,EAAEuF,OAAO3X,QAAU2E,EAASwB,MAAMY,KACpCjF,IACGC,KACCV,EAAW,gBACX,CAAEof,aAAcrO,EAAEuF,OAAO3X,OACzBwB,GAEDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACN09B,EAAuBrtB,EAAIrQ,KAAK,OAItC09B,GAAuB,GAwDYjf,CAAiBtO,IAChCrH,GAAG,OACHhE,KAAK,OACL3F,UAAU,+BACV6Q,QAAQ,OACRO,aAAa,QAES,iBAAvB2N,GACCmf,EAAYv4B,KACT2L,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChCyvB,EAAYv4B,KAAK8I,OAAS,GACxB,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGK,gBAAvBuN,GACC,kBAAC,KAAD,CACE3a,QAAS6K,GACTpL,KAAK,QACL2M,UAAQ,MAMhB,kBAAC,GAAD,CACEjC,MxEnVK,cwEoVL3P,MAAOs/B,EAAY3b,WAEnB,kBAAC,KAAK7b,KAAN,CACE1G,UAAU,WACV2F,KAAK,YACLgE,GAAG,YACHsS,MAAO,CACL,CACEC,UAAU,EACV9X,QpEzVK,8BoE6VT,oCACE,kBAAC,GAAD,CACEpE,UAAU,+BACVpB,MAAOs/B,EAAY3b,UACnBxR,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCrH,GAAG,YACHhE,KAAK,YACLkL,QAAQ,YACRO,aAAa,WAKrB,kBAAC,GAAD,CAAY7C,MAAOhE,GAAM3L,MAAM,cAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,oCACnB,kBAACsQ,EAAD,CACEtQ,UAAU,iDACV2F,KAAK,aACLuM,aA9IH,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QA8IvBvT,MAAOs/B,EAAYr8B,WACnBkP,SAAU,SAACkB,GAAD,OAzOI,SAACA,EAAMtM,GAC3Cw4B,EAAe,eAAKD,EAAN,gBAAoBv4B,EAAOsM,KAyOjBtC,CAA8BsC,EAAM,eAEtCgK,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS,CAAE8K,sBAMrB,kBAAC,GAAD,CAAYX,MAAO9D,GAAQ7L,MAAOs/B,EAAYnyB,WAC5C,kBAAC,KAAKrF,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,UACnC,oCACE,kBAAC,KAAD,CACE3F,UAAU,8BACVpB,MAAOs/B,EAAYnyB,UACnB8E,QAAQ,SACRiB,SAAU,SAAClT,GAAD,OAxPN,SAACA,EAAO+G,GACpCw4B,EAAe,eAAKD,EAAN,gBAAoBv4B,EAAO/G,KAwPf8Q,CAAsB9Q,EAAO,eAG/B,kBAAC,KAAOmT,OAAR,CAAenT,MAAM,KAClB0F,GAEH,kBAAC,KAAOyN,OAAR,CAAenT,MAAM,KlF5ZlB,iBkFmaX,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,IACnB,kBAAC,KAAK0G,KAAN,CACE1G,UAAU,iBACV2F,KAAK,SACL+Z,cAAc,YAEd,kBAAC,GAAD,CACErZ,YAAU,mBACVkY,QAlWR,SAACkD,EAAQ9X,GACvBw0B,EAAe,eACVD,EADS,CAEZ1b,gBAAiB7Y,KAEnB20B,EAAY7c,MA+VS5C,EACCqf,EAAY1b,gBAAgBrhB,aAE5B,yBAAKnB,UAAU,2CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,iDACb,0BAAMA,UAAU,oCACd,uBAAGA,UAAU,kCACV4f,KAAgBC,IAGnB,0BACE7f,UAAU,mEACVyN,MAAOoR,EACLqf,EAAY1b,gBAAgBrhB,aAG7B0d,EACCqf,EAAY1b,gBAAgBrhB,mBAU9C,yBAAKnB,UAAU,qBACb,kBAAC,KAAD,CACE6D,KAAK,UACLuO,SAAS,SACTzL,QA5SF,SAACqK,GACnB,GACEktB,EAAYv4B,MACZu4B,EAAYv4B,KAAK2L,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAAS,GAClEyvB,EAAY3b,WACZ2b,EAAY3b,UAAUjR,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAC5D,GACFyvB,EAAYnyB,WACZmyB,EAAY1b,iBACZ0b,EAAYr8B,WACZ,CACAwO,GAAU,GACVW,EAAEqB,iBACF,IAAMtO,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjCkC,EAAUmK,KAAOqyB,EAAYr8B,WAAW,IAAIiK,OAAO,cACnDjL,EAAO,CACXc,SAAUkK,KAAOqyB,EAAYr8B,WAAW,IAAIiK,OAAO,cACnDyW,UAAW2b,EAAY3b,UACvBC,gBAAiB0b,EAAY1b,gBAC7BO,WAAYmb,EAAYnb,WACxBpd,KAAMu4B,EAAYv4B,KAClB9D,WAAYgK,KAAOqyB,EAAYr8B,WAAW,IAAIiK,OAAO,cACrDC,UAAWqN,SAAS8kB,EAAYnyB,WAChC2Z,WAAYtM,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B,GACyB,iBAAvBqZ,GACAmf,EAAYv4B,OAASpC,EAASwB,MAAMY,KAEpC,GAAIy4B,IAAkBF,EAAYnyB,UAChC,GAAI,IAAIH,KAAS,IAAIA,KAAKlK,GACxBk9B,EAAY/9B,OACP,CAEL07B,EAAIQ,KAAK,CACP1wB,YAAa8C,GACb7I,UAHgB,oBAOpBs4B,EAAY/9B,QAIhBwP,GAAU,IA4PQhK,YAAU,cACViD,MAAO,CAAEmX,OAAQ,UjFzZnB,UiF8ZA,kBAAC,KAAD,CACE5c,KAAK,UACLuO,SAAS,SACTzL,QAjQA,SAACqK,GACrB1N,OAAOC,SAAW,2BAiQE8C,YAAU,eAET3B,a,oBCxdjB6G,GAAY7D,IAAZ6D,QAuFOszB,GA5EK,WAClB,OACE,kBAAC,IAAMtmB,SAAP,KACE,kBAAC,IAAMA,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAASA,UAAS,qBAAgB8+B,KAAOC,aACvC,kBAAC,IAAD,CAAK/+B,UAAU,QACb,wBAAIA,UAAU,QlF0EJ,gBkFzEV,yBAAKA,UAAU,mCACb,+BxE0ClB,yLwEvCc,yBAAKA,UAAU,+CACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,QACvB,kBAAC,IAAD,CACEA,UAAU,gCACVyQ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,MAErC,kBAAC,IAAD,CAAKxH,UAAU,aAAasH,KAAM,GAAIC,GAAI,EAAGy3B,GAAI,GAC/C,yBACEh/B,UAAS,6BAAwB8+B,KAAOG,aAA/B,YAA+CH,KAAOI,sBAE/D,0BACEl/B,UAAS,yBAAoB8+B,KAAOv2B,QAEtC,yBAAKvI,UAAU,gCxE0BJ,oCwErBf,kBAAC,IAAD,CAAKA,UAAU,aAAasH,KAAM,GAAIC,GAAI,EAAGy3B,GAAI,GAC/C,yBACEh/B,UAAS,6BAAwB8+B,KAAOG,eAExC,0BAAMj/B,UAAS,mBAAc8+B,KAAOv2B,QACpC,kBAAC,IAAD,CAAM9I,GAAG,qBACP,yBAAKO,UAAU,gCxEgBN,yBwEVf,kBAAC,IAAD,CAAKA,UAAU,aAAasH,KAAM,GAAIC,GAAI,EAAGy3B,GAAI,GAC/C,yBACEh/B,UAAS,6BAAwB8+B,KAAOG,eAExC,0BACEj/B,UAAS,wBAAmB8+B,KAAOv2B,QAErC,kBAAC,IAAD,CAAM9I,GAAG,yBACP,yBAAKO,UAAU,gCxEGN,iC,UyErE/Bm/B,GAAYC,KAAZD,QAiBOE,GAfK,SAAC//B,GACnB,OACE,kBAAC6/B,GAAD,CACEG,OAAO,OACP35B,KAAK,OACLoL,SAAU,SAACnS,GAAD,OAAWU,EAAMyR,SAASnS,KAEpC,uBAAGoB,UAAU,wBACX,0BAAMA,UAAU,sBAElB,uBAAGA,UAAU,mBzE4DiB,oC0ExE5BuL,GAAY7D,IAAZ6D,QA+HOg0B,GArHK,WAAO,IAAD,EACGnxB,oBAAS,GADZ,mBACjBjK,EADiB,KACVkM,EADU,OAEIjC,oBAAS,GAFb,mBAEjBF,EAFiB,KAEToJ,EAFS,OAGAlJ,mBAAS,IAHT,mBAGjBoxB,EAHiB,KAGXC,EAHW,KAIlB/2B,EAAUC,cAyChB,OACE,kBAAC,IAAM4P,SAAP,KACE,kBAAC,IAAMA,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAASA,UAAS,qBAAgB8+B,KAAOC,aACvC,kBAAC,IAAD,CAAK/+B,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,sBACV,kBAAC,KAAWiH,KAAZ,KpF2BM,iBoFzBR,kBAAC,KAAWA,KAAZ,K1EDM,qB0EIV,kBAAC,IAAD,CAAK1G,UAAU,QACb,wBAAIA,UAAU,Q1ELN,kB0EKR,MAEF,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMiO,SAAUC,EAAQ1H,KAAK,SAC1BrC,GACC,kBAAC,KAAD,CACEC,QvEjDM,4BuEkDNP,KAAK,QACL2M,UAAQ,IAGZ,kBAAC,IAAD,CAAKxQ,UAAU,oDACb,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,iBACvB,kBAAC,GAAD,CAAa+Q,SApElB,SAACC,GAChB,IAAI0uB,EAAW1uB,EAAE0uB,SAAS35B,OAAO,GACjC25B,EAAS7yB,SAAQ,SAAU2yB,EAAMzmB,GAC/B,IAAI4mB,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAC7uB,GACfwuB,EAAKM,OAAS9uB,EAAEuF,OAAOwpB,OACvBP,EAAK5+B,SAAW,yBAElB++B,EAAOK,cAAcR,EAAKS,kBAE5BR,EAAQC,IA0D6CF,KAAMA,KAEzC,kBAAC,IAAD,CACEl4B,KAAM,GACNtH,UAAU,sCAEV,kBAAC,KAAD,CAAQ6D,KAAK,OAAO7D,UAAU,aAC5B,0BAAMA,UAAU,4B1ExBN,0B0E6BhB,yBAAKA,UAAU,gBACb,kBAAC,KAAD,CACE6D,KAAK,UACL7D,UAAU,YACV2G,QAvEL,WACf,IACMvG,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpB,GAAIk/B,EAAM,CACR,IAAM3+B,EAAO,CACX2+B,KAAMA,EAAK,GAAGM,QAEhBzvB,GAAU,GACViH,GAAU,GACV5W,IAAMC,KAAKV,EAAW,aAAcY,EAAMT,GAASwD,MAAK,WACtDN,OAAOC,SAAW,iCAGpB8M,GAAU,KpFgDM,UoFQA,kBAAC,KAAD,CACExM,KAAK,YACL7D,UAAU,KACV2G,QA/FL,WACf+B,EAAQK,KAAK,wBAgGQrE,aCnEjB6G,GAAY7D,IAAZ6D,QACA+E,GAAgBC,KAAhBD,YAyZO4vB,GAxZQ,WAAO,IAAD,EACW9xB,mBAAS,CAC7CyF,UAAW,GACXS,SAAU,GACVmL,OAAQ,GACRlf,MAAO,GACP0R,KAAM,GACNsC,OAAQ,GACR4rB,MAAO,GACPC,WAAY,GACZC,KAAM,KAVmB,mBACpBC,EADoB,KACPC,EADO,KAYrB73B,EAAUC,cAZW,EAaAyF,oBAAS,GAbT,mBAapBjK,EAboB,KAabkM,EAba,OAcCjC,oBAAS,GAdV,mBAcpBF,EAdoB,KAcZoJ,EAdY,OAe6BlJ,oBAAS,GAftC,mBAepB0H,EAfoB,KAeE0lB,EAfF,OAgB+BptB,oBAAS,GAhBxC,mBAgBpB4H,EAhBoB,KAgBGylB,EAhBH,KAkBrB+E,EAAqB,SAACxvB,GAC1BuvB,EAAe,eACVD,EADS,gBAEXtvB,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAWtB6hC,EAAqB,SAAC7hC,EAAO+G,GACjC46B,EAAe,eAAKD,EAAN,gBAAoB36B,EAAO/G,MA8E3C,OACE,kBAAC,IAAM2Z,SAAP,KACE,kBAAC,IAAMA,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAASA,UAAS,qBAAgB8+B,KAAOC,aACvC,kBAAC,IAAD,CAAK/+B,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,sBACV,kBAAC,KAAWiH,KAAZ,KrF7EM,iBqF+ER,kBAAC,KAAWA,KAAZ,K3E1GmB,qB2E6GvB,kBAAC,IAAD,CAAK1G,UAAU,QACb,wBAAIA,UAAU,Q3E9GO,oB2EgHvB,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAKA,UAAU,oDACb,kBAAC,IAAD,CAAMiO,SAAUC,EAAQ1H,KAAK,SAC3B,kBAAC,KAAD,CAAMxG,UAAU,gCAAgC2F,KAAK,IAClDxB,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CACEtC,QAASwK,GACT/K,KAAK,QACL2M,UAAQ,KAId,kBAAC,IAAD,CAAKlJ,KAAM,IACT,kBAAC,IAAD,CAAKmJ,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIpJ,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAKF,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAOlE,GACPzL,MAAO0hC,EAAYzsB,WAEnB,kBAAC,KAAKnN,KAAN,CACE1G,UAAU,WACV2F,KAAK,aAEL,kBAAC,IAAD,CACE3F,UAAU,gBACV2J,GAAG,YACHkH,QAAQ,YACRE,SAAU,SAACC,GAAD,OAAOwvB,EAAmBxvB,IACpCI,aAAa,WAKrB,kBAAC,IAAD,CAAK9J,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAOjE,GACP1L,MAAO0hC,EAAYhsB,UAEnB,kBAAC,KAAK5N,KAAN,CACE1G,UAAU,WACV2F,KAAK,WACL+L,eAAe,WAEf,kBAAC,IAAD,CACE1R,UAAU,gBACV2J,GAAG,WACHkH,QAAQ,WACRE,SAAU,SAACC,GAAD,OAAOwvB,EAAmBxvB,IACpCI,aAAa,WAKrB,kBAAC,IAAD,CAAK9J,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,M5E9OX,Q4E+OW3P,MAAO0hC,EAAY//B,OAEnB,kBAAC,KAAKmG,KAAN,CACE1G,UAAU,WACV2F,KAAK,QACL+L,eAAe,WAEf,kBAAC,IAAD,CACE7N,KAAK,QACL7D,UAAU,gBACV2J,GAAG,QACHkH,QAAQ,QACRjS,MAAO0hC,EAAY//B,MACnBwQ,SAAU,SAACC,GAAD,OAAOwvB,EAAmBxvB,IACpCtC,OAAQ,SAACsC,GAAD,OAhKb,SAACA,GACnB,eACDsF,KAAKtF,EAAEuF,OAAO3X,OAGpB48B,GAAwB,GAFxBA,GAAwB,GA6JqBhlB,CAAqBxF,IACpCI,aAAa,QAEd0E,GACC,kBAAC,KAAD,CACE1R,QAAS0K,GACTjL,KAAK,QACL2M,UAAQ,OAMlB,kBAAC,IAAD,CACElJ,KAAM,GACNC,GAAI,EACJvH,UAAU,0BAEV,kBAAC,GAAD,CACEuO,MAAO/D,GACP5L,MAAO0hC,EAAY/rB,QAEnB,kBAAC,KAAK7N,KAAN,CACE1G,UAAU,WACV2F,KAAK,SACL+L,eAAe,WAEf,kBAAC,KAAD,CACE+E,QAAQ,KACR9M,GAAG,SACHkH,QAAQ,SACRjS,MAAO0hC,EAAY/rB,OACnBxD,SAnNb,SAACwD,GACpBgsB,EAAe,eACVD,EADS,CAEZ/rB,OAAQA,MAiNsB7F,OAxLX,SAACsC,GAElBsvB,EAAY/rB,OAAO9F,OAAS,IADpB,SACgC6H,KAAKtF,EAAEuF,OAAO3X,OACxD68B,GAAyB,GAEzBA,GAAyB,IAoLKrqB,aAAa,QAEd4E,GACC,kBAAC,KAAD,CACE5R,QAAS2K,GACTlL,KAAK,QACL2M,UAAQ,OAMlB,kBAAC,IAAD,CAAKlJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MAAO9D,GACP7L,MAAO0hC,EAAY7gB,QAEnB,kBAAC,KAAK/Y,KAAN,CACE1G,UAAU,WACV2F,KAAK,SACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QxEtST,0BwE0SK,kBAAC,KAAD,CACEpE,UAAU,sBACV6Q,QAAQ,SACRiB,SAAU,SAAClT,GAAD,OACR6hC,EAAmB7hC,EAAO,YAG5B,kBAACmT,OAAD,CAAQnT,MAAM,KAAK0F,GACnB,kBAACyN,OAAD,CAAQnT,MAAM,KtFrUnB,iBsF0UH,kBAAC,IAAD,CAAK0I,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAOhE,GAAM3L,MAAM,QAC7B,kBAAC,KAAK8H,KAAN,CACE1G,UAAU,4CACVic,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS8K,MAIb,kBAAC,GAAD,CACElP,UAAU,SACV2F,KAAK,OACL/G,MAAO0hC,EAAYruB,KACnBlB,SAAU,SAACkB,GAAD,OAjQT,SAACA,EAAMtM,GACxC46B,EAAe,eAAKD,EAAN,gBAAoB36B,EAAOsM,KAiQPyuB,CAA2BzuB,EAAM,SAEnCC,aAhQb,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,aAoQrB,kBAAC,IAAD,CAAK7K,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,M5E3VL,c4E4VK3P,MAAO0hC,EAAYD,MAEnB,kBAAC,KAAK35B,KAAN,CACE1G,UAAU,WACV2F,KAAK,OACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QxEzUN,6BwE6UE,kBAAC,KAAD,CACEpE,UAAU,sBACV6Q,QAAQ,OACRiB,SAAU,SAAClT,GAAD,OACR6hC,EAAmB7hC,EAAO,UAG5B,kBAACmT,OAAD,CAAQnT,MAAM,KtF7WnB,mBsF8WK,kBAACmT,OAAD,CAAQnT,MAAM,KtF7WzB,iBsFkXG,kBAAC,IAAD,CAAK0I,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,MAChB,kBAAC,KAAK7H,KAAN,CAAWf,KAAK,MACd,kBAAC,IAAD,CACE3F,UAAU,gBACV6Q,QAAQ,UAKhB,kBAAC,IAAD,CAAKvJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,MAChB,kBAAC,KAAK7H,KAAN,CAAWf,KAAK,MACd,kBAAC,IAAD,CACE3F,UAAU,gBACV6Q,QAAQ,UAKhB,kBAAC,IAAD,CAAKvJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,MAChB,kBAAC,KAAK7H,KAAN,CAAWf,KAAK,MACd,kBAAC,IAAD,CACE3F,UAAU,gBACV6Q,QAAQ,UAKhB,kBAAC,IAAD,CAAKvJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,MAChB,kBAAC,KAAK7H,KAAN,CAAWf,KAAK,MACd,kBAAC,IAAD,CACE3F,UAAU,gBACV6Q,QAAQ,UAKhB,kBAAC,IAAD,CAAKvJ,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CAAYuO,MAAM,MAChB,kBAAC,KAAK7H,KAAN,CAAWf,KAAK,MACd,kBAAC,IAAD,CACE3F,UAAU,gBACV6Q,QAAQ,YAQpB,kBAAC,KAAKnK,KAAN,KACE,kBAAC,KAAD,CACE7C,KAAK,UACLuO,SAAS,SACTpS,UAAU,OACV2G,QArUT,WACf,IACMvG,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpB,GACEggC,EAAYzsB,WACZysB,EAAYhsB,UACZgsB,EAAY//B,OACZ+/B,EAAY/rB,QACZ+rB,EAAY7gB,QACZ6gB,EAAYD,MACZC,EAAYruB,KACZ,CACA,IAAMpR,EAAO,CACXK,WAAYo/B,EAAYzsB,UACxBxS,UAAWi/B,EAAYhsB,SACvB/T,MAAO+/B,EAAY//B,MACnB0B,cAAe,IAAMq+B,EAAY/rB,OACjC5R,eAAqC,MAArB29B,EAAYD,KAAe,EAAI,EAC/Cx9B,YAAa,EACb89B,cAAoC,MAArBL,EAAYD,KAAe,EAAI,EAC9Cx+B,WAAYy+B,EAAYruB,KAAK,GACzBpG,KAAOy0B,EAAYruB,KAAK,IAAInG,OAAO,cACnC,GACJnK,SAAU2+B,EAAYruB,KAAK,GACvBpG,KAAOy0B,EAAYruB,KAAK,IAAInG,OAAO,cACnC,GACJC,UAAWqN,SAASknB,EAAY7gB,SAElCpP,GAAU,GACViH,GAAU,GACV5W,IAAMC,KAAKV,EAAW,cAAeY,EAAMT,GAASwD,MAAK,WACvDN,OAAOC,SAAW,iCAGpB8M,GAAU,KrFtGI,QqFsYM,kBAAC,KAAD,CAAQxM,KAAK,YAAY8C,QA5RhC,WACf+B,EAAQK,KAAK,wBA4RYrE,e,6DC7Ydk8B,GA5CK,SAAC,GAQd,IAPLpB,EAOI,EAPJA,KACAqB,EAMI,EANJA,oBACAC,EAKI,EALJA,mBACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,uBACAhuB,EAEI,EAFJA,aACAiuB,EACI,EADJA,KAEA,OACE,oCACE,kBAAC,KAAD,CACEC,SAAS,UACTxB,SAAUF,EACVzuB,SAAU,SAACnS,GAAD,OAAWiiC,EAAoBjiC,EAAO,iBAChDuiC,aAAc,SAACviC,GAAD,OAAWkiC,EAAmBliC,EAAO,iBACnDwiC,SAAU,SAACxiC,GAAD,OAAWmiC,EAAeniC,EAAO,wBAC3CyiC,UAAW,SAACziC,GAAD,OAAWoiC,EAAuBpiC,IAC7CoB,UAAU,8BACVs/B,OAAO,yGAEP,kBAAC,KAAD,CAAQz7B,KAAK,OAAO7D,UAAU,aAC5B,0BAAMA,UAAU,0BtFgFI,uBsF5ExB,kBAAC,KAAD,CACEA,UAAU,iBACVuS,QAAS0uB,EAAKK,eACd7zB,MAAOwzB,EAAKM,aACZhuB,UAAQ,EACRF,KAAM,SAACzU,GAAD,OAAWoU,EAAapU,IAC9B4U,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,OtFmEwB,SsFjExB,yBAAK3T,IAAI,UAAUuJ,MAAO,CAAEqE,MAAO,QAAU9N,IAAKohC,EAAKO,kB,qBCwHhDC,G,2MA5Jb18B,MAAQ,CACN28B,KAAM,GACNC,cAAc,EACdrd,WAAY,GACZsd,gBAAiB,EACjBC,eAAgB,I,EAGlBC,YAAc,SAACC,GACb,IAAML,EAAO,EAAK38B,MAAM28B,KAAKt0B,QAAO,SAAC40B,GAAD,OAASA,IAAQD,KACrD,EAAKziC,MAAM2iC,wBAAwBP,GACnC,EAAK55B,SAAS,CAAE45B,U,EAQlBQ,UAAY,WACV,EAAKp6B,SAAS,CAAE65B,cAAc,IAAQ,kBAAM,EAAKQ,MAAM9zB,Y,EAGzD+zB,kBAAoB,SAACpxB,GACnB,EAAKlJ,SAAS,CAAEwc,WAAYtT,EAAEuF,OAAO3X,S,EAGvCyjC,mBAAqB,WAAO,IAClB/d,EAAe,EAAKvf,MAApBuf,WACFod,EAAS,EAAK38B,MAAd28B,KACFpd,IAA4C,IAA9Bod,EAAK1oB,QAAQsL,KAC7Bod,EAAI,uBAAOA,GAAP,CAAapd,KAEnB,EAAKxc,SAAS,CACZ45B,OACAC,cAAc,EACdrd,WAAY,KAEd,EAAKhlB,MAAM2iC,wBAAwBP,I,EAGrCY,sBAAwB,SAACtxB,GACvB,EAAKlJ,SAAS,CAAE+5B,eAAgB7wB,EAAEuF,OAAO3X,S,EAG3C2jC,uBAAyB,WACvB,EAAKz6B,UAAS,YAA+C,IAA5C45B,EAA2C,EAA3CA,KAAME,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eAC/BW,EAAO,aAAOd,GAGpB,OAFAc,EAAQZ,GAAkBC,EAEnB,CACLH,KAAMc,EACNZ,gBAAiB,EACjBC,eAAgB,Q,EAKtBY,aAAe,SAACN,GACd,EAAKA,MAAQA,G,EAGfO,iBAAmB,SAACP,GAClB,EAAKQ,UAAYR,G,mFAhDjB,IAAMS,EAAavjC,KAAKC,MAAMujC,aAC9BxjC,KAAKyI,SAAS,CAAE45B,KAAMkB,M,+BAkDd,IAAD,SAOHvjC,KAAK0F,MALP28B,EAFK,EAELA,KACAC,EAHK,EAGLA,aACArd,EAJK,EAILA,WACAsd,EALK,EAKLA,eACAC,EANK,EAMLA,eAEF,OACE,oCACGH,EAAKjpB,KAAI,SAACupB,EAAKjpB,GACd,GAAI6oB,IAAmB7oB,EACrB,OACE,kBAAC,IAAD,CACEqC,IAAK,EAAKsnB,iBACVhkC,IAAKsjC,EACLx7B,KAAK,QACLxG,UAAU,YACVpB,MAAOijC,EACP9wB,SAAU,EAAKuxB,sBACf5zB,OAAQ,EAAK6zB,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYf,EAAIvzB,OAAS,GAEzBu0B,EACJ,kBAAC,KAAD,CACEhjC,UAAS,UAAK8+B,KAAOmE,UACrBvkC,IAAKsjC,EACL/O,UAAW,EAAK3zB,MAAMyX,SACtBmc,QAAS,kBAAM,EAAK4O,YAAYE,KAEhC,0BACEkB,cAAe,SAAClyB,GAEd,EAAKlJ,SACH,CAAE85B,eAAgB7oB,EAAO8oB,eAAgBG,IACzC,WACE,EAAKW,UAAUt0B,WAGnB2C,EAAEqB,mBAIH0wB,EAAS,UAAMf,EAAIj8B,MAAM,EAAG,IAAnB,OAA8Bi8B,IAI9C,OAAOe,EACL,kBAAC,KAAD,CAASt1B,MAAOu0B,EAAKtjC,IAAKsjC,GACvBgB,GAGHA,KAGHrB,GACC,kBAAC,IAAD,CACEvmB,IAAK/b,KAAKojC,aACV5+B,KAAK,OACL2C,KAAK,QACLxG,UAAU,YACVpB,MAAO0lB,EACPvT,SAAU1R,KAAK+iC,kBACf1zB,OAAQrP,KAAKgjC,mBACbS,aAAczjC,KAAKgjC,qBAGvB,kBAAC,IAAD,CAAK/6B,KAAM,GAAItH,UAAU,QACvB,kBAAC,KAAD,CAAK2G,QAAStH,KAAK6iC,UAAWliC,UAAS,UAAK8+B,KAAOqE,UACjD,kBAAC,KAAD,CACEt/B,KAAK,OACL7D,UAAU,YACV2G,QAAStH,KAAKyJ,UACdiO,SAAU1X,KAAKC,MAAMyX,UAErB,0BAAM/W,UAAU,yBvF5CJ,qB,GuFvGAZ,a,iDCkNXgkC,G,YAhMb,WAAY9jC,GAAQ,IAAD,8BACjB,4CAAMA,KAQRwJ,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,KAXM,EAenBI,SAAW,WACT,EAAK7K,SAAS,CACZyK,SAAS,IAEX,EAAKjT,MAAM+jC,aAnBM,EAsBnBrwB,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,KAxBM,EA4BnB+wB,kBAAoB,SAACt/B,GACnB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QA7B5B,EAgCnBoxB,gBAAkB,SAACv/B,GACjB,OAAI,EAAK1E,MAAMkkC,SAASC,cACfz/B,GAAWA,EAAU6H,KAAO,EAAKvM,MAAMkkC,SAASC,eAEhDz/B,GAAWA,EAAU6H,OAASsG,QAAQ,QApC9B,EAwCnBuxB,MAAQ,SAAC1jB,EAAO2jB,GAEd,IADA,IAAM5D,EAAS,GACNza,EAAItF,EAAOsF,EAAIqe,EAAKre,IAC3Bya,EAAOh3B,KAAKuc,GAEd,OAAOya,GA7CU,EAgDnB6D,kBAAoB,SAAC3xB,GACnB,EAAK3S,MAAMukC,gCAAgC5xB,EAAM,kBAjDhC,EAoDnB6xB,gBAAkB,SAAC7xB,GACjB,EAAK3S,MAAMykC,8BAA8B9xB,EAAM,gBArD9B,EAwDnB+xB,kBAAoB,SAACC,GACC,IAAIr4B,KACNq4B,EAChB,EAAKn8B,SAAS,CAAEo8B,gBAAgB,KAEhC,EAAKp8B,SAAS,CAAEo8B,gBAAgB,IAChC,EAAK5kC,MAAM6kC,gCAAgCF,EAAM,mBA9DlC,EAkEnBG,gBAAkB,SAACH,GACG,IAAIr4B,KACNq4B,EAChB,EAAKn8B,SAAS,CAAEu8B,cAAc,KAE9B,EAAKv8B,SAAS,CAAEu8B,cAAc,IAC9B,EAAK/kC,MAAMglC,8BAA8BL,EAAM,iBAtEjD,EAAKl/B,MAAQ,CACXwN,SAAS,EACT2xB,gBAAgB,EAChBG,cAAc,GALC,E,sEA4ET,IAAD,OACP,OACE,oCACE,kBAAC,KAAD,CAAQxgC,KAAK,UAAU7D,UAAU,UAAU2G,QAAStH,KAAKyJ,WxFzFzC,YwF4FhB,kBAAC,KAAD,CACE2E,MxFxFkB,ewFyFlB8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjBzT,UAAW,oBACX6N,SAAU,iBAEZ6F,OxFpGa,UwFqGbC,WAAYjP,GAEZ,kBAAC,KAAD,CAAM1E,UAAU,iCACd,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,cACvB,yBAAKA,UAAU,mB9E/FE,sC8EiGf,0BAAMA,UAAU,6BACb,IACAX,KAAKC,MAAMkkC,SAASe,UAJzB,QASA,kBAAC,GAAD,CAAYh2B,M/E9GO,oB+E8GmB3P,MAAM,SAC1C,kBAAC,KAAK8H,KAAN,CACEf,KAAK,QACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS8K,MAIb,kBAAC,KAAD,cACEtQ,MAAOS,KAAKC,MAAMkkC,SAASC,cAC3BvxB,aAAc7S,KAAKikC,kBACnBvyB,SAAU,SAACkB,GAAD,OAAU,EAAK2xB,kBAAkB3xB,IAC3CjS,UAAU,QACV2F,KAAK,SALP,YAMY,aAEXtG,KAAK0F,MAAMm/B,gBACV,kBAAC,KAAD,CAAO9/B,QAASgL,GAAWvL,KAAK,QAAQ2M,UAAQ,IAElD,kBAAC,KAAD,CAAyBg0B,MAAOC,MAC9B,kBAAC,KAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAAC,KAAD,CACElkB,OAAO,SACP9W,GAAG,eACH4E,M/EtIS,oB+EuIT3P,MAAOS,KAAKC,MAAMkkC,SAASoB,cAC3B7zB,SAAU,SAACkzB,GAAD,OAAU,EAAKD,kBAAkBC,IAC3CY,oBAAqB,CACnB,aAAc,qBAO1B,kBAAC,GAAD,CAAYt2B,M/ElJK,kB+EkJmB3P,MAAM,SACxC,kBAAC,KAAK8H,KAAN,CACEf,KAAK,QACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS8K,MAIb,kBAAC,KAAD,cACEtQ,MAAOS,KAAKC,MAAMkkC,SAASsB,YAC3B5yB,aAAc7S,KAAKkkC,gBACnBxyB,SAAU,SAACkB,GAAD,OAAU,EAAK6xB,gBAAgB7xB,IACzCjS,UAAU,QACV2F,KAAK,SALP,YAMY,aAEXtG,KAAK0F,MAAMs/B,cACV,kBAAC,KAAD,CAAOjgC,QAASgL,GAAWvL,KAAK,QAAQ2M,UAAQ,IAElD,kBAAC,KAAD,CAAyBg0B,MAAOC,MAC9B,kBAAC,KAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAAC,KAAD,CACElkB,OAAO,SACP9W,GAAG,eACH4E,M/E1KO,kB+E2KP3P,MAAOS,KAAKC,MAAMkkC,SAASuB,YAC3Bh0B,SAAU,SAACkzB,GAAD,OAAU,EAAKG,gBAAgBH,IACzCY,oBAAqB,CACnB,aAAc,6B,GAlLZzlC,a,+BCVd,IACV4lC,uBAV2B,SAAA/yB,GAAI,OAAIpG,KAAOoG,EAAM,cAAcnG,OAAO,0BAWrEm5B,eAVmB,SAAAhzB,GAAI,OAAIpG,KAAOoG,GAAMnG,OAAO,aAW/Co5B,kBAVsB,SAAAjzB,GAAI,OAAIpG,KAAOoG,GAAMnG,OAAO,eAWlDq5B,aAViB,SAAAlzB,GAAI,OAAIpG,KAAOoG,GAAMnG,OAAO,UAW7Cs5B,iBAVqB,SAAAnzB,GAAI,OAAIpG,KAAOoG,GAAMnG,OAAO,eAWjDu5B,iBAVqB,SAAApzB,GAAI,OAAIpG,KAAOoG,GAAMnG,OAAO,eAWjDA,OARW,SAAAmG,GAAI,OAAIpG,KAAOoG,GAAMnG,WCgB9Bw5B,GAAc,CAClB9+B,KAAM,GACNopB,MAAO,EACP2V,QAAQ,EACR3mC,MAAO,EACP4K,MAAO,UACPg8B,YAAa,UACbz0B,SAAU,SAAC00B,GACTr+B,QAAQC,IAAR,kCAAuCo+B,MAQtBt8B,IAAbuX,S,IACAnV,GAAY7D,IAAZ6D,QACJrL,GAAWC,EAAQ,IAiTRulC,GAhTK,SAAC,GAOd,IAAD,EANJzE,EAMI,EANJA,KACA0E,EAKI,EALJA,aACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,QACAhlC,EAEI,EAFJA,KACAilC,EACI,EADJA,eACI,EACoC13B,oBAAS,GAD7C,gCAEwBA,oBAAS,IAFjC,mBAEGF,EAFH,KAEWoJ,EAFX,KAGY3O,cAqJhB,OACE,oCACE,kBAAC,IAAM4P,SAAP,KACE,kBAAC,IAAMA,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMA,IAC5B,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAKb,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,yBACV,kBAAC,KAAWiH,KAAZ,K1F7NH,U0F+NC,kBAAC,KAAWA,KAAZ,K1FnNM,kB0FsNV,kBAAC,IAAD,CAAK1G,UAAU,gCACb,wBAAIA,UAAU,Q1FvNN,gB0FyNR,kBAAC,IAAD,CACEsH,KAAM,GACNE,GAAI,GACJxH,UAAU,mDAGd,kBAAC,IAAD,CAAMiO,SAAUC,EAAQ1H,KAAK,SAC3B,kBAAC,IAAD,CACEc,KAAM,GACNtH,UAAS,4BAAuB8+B,KAAOiH,YAEvC,4BACG9E,EAAKsD,SACN,kBAAC,KAAD,CAASj+B,UAAU,MAAMmH,MAAOwzB,EAAK+E,cACnC,0BAAMhmC,UAAU,kCAKtB,yBAAKA,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,uBAAGtH,UAAU,mBAAmBihC,EAAKgF,cACrC,kBAAC,IAAD,CAAKjmC,UAAU,cAAc+W,UAAU,GACrC,yBAAK/W,UAAU,uCACc,MAA1BihC,EAAKiF,iBACJjF,EAAK4B,aAAapqB,KAAI,SAAC7Z,GAAD,OACpB,kBAAC,KAAD,KAAQA,MAEkB,MAA1BqiC,EAAKiF,iBACPjF,EAAK4B,aAAapqB,KAAI,SAAC7Z,GAAD,OACpB,kBAAC,KAAD,KAAWA,MAEe,MAA1BqiC,EAAKiF,iBACP,kBAAC,KAAD,iBACMZ,GADN,CAEE1mC,MAAOqiC,EAAKkF,mBACZpvB,UAAU,KAEV,OAGR,kBAAC,IAAD,CAAK/W,UAAU,QACb,yBAAKusB,MAAM,wBACT,yBAAKA,MAAM,6BACT,0BAAMA,MAAM,mBACV,yBAAKA,MAAM,wBACT,kBAAC6Z,GAAA,EAAD,OAEF,0BACE7Z,MAAM,4BACN9e,MAAM,gBAELwzB,EAAKoF,cACNpF,EAAKoF,aAAa,GAChB,uBACEnhC,KAAM+7B,EAAKoF,aAAa,GAAGvG,OAC3BwG,SACErF,EAAKoF,aAAa,GAAGpG,cAClBt6B,MAIHs7B,EAAKoF,aAAa,GAAGpG,cAClBt6B,MAGL,MAEN,0BAAM4mB,MAAM,qCACV,4BACE1oB,KAAK,SACL0oB,MAAM,oBAWxB,yBAAKvsB,UAAU,aACb,kBAAC,MAAD,GACE6D,KAAK,aADP,sBAEO,aAFP,0BAGW,UAHX,2BAIY,QAJZ,0BA/OK,WACvB+hC,EAAW3E,MA8OO,GAOGx8B,GAEH,kBAAC8hC,GAAD,CACE/C,SAAUvC,EACV4C,gCA1QkB,SAAC5xB,EAAMtM,GAC7CggC,EAAa1zB,EAAMtM,IA4QCo+B,8BAzQgB,SAAC9xB,EAAMtM,GAC3CggC,EAAa1zB,EAAMtM,IA2QCw+B,gCAxQkB,SAACF,EAAMt+B,GAC7CggC,EAAa1B,EAAMt+B,IA0QC2+B,8BAvQgB,SAACL,EAAMt+B,GAC3CggC,EAAa1B,EAAMt+B,IAyQC09B,UAjPJ,WAAO,IAAD,EAChBt/B,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjC0Z,EAAQlP,KACdsN,GAAU,GACV,IAAMkvB,EAAc,GAChB3lC,EAAO,GACXogC,EAAK4B,aAAapqB,KAAI,SAAC7Z,GACrB4nC,EAAYz9B,KAAK,CAAE09B,YAAa7nC,OAGhCiC,EADEglC,EACK,CACLa,YAAa,CACXj5B,MAAOwzB,EAAKsD,SACZhiB,UAAW0e,EAAK+E,aAChBW,MACE1F,EAAKoF,cAAgBpF,EAAKoF,aAAa,GACnCpF,EAAKoF,aAAa,GAAGvG,OACrB,GACN8G,qBAAsB3F,EAAKznB,WAAa,EAAI,EAC5CqtB,uBAAwB5F,EAAK6F,cACzB1tB,SAAS6nB,EAAK6F,eACd,EACJC,WAAYjB,EACZkB,mBAAoB5tB,SAAS6nB,EAAKiF,kBAClCe,SAAUhG,EAAKgF,aACfpkC,WAAYqlC,GAAW7B,iBAAiBpE,EAAKwC,eAC7C0D,WAAYD,GAAWjC,eAAehE,EAAK2D,eAC3CjjC,SAAUulC,GAAW7B,iBAAiBpE,EAAK6D,aAC3CsC,SAAUF,GAAWjC,eAAehE,EAAK8D,aACzC7iB,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B6e,OAAQiiB,GAE6B,KAA9B,UAAAvF,EAAKoF,oBAAL,eAAmB53B,QACrB,CACLi4B,YAAa,CACXj5B,MAAOwzB,EAAKsD,SACZhiB,UAAW0e,EAAK+E,aAChBY,qBAAsB3F,EAAKznB,WAAa,EAAI,EAC5CqtB,uBAAwB5F,EAAK6F,cACzB1tB,SAAS6nB,EAAK6F,eACd,EACJE,mBAAoB5tB,SAAS6nB,EAAKiF,kBAClCe,SAAUhG,EAAKgF,aACfpkC,WAAYqlC,GAAW7B,iBAAiBpE,EAAKwC,eAC7C0D,WAAYD,GAAWjC,eAAehE,EAAK2D,eAC3CjjC,SAAUulC,GAAW7B,iBAAiBpE,EAAK6D,aAC3CsC,SAAUF,GAAWjC,eAAehE,EAAK8D,aACzC7iB,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B6e,OAAQiiB,GAGH,CACLE,YAAa,CACXj5B,MAAOwzB,EAAKsD,SACZhiB,UAAW0e,EAAK+E,aAChBzW,SACE0R,EAAKoF,cAAgBpF,EAAKoF,aAAa,GACnCpF,EAAKoF,aAAa,GAAGvG,OACrB,GACNuH,cAAevB,EACfc,qBAAsB3F,EAAKznB,WAAa,EAAI,EAC5CqtB,uBAAwB5F,EAAK6F,cACzB1tB,SAAS6nB,EAAK6F,eACd,EACJE,mBAAoB5tB,SAAS6nB,EAAKiF,kBAClCe,SAAUhG,EAAKgF,aACfpkC,WAAYqlC,GAAW7B,iBAAiBpE,EAAKwC,eAC7C0D,WAAYD,GAAWjC,eAAehE,EAAK2D,eAC3CjjC,SAAUulC,GAAW7B,iBAAiBpE,EAAK6D,aAC3CsC,SAAUF,GAAWjC,eAAehE,EAAK8D,aACzC7iB,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B6e,OAAQiiB,GAGZ,IAAMpmC,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGpBI,IACGC,KAAKV,EAAW,QAASY,EAAMT,GAC/BwD,MAAK,WACJ0T,GAAU,GACVhU,OAAOC,SAAW,2BAEnB4P,OAAM,SAAChP,GACNmT,GAAU,mBCjJZguB,GAAc,CAClB9+B,KAAM,GACNopB,MAAO,EACP2V,QAAQ,EACR3mC,MAAO,EACP4K,MAAO,UACPg8B,YAAa,UACbz0B,SAAU,SAAC00B,GACTr+B,QAAQC,IAAR,kCAAuCo+B,MAInC/kB,GAAavX,IAAbuX,SACAnV,GAAY7D,IAAZ6D,QAunBO+7B,GArnBI,SAAChoC,GAAW,IAAD,MACtBoJ,EAAUC,cADY,EAGJyF,mBAAS,CAC/Bm2B,SAAU,GACVyB,aAAc,GACdK,aAAc,GACd7sB,YAAY,EACZstB,cAAe,GACfb,aAAc,GACdC,iBAAkB,GAClBC,mBAAoB,EACpB1C,cAAe,GACfqB,YAAa,GACbgB,eAAgB,GAChBlB,cAAe,IAAIh5B,KACnBm5B,YAAa,IAAIn5B,KACjBi3B,aAAc,GACd0E,qBAAqB,EACrBjG,gBAAgB,EAChBE,aAAc,GACdD,aAAc,KArBY,mBAGrBN,EAHqB,KAGfuG,EAHe,OAuBMp5B,mBAAS,IAvBf,mBAuBrBq5B,EAvBqB,KAuBVC,EAvBU,OAwBDt5B,oBAAS,GAxBR,mBAwBrBjK,EAxBqB,KAwBdkM,EAxBc,OAyBUjC,oBAAS,GAzBnB,mBAyBrBu5B,EAzBqB,KAyBRC,EAzBQ,OA0BSx5B,oBAAS,GA1BlB,mBA0BrBy5B,EA1BqB,KA0BTC,EA1BS,OA2BW15B,oBAAS,GA3BpB,mBA2BrB25B,EA3BqB,KA2BRC,EA3BQ,OA4BE55B,oBAAS,GA5BX,mBA4BrBy3B,EA5BqB,KA4BZoC,EA5BY,OA6BgB75B,mBAAS,IA7BzB,mBA6BrB03B,EA7BqB,KA6BLoC,EA7BK,OA8Bbh4B,KAAKC,UAAbC,EA9BqB,oBAuFtB+3B,EAAiB,SAACn3B,GACtBw2B,EAAQ,eAAKvG,EAAN,gBAAajwB,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UASvCwpC,GAAqB,SAACxpC,EAAO+G,GACnB,MAAV/G,GAA0B,qBAAT+G,EAPA,SAAC/G,GAClB4a,YAAwB,MAAV5a,GAAuC,KAAtBqiC,EAAK6F,eACtCgB,GAAe,GAMfO,CAAezpC,GAEfkpC,GAAe,GAEjBN,EAAQ,eAAKvG,EAAN,gBAAat7B,EAAO/G,MA8BvBqjC,GAA0B,SAACrjC,GAE/B4oC,EAAQ,eAAKvG,EAAN,gBADI,eACgBriC,MAqBvB0pC,GAAoB,SAACC,GACzB,IAAM1C,EAAU0C,EAASrhC,SAAS,SAEhC+gC,IADEpC,IAoBA2C,GAAY,SAAChJ,GACjB,OAAO,IAAIv7B,SAAQ,SAACC,EAASG,GAC3B,IAAMs7B,EAAS,IAAIC,WACnBD,EAAOK,cAAcR,GACrBG,EAAOE,OAAS,kBAAM37B,EAAQy7B,EAAOI,SACrCJ,EAAOnI,QAAU,SAACrzB,GAAD,OAAWE,EAAOF,QA+EvC,OACE,kBAAC,IAAMoU,SAAP,KACIovB,EAgWA,kBAAC,GAAD,CACE1G,KAAMA,EACN0E,aAhgBa,SAAC1zB,EAAMtM,GAC1B6hC,EAAQ,eAAKvG,EAAN,gBAAat7B,EAAOsM,MAggBrB2zB,WA7fW,SAAChnC,GAClBgpC,GAAe,GACfJ,EAAQ,eACHvG,EADE,CAELsD,SAAU3lC,EAAM2lC,SAChByB,aAAcpnC,EAAMonC,aACpBK,aAAcznC,EAAMynC,aACpB7sB,WAAY5a,EAAM4a,WAClBstB,cAAeloC,EAAMkoC,cACrBb,aAAcrnC,EAAMqnC,aACpBC,iBAAkBtnC,EAAMsnC,iBACxBC,mBAAoBvnC,EAAMunC,mBAC1B1C,cAAe7kC,EAAM6kC,cACrBqB,YAAalmC,EAAMkmC,YACnBjC,aAAcjkC,EAAMikC,gBAGtBzyB,EAAKmgB,eAAe,CAClByV,aAAcpnC,EAAMonC,aACpBC,aAAcrnC,EAAMqnC,gBA2ehBJ,QAASA,EACTC,eAAgBA,EAChBjlC,KAAMvB,IArWR,kBAAC,IAAMiZ,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMvB,IAC5B,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAKU,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,yBACV,kBAAC,KAAWiH,KAAZ,K3F7VH,U2F+VC,kBAAC,KAAWA,KAAZ,K3FzUK,iB2F4UT,kBAAC,IAAD,CAAK1G,UAAU,QACb,wBAAIA,UAAU,Q3F7UP,gB2F+UT,yBAAKA,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,KAAD,CACEtH,UAAU,gCACV2F,KAAK,iBACLyK,KAAMA,GAELjM,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CACEtC,QAASwK,GACT/K,KAAK,QACL2M,UAAQ,KAId,kBAAC,IAAD,CAAKlJ,KAAM,IACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,KAAM,GAAIC,GAAI,GAAIvH,UAAU,cAC/B,kBAAC,GAAD,CACEuO,M3FnRR,a2FoRQ3P,MAAOqiC,EAAKsD,UAEZ,kBAAC,GAAD,CACEnlB,WAAS,EACT/N,UAAW,GACXR,QAAQ,YACRjS,MAAOqiC,EAAKsD,SACZ56B,GAAG,WACHoH,SAAU,SAACC,GAAD,OAAOm3B,EAAen3B,IAChCtC,OAAQ,SAACsC,GAAD,OAzEd,SAACA,GAC3B,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IACGC,KAAKV,EAAW,aAAc,CAAEwN,MAAOuD,EAAEuF,OAAO3X,OAASwB,GACzDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACN6mC,EAAax2B,EAAIrQ,KAAK,OA4DmB4nC,CAAoBz3B,IACnCI,aAAa,MACbpR,UAAS,mBAAc8+B,KAAO4J,eAGjB,kBAAdjB,GACCxG,EAAKsD,SACFjzB,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChCwyB,EAAKsD,SAAS91B,OAAS,GACrB,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGL,gBAAbi2B,GACC,kBAAC,KAAD,CACErjC,Q9EtXpC,oF8EuXoCP,KAAK,QACL2M,UAAQ,MAKhB,kBAAC,IAAD,CAAKlJ,KAAM,GAAIC,GAAI,GAAIvH,UAAU,cAC/B,kBAAC,GAAD,CACEuO,MlFhZP,ckFiZO3P,MAAOqiC,EAAK+E,cAEZ,kBAAC,KAAKt/B,KAAN,CACE1G,UAAU,WACV2F,KAAK,eACLgE,GAAG,eACH+H,eAAe,WAEf,kBAAC,IAAD,CACE1R,UAAU,gBACV6Q,QAAQ,WACRlH,GAAG,eACHhE,KAAK,eACL/G,MAAOqiC,EAAK+E,aACZ50B,aAAa,MACbC,UAAW,IACXN,SAAU,SAACC,GAAD,OAAOm3B,EAAen3B,SAKxC,kBAAC,IAAD,CAAK1J,KAAM,GAAItH,UAAU,mBACvB,4B3F5UV,U2F6UU,kBAAC,KAAK0G,KAAN,CACEf,KAAK,SACL3F,UAAU,eAEV,kBAAC,GAAD,CACEw/B,KAAMyB,EAAKoF,aACXxF,oBA3ON,SAACjiC,EAAO+G,GACR,YAAtB/G,EAAM4gC,KAAK/f,QACbuoB,GAAgB,GAElB,IAAItI,EAAW9gC,EAAM8gC,SAAS35B,OAAO,GACrCuiC,GAAkB1pC,EAAM4gC,KAAK37B,MAC7B67B,EAAS7yB,SAAQ,SAAU2yB,EAAMzmB,GAC/B,IAAI4mB,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAC7uB,GACfwuB,EAAKM,OAAS9uB,EAAEuF,OAAOwpB,OACvBP,EAAK5+B,SAAW,yBAElB++B,EAAOK,cAAcR,EAAKS,kBAE5BiI,EAAkBtpC,EAAM4gC,KAAK75B,MAC7B6hC,EAAQ,eAAKvG,EAAN,gBAAat7B,EAAO+5B,MA6NKoB,mBAvLP,SAACtB,EAAM75B,GAChC,IAAIgjC,EAAcnJ,EAAK75B,KAAKuB,SAAS,QACjC0hC,EAAcpJ,EAAK75B,KAAKuB,SAAS,SACjC2hC,EAAarJ,EAAK75B,KAAKuB,SAAS,QAChC4hC,EAAatJ,EAAK75B,KAAKuB,SAAS,QAE9B6hC,EACU,eAAdvJ,EAAK37B,MACS,cAAd27B,EAAK37B,MACS,cAAd27B,EAAK37B,MACS,oBAAd27B,EAAK37B,MACL8kC,GACAC,GACAC,GACAC,EACGC,EAIHf,GAAgB,IAHhBA,GAAgB,GAChB5jC,KAAQD,MAAR,UAAiBq7B,EAAK75B,KAAtB,2CAIF,IAAMkgC,EACU,eAAdrG,EAAK37B,MACS,cAAd27B,EAAK37B,MACS,cAAd27B,EAAK37B,KACDmlC,EACU,oBAAdxJ,EAAK37B,MACL8kC,GACAC,GACAC,GACAC,EACIG,EAASzJ,EAAKh5B,KAAO,KAAO,KAAO,EACnC0iC,EAAU1J,EAAKh5B,KAAO,KAAO,KAAO,GAkB1C,OAjBIq/B,KACGoD,GAAUpD,GACbmC,GAAgB,GAChB5jC,KAAQD,MAAM,iCAEd6jC,GAAgB,IAIhBgB,KACGE,GAAWF,GACdhB,GAAgB,GAChB5jC,KAAQD,MAAM,qCAEd6jC,GAAgB,IAGZe,GAAcE,GAAWC,GAsIDnI,eA5LX,SAACniC,EAAO+G,GAC7B6hC,EAAQ,eAAKvG,EAAN,CAAYsG,qBAAqB,MA4LRvG,uBAnNH,SAAOxB,GAAP,SAAApd,EAAAC,OAAA,kEAAAD,EAAA,MACRomB,GAAUhJ,EAAKS,gBADP,OAC7BT,EAAK2J,QADwB,OAE7B3B,EAAQ,eACHvG,EADE,CAELO,aAAchC,EAAK4J,KAAO5J,EAAK2J,QAC/B7H,gBAAgB,EAChBC,aACE/B,EAAK75B,MAAQ65B,EAAK4J,IAAIC,UAAU7J,EAAK4J,IAAIE,YAAY,KAAO,MAPnC,sCAsNGt2B,aA3Mb,SAACpU,GAAD,OAAW4oC,EAAQ,eAAKvG,EAAN,CAAYK,gBAAgB,MA4MjCL,KAAMA,QAMhB,kBAAC,IAAD,CAAK35B,KAAM,GAAItH,UAAU,cACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsH,KAAM,GACNC,GAAI,EACJC,GAAI,EACJw3B,GAAI,EACJh/B,UAAU,mBAEV,kBAAC,KAAK0G,KAAN,CACEf,KAAK,aACL4I,MlFrbD,uBkFsbCvO,UAAU,QAEV,kBAAC,KAAD,CACE2J,GAAG,aACH6Z,QAASyd,EAAKznB,WACdzI,SAAU,SAACyS,EAASxS,GAAV,OApU3B,SAACwS,EAASxS,GACzBw2B,EAAQ,eAAKvG,EAAN,gBAAajwB,EAAEuF,OAAO5M,GAAK6Z,KAoUAzS,CAASyS,EAASxS,QAKzBiwB,EAAKznB,WACJ,kBAAC,IAAD,CAAKlS,KAAM,GAAIC,GAAI,GAAIC,GAAI,GACzB,kBAAC,GAAD,CACE+G,MlFvcF,2BkFwcE3P,MAAOqiC,EAAK6F,eAEZ,kBAAC,KAAKpgC,KAAN,CACE1G,UAAU,gBACV2F,KAAK,UAEL,oCACE,kBAAC,MAAD,GACE3F,UAAU,gBACV6Q,QAAQ,UAFV,2BAGY,YAHZ,uBAISowB,EAAK6F,eAJd,2BAKY,SAACloC,GAAD,OACRwpC,GACExpC,EACA,oBARN,GAYE,kBAAC,KAAOmT,OAAR,CAAenT,MAAM,K5FlftC,a4FqfiB,kBAAC,KAAOmT,OAAR,CAAenT,MAAM,K5FpftC,a4FufiB,kBAAC,KAAOmT,OAAR,CAAenT,MAAM,K5FtfpC,mB4F6fQipC,GACC,kBAAC,KAAKnhC,KAAN,KACE,kBAAC,KAAD,CACEtC,Q9EveT,uC8EweSP,KAAK,QACL2M,UAAQ,MAMhB,kBAAC,IAAD,YASd,yBAAKxQ,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,KAAD,CACEtH,UAAU,gCACV2F,KAAK,kBAEL,kBAAC,IAAD,CAAK2B,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,WACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,MlFtgBL,gBkFugBK3P,MAAOqiC,EAAKiF,kBAEZ,kBAAC,KAAKx/B,KAAN,CACE1G,UAAU,WACV2F,KAAK,gBAEL,oCACE,kBAAC,MAAD,GACE3F,UAAU,GACV6Q,QAAQ,gBAFV,2BAGY,YAHZ,oBAIK,oBAJL,uBAKSowB,EAAKiF,kBALd,2BAMY,SAACtnC,GAAD,OACRwpC,GACExpC,EACA,uBATN,GAaE,kBAAC,KAAOmT,OAAR,CACEnT,MAAM,IACNmY,SACyB,KAAvBkqB,EAAK6F,eACkB,MAAvB7F,EAAK6F,e5FpjBpB,iB4FyjBW,kBAAC,KAAO/0B,OAAR,CACEnT,MAAM,IACNmY,SACyB,KAAvBkqB,EAAK6F,eACkB,MAAvB7F,EAAK6F,e5F5jBlB,mB4FikBS,kBAAC,KAAO/0B,OAAR,CACEnT,MAAM,IACNmY,SACyB,KAAvBkqB,EAAK6F,eACkB,MAAvB7F,EAAK6F,e5FpkBtB,oB4F8kBG,kBAAC,IAAD,CAAKx/B,KAAM,GAAIC,GAAI,GAAIvH,UAAU,cAC/B,kBAAC,GAAD,CACEuO,MlF5jBV,WkF6jBU3P,MAAOqiC,EAAKgF,cAEZ,kBAAC,KAAKv/B,KAAN,CACE1G,UAAU,WACV2F,KAAK,eACLgE,GAAG,eACH+H,eAAe,WAEf,kBAAC,IAAD,CACE1R,UAAU,gBACV6Q,QAAQ,eACRlH,GAAG,eACHhE,KAAK,eACLmL,aAAcmwB,EAAKgF,aACnBrnC,MAAOqiC,EAAKgF,aACZ70B,aAAa,MACbC,UAAW,IACXN,SAAU,SAACC,GAAD,OAAOm3B,EAAen3B,SAKxC,kBAAC,IAAD,CAAK1J,KAAM,GAAIC,GAAI,EAAGC,GAAI,EAAGxH,UAAU,QACV,MAA1BihC,EAAKiF,iBACJ,kBAAC,KAAD,iBACMZ,GADN,CAEE1mC,MAAOqiC,EAAKkF,mBACZxgC,KAAK,qBACLoL,SAAU,SAACnS,GAAD,OACRwpC,GACExpC,EACA,uBAGJ2qC,WAAW,UAEe,MAA1BtI,EAAKiF,iBACP,6BACE,kBAAC,GAAD,CACEjE,wBACEA,GAEFY,aAAc5B,EAAK4B,gBAGK,MAA1B5B,EAAKiF,iBACP,kBAAC,GAAD,CACErD,aAAc5B,EAAK4B,aACnBZ,wBACEA,KAGF,QAKV,yBAAKjiC,UAAU,QACb,kBAAC,KAAD,CACE6D,KAAK,UACL7D,UAAU,UACV2G,QAjjBV,SAACqK,GACjBA,EAAEqB,iBAEA01B,GACA9G,EAAKsD,UACLtD,EAAKsD,SAASjzB,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAAS,GAC/DwyB,EAAK+E,cACL/E,EAAK+E,aAAa10B,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAAS,GACnEwyB,EAAKiF,kBACLjF,EAAKiF,iBAAiB50B,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAC5D,GACFwyB,EAAKgF,aAEDhF,EAAKznB,WACFynB,EAAK6F,eAIRz2B,GAAU,GACVu3B,GAAe,KAJfv3B,GAAU,GACVu3B,GAAe,IAKkB,MAA1B3G,EAAKiF,iBACmB,IAA7BjF,EAAK4B,aAAap0B,QACpB4B,GAAU,GACVu3B,GAAe,KAEfv3B,GAAU,GACVu3B,GAAe,IAEkB,MAA1B3G,EAAKiF,kBACkB,IAA5BjF,EAAKkF,oBACP91B,GAAU,GACVu3B,GAAe,KAMjBv3B,GAAU,GACVu3B,GAAe,KAGjBv3B,GAAU,GACVu3B,GAAe,M3FrCE,W2F+iBK,kBAAC,MAAD,GACE/jC,KAAK,aADP,sBAEO,aAFP,0BAGW,UAHX,0BAlgBT,WACf6E,EAAQK,KAAK,4BAigBW,GAMGrE,eCvpBvB6G,GAAY7D,IAAZ6D,QAmEOi+B,GAlEI,SAAClqC,GAAW,IAAD,EACQ8O,oBAAS,GADjB,mBACrBq7B,EADqB,KACTC,EADS,KAM5B,OACE,kBAAC,IAAMnxB,SAAP,KACIkxB,EAmDA,kBAAC,IAAD,CAAUhqC,GAAG,sBAlDb,kBAAC,IAAM8Y,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMvB,EAAMuB,OAClC,kBAAC,GAAD,CAASwF,YAAU,QAAQrG,UAAU,IACnC,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,Q5FrBN,iB4FuBV,yBAAKA,UAAU,gEACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,yBAAKtH,UAAU,iBACb,yBACEH,IAAK8pC,KACL5pC,IAAI,cACJC,UAAU,UAGd,uBAAGA,UAAU,oBlFRnC,6DkFWsB,kBAAC,IAAD,CAAKA,UAAU,iCACb,kBAAC,KAAD,CAASA,UAAU,UAErB,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,oDAEV,kBAAC,KAAD,CACEqG,YAAU,gBACVM,QA1CH,WACrB+iC,GAAc,IA0CU7lC,KAAK,W5FnCN,0B6FGvBjC,I,OAAY,IAyLDgoC,G,YAtLb,WAAYtqC,GAAQ,IAAD,8BACjB,4CAAMA,KAURwJ,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,KAbM,EAuCnBI,SAAW,WACT,EAAK7K,SAAS,CACZyK,SAAS,IAEX,IAAIlF,EAAM,CACRw8B,QAAS,EAAKvqC,MAAMwqC,UAAUD,QAC9BtF,SAAU,EAAKjlC,MAAMwqC,UAAUr8B,OAEjC,EAAKnO,MAAMyqC,eAAe18B,EAAK,EAAKtI,QA/CnB,EAkDnBiO,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,IAEXjP,OAAOC,SAAW,yBApDlB,EAAKwB,MAAQ,CACXwN,SAAS,EACTuyB,YAAa,GACbC,YAAa,IAAIn5B,MAEnB,EAAK83B,MAAQ,EAAKA,MAAM7+B,KAAX,gBACb,EAAKmlC,iBAAmB,EAAKA,iBAAiBnlC,KAAtB,gBARP,E,6EAyDHoN,GACd5S,KAAKyI,SAAS,CACZg9B,YAAa7yB,M,sCAIDgyB,GACd5kC,KAAKyI,SAAS,CACZi9B,YAAad,M,mCAIJjgC,GACX,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,S,4BAGzC6N,EAAO2jB,GAEX,IADA,IAAM5D,EAAS,GACNza,EAAItF,EAAOsF,EAAIqe,EAAKre,IAC3Bya,EAAOh3B,KAAKuc,GAEd,OAAOya,I,uCAGQ/7B,EAASH,GAAO,IAAD,OAC9B,GAAa,UAATA,GAEF,GADAjC,GAAYoC,EACR6H,KAAO7H,GAAS0tB,OAAO7lB,OAAU,OAAQ,CAC3C,IAAIo+B,EAAMp+B,OACV,MAAO,CACLq+B,cAAe,kBAAM,EAAKxG,MAAM,EAAGuG,EAAIE,SACvCC,gBAAiB,kBAAM,EAAK1G,MAAM,EAAGuG,EAAII,YACzCC,gBAAiB,kBAAM,EAAK5G,MAAM,EAAGuG,EAAIM,mBAGxC,GAAa,QAAT1mC,EAAgB,CACzB,GAAIgI,KAAO7H,GAAS0tB,OAAO7lB,OAAU,OAAQ,CACvCo+B,EAAMp+B,OACV,MAAO,CACLq+B,cAAe,kBAAM,EAAKxG,MAAM,EAAGuG,EAAIE,SACvCC,gBAAiB,kBAAM,EAAK1G,MAAM,EAAGuG,EAAII,YACzCC,gBAAiB,kBAAM,EAAK5G,MAAM,EAAGuG,EAAIM,aAEtC,GAAI1+B,KAAO7H,GAAS0tB,OAAO7lB,KAAOjK,KAAa,CAChDqoC,EAAMp+B,KAAOjK,IACjB,MAAO,CACLsoC,cAAe,kBAAM,EAAKxG,MAAM,EAAGuG,EAAIE,SACvCC,gBAAiB,kBAAM,EAAK1G,MAAM,EAAGuG,EAAII,YACzCC,gBAAiB,kBAAM,EAAK5G,MAAM,EAAGuG,EAAIM,iB,+BAMvC,IAAD,OACP,OACE,oCACE,uBAAG5jC,QAAStH,KAAKyJ,W7FhCM,mB6FiCvB,kBAAC,KAAD,CACE2E,M7FlCqB,kB6FmCrB8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjBzT,UAAW,oBACX6N,SAAU,iBAEZ6F,O7F9CuB,c6F+CvBC,WAAYjP,GAEZ,kBAAC,KAAD,CAAM1E,UAAU,iCACd,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,cACvB,yBAAKA,UAAU,mCnFpIa,2BmFqIG,IAC7B,0BAAMA,UAAU,QAAhB,InFrI0B,cmFsIzBX,KAAKC,MAAMwqC,UAAUr8B,MAHxB,I7F1DM,Q6FgEN,kBAAC,GAAD,CAAYc,MpFhJK,kBoFgJmB3P,MAAM,SACxC,kBAAC,KAAK8H,KAAN,CACEf,KAAK,QACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS8K,MAIb,kBAAC,KAAD,cACEtQ,MAAOS,KAAK0F,MAAM+/B,YAClB5yB,aAAc7S,KAAK6S,aACnBnB,SAAU,SAACkB,GAAD,OAAU,EAAK6xB,gBAAgB7xB,IACzCjS,UAAU,QACV2F,KAAK,SALP,YAMY,aAEZ,kBAAC,KAAD,CAAyB6+B,MAAOC,MAC9B,kBAAC,KAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAAC,KAAD,CACElkB,OAAO,SACP9W,GAAG,eACH4E,MpFrKO,kBoFsKP3P,MAAOS,KAAK0F,MAAMggC,YAClBh0B,SAAU,SAACkzB,GAAD,OAAU,EAAKG,gBAAgBH,IACzCY,oBAAqB,CACnB,aAAc,6B,GAxKZzlC,aC+CborC,G,2MAvCbzlC,MAAQ,CACNwN,SAAS,G,EAGXyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIbyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIb0B,oBAAsB,SAAC1B,GACrB,EAAKzK,SAAS,CAAEyK,a,wEAIhB,OACE,oCACE,kBAAC,IAAD,CACEjM,UAAU,SACVC,SArDO1F,EAqDUxB,KAAKC,MAAMuB,KArDfkpC,EAqDqB1qC,KAAKC,MAAMyqC,eApDrD,6BACE,4BACE,kBAAC,IAAD,CAAMtqC,GAAI,CAAEC,SAAS,mBAAD,OAAqBmB,EAAKgpC,SAAW9kC,MAAOlE,IAC9D,4BACE,uBAAGqE,KAAI,0BAAqBrE,EAAKgpC,UACX,IAAnBhpC,EAAKkL,WAAsC,IAAnBlL,EAAKkL,U9FctB,OA+BA,Q8F5CL,OAGRlL,EAAK+lC,sBACc,IAAnB/lC,EAAKkL,WAAsC,IAAnBlL,EAAKkL,UAM1B,KALF,kBAAC,IAAD,CAAMtM,GAAI,CAAEC,SAAU,sBAAuBqF,MAAOlE,IAClD,4BACE,uBAAGqE,KAAK,uB9FJc,sB8FIiC,KACnD,KAGU,IAAnBrE,EAAKkL,WAAsC,IAAnBlL,EAAKkL,WAAsC,IAAnBlL,EAAKkL,UACpD,4BACE,kBAAC,GAAD,CAAeg+B,eAAgBA,EAAgBD,UAAWjpC,KAE1D,QAgCA+F,QAAQ,QACR2L,QAASlT,KAAK0F,MAAMwN,QACpB4B,gBAAiB9U,KAAK4U,qBAEtB,0BAAMjU,UAAU,iBACd,yBAAKH,IAAKuU,KAAUrU,IAAI,eA3DpB,IAACc,EAAMkpC,M,GA2BOpqC,IAAMP,WCV5BgK,ICJwBzJ,IAAMP,UDInB+J,IAAXC,QAUAmC,IAPN,kBAAClC,GAAA,EAAD,CACEC,MAAO,CACLC,SAAU,GACVC,MAAO,aAIO9B,IAAZ6D,SA6VOk/B,G,YA1Vb,WAAYnrC,GAAQ,IAAD,8BACjB,4CAAMA,KAqDRyqC,eAAiB,SAACnrC,EAAOqT,GACvB,IACM7R,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIdO,EAAO,CACXc,SAAUulC,GAAW7B,iBAAiBpzB,EAAK6yB,aAC3CsC,SAAUF,GAAWjC,eAAehzB,EAAK8yB,cAE3CrkC,IACGuL,IAAIhM,EAAW,iBAAmBrB,EAAMirC,QAAU,IAAKhpC,EAAMT,GAC7DwD,MAAK,WACJsI,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YAAazN,EAAM2lC,SAAWx5B,KAEhCzH,OAAOC,SAAW,4BA7EL,EAiFnBgJ,SAAW,SAAC3N,GAAW,IACbiC,EAAS,EAAKkE,MAAdlE,KACF2L,EAAW,EAAKC,SAAS5L,EAAMjC,GACrC,EAAKkJ,SAAS,CAAE4E,WAAYF,KApFX,EAuFnBf,cAAgB,SAAC5C,EAAQ6C,GACvB,IAAI7K,EAAO,GACX,GAAmB,IAAf6K,EAAI+C,OACNvC,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAO4E,MACPrC,UAEC,GAAY,cAARM,GAA+B,WAARA,EAChC7K,EAAO,CACLkL,UAAW,QAER,GAAY,aAARL,EAAoB,CAC7B,IAAM9J,EAAYiH,EAAOhH,WACnB6oC,EAAQ9oC,EAAUqE,MAAM,KAAK,GAC7B0kC,EAAS/oC,EAAUqE,MAAM,KAAK,GAC9B2kC,EAAQhpC,EAAUqE,MAAM,KAAK,GAC7B4kC,EAAiB,IAAIj/B,KAAK++B,EAAS,IAAMD,EAAQ,IAAME,GACvDE,EAAc,IAAIl/B,KACxB,GAAIi/B,EAAiBC,EACnBjqC,EAAO,CACLkL,UAAW,QAER,GAAI8+B,EAAiBC,EAC1BjqC,EAAO,CACLkL,UAAW,QAER,GAAI8+B,IAAmBC,EAAa,CACzC,IAAMC,EAAYliC,EAAOs+B,WAEnB6D,EAAoB,IAAIp/B,KADZ++B,EAAS,IAAMD,EAAQ,IAAME,EACAG,GAC3CC,EAAoB,IAAIp/B,KAC1B/K,EAAO,CACLkL,UAAW,GAEJi/B,GAAqB,IAAIp/B,OAClC/K,EAAO,CACLkL,UAAW,KAKnB,IACM3L,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IACGuL,IAAIhM,EAAW,oBAAsB4I,EAAOghC,QAAU,IAAKhpC,EAAMT,GACjEwD,MAAK,WACJsI,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAO4E,MACPvC,KAEJ,EAAK5L,MAAMgN,sBAvJf,EAAKvH,MAAQ,CACXlE,KAAM,GACN6L,WAAY,GACZC,SAAU,IALK,E,iFASE,IAAD,OACZs+B,EAAU5rC,KAAKC,MAAf2rC,MACD,OAALA,QAAK,IAALA,KAAOp+B,SAAQ,SAACo0B,GACdA,EAAKp/B,WAAagK,KAAOo1B,EAAKp/B,YAC3BkL,MACAC,QACAlB,OAAO,cACVm1B,EAAKt/B,SAAWkK,KAAOo1B,EAAKt/B,UAAUoL,MAAMC,QAAQlB,OAAO,iBAE7DzM,KAAKyI,SAAS,CAAEjH,KAAMoqC,IAAS,WAC7B,EAAK1+B,SAAS,S,uDAIeU,GAAY,IACD,EADA,OACtC5N,KAAKC,MAAM2rC,QAAUh+B,EAAUg+B,QACjC,UAAAh+B,EAAUg+B,aAAV,SAAiBp+B,SAAQ,SAACo0B,GACxBA,EAAKp/B,WAAagK,KAAOo1B,EAAKp/B,YAC3BkL,MACAC,QACAlB,OAAO,cACVm1B,EAAKt/B,SAAWkK,KAAOo1B,EAAKt/B,UACzBoL,MACAC,QACAlB,OAAO,iBAEZzM,KAAKyI,SAAS,CAAEjH,KAAMoM,EAAUg+B,QAAS,WACvC,EAAK1+B,SAAS,EAAKxH,MAAM4H,gB,+BAKtBO,EAAKC,GACZ,OAAKA,GAA2B,KAAdA,GAAkC,OAAdA,EAG/BD,EAAIE,QAAO,SAAUC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAU9O,GACrC,GAAwB,kBAAb2O,EAAI3O,GACb,OAAO2O,EAAI3O,GAAKoH,cAAcoB,SAASiG,EAAUrH,qBAL9CoH,I,+BAkHD,IAAD,SACmB7N,KAAKC,MAAhB4O,GADR,EACC+8B,MADD,EACQ/8B,QACTzE,EAAU,CACd,CACEgE,MAAO,GACPC,UAAW,GACXhP,IAAK,OACLiP,MAAO,KACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SACEhF,EAAO89B,OAAS99B,EAAO0mB,SAAW,kBAAC6W,GAAA,EAAD,MAAwB,KAC5D9mC,MAAO,CACL,aAAc,OAKtB,CACEmO,MAAO,YACPC,UAAW,QACXhP,IAAK,OACLiP,MAAO,MACPC,OAAQ,SAACjI,EAAMkD,GACb,MAAO,CACLgF,SACE,kBAAC,IAAD,CACEpO,GAAI,CACFC,SAAS,mBAAD,OAAqBmJ,EAAOghC,SACpC9kC,MAAO8D,IAGT,4BACE,uBAAG3D,KAAI,0BAAqB2D,EAAOghC,UAAYlkC,GAAU,MAI/DrG,MAAO,CACL,aAAc,gBAKtB,CACEmO,MAAO,oBACPC,UAAW,GACXhP,IAAK,aACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SAAUhF,EAAOhH,WAAa,IAAMgH,EAAOs+B,WAAWphC,MAAM,GAAI,GAChEzG,MAAO,CACL,aAAc,wBAKtB,CACEmO,MAAO,kBACPC,UAAW,GACXhP,IAAK,WACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SAAUhF,EAAOlH,SAAW,IAAMkH,EAAOu+B,SAASrhC,MAAM,GAAI,GAC5DzG,MAAO,CACL,aAAc,wBAKtB,CACEmO,MAAO,SACPC,UAAW,GACXhP,IAAK,IACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SACuB,IAArBhF,EAAOkD,UACL,yBACE/L,UAAU,4BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,cAF5C,aAMuB,IAArBA,EAAOkD,UACT,yBACE/L,UAAU,0BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,YAE1C,0BAAM7I,UAAU,gBAJlB,UAOuB,IAArB6I,EAAOkD,UACT,yBACE/L,UAAU,0BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,eAE1C,0BAAM7I,UAAU,gBAJlB,aAQA,yBACEA,UAAU,0BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,MAE1C,0BAAM7I,UAAU,gBAJlB,aAQJV,MAAO,CACL,aAAc,aAKtB,CACEmO,MAAO,GACPC,UAAW,GACXhP,IAAK,IACLiP,MAAO,KACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SACE,kBAACq9B,GAAD,CAAanB,eAAgB,EAAKA,eAAgBlpC,KAAMgI,IAE1DvJ,MAAO,CACL,aAAc,cAOxB,OACE,oCACE,kBAAC,IAAD,CAAKU,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMxB,KAAKC,MAAMuB,OACvC,kBAAC,GAAD,CAASb,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,4B/FzUU,iB+F2UZ,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,GAAIxH,UAAU,2BAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,EAAGxH,UAAU,cAC9B,kBAAC,GAAD,CACE+N,Y/F9TN,S+F+TMxB,SAAUlN,KAAKkN,cAMvB,kBAAC,IAAD,CACEjF,KAAM,GACNE,GAAI,EACJxH,UAAU,iDAGV,kBAAC,IAAD,CAAMP,GAAG,qBACP,kBAACuO,GAAD,CAASpP,M/FpVN,oB+FyVX,kBAAC,IAAD,CAAMqP,SAAUC,EAAQ1H,KAAK,SAC3B,kBAAC,GAAD,CACEkD,OAAO,UACPD,QAASA,EACT5I,KAAMxB,KAAK0F,MAAM2H,uB,GA/UV/M,IAAMP,WE5BhB+rC,GAAa,kBAAI,SAACznC,GAC3B,OAAOsW,GAAYoxB,WAAWxnC,MAAK,SAAC/C,GAMhC,OALA6C,EAAS,CACLG,KnGIY,emGHZC,QAAQ,CAACunC,UAAUxqC,EAAKA,QAGrBoD,QAAQC,aAEnB,SAACC,GACG,IAAMC,EACLD,EAAMvD,UACHuD,EAAMvD,SAASC,MAAQsD,EAAMvD,SAASC,KAAKuD,SAC3CD,EAAMC,SACND,EAAMhD,WASV,OARAuC,EAAS,CACLG,KnGRS,cmGWbH,EAAS,CACLG,KnGzBW,cmG0BXC,QAAQM,IAELH,QAAQI,cCeZ0C,oBAPf,SAAyBhC,GAEvB,MAAO,CACLsmC,UAFoBtmC,EAAMk8B,KAApBoK,aAMKtkC,EAxCQ,SAACzH,GAAW,IAAD,EACJ8O,oBAAS,GADL,mBACzBF,EADyB,KACjBoJ,EADiB,OAEUlJ,oBAAS,GAFnB,mBAEzB3C,EAFyB,KAEVsO,EAFU,KAIhC9S,qBAAU,YAERvD,EADqBpE,EAAboE,UACCynC,QACR,CAAC1/B,IAEJxE,qBAAU,WACgB,OAApB3H,EAAM+rC,UACR/zB,GAAU,GACmB,OAApBhY,EAAM+rC,WACf/zB,GAAU,KAEX,CAAChY,EAAM+rC,YAMV,OAAQn9B,GAA8B,OAApB5O,EAAM+rC,WAAiD,IAA3B/rC,EAAM+rC,UAAU58B,OAG5D,kBAAC,GAAD,CACEw8B,MAAO3rC,EAAM+rC,UACbxqC,KAAMvB,EACN4O,OAAQA,EACR5B,gBAXoB,WACtByN,GAAkBtO,MAIlB,kBAACk+B,GAAD,CAAa9oC,KAAMvB,OCLfiM,IADapC,IAAbuX,SACYhZ,IAAZ6D,SAyHO+/B,GAvHM,SAAChsC,GACpB,IAAIiE,EAAWi7B,cAEf,OACE,kBAAC,IAAMjmB,SAAP,KACE,kBAAC,IAAMA,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMvB,IAC5B,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAKU,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,yBACV,kBAAC,KAAWiH,KAAZ,KnG3CD,UmG6CD,kBAAC,KAAWA,KAAZ,KnG7BQ,kBmGgCZ,kBAAC,IAAD,CAAK1G,UAAU,gCACb,wBAAIA,UAAU,QAAQuD,EAASwB,MAAM0I,OACrC,kBAAC,IAAD,CACEnG,KAAM,GACNC,GAAI,GACJC,GAAI,GACJw3B,GAAI,GACJh/B,UAAU,qGAOZ,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,mDAGd,yBAAKA,UAAU,IACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,uBAAGtH,UAAU,mBACVuD,EAASwB,MAAMkiC,UAMlB,yBAAKjnC,UAAU,gEACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IAQT,wBAAItH,UAAU,oBzFlBxC,2DyFqB0B,kBAAC,IAAD,CAAKA,UAAU,kCAGf,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,wDAgBlB,kBAAC,IAAD,CAAKA,UAAU,oBACb,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,8CAQZ,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,yDC4KrBojC,G,YA3Qb,WAAY9jC,GAAQ,IAAD,8BACjB,4CAAMA,KAmCRwJ,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,KAtCM,EA0CnBI,SAAW,WAEN,EAAKrT,MAAMkkC,SAASC,eACpB,EAAKnkC,MAAMkkC,SAASsB,aAIrB,EAAKxlC,MAAM+Q,WAAU,GACrB,EAAKvI,SAAS,CACZyK,SAAS,IAEX,EAAKjT,MAAM+jC,aANX,EAAK/jC,MAAM+Q,WAAU,IA/CN,EAyDnB2C,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,KA3DM,EA+DnB+wB,kBAAoB,SAACt/B,GACnB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QAhE5B,EAmEnBoxB,gBAAkB,SAACv/B,GACjB,OAAI,EAAK1E,MAAMkkC,SAASC,cAEpBz/B,GACAA,EAAU6H,KAAO,EAAKvM,MAAMkkC,SAASC,cAAe,cAG/Cz/B,GAAWA,EAAU6H,OAASsG,QAAQ,QA1E9B,EA8EnBuxB,MAAQ,SAAC1jB,EAAO2jB,GAEd,IADA,IAAM5D,EAAS,GACNza,EAAItF,EAAOsF,EAAIqe,EAAKre,IAC3Bya,EAAOh3B,KAAKuc,GAEd,OAAOya,GAnFU,EAsFnB6D,kBAAoB,SAAC3xB,GACnB,EAAK3S,MAAMukC,gCAAgC5xB,EAAM,kBAvFhC,EA0FnB6xB,gBAAkB,SAAC7xB,GACjB,EAAK3S,MAAMykC,8BAA8B9xB,EAAM,gBA3F9B,EA8FnB+xB,kBAAoB,SAACC,GACC,IAAIr4B,KACNq4B,EAChB,EAAKn8B,SAAS,CAAEo8B,gBAAgB,KAEhC,EAAKp8B,SAAS,CAAEo8B,gBAAgB,EAAO6G,UAAW9G,IAClD,EAAK3kC,MAAM6kC,gCAAgCF,EAAM,mBApGlC,EAwGnBG,gBAAkB,SAACH,GACG,IAAIr4B,KACNq4B,EAChB,EAAKn8B,SAAS,CAAEu8B,cAAc,KAE9B,EAAKv8B,SAAS,CAAEyjC,QAAStH,EAAMI,cAAc,IAC7C,EAAK/kC,MAAMglC,8BAA8BL,EAAM,iBA5GjD,EAAKl/B,MAAQ,CACXwN,SAAS,EACT3Q,UAAW,GACXmpC,UAAW,IAAIn/B,KACflK,QAAS,GACT6pC,QAAS,IAAI3/B,KACbs4B,gBAAgB,EAChBG,cAAc,GATC,E,iFAaE,IAAD,EAMdhlC,KAAKC,MAAMkkC,SAJbC,EAFgB,EAEhBA,cACAmB,EAHgB,EAGhBA,cACAE,EAJgB,EAIhBA,YACAC,EALgB,EAKhBA,YAEI2F,EAAQjH,EAAcx9B,MAAM,KAAK,GACjC0kC,EAASlH,EAAcx9B,MAAM,KAAK,GAClC2kC,EAAQnH,EAAcx9B,MAAM,KAAK,GACjCulC,EAAQ1G,EAAY7+B,MAAM,KAAK,GAC/BwlC,EAAS3G,EAAY7+B,MAAM,KAAK,GAChCylC,EAAQ5G,EAAY7+B,MAAM,KAAK,GACrC5G,KAAKyI,SAAS,CACZlG,UAAWiK,KAAO43B,EAAe,cACjC/hC,QAASmK,KAAOi5B,EAAa,cAC7BiG,UAAW,IAAIn/B,KACbg/B,EAAQ,IAAMD,EAAS,IAAMD,EAAQ,IAAM9F,GAE7C2G,QAAS,IAAI3/B,KAAK8/B,EAAQ,IAAMD,EAAS,IAAMD,EAAQ,IAAMzG,O,+BAkFvD,IAAD,aACP,OACE,oCACE,kBAAC,KAAD,CAAQlhC,KAAK,UAAU7D,UAAU,UAAU2G,QAAStH,KAAKyJ,WACtDzJ,KAAKC,MAAMuT,QpGrII,aADF,YoGwIhB,kBAAC,KAAD,CACEpF,MpGpIkB,eoGqIlB8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cACoC,IAAlCnU,KAAKC,MAAMkkC,SAASz3B,UAChB,CACEzC,MAAO,CAAEwK,QAAS,SAEpB,CACEjG,SAAU,aAGlB4F,kBACoC,IAAlCpU,KAAKC,MAAMkkC,SAASz3B,UAChB,CACE/L,UAAW,kBACX6N,SAAU,iBAEZ,CACE7N,UAAW,oBACX6N,SAAU,iBAGlB6F,OpG7Ja,UoG8JbC,WAAYjP,GAEZ,kBAAC,KAAD,CAAM1E,UAAU,iCACd,kBAAC,IAAD,CAAKsH,KAAM,GAAItH,UAAU,cACtBX,KAAKC,MAAM6E,OACV,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAAS8K,GAAarL,KAAK,QAAQ2M,UAAQ,KAGtD,yBAAKxQ,UAAU,mB1F7JE,sC0F+Jf,0BAAMA,UAAU,6BACb,IACAX,KAAKC,MAAMkkC,SAASe,UAJzB,QASA,kBAAC,GAAD,CAAYh2B,M3F5KO,oB2F4KmB3P,MAAM,SAC1C,kBAAC,KAAK8H,KAAN,CACEf,KAAK,QACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS8K,MAIb,kBAAC,MAAD,GACE4B,aAAczR,KAAK0F,MAAMnD,UACzBsQ,aAAc7S,KAAKikC,kBACnBvyB,SAAU,SAACkB,GAAD,OAAU,EAAK2xB,kBAAkB3xB,IAC3CjS,UAAU,QACV2F,KAAK,SALP,2BAMY,YANZ,0BAO8C,IAAlCtG,KAAKC,MAAMkkC,SAASz3B,WAPhC,IASC1M,KAAK0F,MAAMm/B,gBACV,kBAAC,KAAD,CAAO9/B,QAASgL,GAAWvL,KAAK,QAAQ2M,UAAQ,IAElD,kBAAC,KAAD,CAAyBg0B,MAAOC,MAC9B,kBAAC,KAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAAC,KAAD,CACElkB,OAAO,SACP9W,GAAG,eACH4E,M3FrMS,oB2FsMT3P,MAAOS,KAAK0F,MAAMgmC,UAClBh6B,SAAU,SAACkzB,GAAD,OAAU,EAAKD,kBAAkBC,IAC3CY,oBAAqB,CACnB,aAAc,eAEhB9tB,SAA4C,IAAlC1X,KAAKC,MAAMkkC,SAASz3B,gBAMxC,kBAAC,GAAD,CAAYwC,M3FlNK,kB2FkNmB3P,MAAM,SACxC,kBAAC,KAAK8H,KAAN,CACEf,KAAK,QACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS8K,MAIW,KAAvB7P,KAAK0F,MAAMrD,QACV,oCACG,IACD,kBAAC,MAAD,GACEoP,aAAczR,KAAK0F,MAAMrD,QACzBwQ,aAAc7S,KAAKkkC,gBACnBxyB,SAAU,SAACkB,GAAD,OAAU,EAAK6xB,gBAAgB7xB,IACzCjS,UAAU,QACV2F,KAAK,SALP,2BAMY,YANZ,0BAO8C,IAAlCtG,KAAKC,MAAMkkC,SAASz3B,WAPhC,KAWF,kBAAC,MAAD,GACE+E,aAAczR,KAAK0F,MAAMrD,QACzBwQ,aAAc7S,KAAKkkC,gBACnBxyB,SAAU,SAACkB,GAAD,OAAU,EAAK6xB,gBAAgB7xB,IACzCjS,UAAU,QACV2F,KAAK,SALP,2BAMY,YANZ,0BAO8C,IAAlCtG,KAAKC,MAAMkkC,SAASz3B,WAPhC,IAUD1M,KAAK0F,MAAMs/B,cACV,kBAAC,KAAD,CAAOjgC,QAASgL,GAAWvL,KAAK,QAAQ2M,UAAQ,IAElD,kBAAC,KAAD,CAAyBg0B,MAAOC,MAC9B,kBAAC,KAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAAC,KAAD,CACElkB,OAAO,SACP9W,GAAG,eACH4E,M3F1PO,kB2F2PP3P,MAAOS,KAAK0F,MAAMwmC,QAClBx6B,SAAU,SAACkzB,GAAD,OAAU,EAAKG,gBAAgBH,IACzCY,oBAAqB,CACnB,aAAc,eAEhB9tB,SAA4C,IAAlC1X,KAAKC,MAAMkkC,SAASz3B,wB,GA9P1B3M,aClBtBkmC,GAAc,CAClB9+B,KAAM,GACNopB,MAAO,EACP2V,QAAQ,EACR3mC,MAAO,EACP4K,MAAO,UACPg8B,YAAa,UACbz0B,SAAU,SAAC00B,GACTr+B,QAAQC,IAAR,kCAAuCo+B,MAInCl6B,GAAY7D,IAAZ6D,QA6KOogC,GA3KS,SAAC,GAUlB,IAAD,EATJ1K,EASI,EATJA,KACA0E,EAQI,EARJA,aACAC,EAOI,EAPJA,WACAgG,EAMI,EANJA,SACAv7B,EAKI,EALJA,UACAlM,EAII,EAJJA,MACAtD,EAGI,EAHJA,KACAqN,EAEI,EAFJA,OACA43B,EACI,EADJA,eA0BA,OACE,oCACE,kBAAC,IAAMvtB,SAAP,KACE,kBAAC,IAAMA,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMA,IAC5B,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAKb,UAAU,gCACb,wBAAIA,UAAU,QrG7DN,gBqG+DR,kBAAC,IAAD,CACEsH,KAAM,GACNE,GAAI,GACJxH,UAAU,mDAGd,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAS,4BAAuB8+B,KAAOiH,YAEvC,4BACG9E,EAAKsD,SACN,kBAAC,KAAD,CAASj+B,UAAU,MAAMmH,MAAOwzB,EAAK+E,cACnC,0BAAMhmC,UAAU,kCAItB,kBAAC,IAAMuY,SAAP,KACE,kBAAC,IAAD,CAAMtK,SAAUC,EAAQ1H,KAAK,SAC3B,yBAAKxG,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,uBAAGtH,UAAU,mBACVihC,EAAKgF,cAER,kBAAC,IAAD,CAAKjmC,UAAU,cAAc+W,UAAU,GACrC,yBAAK/W,UAAU,uCACc,MAA1BihC,EAAKiF,iBACJjF,EAAK4B,aAAapqB,KAAI,SAAC7Z,GAAD,OACpB,kBAAC,KAAD,KAAQA,MAEkB,MAA1BqiC,EAAKiF,iBACPjF,EAAK4B,aAAapqB,KAAI,SAAC7Z,GAAD,OACpB,kBAAC,KAAD,KAAWA,MAEe,MAA1BqiC,EAAKiF,iBACP,kBAAC,KAAD,iBACMZ,GADN,CAEE1mC,MAAOqiC,EAAKkF,mBACZpvB,UAAU,KAEV,OAGR,kBAAC,IAAD,CAAK/W,UAAU,QACb,yBAAKusB,MAAM,wBACT,yBAAKA,MAAM,6BACT,0BAAMA,MAAM,mBACV,yBAAKA,MAAM,wBACT,kBAAC6Z,GAAA,EAAD,OAEF,0BACE7Z,MAAM,4BACN9e,MAAM,gBAELwzB,EAAKoF,aACJ,uBACEnhC,KAAM+7B,EAAKoF,aACXC,SAAUrF,EAAKoF,cAEdP,GAED,MAEN,0BAAMvZ,MAAM,qCACV,4BACE1oB,KAAK,SACL0oB,MAAM,oBAWxB,yBAAKvsB,UAAU,aACb,kBAAC,MAAD,GACE6D,KAAK,aADP,sBAEO,aAFP,0BAGW,UAHX,2BAIY,QAJZ,0BAvGG,WACvB+hC,EAAW3E,MAsGS,GAOGx8B,GAEH,kBAAConC,GAAD,CACErI,SAAUvC,EACV4C,gCAlIgB,SAAC5xB,EAAMtM,GAC7CggC,EAAa1zB,EAAMtM,IAoIGo+B,8BAjIc,SAAC9xB,EAAMtM,GAC3CggC,EAAa1zB,EAAMtM,IAmIGw+B,gCAhIgB,SAACF,EAAMt+B,GAC7CggC,EAAa1B,EAAMt+B,IAkIG2+B,8BA/Hc,SAACL,EAAMt+B,GAC3CggC,EAAa1B,EAAMt+B,IAiIG09B,UA1HN,WAChBuI,KA0HsBv7B,UAAWA,EACXlM,MAAOA,EACP0O,SAAO,eCzH3ByyB,GAAc,CAClB9+B,KAAM,GACNopB,MAAO,EACP2V,QAAQ,EACR3mC,MAAO,EACP4K,MAAO,UACPg8B,YAAa,UACbz0B,SAAU,SAAC00B,GACTr+B,QAAQC,IAAR,kCAAuCo+B,MAInC/kB,GAAavX,IAAbuX,SACAnV,GAAY7D,IAAZ6D,QACJrL,GAAWC,EAAQ,IA8iCR2rC,GA5iCE,SAACxsC,GAAW,IAAD,YACpBoJ,EAAUC,cADU,EAEkByF,mBAAS,IAF3B,mBAEnB03B,EAFmB,KAEHoC,EAFG,OAGF95B,mBAAS,CAC/Bm2B,SAAU,GACVyB,aAAc,GACdK,aAAc,GACd7sB,YAAY,EACZstB,cAAe,GACfb,aAAc,GACdC,iBAAkB,GAClBC,mBAAoB,EACpB1C,cAAe,GACfqB,YAAa,GACbF,cAAe,GACfG,YAAa,GACblC,aAAc,GACdkJ,eAAgB,GAChBC,OAAQ,GACRjgC,UAAW,KAnBa,mBAGnBk1B,EAHmB,KAGbuG,EAHa,OAqBEp5B,oBAAS,GArBX,mBAqBnBF,EArBmB,KAqBXoJ,EArBW,OAsBQlJ,mBAAS,IAtBjB,mBAsBnBq5B,EAtBmB,KAsBRC,EAtBQ,OAuBCt5B,oBAAS,GAvBV,mBAuBnBjK,EAvBmB,KAuBZkM,EAvBY,OAwBWjC,oBAAS,GAxBpB,mBAwBnBy5B,EAxBmB,KAwBPC,EAxBO,OAyBY15B,oBAAS,GAzBrB,mBAyBnBu5B,EAzBmB,KAyBNC,EAzBM,OA0Bax5B,oBAAS,GA1BtB,mBA0BnB25B,GA1BmB,KA0BNC,GA1BM,QA2BI55B,oBAAS,GA3Bb,qBA2BnBy3B,GA3BmB,MA2BVoC,GA3BU,SA4BX/3B,KAAKC,UAAbC,GA5BmB,qBA6BtB7M,GAAWi7B,cA7BW,GA8BGtyB,IAAaowB,kBA9BhB,qBA8BnBC,GA9BmB,MA8BdC,GA9Bc,MAgCpByP,GAAM,UAAG3sC,EAAMm9B,qBAAT,aAAG,EAAqBnQ,OAAO3iB,GAE3C1C,qBAAU,WACR,IACM7G,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBgX,GAAU,GACV5W,IAAM3B,IAAIkB,EAAQ,kBAAcgsC,GAAd,KAAyB7rC,GAASwD,MAAK,SAACsN,GAAS,IAAD,MAC1DrQ,EAAOqQ,EAAIrQ,KACjB2mC,EAAQ,eACHvG,EADE,CAEL+K,OAAQnrC,EAAKgpC,QACbtF,SAAU1jC,EAAK4M,MACfu4B,aAAcnlC,EAAK0hB,UACnB8jB,aACsB,OAApBxlC,EAAKkmC,YAA8C,OAAvBlmC,EAAKwmC,cAC7B,CACE,CACE6E,IAAK,IACLvmC,KACsB,OAApB9E,EAAKkmC,WACDlmC,EAAKkmC,WACkB,OAAvBlmC,EAAKwmC,cACLxmC,EAAKwmC,cACL,GACN5nB,OAAQ,OACR2pB,IAAKvoC,EAAK8lC,MAAQ9lC,EAAK8lC,MAAQ9lC,EAAK0uB,WAGxC,GACN/V,WAAY3Y,EAAK+lC,qBACjBE,cAAejmC,EAAKgmC,uBAAuB1lC,WAC3C8kC,aAAcplC,EAAKomC,SACnBf,iBAAkBrlC,EAAKmmC,mBAAmB7lC,WAC1CglC,mBAAoBtlC,EAAKsrC,0BACzB1I,cAAeyD,GAAW7B,iBAAiBxkC,EAAKgB,YAChDijC,YAAaoC,GAAW7B,iBAAiBxkC,EAAKc,UAC9CijC,cAAe/jC,EAAKsmC,WACpBpC,YAAalkC,EAAKumC,SAClBr7B,UAAWlL,EAAKkL,UAChB82B,aAAchiC,EAAK4lC,YAAYhuB,KAAI,SAAC7Z,GAAD,OAAWA,EAAM6nC,eACpDsF,eAAgBlrC,EAAK4lC,eAEvByB,EACsB,OAApBrnC,EAAKkmC,WACDlmC,EAAKkmC,WACkB,OAAvBlmC,EAAKwmC,cACLxmC,EAAKwmC,cACL,IAEN,IAAMxB,GACJ,UAAAhlC,EAAK8lC,aAAL,eACI5gC,MAAMlF,EAAK8lC,MAAM2C,YAAY,KAAMzoC,EAAK8lC,MAAMl4B,QAC/CvH,SAAS,UAFZ,UAGArG,EAAK8lC,aAHL,aAGA,EACI5gC,MAAMlF,EAAK8lC,MAAM2C,YAAY,KAAMzoC,EAAK8lC,MAAMl4B,QAC/CvH,SAAS,WALZ,UAMArG,EAAK8lC,aANL,aAMA,EACI5gC,MAAMlF,EAAK8lC,MAAM2C,YAAY,KAAMzoC,EAAK8lC,MAAMl4B,QAC/CvH,SAAS,QAEZ+gC,KADEpC,GAKJvuB,GAAU,GACVlH,GAAKmgB,eAAe,CAClBgU,SAAU1jC,EAAK4M,MACfu4B,aAAcnlC,EAAK0hB,UACnB0jB,aAAcplC,EAAKomC,gBAGtB,IA8EH,SAASmF,GAAmBhD,EAAKiD,EAAUC,GACzC,IAAIC,EAAShd,SAASvnB,cAAc,UAChCwkC,EAAMD,EAAOE,WAAW,MACxBC,EAAM,IAAIC,MACdD,EAAIE,YAAc,YAClBF,EAAI7M,OAAS,WACX0M,EAAOM,OAASH,EAAIG,OACpBN,EAAO5+B,MAAQ++B,EAAI/+B,MACnB6+B,EAAIM,UAAUJ,EAAK,EAAG,GACtB,IAAIK,EAAUR,EAAOS,UAAUV,GAAgB,aAC/CD,EAASY,KAAK5tC,KAAM0tC,GAEpBR,EAAS,MAEXG,EAAI7sC,IAAMupC,EAGZ,IA+OMjB,GAAiB,SAACn3B,GACtBw2B,EAAQ,eAAKvG,EAAN,gBAAajwB,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UASvCwpC,GAAqB,SAACxpC,EAAO+G,GACnB,MAAV/G,GAA0B,qBAAT+G,EAPA,SAAC/G,GAClB4a,YAAwB,MAAV5a,GAAuC,KAAtBqiC,EAAK6F,eACtCgB,GAAe,GAMfO,CAAezpC,GAEfkpC,GAAe,GAEjBN,EAAQ,eAAKvG,EAAN,gBAAat7B,EAAO/G,MAGvBqjC,GAA0B,SAACrjC,GAE/B4oC,EAAQ,eAAKvG,EAAN,gBADI,eACgBriC,MAwBvB0pC,GAAoB,SAACC,GACzB,IAAM1C,EAAO,OAAG0C,QAAH,IAAGA,OAAH,EAAGA,EAAUrhC,SAAS,SAEjC+gC,KADEpC,IAiIN,OACE,oCACGrJ,GACD,kBAAC,IAAMjkB,SAAP,KACIovB,EA4aA,kBAAC,GAAD,CACE1G,KAAMA,EACN0E,aA96BW,SAAC1zB,EAAMtM,GAC1B6hC,EAAQ,eAAKvG,EAAN,gBAAat7B,EAAOsM,MA86BnB2zB,WAz6BS,SAAChnC,GAClBgpC,GAAe,GACfJ,EAAQ,eACHvG,EADE,CAELsD,SAAU3lC,EAAM2lC,SAChByB,aAAcpnC,EAAMonC,aACpBK,aAAcznC,EAAMynC,aACpB7sB,WAAY5a,EAAM4a,WAClBstB,cAAeloC,EAAMkoC,cACrBb,aAAcrnC,EAAMqnC,aACpBC,iBAAkBtnC,EAAMsnC,iBACxBC,mBAAoBvnC,EAAMunC,mBAC1B1C,cAAe7kC,EAAM6kC,cACrBqB,YAAalmC,EAAMkmC,YACnBjC,aAAcjkC,EAAMikC,gBAGtBzyB,GAAKmgB,eAAe,CAClByV,aAAcpnC,EAAMonC,aACpBC,aAAcrnC,EAAMqnC,gBAu5Bd2F,SAn1BO,WAAO,IAAD,IACrBt0B,GAAU,GACV,IAAMvT,EAAOZ,KAAK+G,MAAM1K,EAAe,SAEjCY,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGhBkmC,EAAc,GAClBvF,EAAK4B,aAAapqB,KAAI,SAAC7Z,GAAD,OAAW4nC,EAAYz9B,KAAK,CAAE09B,YAAa7nC,OAEjE,IAwEO,EAC0B,EAzE3BsuC,EAAe1G,EAAY/tB,KAAI,SAAC7Z,GACpC,IAAI2lB,EAASjX,OAAO6/B,OAAO,GAAIvuC,GAa/B,OAZAqiC,EAAK8K,eAAetzB,KAAI,SAACC,GACnBA,EAAK+tB,cAAgB7nC,EAAM6nC,aAC7BliB,EAAO6oB,eAAiB10B,EAAK00B,eAC7B7oB,EAAO0c,KAAOA,EAAK+K,QAEnBtzB,EAAK+tB,cAAgB7nC,EAAM6nC,aAC1BliB,EAAO6oB,iBAER7oB,EAAO6oB,eAAiB,GACxB7oB,EAAO0c,KAAOA,EAAK+K,WAGhBznB,KAEL1jB,EAAO,GAELe,EAAYiK,KAAOwhC,SAASpM,EAAKwC,eACnCyD,GAAW7B,iBAAiBpE,EAAKwC,eACjCxC,EAAKwC,cACH/hC,EAAUmK,KAAOwhC,SAASpM,EAAK6D,aACjCoC,GAAW7B,iBAAiBpE,EAAK6D,aACjC7D,EAAK6D,YACHiG,EACJ9J,EAAK2D,yBAAyBh5B,KAC1Bs7B,GAAWjC,eAAehE,EAAK2D,eAC/B3D,EAAK2D,cACL2G,EACJtK,EAAK8D,uBAAuBn5B,KACxBs7B,GAAWjC,eAAehE,EAAK8D,aAC/B9D,EAAK8D,YAEqB,KAA9B,UAAA9D,EAAKoF,oBAAL,eAAmB53B,SACkB,KAArC,UAAAwyB,EAAKoF,aAAa,GAAG+C,WAArB,eAA0B36B,SAE1B5N,EAAO,CACLysC,YAAa,CACX7/B,MAAOwzB,EAAKsD,SACZhiB,UAAW0e,EAAK+E,aAChBY,qBAAsB3F,EAAKznB,WAAa,EAAI,EAC5CqtB,uBAAwB5F,EAAK6F,cACzB1tB,SAAS6nB,EAAK6F,eACd,EACJE,mBAAoB5tB,SAAS6nB,EAAKiF,kBAClCe,SAAUhG,EAAKgF,aACfpkC,WAAYD,EACZulC,WAAY4D,EACZppC,SAAUD,EACV0lC,SAAUmE,EACVx/B,UAAWk1B,EAAKl1B,UAChB89B,QAAS5I,EAAK+K,OACd9pB,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B6e,OAAQ2oB,GAEVxsC,IACGuL,IAAIhM,EAAW,QAAUghC,EAAK+K,OAAS,IAAKnrC,EAAMT,GAClDwD,MAAK,WACJ0T,GAAU,GAEVilB,GAAIQ,KAAK,CACP1wB,Y5FrSV,+C4FsSU/F,UAHgB,eAKlBhD,OAAOC,SAAW,6BAGtB,UAAI09B,EAAKoF,aAAa,UAAtB,aAAI,EAAsB+C,KACxBgD,GAAkB,UAACnL,EAAKoF,aAAa,UAAnB,aAAC,EAAsB+C,KAAK,SAAUmE,GAEpD1sC,EADEglC,GACK,CACLyH,YAAa,CACX7/B,MAAOwzB,EAAKsD,SACZhiB,UAAW0e,EAAK+E,aAChBW,MAAO4G,EACPxG,WAAYjB,EACZc,qBAAsB3F,EAAKznB,WAAa,EAAI,EAC5CqtB,uBAAwB5F,EAAK6F,cACzB1tB,SAAS6nB,EAAK6F,eACd,EACJE,mBAAoB5tB,SAAS6nB,EAAKiF,kBAClCe,SAAUhG,EAAKgF,aACfpkC,WAAYD,EACZulC,WAAY4D,EACZppC,SAAUD,EACV0lC,SAAUmE,EACVx/B,UAAWk1B,EAAKl1B,UAChB89B,QAAS5I,EAAK+K,OACd9pB,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B6e,OAAQ2oB,GAGH,CACLI,YAAa,CACX7/B,MAAOwzB,EAAKsD,SACZhiB,UAAW0e,EAAK+E,aAChBzW,SAAUge,EACVlG,cAAevB,EACfc,qBAAsB3F,EAAKznB,WAAa,EAAI,EAC5CqtB,uBAAwB5F,EAAK6F,cACzB1tB,SAAS6nB,EAAK6F,eACd,EACJE,mBAAoB5tB,SAAS6nB,EAAKiF,kBAClCe,SAAUhG,EAAKgF,aACfpkC,WAAYD,EACZulC,WAAY4D,EACZppC,SAAUD,EACV0lC,SAAUmE,EACVx/B,UAAWk1B,EAAKl1B,UAChB89B,QAAS5I,EAAK+K,OACd9pB,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B6e,OAAQ2oB,GAGZxsC,IACGuL,IAAIhM,EAAW,QAAUghC,EAAK+K,OAAS,IAAKnrC,EAAMT,GAClDwD,MAAK,WACJ0T,GAAU,GAEVilB,GAAIQ,KAAK,CACP1wB,YAAa,+CACb/F,UAHgB,eAKlBhD,OAAOC,SAAW,+BAKtB1C,EADEglC,GACK,CACLyH,YAAa,CACX7/B,MAAOwzB,EAAKsD,SACZhiB,UAAW0e,EAAK+E,aAChBW,MAAO1F,EAAKoF,aAAavG,OACzBiH,WAAYjB,EACZc,qBAAsB3F,EAAKznB,WAAa,EAAI,EAC5CqtB,uBAAwB5F,EAAK6F,cACzB1tB,SAAS6nB,EAAK6F,eACd,EACJE,mBAAoB5tB,SAAS6nB,EAAKiF,kBAClCe,SAAUhG,EAAKgF,aACfpkC,WAAYD,EACZulC,WAAY4D,EACZppC,SAAUD,EACV0lC,SAAUmE,EACVx/B,UAAWk1B,EAAKl1B,UAChB89B,QAAS5I,EAAK+K,OACd9pB,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B6e,OAAQ2oB,GAGH,CACLI,YAAa,CACX7/B,MAAOwzB,EAAKsD,SACZhiB,UAAW0e,EAAK+E,aAChBzW,SAAU0R,EAAKoF,aAAavG,OAC5BuH,cAAevB,EACfc,qBAAsB3F,EAAKznB,WAAa,EAAI,EAC5CqtB,uBAAwB5F,EAAK6F,cACzB1tB,SAAS6nB,EAAK6F,eACd,EACJE,mBAAoB5tB,SAAS6nB,EAAKiF,kBAClCe,SAAUhG,EAAKgF,aACfpkC,WAAYD,EACZulC,WAAY4D,EACZppC,SAAUD,EACV0lC,SAAUmE,EACVx/B,UAAWk1B,EAAKl1B,UAChB89B,QAAS5I,EAAK+K,OACd9pB,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5B6e,OAAQ2oB,GAGZxsC,IACGuL,IAAIhM,EAAW,QAAUghC,EAAK+K,OAAS,IAAKnrC,EAAMT,GAClDwD,MAAK,WACJ0T,GAAU,GAEVilB,GAAIQ,KAAK,CACP1wB,YAAa,+CACb/F,UAHgB,eAKlBhD,OAAOC,SAAW,6BAmnBlB8M,UAAWA,EACXy1B,eAAgBA,EAChBjlC,KAAMvB,EACN6E,MAAOA,EACP+J,OAAQA,IApbV,kBAAC,IAAMqK,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMvB,IAC5B,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAM2O,SAAUC,EAAQ1H,KAAK,SAC3B,kBAAC,KAAD,CACExG,UAAU,gCACV2F,KAAK,iBACL2V,cAAe,CACbC,UAAU,GAEZnL,KAAMA,IAEN,kBAAC,IAAD,CAAKpQ,UAAU,QACb,wBAAIA,UAAU,QACQ,IAAnBihC,EAAKl1B,WAAsC,IAAnBk1B,EAAKl1B,UtGtrBjC,YADA,csG6rBD,yBAAK/L,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACRnD,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CACEtC,QAASwK,GACT/K,KAAK,QACL2M,UAAQ,KAId,kBAAC,IAAD,CAAKlJ,KAAM,IACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,KAAM,GAAIC,GAAI,GAAIvH,UAAU,cAC/B,kBAAC,GAAD,CACEuO,MtG/nBZ,asGgoBY3P,MAAOqiC,EAAKsD,UAEZ,kBAAC,GAAD,CACEnlB,WAAS,EACT/N,UAAW,GACXR,QAAQ,YACRjS,MAAOqiC,EAAKsD,SACZ56B,GAAG,WACHoH,SAAU,SAACC,GAAD,OAAOm3B,GAAen3B,IAChCtC,OAAQ,SAACsC,GAAD,OA/ElB,SAACA,GAC3B,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIhB0Q,EAAEuF,OAAO3X,QAAU2E,GAASwB,MAAM0I,OACpC/M,IACGC,KAAKV,EAAW,aAAc,CAAEwN,MAAOuD,EAAEuF,OAAO3X,OAASwB,GACzDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACN6mC,EAAax2B,EAAIrQ,KAAK,OAgEqB4nC,CAAoBz3B,IACnCI,aAAa,MACb2F,SACqB,IAAnBkqB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,UAEP/L,UAAS,mBAAc8+B,KAAO4J,eAGjB,kBAAdjB,GACCxG,EAAKsD,SACFjzB,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChCwyB,EAAKsD,SAAS91B,OAAS,GACrB,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGL,gBAAbi2B,GACC,kBAAC,KAAD,CACErjC,QAASopC,oBACT3pC,KAAK,QACL2M,UAAQ,MAKhB,kBAAC,IAAD,CAAKlJ,KAAM,GAAIC,GAAI,GAAIvH,UAAU,cAC/B,kBAAC,GAAD,CACEuO,M7FhwBX,c6FiwBW3P,MAAOqiC,EAAK+E,cAEZ,kBAAC,KAAKt/B,KAAN,CACE1G,UAAU,WACV2F,KAAK,eACLgE,GAAG,eACH+H,eAAe,WAEf,kBAAC,IAAD,CACE1R,UAAU,gBACV6Q,QAAQ,WACRlH,GAAG,eACHhE,KAAK,eACL/G,MAAOqiC,EAAK+E,aACZjvB,SACqB,IAAnBkqB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,UAEPqF,aAAa,MACbC,UAAW,IACXN,SAAU,SAACC,GAAD,OAAOm3B,GAAen3B,SAKxC,kBAAC,IAAD,CAAK1J,KAAM,GAAItH,UAAU,mBACQ,KAA9B,UAAAihC,EAAKoF,oBAAL,eAAmB53B,SAClB,4BtGjsBhB,UsGmsBc,kBAAC,KAAK/H,KAAN,CACEf,KAAK,SACL3F,UAAU,cACV0f,cAAc,YAEd,oCACE,kBAAC,KAAD,CACEwhB,SAAS,UACTxB,SAAUuB,EAAKoF,aACft1B,SAAU,SAACnS,GAAD,OAvRtB,SAACA,EAAO+G,GAClC,GAAuB,IAAnBs7B,EAAKl1B,WAAsC,IAAnBk1B,EAAKl1B,UAC/B,OAAO,KAEmB,YAAtBnN,EAAM4gC,KAAK/f,QACbuoB,IAAgB,GAElB,IAAItI,EAAW9gC,EAAM8gC,SAAS35B,OAAO,GACrCuiC,GAAkB1pC,EAAM4gC,KAAK37B,MAC7B67B,EAAS7yB,SAAQ,SAAU2yB,EAAMzmB,GAC/B,IAAI4mB,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAC7uB,GACfwuB,EAAKM,OAAS9uB,EAAEuF,OAAOwpB,QAEzBJ,EAAOK,cAAcR,EAAKS,kBAE5BiI,EAAkBtpC,EAAM4gC,KAAK75B,MAC7B6hC,EAAQ,eAAKvG,EAAN,gBAAat7B,EAAO+5B,KAuQWmB,CACEjiC,EACA,iBAGJuiC,aAAc,SAACviC,GAAD,OApN3B,SAAC4gC,EAAM75B,GAChC,GAAuB,IAAnBs7B,EAAKl1B,WAAsC,IAAnBk1B,EAAKl1B,UAC/B,OAAO,KAEP,IAAI48B,EAAcnJ,EAAK75B,KAAKuB,SAAS,QACjC0hC,EAAcpJ,EAAK75B,KAAKuB,SAAS,SACjC2hC,EAAarJ,EAAK75B,KAAKuB,SAAS,QAChC4hC,EAAatJ,EAAK75B,KAAKuB,SAAS,QAE9B6hC,EACU,eAAdvJ,EAAK37B,MACS,cAAd27B,EAAK37B,MACS,cAAd27B,EAAK37B,MACS,oBAAd27B,EAAK37B,MACL8kC,GACAC,GACAC,GACAC,EAEGC,EAIHf,IAAgB,IAHhBA,IAAgB,GAChB5jC,KAAQD,MAAR,UAAiBq7B,EAAK75B,KAAtB,2CAIF,IAAMkgC,EACU,eAAdrG,EAAK37B,MACS,cAAd27B,EAAK37B,MACS,cAAd27B,EAAK37B,KACDmlC,EACU,oBAAdxJ,EAAK37B,MACL8kC,GACAC,GACAC,GACAC,EACIG,EAASzJ,EAAKh5B,KAAO,KAAO,KAAO,EACnC0iC,EAAU1J,EAAKh5B,KAAO,KAAO,KAAO,GAkB1C,OAjBIq/B,KACGoD,GAAUpD,GACbmC,IAAgB,GAChB5jC,KAAQD,MAAM,iCAEd6jC,IAAgB,IAIhBgB,KACGE,GAAWF,GACdhB,IAAgB,GAChB5jC,KAAQD,MAAM,qCAEd6jC,IAAgB,IAGZe,GAAcE,GAAWC,EA+JKpI,CACEliC,IAIJwiC,SAAU,kBArQ3B,WACrB,GAAuB,IAAnBH,EAAKl1B,WAAsC,IAAnBk1B,EAAKl1B,UAC/B,OAAO,KAmQ6Cg1B,IAChBM,UAAW,SAACziC,GAAD,OAhPf4gC,EAiP2B5gC,EAjPlC,EAAAwjB,EAAAC,OAAA,gDACV,MAAbmd,EAAK0M,IACPE,GAAmB5M,EAAK4J,KAAK,SAAUmE,GAErC/F,EAAQ,eACHvG,EADE,CAELO,aAAc+L,EACdjM,gBAAgB,EAChBC,aAAc/B,EAAK75B,WAIvB6hC,EAAQ,eACHvG,EADE,CAELO,aAAchC,EAAKM,OACnBwB,gBAAgB,EAChBC,aAAc/B,EAAK75B,QAhBI,yCAAO65B,GAmPIx/B,UAAU,8BACVs/B,OAAO,yGAEuB,IAA7B2B,EAAKoF,aAAa53B,OACjB,kBAAC,KAAD,CACE5K,KAAK,OACL7D,UAAU,aAEV,0BAAMA,UAAU,0BAAgC,ItGnuBhE,sBsGsuBgB,MAEN,kBAAC,KAAD,CACEuS,QAAS0uB,EAAKK,eACd7zB,MAAOwzB,EAAKM,aACZhuB,UAAQ,EACRF,KAAM,SAACzU,GAAD,OAxpBd4oC,EAAQ,eAAKvG,EAAN,CAAYK,gBAAgB,MAypB3B9tB,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjBnK,MAAO,CAAEwK,QAAS,SAEpBJ,OAAO,SAEP,yBACE3T,IAAI,UACJuJ,MAAO,CAAEqE,MAAO,QAChB9N,IAAKohC,EAAKO,qBAQxB,kBAAC,IAAD,CAAKl6B,KAAM,GAAItH,UAAU,cACvB,kBAAC,IAAD,CAAKA,UAAU,6BACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIC,GAAI,EAAGC,GAAI,EAAGw3B,GAAI,GAC/B,kBAAC,KAAKt4B,KAAN,CACEf,KAAK,aACL4I,M7Fh1BL,uB6Fi1BKvO,UAAU,QAEV,kBAAC,KAAD,CACE2J,GAAG,aACH6Z,QAASyd,EAAKznB,WACdzC,SACqB,IAAnBkqB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,UAEPgF,SAAU,SAACyS,EAASxS,GAAV,OA3X/B,SAACwS,EAASxS,GACzBw2B,EAAQ,eAAKvG,EAAN,gBAAajwB,EAAEuF,OAAO5M,GAAK6Z,KA2XIzS,CAASyS,EAASxS,QAKzBiwB,EAAKznB,WACJ,kBAAC,IAAD,CAAKlS,KAAM,GAAIE,GAAI,GACjB,kBAAC,GAAD,CACE+G,M7Ft2BN,2B6Fu2BM3P,MAAOqiC,EAAK6F,eAEZ,kBAAC,KAAKpgC,KAAN,CACE1G,UAAU,gBACV2F,KAAK,UAEL,oCACE,kBAAC,MAAD,GACE3F,UAAU,gBACV6Q,QAAQ,UAFV,2BAGY,YAHZ,0BAKuB,IAAnBowB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,WANT,uBAS2B,MAAvBk1B,EAAK6F,cACD,GACA7F,EAAK6F,eAXb,2BAaY,SAACloC,GAAD,OACRwpC,GACExpC,EACA,oBAhBN,GAoBE,kBAAC,KAAOmT,OAAR,CAAenT,MAAM,KvGz5B1C,auG45BqB,kBAAC,KAAOmT,OAAR,CAAenT,MAAM,KvG35B1C,auG85BqB,kBAAC,KAAOmT,OAAR,CAAenT,MAAM,KvG75BxC,mBuGo6BYipC,GACC,kBAAC,KAAKnhC,KAAN,KACE,kBAAC,KAAD,CACEtC,QzF94Bb,uCyF+4BaP,KAAK,QACL2M,UAAQ,MAMhB,kBAAC,IAAD,WAQZ,yBAAKxQ,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CAAKA,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,WACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIC,GAAI,EAAGvH,UAAU,cAC9B,kBAAC,GAAD,CACEuO,M7Fx6BT,gB6Fy6BS3P,MAAOqiC,EAAKiF,kBAEZ,kBAAC,KAAKx/B,KAAN,CACE1G,UAAU,WACV2F,KAAK,gBAEL,oCACE,kBAAC,MAAD,GACE3F,UAAU,GACV6Q,QAAQ,gBAFV,2BAGY,YAHZ,oBAIK,oBAJL,0BAMuB,IAAnBowB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,WAPT,uBASSk1B,EAAKiF,kBATd,2BAUY,SAACtnC,GAAD,OACRwpC,GACExpC,EACA,uBAbN,GAiBE,kBAAC,KAAOmT,OAAR,CACEnT,MAAM,IACNmY,SACyB,KAAvBkqB,EAAK6F,eACkB,MAAvB7F,EAAK6F,evG19BxB,iBuG+9Be,kBAAC,KAAO/0B,OAAR,CACEnT,MAAM,IACNmY,SACyB,KAAvBkqB,EAAK6F,eACkB,MAAvB7F,EAAK6F,evGl+BtB,mBuGu+Ba,kBAAC,KAAO/0B,OAAR,CACEnT,MAAM,IACNmY,SACyB,KAAvBkqB,EAAK6F,eACkB,MAAvB7F,EAAK6F,evG1+B1B,oBuGo/BO,kBAAC,IAAD,CAAKx/B,KAAM,GAAIC,GAAI,GAAIvH,UAAU,cAC/B,kBAAC,GAAD,CACEuO,M7Fl+Bd,W6Fm+Bc3P,MAAOqiC,EAAKgF,cAEZ,kBAAC,KAAKv/B,KAAN,CACE1G,UAAU,sBACV2F,KAAK,eACLgE,GAAG,gBAEH,kBAAC,KAAD,GACE3J,UAAU,2BACV2F,KAAK,eACLgE,GAAG,eACHkH,QAAQ,gBAJV,2BAKY,YALZ,0BAOuB,IAAnBowB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,WART,8BAUgBk1B,EAAKgF,cAVrB,uBAWShF,EAAKgF,cAXd,2BAYY,SAACj1B,GAAD,OAAOm3B,GAAen3B,MAZlC,8BAae,OAbf,2BAca,KAdb,OAmBN,kBAAC,IAAD,CAAK1J,KAAM,GAAItH,UAAU,QACI,MAA1BihC,EAAKiF,iBACJ,kBAAC,KAAD,iBACMZ,GADN,CAEE1mC,MAAOqiC,EAAKkF,mBACZxgC,KAAK,qBACLoR,SACqB,IAAnBkqB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,UAEPgF,SAAU,SAACnS,GAAD,OACRwpC,GACExpC,EACA,uBAGJ2qC,WAAW,UAEe,MAA1BtI,EAAKiF,iBACP,6BACE,kBAAC,GAAD,CACEjE,wBACEA,GAEFY,aAAc5B,EAAK4B,aACnB9rB,SACqB,IAAnBkqB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,aAIiB,MAA1Bk1B,EAAKiF,iBACP,kBAAC,GAAD,CACErD,aAAc5B,EAAK4B,aACnBZ,wBACEA,GAEFlrB,SACqB,IAAnBkqB,EAAKl1B,WACc,IAAnBk1B,EAAKl1B,YAGP,QAKV,yBAAK/L,UAAU,QACb,kBAAC,KAAD,CACE6D,KAAK,UACL7D,UAAU,UACV2G,QAv3Bd,SAACqK,GACjBA,EAAEqB,iBAEA01B,IACA9G,EAAKsD,UACLtD,EAAKsD,SAASjzB,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAAS,GAC/DwyB,EAAK+E,cACL/E,EAAK+E,aAAa10B,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAAS,GACnEwyB,EAAKiF,kBACLjF,EAAKiF,iBAAiB50B,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAC5D,GACFwyB,EAAKgF,aAEDhF,EAAKznB,WACoB,MAAvBynB,EAAK6F,eACPz2B,GAAU,GACVu3B,GAAe,KAEfv3B,GAAU,GACVu3B,GAAe,IAEkB,MAA1B3G,EAAKiF,iBACmB,IAA7BjF,EAAK4B,aAAap0B,QACpB4B,GAAU,GACVu3B,GAAe,KAEfv3B,GAAU,GACVu3B,GAAe,IAEkB,MAA1B3G,EAAKiF,iBACkB,IAA5BjF,EAAKkF,oBAA6BlF,EAAKkF,oBAIzC91B,GAAU,GACVu3B,GAAe,KAJfv3B,GAAU,GACVu3B,GAAe,KAMjBv3B,GAAU,GACVu3B,GAAe,KAGjBv3B,GAAU,GACVu3B,GAAe,MtGrJE,WsGq+BS,kBAAC,MAAD,GACE/jC,KAAK,aADP,sBAEO,aAFP,0BAGW,UAHX,0BAhlBb,WACf6E,EAAQK,KAAK,4BA+kBe,GAMGrE,iBC7kC3B0E,GAAWD,IAAXC,OACAmC,GAAY7D,IAAZ6D,QAEFkiC,G,YACJ,WAAYnuC,GAAQ,IAAD,uBACjB,4CAAMA,KA2CRiN,SAAW,SAAC3N,GAAW,IACbiC,EAAS,EAAKkE,MAAdlE,KACF2L,EAAW,EAAKC,SAAS5L,EAAMjC,GACrC,EAAKkJ,SAAS,CAAE4E,WAAYF,KA/CX,OAmBjB,EAAKzH,MAAQ,CACX0E,QAjBc,CACd,CACEgE,MAAO,YACPC,UAAW,QACXhP,IAAK,OACLiP,MAAO,MACPC,OAAQ,SAACjI,GACP,MAAO,CACLkI,SAAUlI,EACVrG,MAAO,CACL,aAAc,iBAQtBuB,KAAM,IArBS,E,kFA2BjB6C,EADqBrE,KAAKC,MAAlBoE,UACCynC,Q,yCAGQ7qB,GAAY,IAAD,OACtB+qB,EAAchsC,KAAKC,MAAnB+rC,UAEF/qB,EAAU+qB,YAAcA,GAC1BhsC,KAAKyI,SACH,CACEjH,KAAMwqC,IAER,WACE,EAAK9+B,SAAS,S,+BAWbW,EAAKC,GACZ,OAAKA,GAA2B,KAAdA,GAAkC,OAAdA,EAG/BD,EAAIE,QAAO,SAAUC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAU9O,GACrC,GAAwB,kBAAb2O,EAAI3O,GACb,OAAO2O,EAAI3O,GAAKoH,cAAcoB,SAASiG,EAAUrH,qBAL9CoH,I,+BAWT,OACE,oCACE,kBAAC,IAAD,CAAKlN,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,sBAAsBqG,YAAU,aAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYf,WAAS,EAACzE,KAAMxB,KAAKC,QACjC,kBAAC,GAAD,CAASU,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,yBACV,kBAAC,KAAWiH,KAAZ,KvG3FD,UuG6FD,kBAAC,IAAD,CAASjH,GAAG,eACV,kBAAC,KAAWiH,KAAZ,KvGxEK,gBuG0EP,kBAAC,KAAWA,KAAZ,KvGjFK,euGoFT,kBAAC,IAAD,CAAK1G,UAAU,QACb,4B7FlEO,+B6FoET,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,GAAIxH,UAAU,2BAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,EAAGxH,UAAU,cAC9B,kBAAC,GAAD,CACE+N,YvG9EN,SuG+EMxB,SAAUlN,KAAKkN,gBAO3B,yBAAKvM,UAAU,eACb,kBAAC,GAAD,CACE0J,OAAO,aACPD,QAASpK,KAAK0F,MAAM0E,QACpB5I,KAAMxB,KAAK0F,MAAM2H,uB,GA1GT/M,IAAMP,WA0InB2H,oBAPf,SAAyBhC,GAEvB,MAAO,CACLsmC,UAFoBtmC,EAAMk8B,KAApBoK,aAMKtkC,CAAyB0mC,ICvHhC17B,GAAWsI,KAAXtI,OA4RO27B,GA1Re,SAAC,GAexB,IAdLn+B,EAcI,EAdJA,KACAo+B,EAaI,EAbJA,WACAC,EAYI,EAZJA,oBACAn+B,EAWI,EAXJA,sBACAC,EAUI,EAVJA,sBACAmxB,EASI,EATJA,oBACAgN,EAQI,EARJA,qBACA76B,EAOI,EAPJA,aACA8tB,EAMI,EANJA,mBACAnxB,EAKI,EALJA,8BAEAkP,GAGI,EAJJN,QAII,EAHJM,aACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,oBACI,EACkC3Q,mBAAS,CAC7C4Q,SAAU,KAFR,gCAIuB5Q,oBAAS,IAJhC,mBAIGjK,EAJH,KAIUkM,EAJV,OAKkCjC,oBAAS,GAL3C,mBAKgB6Q,GALhB,aAMW/O,KAAKC,UAAbC,EANH,oBA4DIE,EAAgBC,KAAhBD,YAER,OACE,kBAAC,KAAD,CACEjK,YAAU,uBACVrG,UAAU,wCACV2F,KAAK,iBACLyK,KAAMA,GAELjM,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CAAOtC,QAASwK,GAAkB/K,KAAK,QAAQ2M,UAAQ,KAI3D,kBAAC,GAAD,CACEjC,M/F1GqB,gB+F2GrB3P,MAAOgvC,EAAoBE,eAE3B,kBAAC,KAAKpnC,KAAN,CACE1G,UAAU,WACV2F,KAAK,gBACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,Q3FzHsB,gC2F4H1BgN,aAAa,OAEb,kBAAC,KAAD,CACEgO,WAAS,EACT/N,UAAW,GACXzS,MAAOgvC,EAAoBE,cAC3B/8B,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCtC,OAAQ,SAACsC,GAAD,OA3DO,SAACA,GACxB,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACGC,KACCV,EAAW,iBACX,CAAEu1B,cAAeoY,EAAoBE,eAErC1tC,GAEDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACNie,EAAmB5N,EAAIrQ,KAAK,OAwCXye,IACf3V,GAAG,gBACH3J,UAAU,gBACV6Q,QAAQ,gBACRO,aAAa,QAES,iBAAvB2N,GACC6uB,EAAoBE,cACjBx8B,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChCm/B,EAAoBE,cAAcr/B,OAAS,GACzC,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGK,gBAAvBuN,GACC,kBAAC,KAAD,CACE3a,QAASiL,GACTxL,KAAK,QACL2M,UAAQ,MAKhB,kBAAC,GAAD,CAAYjC,M/F5JS,c+F4JW3P,MAAOgvC,EAAoBvhC,aACzD,kBAAC,KAAK3F,KAAN,CACE1G,UAAU,WACV2F,KAAK,cACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,Q3F/JmB,8B2FmKvB,oCACE,kBAAC,KAAD,CACEpE,UAAU,gBACVpB,MAAOgvC,EAAoBvhC,YAC3B0E,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCrH,GAAG,cACHkH,QAAQ,cACRO,aAAa,WAMrB,kBAAC,GAAD,CAAY7C,MAAOhE,GAAM3L,MAAM,SAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,oCACnB,kBAACsQ,EAAD,CACEtQ,UAAU,iDACV2F,KAAK,QACL/G,MAAOgvC,EAAoBpuB,MAC3BzO,SAAU,SAACkB,GAAD,OAAUtC,EAA8BsC,EAAM,UACxDC,aAvHW,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QAuHrC8J,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS8K,SAMnB,kBAAC,GAAD,CAAYX,MAAO9D,GAAQ7L,MAAOgvC,EAAoBnuB,QACpD,kBAAC,KAAK/Y,KAAN,CACE1G,UAAU,WACV2F,KAAK,SACLsW,MAAO,CACL,CACEC,UAAU,EACV9X,Q3FtMe,0B2F0MnB,oCACE,kBAAC,KAAD,CACEpE,UAAU,8BACVpB,MAAOgvC,EAAoBnuB,OAC3B5O,QAAQ,SACRiB,SAAU,SAAClT,GAAD,OAAW8Q,EAAsB9Q,EAAO,YAElD,kBAAC,GAAD,CAAQA,MAAM,KAAK0F,GACnB,kBAAC,GAAD,CAAQ1F,MAAM,KzGrOG,iByG2OzB,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,IACnB,kBAAC,KAAK0G,KAAN,CACE1G,UAAU,0BACV2F,KAAK,SACL+Z,cAAc,YAEd,kBAAC,KAAD,CACEwhB,SAAS,UACTxB,SAAUkO,EAAoBpO,KAC9B2B,aAAc,SAACviC,GAAD,OAAWkiC,EAAmBliC,IAC5CmS,SAAU,SAACnS,GAAD,OAAWiiC,EAAoBjiC,EAAO,SAChDyiC,UAAW,SAACziC,GAAD,OAAWivC,EAAqBjvC,IAC3C0gC,OAAO,oCAE8B,IAApCsO,EAAoBpO,KAAK/wB,QACxB,kBAAC,KAAD,CAAQ5K,KAAK,OAAO7D,UAAU,aAC5B,0BAAMA,UAAU,0BxG3IJ,iBwGgJlB,kBAAC,KAAD,CACEA,UAAU,iBACVuS,QAASq7B,EAAoBtM,eAC7B7zB,MAAOmgC,EAAoBrM,aAC3BhuB,UAAQ,EACRF,KAAM,SAACzU,GAAD,OAAWoU,EAAapU,IAC9B4U,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,OxGhKoB,SwGkKpB,yBACE3T,IAAI,UACJuJ,MAAO,CAAEqE,MAAO,QAChB9N,IAAK+tC,EAAoBpM,gBAK5B3iB,EAAY+uB,EAAoBjuB,gBAC/B,yBAAK3f,UAAU,2CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,iDACb,0BAAMA,UAAU,oCACd,uBAAGA,UAAU,kCACV4f,KAAgBguB,EAAoB/tB,WAGvC,0BACE7f,UAAU,mEACVyN,MAAOoR,EAAY+uB,EAAoBjuB,gBAEtCd,EAAY+uB,EAAoBjuB,sBAShDguB,GACC,kBAAC,KAAKjnC,KAAN,KACE,kBAAC,KAAD,CAAOtC,Q3F9RoB,0B2F8RYP,KAAK,QAAQ2M,UAAQ,KAGhE,kBAAC,KAAK9J,KAAN,KACE,kBAAC,KAAD,CACE7C,KAAK,UACLuO,SAAS,SACTzL,QA1PY,SAACqK,GACnBA,EAAEqB,iBAEAu7B,EAAoBE,eACpBF,EAAoBE,cAAcx8B,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IACnE7C,OAAS,GACZm/B,EAAoBvhC,aACpBuhC,EAAoBvhC,YAAYiF,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IACjE7C,OAAS,GACZm/B,EAAoBpO,MACpBoO,EAAoBpO,KAAK/wB,OAAS,GAClCm/B,EAAoBnuB,QACpBmuB,EAAoBpuB,MAEfmuB,GAAqC,iBAAvB5uB,IACjB1O,GAAU,GACV4O,GAAe,GACf1P,KAGFc,GAAU,IAuONhK,YAAU,eAET7B,MC3SLupC,G,YACJ,WAAYzuC,GAAQ,IAAD,8BACjB,4CAAMA,KA2CRiN,SAAW,SAAC3N,GAAW,IACbmhB,EAAiB,EAAKhb,MAAtBgb,aACFvT,EAAW,EAAKC,SAASsT,EAAcnhB,GAC7C,EAAKkJ,SAAS,CAAE4E,WAAYF,KA/CX,EAkDnBwT,MAAQ,WACN,EAAKlY,SAAS,CACZmY,mBAAmB,KApDJ,EAwDnB7J,YAAc,WACZ,EAAK9W,MAAMwV,QAzDM,EA4DnBoL,YAAc,WAC2C,IAAnD,EAAK5gB,MAAM0uC,gBAAgB5tB,aAAa3R,OAC1C,EAAKnP,MAAMiQ,OAEX,EAAKzH,SAAS,CAAEuY,WAAW,KA9D7B,EAAKtb,MAAQ,CACXgb,aAAc,GACdE,kBAAmB,QACnBI,WAAW,EACXnS,QAAQ,GANO,E,iFAUE,IACXxK,EAAarE,KAAKC,MAAlBoE,SACRrE,KAAKyI,SAAS,CAAEoG,QAAQ,IACxBxK,EAASwW,Q,yCAGQoG,GAAY,IAAD,OACtBlG,EAAkB/a,KAAKC,MAAvB8a,cACFkG,EAAUlG,eAAiBA,GAC7B/a,KAAKyI,SACH,CACEiY,aAAc3F,EACdlM,QAAQ,IAEV,WACE,EAAK3B,SAAS,S,+BAMbW,EAAKC,GACZ,OAAKA,GAA2B,KAAdA,GAAkC,OAAdA,EAG/BD,EAAIE,QAAO,SAAUC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAU9O,GACrC,GAAwB,kBAAb2O,EAAI3O,GACb,OAAO2O,EAAI3O,GAAKoH,cAAcoB,SAASiG,EAAUrH,qBAL9CoH,I,+BAmCD,IAAD,OAEDqT,EAAe,CACnBC,gBAF0BnhB,KAAKC,MAAM0uC,gBAA/BxtB,gBAGNzP,SAAU1R,KAAKC,MAAM2V,uBAGjBxL,EAAU,CACd,CACEgE,MAAOpD,GACPqD,UAAW,YACXhP,IAAK,YACLiP,MAAO,OAET,CACEF,MAAOnD,GACPoD,UAAW,WACXhP,IAAK,WACLiP,MAAO,OAET,CACEF,MAAOjD,GACPkD,UAAW,gBACXhP,IAAK,gBACLiP,MAAO,OAET,CACEF,MAAO/C,GACPgD,UAAW,SACXE,OAAQ,SAACsD,GACP,IAAIoF,EAAO,GACX,IAAK,IAAIqE,KAAYzJ,EACE,GAAjBA,EAAIyJ,KACU,UAAZA,IACFA,EAAW,UAEG,eAAZA,IACFA,EAAW,UAEG,YAAZA,IACFA,EAAW,OAGM,GAAfrE,EAAK7H,OAAa6H,GAAQqE,EACzBrE,GAAQ,KAAOqE,GAGxB,OAAO,8BAAOrE,IAEhB3I,MAAO,OAET,CACEF,MAAOhD,GACPiD,UAAW,GACXhP,IAAK,IACLiP,MAAO,MAMPC,OAAQ,kBACN,yBAAK5N,UAAU,2BACb,0BAAMA,UAAU,gBACfsE,MAKT,OACE,6BACE,kBAAC,IAAD,CAAK+B,YAAU,uBAAuBiB,KAAM,IAC1C,kBAAC,IAAD,CAAKtH,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,GAAIxH,UAAU,2BAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,EAAGxH,UAAU,cAC9B,kBAAC,KAAD,CACE+N,YzGjIO,cyGkIPxB,SAAUlN,KAAKkN,gBAO1BlN,KAAK0F,MAAMsb,WACV,kBAAC,KAAD,CAAOjc,Q5FlJoB,yB4FkJYP,KAAK,QAAQ2M,UAAQ,IAE9D,kBAAC,IAAD,CAAMvC,SAAU5O,KAAK0F,MAAMmJ,OAAQ1H,KAAK,SACtC,yBAAKmD,GAAG,kBACN,kBAAC,KAAD,CACE4W,aAAcA,EACd9W,QAASA,EACTK,WAAYzK,KAAK0F,MAAM2H,WACvBhD,OAAO,uBAIX,yBAAK1J,UAAU,qBACb,kBAAC,KAAD,CACEA,UAAU,OACV6D,KAAK,YACLyF,MAAO,CAAEmX,OAAQ,SACjB9Z,QAAS,kBAAM,EAAKyP,eACpB/P,YAAU,eAET5B,GAEH,kBAAC,KAAD,CACEzE,UAAU,KACV6D,KAAK,UACL8C,QAAS,kBAAM,EAAKuZ,eACpB7Z,YAAU,eAET7B,U,GAvLqB7E,IAAMP,WAwM3B2H,oBARf,SAAyBhC,GAGvB,MAAO,CACLqV,cAHwBrV,EAAMqO,UAAxBgH,cAINhW,QAHkBW,EAAMX,QAAlBA,WAMK2C,CAAyBgnC,IC/MhCrtB,GAAavX,IAAbuX,SA6KOutB,GA3KiB,SAAC,GAO1B,IAAD,EANJn5B,EAMI,EANJA,KACA8L,EAKI,EALJA,iBACAstB,EAII,EAJJA,gBACAF,EAGI,EAHJA,gBACAH,EAEI,EAFJA,qBACA76B,EACI,EADJA,aACI,EACW9C,KAAKC,UAAbC,EADH,oBAUE0Q,EAAoBktB,EAAgBjtB,aAAatI,KACrD,SAACuI,GAAD,OAAaA,EAAQzG,UAAY,IAAMyG,EAAQxG,YAGzClK,EAAgBC,KAAhBD,YAER,OACE,kBAAC,KAAD,CACEjK,YAAU,yBACVrG,UAAU,yBACV2F,KAAK,iBACLyK,KAAMA,GAEN,kBAAC,KAAK1J,KAAN,CAAWf,KAAK,iBACd,oCACE,kBAAC,GAAD,CACEyZ,WAAS,EACTrI,UAAU,EACV1F,UAAW,GACXzS,MAAOsvC,EAAgBJ,cACvBnkC,GAAI,gBACJ3J,UAAU,+BACV6Q,QAAQ,oBAId,kBAAC,KAAKnK,KAAN,CAAWf,KAAK,eACd,oCACE,kBAAC,GAAD,CACEoR,UAAU,EACV/W,UAAU,4BACVpB,MAAOsvC,EAAgB7hC,YACvB1C,GAAI,cACJkH,QAAQ,kBAKd,kBAAC,KAAKnK,KAAN,CAAW1G,UAAU,oCACnB,oCACE,kBAACsQ,EAAD,CACEtQ,UAAU,wCACV2F,KAAK,QACL/G,MAAOsvC,EAAgB1uB,MACvBzI,UAAQ,MAId,yBAAK/W,UAAU,qBACb,yBAAKA,UAAU,8BACb,kBAAC,KAAK0G,KAAN,CAAWf,KAAK,UACd,oCACE,kBAAC,KAAD,CACE3F,UAAU,gBACVpB,MAAOsvC,EAAgBzuB,OACvB5O,QAAQ,SACRkG,UAAU,GAEV,kBAAC,KAAOhF,OAAR,CAAenT,MAAM,KAAK0F,GAC1B,kBAAC,KAAOyN,OAAR,CAAenT,MAAM,K3GlFN,a2GkF4C,QAKnE,yBAAKoB,UAAU,8BACb,kBAAC,KAAK0G,KAAN,CAAWf,KAAK,aACd,oCACE,kBAAC,IAAD,CACE3F,UAAU,gBACV6Q,QAAQ,cACRlH,GAAImX,EACJ/J,UAAQ,EACRnY,MAAOkiB,EAAkBI,KAAK,YAMxC,kBAAC,KAAKxa,KAAN,CAAW1G,UAAU,iBACnB,kBAAC,KAAK0G,KAAN,CAAW1G,UAAU,2BACnB,kBAAC,KAAD,CACEmuC,OAAO,mDACPjN,SAAS,UACTnqB,UAAQ,EACR2oB,SAAUwO,EAAgB1O,KAC1B6B,UAAW,SAACziC,GAAD,OAAWivC,EAAqBjvC,MAG7C,kBAAC,KAAD,CACEoB,UAAU,iBACVuS,QAAS27B,EAAgB5M,eACzB7zB,MAAOygC,EAAgB3M,aACvBhuB,UAAQ,EACRF,KAAM,SAACzU,GAAD,OAAWoU,EAAapU,IAC9B4U,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,O1GfoB,S0GiBpB,yBACE3T,IAAI,UACJuJ,MAAO,CAAEqE,MAAO,QAChB9N,IAAKquC,EAAgB1M,kBAyB7B,yBAAKxhC,UAAU,qBACb,kBAAC,MAAD,GACE6D,KAAK,YACL7D,UAAU,QAFZ,sBAGO,aAHP,uBAIS,CAAEygB,OAAQ,UAJnB,0BAKW,UALX,0BAzIgB,SAACzP,GACrBA,EAAEqB,iBACFyC,OAuII,2BAOY,iBAPZ,GASGrQ,GAEH,kBAAC,KAAD,CACEZ,KAAK,UACL7D,UAAU,KACVoS,SAAS,SACTzL,QApJgB,SAACqK,GACvB4P,KAoJMva,YAAU,iB1GhHE,a2GzBdkF,GAAY7D,IAAZ6D,QAEA0L,GAASC,KAATD,KAEFE,GAAQ,CACZ,CACE1J,M5GzBiC,c4G0BjClH,QAAS,iBAEX,CACEkH,M5G5BiC,kB4G6BjClH,QAAS,kBAEX,CACEkH,M5G/BiC,iB4GgCjClH,QAAS,iBAITrG,GAAWC,EAAQ,IAoSRiuC,GAnSU,SAAC9uC,GAAW,IAAD,EACJ8O,mBAAS,GADL,mBAC3BpK,EAD2B,KAClBqT,EADkB,OAEEjJ,oBAAS,GAFX,mBAE3Bu/B,EAF2B,KAEfU,EAFe,OAGNjgC,oBAAS,GAHH,mBAG3BF,EAH2B,KAGnBoJ,EAHmB,OAIYlJ,mBAAS,CACrD0/B,cAAe,GACfzhC,YAAa,GACboT,OAAQ,GACRD,MAAO,GACP6B,MAAO,GACP1B,cAAe,GACf6f,KAAM,GACN8B,gBAAgB,EAChBE,aAAc,GACdD,aAAc,GACd+M,UAAW,KAfqB,mBAI3BJ,EAJ2B,KAIVK,EAJU,OAiBoBngC,mBAAS,IAjB7B,mBAiB3B2Q,EAjB2B,KAiBNwC,EAjBM,OAmBYnT,mBAAS,CACrD2S,aAAc,GACdP,gBAAiB,GACjBJ,aAAc,KAtBkB,mBAmB3B4tB,EAnB2B,KAmBVQ,EAnBU,KAyB5Bj/B,EAAO,WACX8H,EAAWrT,EAAU,IAGjB8Q,EAAO,WACXuC,EAAWrT,EAAU,IA+CjB6pC,EAAuB,SAAOrO,GAAP,SAAApd,EAAAC,OAAA,kEAAAD,EAAA,MACNomB,EAAUhJ,EAAKS,gBADT,OAC3BT,EAAK2J,QADsB,OAE3BoF,EAAmB,eACdL,EADa,CAEhB1M,aAAchC,EAAK4J,KAAO5J,EAAK2J,QAC/B7H,gBAAgB,EAChBC,aACE/B,EAAK75B,MAAQ65B,EAAK4J,IAAIC,UAAU7J,EAAK4J,IAAIE,YAAY,KAAO,MAPrC,sCAWvBt2B,EAAe,SAACpU,GAAD,OACnB2vC,EAAmB,eAAKL,EAAN,CAAuB5M,gBAAgB,MAKrDkH,EAAY,SAAChJ,GACjB,OAAO,IAAIv7B,SAAQ,SAACC,EAASG,GAC3B,IAAMs7B,EAAS,IAAIC,WACnBD,EAAOK,cAAcR,GACrBG,EAAOE,OAAS,kBAAM37B,EAAQy7B,EAAOI,SACrCJ,EAAOnI,QAAU,SAACrzB,GAAD,OAAWE,EAAOF,QAgBjC0a,EAAc,SAAClV,GACnB,OAAQA,GACN,IAAK,IACH,M5G5IyB,oB4G6I3B,IAAK,IACH,M5G7IgB,W4G8IlB,IAAK,IACH,M5G9Ic,S4G+IhB,IAAK,IACH,M5G/IsB,iB4GgJxB,IAAK,IACH,M5GhJa,Q4GiJf,IAAK,IACH,M5GjJsB,iB4GkJxB,IAAK,IACH,M5GlJY,O4GmJd,QACE,MAAO,KA0Eb,OACE,oCACE,kBAAC,IAAD,CAAK3J,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,sBAAsBqG,YAAU,mBAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYf,WAAS,EAACzE,KAAMvB,IAC5B,kBAAC,GAAD,CAASU,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,kBAAC,KAAD,CAAYwY,UAAU,KACpB,kBAAC,IAAD,CAAS/Y,GAAG,4BACV,kBAAC,KAAWiH,KAAZ,K3G7Jc,uB2G+JhB,kBAAC,KAAWA,KAAZ,K3G/MuB,+B2GkN3B,kBAAC,IAAD,CAAK1G,UAAU,QACb,wBAAIA,UAAU,Q3G/M5B,sC2GiNY,kBAAC,KAAD,CAAOA,UAAU,OAAOgE,QAASA,GAC9BmT,GAAMsB,KAAI,SAACC,GAAD,OACT,kBAAC,GAAD,CAAMha,IAAKga,EAAKjL,MAAOA,MAAOiL,EAAKjL,YAIvC,kBAAC,IAAD,CAAMQ,SAAUC,EAAQ1H,KAAK,SAC3B,yBAAKxG,UAAU,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,yBAAKtH,UAAU,iBACD,GAAXgE,EACC,kBAAC,GAAD,CACEuL,KAAMA,EACNo+B,WAAYA,EACZC,oBAAqBM,EACrBz+B,sBAlNI,SAACuB,GAC7Bu9B,EAAmB,eAAKL,EAAN,gBAAwBl9B,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAkNzC8Q,sBA/MI,SAAC9Q,EAAO+G,GACpC4oC,EAAmB,eAAKL,EAAN,gBAAwBvoC,EAAO/G,MA+MzBiiC,oBA/LE,SAACjiC,EAAO+G,GAAU,IAAD,EACvC+5B,EAAW9gC,EAAM8gC,SAAS35B,OAAO,GACjC0oC,EAAW7vC,EAAM4gC,KAAK75B,KAC1B+5B,EAAS7yB,SAAQ,SAAU2yB,EAAMzmB,GAC/B,IAAI4mB,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAC7uB,GACfwuB,EAAKM,OAAS9uB,EAAEuF,OAAOwpB,OACvBP,EAAK5+B,SAAW,yBAElB++B,EAAOK,cAAcR,EAAKS,kBAE5BsO,EAAmB,eACdL,GADa,oBAEfvoC,EAAO+5B,GAFQ,2BAGL+O,GAHK,MAqLM3N,mBA7MC,SAACliC,GAC1B,OAAKA,EAAMiF,KAAKqD,SAAS,UAOvBmnC,GAAc,GAETzvC,EAAMiF,OARXwqC,GAAc,GACdjqC,KAAQD,MAAR,+CAC0CvF,EAAM+G,KADhD,uBAGO,IAwMekoC,qBAAsBA,EACtB76B,aAAcA,EACdrD,8BAlJY,SAACsC,EAAMtM,GAC3C4oC,EAAmB,eAAKL,EAAN,gBAAwBvoC,EAAOsM,MAoJzBsM,QAjJV,SAACkD,EAAQ9X,GACvB4kC,EAAmB,eACdL,EADa,CAEhBvuB,cAAehW,EACfkW,SAAU4B,MA8IY5C,YAAaA,EACbC,mBApKC,SAAClgB,GAC1B2iB,EAAuB3iB,IAoKCmgB,oBAAqBA,EACrB1Y,YAAU,yBAEC,GAAXrC,EACF,kBAAC,GAAD,CACEuL,KAAMA,EACNuF,KAAMA,EACN+L,eAAgBqtB,EAChBF,gBAAiBA,EACjB/4B,sBAhII,SAACuL,EAAiBO,GAAkB,IAAD,EAC3DW,EAAc,GACZ3d,EAAOZ,KAAK+G,MAAM1K,EAAe,SAMnCmiB,EALaZ,EAAa3T,QAC5B,kBAAYwU,EAAZ,EAAGvf,QAAH,QACE,UAACqf,SAAD,aAAC,EAAalU,MAAK,qBAAGnL,UAA2Buf,SAGhCC,QAAO,SAACC,EAAaC,GAYxC,OAXAD,EAAY/Y,KAAK,CACf1G,QAAS0f,EAAa1f,QACtB2f,YAAa,EACbC,iBAAkB,EAClBC,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,SAGrBoc,IACN,IACHJ,EAAW,UAAGA,SAAH,aAAG,EAAaS,OAAOR,GAClC6sB,EAAmB,eACdR,EADa,CAEhBxtB,gBAAiBA,EACjBO,aAAcA,EACdX,aAAcsB,QAuGmB,GAAX1d,EACF,kBAAC,GAAD,CACE8Q,KAAMA,EACN8L,iBAtGJ,gCAAAwB,EAAAC,OAAA,gDACdte,EAAOZ,KAAK+G,MAAM1K,EAAe,SACjC0Z,EAAQlP,KAERnJ,EAAO,CACX6tC,gBAAiB,CACf/oC,KAAMuoC,EAAgBJ,cACtBvrB,UAAW2rB,EAAgB7hC,YAC3BsiC,eAAgBT,EAAgB1O,KAAK,GAAGM,OACxC8O,oBAAqBV,EAAgBI,UACrCzsC,WAAYqsC,EAAgB1uB,MAAM,GAC9B3T,KAAOqiC,EAAgB1uB,MAAM,IAAI1T,OAAO,cACxC,GACJnK,SAAUusC,EAAgB1uB,MAAM,GAC5B3T,KAAOqiC,EAAgB1uB,MAAM,IAAI1T,OAAO,cACxC,GACJoW,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAG5Bgc,YAAassB,EAAgB5tB,cAGzBhgB,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGpBgX,GAAU,GACV5W,IAAMC,KAAKV,EAAW,YAAaY,EAAMT,GAASwD,MAAK,WACrDN,OAAOC,SAAW,8BAnCA,sCAuGI2qC,gBAAiBA,EACjBF,gBAAiBA,EACjBnvB,YAAaA,EACbgvB,qBAAsBA,EACtB76B,aAAcA,IAGhB,cC5TlBzH,GAAY7D,IAAZ6D,QAqEOsjC,GAnEW,SAACvvC,GAAW,IAAD,EACC8O,oBAAS,GADV,mBAC5BoL,EAD4B,KAChBC,EADgB,KAMnC,OACE,kBAAC,IAAMlB,SAAP,MACmB,KAAfiB,EACA,kBAAC,IAAMjB,SAAP,KACG,IACD,kBAAC,IAAD,CAAKvY,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMvB,EAAMuB,OAClC,kBAAC,GAAD,CAASwF,YAAU,YAAYrG,UAAU,IACvC,kBAAC,IAAD,CAAKA,UAAU,QACb,wBAAIA,UAAU,Q5G+EA,uB4G7EhB,yBAAKA,UAAU,gEACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,IACT,yBAAKtH,UAAU,iBACb,yBACEH,IAAK6iB,KACL3iB,IAAI,iBACJC,UAAU,UAGd,uBAAGA,UAAU,oBlGFnC,uDkGIwB,6BlGFxB,sCkGKsB,kBAAC,IAAD,CAAKA,UAAU,iCACb,kBAAC,KAAD,CAASA,UAAU,UAErB,kBAAC,IAAD,CACEsH,KAAM,GACNtH,UAAU,oDAEV,kBAAC,KAAD,CACEqG,YAAU,gBACVM,QA3CV,WACd8S,GAAc,IA2CU5V,KAAK,W5GLX,mB4GmBd,kBAAC,GAAD,QCsBOirC,GA5FY,SAAC,GAAyC,IAAvCjuC,EAAsC,EAAtCA,KAAMqiB,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAAkB,EACrB/U,qBADqB,mBAC3DgV,EAD2D,KAC3CC,EAD2C,KAGlEpc,qBAAU,WACRqc,MACC,CAACziB,IAEJ,IAAMyiB,EAAmB,WACvBD,EAAmBxiB,IAQf4I,EAAU,CACd,CACEgE,MpGtBc,OoGuBdC,UAAW,aACXhP,IAAK,aACLiP,MAAO,MACPC,OAAQ,SAAC/E,EAAQjI,GACf,MAAO,CACLiN,SAAUjN,EAASmD,KAAK7C,WACxB5B,MAAO,CACL,aAAc,WAKtB,CACEmO,MpGnCiB,UoGoCjBC,UAAW,cACXhP,IAAK,cACLiP,MAAO,MACP4V,UAAU,EACV3V,OAAQ,SAACsD,EAAKrI,GAAN,OACN,kBAAC,IAAD,CAAKvB,KAAM,GAAItH,UAAU,0CACvB,kBAAC,KAAD,CACEpB,MAAM,UACN4kB,QAAStS,EACTH,SAAU,SAACC,GAAD,OAAOmS,EAAYta,IAC7BkO,UAAQ,OAiBhB,CACEtJ,MAAO9C,GACP+C,UAAW,UACXhP,IAAK,UACLiP,MAAO,MACPC,OAAQ,SAAC6V,EAAM5a,GAAP,OACN,0BACElC,QAAS,SAACqK,IAxDD,SAACtS,EAAKsS,GACrBA,EAAEqB,iBACF6Q,EAAaxkB,GAuDLglB,CAAS7a,EAAQmI,IAEnBhR,UAAU,0FAQlB,OACE,yBAAKA,UAAU,oBACb,kBAAC,KAAD,CACEA,UAAU,cACV2jB,OAPO,CACXC,UAAW,MAOPC,aAAc,iBAAM,gBACpBpa,QAASA,EACTK,WAAYsZ,EACZ1Z,OAAQ,aC5CDqlC,GA3CQ,SAAC,GAAyC,IAAvChrB,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,cAAenjB,EAAW,EAAXA,KAAW,EAChCuN,oBAAS,GADuB,mBACvD6V,EADuD,KAC9CC,EAD8C,OAE5B9V,mBAAS,IAFmB,mBAEvD+V,EAFuD,KAE5CC,EAF4C,KAmB9D,OACE,oCACGH,GACC,kBAAC,KAAD,CACE5d,YAAU,QACVjC,QAAO,UAAK+f,EAAL,2CACPtgB,KAAK,QACL2M,UAAQ,IAIZ,kBAAC,KAAD,CACEnK,YAAU,aACVjG,QAAS2jB,EACThW,Y9GVuB,kB8GWvBsW,aAAc,SAACC,EAAYC,GAAb,OACsD,IAAlEA,EAAO3lB,MAAMkH,cAAckT,QAAQsL,EAAWxe,gBAEhDgM,SAAU,SAAC0S,EAAKD,GAAN,OAjCO,SAAC3lB,EAAO2lB,GAClB1jB,EAAKuM,QAAO,SAACqX,GAAD,OAAOA,EAAE1gB,KAAK1B,UAAYkiB,EAAOliB,WAC/CoM,OAAS,GAChByV,GAAW,GACXE,EAAaxlB,IAEbolB,EAAcplB,EAAO2lB,GA2BQG,CAAeF,EAAKD,IAC/CxT,SAAU,kBAvBdmT,GAAW,QACXE,EAAa,SCHblkB,GAAWC,EAAQ,IACjB6uC,G,2MACJjqC,MAAQ,CACNwN,SAAS,EACT08B,kBAAmB,GACnBpqB,YAAa,GACbC,YAAa,GACb5W,QAAQ,G,EAGVpF,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,EACTwN,aAAc,GACd8E,YAAa,EAAKvlB,MAAMyhB,aAAapb,KACrC0zB,WAAY,EAAK/5B,MAAMyhB,aAAauU,YACpCpnB,QAAQ,KAGVxK,EADqB,EAAKpE,MAAlBoE,UACCwW,MACT,EAAK6K,uB,EAGPA,oBAAsB,WACpB,IACM3kB,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACG3B,IACCkB,EACE,yBACA,EAAKX,MAAMyhB,aAAauU,YAC1Bl1B,GAEDwD,MAAK,SAACsN,GACL,EAAKpJ,SAAS,CACZmnC,kBAAmB/9B,EAAIrQ,KACvBqN,QAAQ,Q,EAKhByE,SAAW,SAAC3B,GACV,EAAKlJ,SAAS,CACZyK,SAAS,IAGX,IACMnS,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAIpBI,IACGC,KAAKV,EAAW,sBAAuB,EAAK8E,MAAM+f,YAAa1kB,GAC/DwD,MAAK,SAACsN,GACL,EAAK6T,sBACL,EAAKjd,SAAS,CACZgd,YAAa,QAGhB3R,OAAM,SAAChP,Q,EAGZgf,YAAc,SAACta,GACb,IAAIomC,EAAiB,aAAO,EAAKlqC,MAAMkqC,mBACnCl2B,EAAQk2B,EAAkBjqB,WAC5B,SAACC,GAAD,OAAQA,EAAG5iB,UAAYwG,EAAOxG,WAEhC4sC,EAAkBl2B,GAAlB,eACKk2B,EAAkBl2B,GADvB,CAEEiJ,aAAcnZ,EAAOmZ,cAEvB,EAAKla,SAAS,CAAEmnC,sBAEhB,IAAInqB,EAAW,aAAO,EAAK/f,MAAM+f,aAC7BI,EAASJ,EAAYE,WAAU,SAACC,GAAD,OAAQA,EAAG5iB,UAAYwG,EAAOxG,WACjEyiB,EAAYI,GAAZ,eACKJ,EAAYI,GADjB,CAEElD,aAAcnZ,EAAOmZ,cAEvB,EAAKla,SAAS,CAAEgd,iB,EAGlB9R,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,K,EAIb2Q,aAAe,SAACtkB,GAEHA,EAAMmF,KAAK1B,QADtB,IAGM8iB,EACJ,EAAKpgB,MAAM+f,aACX,EAAK/f,MAAM+f,YAAY1X,QAAO,SAAU4T,GACtC,OAAOA,EAAQ3e,UAAYzD,EAAMmF,KAAK1B,WAE1C,EAAKyF,SAAS,CACZgd,YAAaK,IAEf,IACM/kB,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,kCAElBO,KAAMsC,KAAKC,UAAU,CAAEf,QAASzD,EAAMmF,KAAK1B,WAE7C3B,IACGuS,OACChT,EAAW,yBAA2BrB,EAAMw2B,SAASE,YACrDl1B,GAEDwD,MAAK,WACJ,EAAKmhB,yBAEN5R,OAAM,SAAChP,Q,EAGZiR,QAAU,SAACxW,EAAOwB,GAChB,IAAM2D,EAAOZ,KAAK+G,MAAM1K,EAAe,SADX,EAGe,EAAKuF,MAAxCkqC,EAHoB,EAGpBA,kBAAmBnqB,EAHC,EAGDA,YACrBM,EAAI,CACRrhB,KAAM,CACJ1B,QAAS+W,SAAShZ,EAAQiC,SAC1BnB,WAAYd,EAAQxB,OAEtBw2B,SAAU,CACRE,YAAa,EAAKvwB,MAAMs0B,YAE1BrX,aAAa,EACbC,kBAAkB,GAEdoD,EAAI,CACRiQ,YAAa,EAAKvwB,MAAMs0B,WACxBh3B,QAAS+W,SAAShZ,EAAQiC,SAC1B2f,aAAa,EACbC,kBAAkB,EAClBC,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAI5B,EAAKoC,SAAS,CACZmnC,kBAAkB,GAAD,oBAAMA,GAAN,CAAyB7pB,IAC1CN,YAAY,GAAD,oBAAMA,GAAN,CAAmBO,O,+HAMf/E,GAAY,IACvBlG,EAAkB/a,KAAKC,MAAvB8a,cACF+K,EAAW,GACf,GAAI7E,EAAUlG,eAAiBA,EAAe,CAC5C,IAAK,IAAIkL,EAAI,EAAGA,EAAIlL,EAAc3L,OAAQ6W,IACxCH,EAASpc,KAAK,CACZnK,MAAOwb,EAAckL,GAAG/K,UAAU4H,OAChC,IACA/H,EAAckL,GAAG9K,UAEnBnY,QAAS+X,EAAckL,GAAGjjB,UAG9BhD,KAAKyI,SAAS,CAAEiY,aAAcoF,O,+BAKhC,OACE,oCACE,uBAAGxe,QAAStH,KAAKyJ,W/GhIL,Q+GiIZ,kBAAC,KAAD,CACE9I,UAAU,iBACVuS,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,gBACV7N,UAAW,qBAEb0T,O/GnJU,O+GoJVC,WAAYjP,GAEZ,6BrGvLoC,iCqGuLpC,IACoCrF,KAAK0F,MAAM8f,aAG/C,kBAAC,IAAD,CAAK7kB,UAAU,iCACb,kBAAC,IAAD,CAAKsH,KAAM,IAAK0D,KAGlB,kBAAC,IAAD,CAAMiD,SAAU5O,KAAK0F,MAAMmJ,OAAQ1H,KAAK,SACtC,kBAAC,GAAD,CACE3F,KAAMxB,KAAK0F,MAAMkqC,kBACjB/rB,aAAc7jB,KAAK6jB,aACnBC,YAAa9jB,KAAK8jB,eAGtB,kBAAC,IAAD,CAAKnjB,UAAU,qBACb,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,GAAD,CACEyc,WAAY1kB,KAAK0F,MAAMgb,aACvBiE,cAAe3kB,KAAK+V,QACpBvU,KAAMxB,KAAK0F,MAAMkqC,oBAEnB,+BrG5MkB,4B,GqGtBK7vC,aAsPtB2H,oBAXf,SAAyBhC,GAIvB,MAAO,CACLwgB,eAJyBxgB,EAAMygB,gBAAzBD,eAKNnL,cAJwBrV,EAAMqO,UAAxBgH,cAKNhW,QAJkBW,EAAMX,QAAlBA,WAQK2C,CAAyBioC,IC7LzBE,G,2MAlEbnqC,MAAQ,CAAEwN,SAAS,G,EAEnBzJ,UAAY,WACV,EAAKhB,SAAS,CACZyK,SAAS,K,EAIbI,SAAW,WACT,EAAK7K,SAAS,CACZyK,SAAS,IAEX,EAAKqQ,iB,EAGP5P,aAAe,WACb,EAAKlL,SAAS,CACZyK,SAAS,K,+EAKSlT,KAAKC,MAAjBoJ,QADO,IAGTtI,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IACGuS,OAAOhT,EAAW,YAAcZ,KAAKC,MAAM+5B,WAAYj5B,GACvDwD,MAAK,WACJN,OAAOC,SAAW,8BAEnB4P,OAAM,SAAChP,S,+BAIV,OACE,oCACE,uBAAGwC,QAAStH,KAAKyJ,WAAjB,UACA,kBAAC,KAAD,CACE2E,MAAM,kBACN8E,QAASlT,KAAK0F,MAAMwN,QACpBc,KAAMhU,KAAKsT,SACXW,SAAUjU,KAAK2T,aACfO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CACjB5F,SAAU,iBAEZ6F,OhHxBoB,MgHyBpBC,WhHxBmB,MgH0BnB,2BtGnDR,wD,GsGTgCvU,aCqDnBorC,G,2MAvCbzlC,MAAQ,CACNwN,SAAS,G,EAGXyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIbyB,KAAO,WACL,EAAKlM,SAAS,CACZyK,SAAS,K,EAIb0B,oBAAsB,SAAC1B,GACrB,EAAKzK,SAAS,CAAEyK,a,wEAIhB,OACE,oCACE,kBAAC,IAAD,CACEjM,UAAU,SACVC,SAzCO+P,EAyCUjX,KAAKC,MAAMuB,KAxCpC,6BACE,4BACE,kBAAC,IAAD,CAAMpB,GAAI,CAAEC,SAAU,sBAAuBqF,MAAOuR,IAClD,4BACE,uBAAGpR,KAAK,uBjH8CE,QiH9C+B,MAG7C,4BACE,kBAAC,GAAD,CAAqBm0B,WAAY/iB,EAAKgf,kBAiCpC1uB,QAAQ,QACR2L,QAASlT,KAAK0F,MAAMwN,QACpB4B,gBAAiB9U,KAAK4U,qBAEtB,0BAAMjU,UAAU,iBACd,yBAAKH,IAAKuU,KAAUrU,IAAI,UAAUC,UAAU,YA/CxC,IAACsW,M,GAea3W,IAAMP,WCQ5BgK,GAAWD,IAAXC,OAUAmC,IAPN,kBAAClC,GAAA,EAAD,CACEC,MAAO,CACLC,SAAU,GACVC,MAAO,aAIO9B,IAAZ6D,SA8QO4jC,G,YA3Qb,WAAY7vC,GAAQ,IAAD,8BACjB,4CAAMA,KA0CRmM,cAAgB,SAAC5C,EAAQ6C,GACvB,IAAMhK,EAAUmH,EAAOlH,SAASgK,WAAW,MAAO,KAClD,GAAI,IAAIC,KAAS,IAAIA,KAAKlK,GAAU,CAClC,IAAMb,EAAO,CACXkL,UAAmB,WAARL,EAAmB,EAAI,GAG9BtL,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGpBI,IACGuL,IACChM,EAAW,wBAA0B4I,EAAOysB,YAAc,IAC1Dz0B,EACAT,GAEDwD,MAAK,WACJsI,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAOlD,KACPuF,KAEJ,EAAK5L,MAAMgN,0BAGfJ,IAAaC,OAAO,CAClB7F,UAAW,eAEb4F,IAAaE,KAAK,CAChBC,YACEpB,GACApC,EAAOlD,KACPwF,MAnFW,EAqGnBoB,SAAW,SAAC3N,GAAW,IACbiC,EAAS,EAAKkE,MAAdlE,KACF2L,EAAW,EAAKC,SAAS5L,EAAMjC,GACrC,EAAKkJ,SAAS,CAAE4E,WAAYF,KArG5B,EAAKzH,MAAQ,CACXlE,KAAM,IAJS,E,iFAQE,IAAD,OACZuuC,EAAc/vC,KAAKC,MAAnB8vC,UACG,OAATA,QAAS,IAATA,KAAWviC,SAAQ,SAACuoB,GAClBA,EAASvzB,WAAagK,KAAOupB,EAASvzB,YACnCkL,MACAC,QACAlB,OAAO,kBACVspB,EAASzzB,SAAWkK,KAAOupB,EAASzzB,UACjCoL,MACAC,QACAlB,OAAO,qBAEZzM,KAAKyI,SAAS,CAAEjH,KAAMuuC,IAAa,WACjC,EAAK7iC,SAAS,S,uDAIeU,GAAY,IACO,EADR,OACtC5N,KAAKC,MAAM8vC,YAAcniC,EAAUmiC,YACrC,UAAAniC,EAAUmiC,iBAAV,SAAqBviC,SAAQ,SAACuoB,GAC5BA,EAASvzB,WAAagK,KAAOupB,EAASvzB,YACnCkL,MACAC,QACAlB,OAAO,kBACVspB,EAASzzB,SAAWkK,KAAOupB,EAASzzB,UACjCoL,MACAC,QACAlB,OAAO,qBAEZzM,KAAKyI,SAAS,CAAEjH,KAAMoM,EAAUmiC,YAAa,WAC3C,EAAK7iC,SAAS,U,+BAkDXW,EAAKC,GACZ,OAAKA,GAA2B,KAAdA,GAAkC,OAAdA,EAG/BD,EAAIE,QAAO,SAAUC,GAC1B,OAAOC,OAAOC,KAAKF,GAAKG,MAAK,SAAU9O,GACrC,GAAwB,kBAAb2O,EAAI3O,GACb,OAAO2O,EAAI3O,GAAKoH,cAAcoB,SAASiG,EAAUrH,qBAL9CoH,I,+BAiBD,IAAD,OACDzD,EAAU,CACd,CACEgE,MzGrIqB,gByGsIrBC,UAAW,OACXhP,IAAK,OACLiP,MAAO,MACPC,OAAQ,SAACjI,GACP,MAAO,CACLkI,SAAUlI,EACVrG,MAAO,CACL,aAAc,oBAKtB,CACEmO,MzGlJkB,ayGmJlBC,UAAW,aACXhP,IAAK,aACLiP,MAAO,MACPC,OAAQ,SAAC/L,GACP,MAAO,CACLgM,SAAUhM,EACVvC,MAAO,CACL,aAAc,iBAKtB,CACEmO,MzG/JgB,WyGgKhBC,UAAW,WACXhP,IAAK,WACLiP,MAAO,MACPC,OAAQ,SAACjM,GACP,MAAO,CACLkM,SAAUlM,EACVrC,MAAO,CACL,aAAc,eAKtB,CACEmO,MzGxKmB,cyGyKnBC,UAAW,GACXhP,IAAK,IACLiP,MAAO,MACPC,OAAQ,SAACmT,GACP,MAAO,CACLlT,SACE,6BACE,kBAAC,GAAD,CAAwBkT,aAAcA,KAG1CzhB,MAAO,CACL,aAAc,kBAKtB,CACEmO,MAAOhD,GACPiD,UAAW,GACXhP,IAAK,IACLiP,MAAO,MACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SACuB,IAArBhF,EAAOkD,UACL,yBACE/L,UAAU,0BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,YAE1C,0BAAM7I,UAAU,gBACfsE,GAGH,yBACEtE,UAAU,4BACV2G,QAAS,kBAAM,EAAK8E,cAAc5C,EAAQ,cnHtO7B,amH2OnBvJ,MAAO,CACL,aAAc,aAKtB,CACEmO,MAAO,GACPC,UAAW,GACXhP,IAAK,IACLiP,MAAO,KACPC,OAAQ,SAAC/E,GACP,MAAO,CACLgF,SAAU,kBAAC,GAAD,CAAiBhN,KAAMgI,IACjCvJ,MAAO,CACL,aAAc,cAMxB,OACE,oCACE,kBAAC,IAAD,CAAKU,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYsF,WAAS,EAACzE,KAAMxB,KAAKC,MAAMuB,OACvC,kBAAC,GAAD,CAASb,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,4BlH1JgB,uBkH4JlB,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CAAKtH,UAAU,+CACb,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,GAAIxH,UAAU,2BAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsH,KAAM,GAAIE,GAAI,EAAGxH,UAAU,cAC9B,kBAAC,GAAD,CACE+N,YlHtPN,SkHuPMxB,SAAUlN,KAAKkN,cAMvB,kBAAC,IAAD,CACEjF,KAAM,GACNE,GAAI,EACJxH,UAAU,iDAEV,kBAAC,IAAD,CAAMP,GAAG,yBACP,kBAACuO,GAAD,CAASpP,MAAM,wBAKvB,kBAAC,IAAD,CAAMqP,SAAU5O,KAAKC,MAAM4O,OAAQ1H,KAAK,SACtC,kBAAC,GAAD,CACEkD,OAAO,cACPD,QAASA,EACT5I,KAAMxB,KAAK0F,MAAM2H,uB,GAhQN/M,IAAMP,WCKtB2H,oBAPf,SAAyBhC,GAEvB,MAAO,CACLsqC,cAFwBtqC,EAAMqwB,SAAxBia,iBAMKtoC,EAzCW,SAACzH,GAAW,IAAD,EACO8O,oBAAS,GADhB,mBAC5B3C,EAD4B,KACbsO,EADa,OAEP3L,oBAAS,GAFF,mBAE5BF,EAF4B,KAEpBoJ,EAFoB,KAGnCrQ,qBAAU,YAERvD,EADqBpE,EAAboE,WCFyB,SAACA,GAC9B,OAAOsW,GAAYs1B,eAAe1rC,MAAK,SAAC/C,GAOpC,OANA6C,EAAS,CACLG,KtHEgB,mBsHDhBC,QAAQ,CAACurC,cAAcxuC,EAAKA,QAIzBoD,QAAQC,aAEnB,SAACC,GACG,IAAMC,EACLD,EAAMvD,UACHuD,EAAMvD,SAASC,MAAQsD,EAAMvD,SAASC,KAAKuD,SAC3CD,EAAMC,SACND,EAAMhD,WASV,OARAuC,EAAS,CACLG,KtHXa,kBsHcjBH,EAAS,CACLG,KtH1BW,csH2BXC,QAAQM,IAELH,QAAQI,iBDpBtB,CAACoH,IAEJxE,qBAAU,WACoB,OAAxB3H,EAAM+vC,cACR/3B,GAAU,GACuB,OAAxBhY,EAAM+vC,eACf/3B,GAAU,KAEX,CAAChY,EAAM+vC,gBAMV,OAAQnhC,GACkB,OAAxB5O,EAAM+vC,eACyB,IAA/B/vC,EAAM+vC,cAAc5gC,OAGpB,kBAAC,GAAD,CACEnC,gBAVoB,WACtByN,GAAkBtO,IAUhB2jC,UAAW9vC,EAAM+vC,cACjBxuC,KAAMvB,EACN4O,OAAQA,IANV,kBAAC,GAAD,CAAmBrN,KAAMvB,OEiBzBY,GAAWC,EAAQ,IACfugB,GAAavX,IAAbuX,SAEAnV,IADW8O,KAAXtI,OACYrK,IAAZ6D,SAwiBOgkC,GAviBM,SAACjwC,GAAW,IAAD,EACF8O,oBAAS,GADP,mBACvBF,EADuB,KACfoJ,EADe,OAEUlJ,mBAAS,CAC/CzM,SAAU,GACV4gB,UAAW,GACX+S,YAAa,GACb3vB,KAAM,GACN9D,WAAY,GACZ8sC,eAAgB,GAChBC,oBAAqB,GACrB7iC,UAAW,GACX8T,SAAU,GACV2vB,YAAa,KAZe,mBAEvBC,EAFuB,KAETC,EAFS,OAcHthC,oBAAS,GAdN,mBAcvBjK,EAduB,KAchBkM,EAdgB,OAefH,KAAKC,UAAbC,EAfuB,sBAgB0BhC,mBAAS,IAhBnC,mBAgBvBuhC,EAhBuB,KAgBDC,EAhBC,KAiB1BrsC,EAAWi7B,cAEfv3B,qBAAU,WACR,IAAMuY,EAAQ3T,KAAOtI,EAASwB,MAAMlD,YAAYiK,OAAO,cACjD2yB,EAAQ5yB,KAAOtI,EAASwB,MAAMpD,UAAUmK,OAAO,cACjD4yB,EAAQ,CAAC7yB,KAAO2T,EAAO,cAAe3T,KAAO4yB,EAAO,eAExDiR,EAAgB,CACd/tC,SAAU,GACV4gB,UAAWhf,EAASwB,MAAMwd,UAC1B+S,YAAa/xB,EAASwB,MAAMuwB,YAC5B3vB,KAAMpC,EAASwB,MAAMY,KACrB9D,WAAY68B,EACZiQ,eAAgBprC,EAASwB,MAAM4pC,eAC/BC,oBAAqBrrC,EAASwB,MAAM6pC,oBACpC7iC,UAAWxI,EAASwB,MAAMgH,UAAU5K,WACpCquC,YAAa,CACX,CACEtD,IAAK,IACLvmC,KAAMpC,EAASwB,MAAM6pC,oBACrBnvB,OAAQ,OACR2pB,IAAK7lC,EAASwB,MAAM4pC,mBAI1Bv+B,EAAKmgB,eAAe,CAClB5qB,KAAMpC,EAASwB,MAAMY,KACrB4c,UAAWhf,EAASwB,MAAMwd,cAE3B,IAEH,IAAM9S,EAAwB,SAACuB,GAC7B0+B,EAAgB,eAAKD,EAAN,gBAAqBz+B,EAAEuF,OAAO5M,GAAKqH,EAAEuF,OAAO3X,UAW7D,SAASwtC,EAAmBhD,EAAKiD,EAAUC,GACzC,IAAIC,EAAShd,SAASvnB,cAAc,UAChCwkC,EAAMD,EAAOE,WAAW,MACxBC,EAAM,IAAIC,MACdD,EAAIE,YAAc,YAClBF,EAAI7M,OAAS,WACX0M,EAAOM,OAASH,EAAIG,OACpBN,EAAO5+B,MAAQ++B,EAAI/+B,MACnB6+B,EAAIM,UAAUJ,EAAK,EAAG,GACtB,IAAIK,EAAUR,EAAOS,UAAUV,GAAgB,aAC/CD,EAASY,KAAK5tC,KAAM0tC,GAEpBR,EAAS,MAEXG,EAAI7sC,IAAMupC,EAGZ,IAwFMyG,EAAiB,SAAChvC,GACtB,IAAMqY,EAAQlP,KACV8lC,EAAaL,EAAana,mBACvBma,EAAa1sB,WACpB,IAAM3iB,EAAU,CACdC,QAAS,CACP2L,cAAekN,EACf5Y,OAAQ,+BACR,eAAgB,mCAGpBI,IACGuL,IAAIhM,EAAW,YAAc6vC,EAAa,IAAKjvC,EAAMT,GACrDwD,MAAK,SAACsN,GACc,MAAfA,EAAIuO,SACNnI,GAAU,GACVhU,OAAOC,SAAW,gCA8E1B,IAAMsb,EAAc,SAAClV,GACnB,OAAQA,GACN,IAAK,IACH,MtH1RyB,oBsH2R3B,IAAK,IACH,MtH3RgB,WsH4RlB,IAAK,IACH,MtH5Rc,SsH6RhB,IAAK,IACH,MtH7RsB,iBsH8RxB,IAAK,IACH,MtH9Ra,QsH+Rf,IAAK,IACH,MtH/RsB,iBsHgSxB,IAAK,IACH,MtHhSY,OsHiSd,QACE,MAAO,KAkCL2G,EAAgBC,KAAhBD,YAER,OACE,oCACE,kBAAC,IAAD,CAAKtQ,UAAU,gBACb,kBAAC,GAAD,CAAgBsF,WAAS,KAE3B,kBAAC,IAAD,CAAKtF,UAAU,sBAAsBqG,YAAU,aAC7C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAYf,WAAS,EAACzE,KAAMvB,IAC5B,kBAAC,GAAD,CAASU,UAAU,IACjB,kBAAC,IAAD,CAAKA,UAAU,QACb,4BrHrQa,kBqHuQf,kBAAC,IAAD,CAAMiO,SAAUC,EAAQ1H,KAAK,SAC3B,yBAAKxG,UAAU,oBACb,kBAAC,KAAD,CACEqG,YAAU,uBACVrG,UAAU,wCACV2F,KAAK,iBACLyK,KAAMA,GAELjM,GACC,kBAAC,KAAKuC,KAAN,KACE,kBAAC,KAAD,CACEtC,QAASwK,GACT/K,KAAK,QACL2M,UAAQ,KAId,kBAAC,GAAD,CACEjC,M5G5XQ,iB4G6XR3P,MAAO6wC,EAAa9pC,MAEpB,kBAAC,KAAKe,KAAN,CACE1G,UAAU,WACV2F,KAAK,OACLgE,GAAG,OACHsS,MAAO,CACL,CACEC,UAAU,EACV9X,QxGrYQ,iCwGyYZ,kBAAC,GAAD,CACEgb,WAAS,EACT/N,UAAW,GACXzS,MAAO6wC,EAAa9pC,KACpBoL,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCtC,OAAQ,SAACsC,GAAD,OA9EN,SAACA,GACzB,IACM5Q,EAAU,CACdC,QAAS,CACP2L,cAHUhC,KAIV1J,OAAQ,+BACR,eAAgB,mCAGhB0Q,EAAEuF,OAAO3X,QAAU2E,EAASwB,MAAMY,KACpCjF,IACGC,KACCV,EAAW,iBACX,CAAEu1B,cAAexkB,EAAEuF,OAAO3X,OAC1BwB,GAEDwD,MAAK,SAACsN,GACDA,EAAIrQ,MACN+uC,EAAwB1+B,EAAIrQ,KAAK,OAIvC+uC,GAAwB,GAwDWG,CAAkB/+B,IACjCrL,KAAK,OACLgE,GAAG,OACH3J,UAAU,+BACV6Q,QAAQ,OACRO,aAAa,QAEU,iBAAxBu+B,GACCF,EAAa9pC,KACV2L,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,IAAI7C,OAAS,GAChCghC,EAAa9pC,KAAK8I,OAAS,GACzB,kBAAC8C,GAAA,EAAD,CACEvR,UAAU,eACVwR,aAAa,YAGM,gBAAxBm+B,GACC,kBAAC,KAAD,CACEvrC,QAASiL,GACTxL,KAAK,QACL2M,UAAQ,MAKhB,kBAAC,GAAD,CACEjC,M5GzaK,c4G0aL3P,MAAO6wC,EAAaltB,WAEpB,kBAAC,KAAK7b,KAAN,CACE1G,UAAU,WACV2F,KAAK,YACLgE,GAAG,YACHsS,MAAO,CACL,CACEC,UAAU,EACV9X,QxG/aK,8BwGmbT,oCACE,kBAAC,GAAD,CACEpE,UAAU,+BACVpB,MAAO6wC,EAAaltB,UACpBxR,SAAU,SAACC,GAAD,OAAOvB,EAAsBuB,IACvCrL,KAAK,YACLgE,GAAG,YACHkH,QAAQ,YACRO,aAAa,WAKrB,kBAAC,GAAD,CAAY7C,MAAOhE,GAAM3L,MAAM,cAC7B,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,oCACnB,kBAACsQ,EAAD,CACEtQ,UAAU,iDACV2F,KAAK,aACL/G,MAAO6wC,EAAa5tC,WACpBqQ,aA9IH,SAAClO,GACpB,OAAOA,GAAWA,EAAU6H,OAASsG,QAAQ,QA8IvBpB,SAAU,SAACkB,GAAD,OAnXI,SAACA,EAAMtM,GAC3C+pC,EAAgB,eAAKD,EAAN,gBAAqB9pC,EAAOsM,KAmXnBtC,CAA8BsC,EAAM,eAEtCgK,MAAO,CACL,CACEC,UAAU,EACV9X,QAAS8K,SAMnB,kBAAC,GAAD,CAAYX,MAAO9D,GAAQ7L,MAAO6wC,EAAa1jC,WAC7C,kBAAC,KAAKrF,KAAN,CAAW1G,UAAU,WAAW2F,KAAK,UACnC,oCACE,kBAAC,KAAD,CACE3F,UAAU,8BACVpB,MAAO6wC,EAAa1jC,UACpB8E,QAAQ,SACRiB,SAAU,SAAClT,GAAD,OAlYN,SAACA,EAAO+G,GACpC+pC,EAAgB,eAAKD,EAAN,gBAAqB9pC,EAAO/G,KAkYjB8Q,CAAsB9Q,EAAO,eAG/B,kBAAC,KAAOmT,OAAR,CAAenT,MAAM,KAClB0F,GAEH,kBAAC,KAAOyN,OAAR,CAAenT,MAAM,KtHlflB,iBsHyfX,kBAAC,KAAK8H,KAAN,CAAW1G,UAAU,IACnB,kBAAC,KAAK0G,KAAN,CACE1G,UAAU,0BACV2F,KAAK,SACL+Z,cAAc,YAEd,kBAAC,KAAD,CACEwhB,SAAS,UACTxB,SAAU+P,EAAaD,YACvBz+B,SAAU,SAACnS,GAAD,OAvRN,SAACA,EAAO+G,GAClC,IAAI+5B,EAAW9gC,EAAM8gC,SAAS35B,OAAO,GACjC0oC,EAAW7vC,EAAM4gC,KAAK75B,KAC1B+5B,EAAS7yB,SAAQ,SAAU2yB,EAAMzmB,GAC/B,IAAI4mB,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAC7uB,GACfwuB,EAAKM,OAAS9uB,EAAEuF,OAAOwpB,OACvBP,EAAK5+B,SAAW,yBAElB++B,EAAOK,cAAcR,EAAKS,kBAG5ByP,EAAgB,eACXD,EADU,CAEbD,YAAa9P,EACbiP,eAAgBjP,EAChBkP,oBAAqBH,KAGG,YAAtB7vC,EAAM4gC,KAAK/f,QACbiwB,EAAgB,eACXD,EADU,CAEbD,YAAa,GACbb,eAAgB,GAChBC,oBAAqB,MAgQD/N,CAAoBjiC,IAEtByiC,UAAW,SAACziC,GAAD,OA7PC4gC,EA6P+B5gC,EA7PtC,EAAAwjB,EAAAC,OAAA,gDACV,MAAbmd,EAAK0M,IACPE,EAAmB5M,EAAK4J,KAAK,SAAUmE,GAErCmC,EAAgB,eACXD,EADU,CAEbjO,aAAc+L,EACdjM,gBAAgB,EAChBC,aAAc/B,EAAK75B,WAIvB+pC,EAAgB,eACXD,EADU,CAEbjO,aAAchC,EAAKM,OACnBwB,gBAAgB,EAChBC,aAAc/B,EAAK75B,QAhBI,yCAAO65B,GA8PZuB,eAzOD,SAACniC,EAAO+G,GAC7B+pC,EAAgB,eAAKD,EAAN,CAAoB/P,SAAU,OAyOvBJ,OAAO,oCAEiC,IAAvCmQ,EAAad,eAAelgC,QAC3B,kBAAC,KAAD,CAAQ5K,KAAK,OAAO7D,UAAU,aAC5B,0BAAMA,UAAU,0BAAgC,IrH3ZlD,iBqHiaJ,kBAAC,KAAD,CACEuS,QAASk9B,EAAanO,eACtB7zB,MAAOgiC,EAAalO,aACpBhuB,UAAQ,EACRF,KAAM,SAACzU,GAAD,OAnP5B8wC,EAAgB,eAAKD,EAAN,CAAoBnO,gBAAgB,MAoP7B9tB,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,OAAO,SAEP,yBACE3T,IAAI,UACJuJ,MAAO,CAAEqE,MAAO,QAChB9N,IAAK4vC,EAAajO,gBAIrB3iB,EAAY4wB,EAAana,cACxB,yBAAKt1B,UAAU,2CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,iDACb,0BAAMA,UAAU,oCACd,uBAAGA,UAAU,kCACV4f,gBAAgB6vB,EAAa5vB,WAGhC,0BACE7f,UAAU,mEACVyN,MAAOoR,EACL4wB,EAAana,cAGdzW,EAAY4wB,EAAana,oBAS1C,yBAAKt1B,UAAU,qBACb,kBAAC,KAAD,CACE6D,KAAK,UACLuO,SAAS,SACTzL,QAjcD,SAACqK,GACpB,GACEy+B,EAAa9pC,MACb8pC,EAAa9pC,KAAK2L,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAAS,GACnEghC,EAAaltB,WACbktB,EAAaltB,UAAUjR,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAI7C,OAC7D,GACFghC,EAAad,eAAelgC,OAAS,GACrCghC,EAAa1jC,WACb0jC,EAAa5tC,WACb,CACAyV,GAAU,GACVjH,GAAU,GACVW,EAAEqB,iBACF,IAAMtO,EAAOZ,KAAK+G,MAAM1K,EAAe,SAEnCqB,EAAO,GAC6B,MAApC4uC,EAAaD,YAAY,GAAGtD,IAC9BE,EAAmBqD,EAAad,gBAAgB,SAAUpB,GACxD1sC,EAAO,CACLc,SAAUkK,KAAO4jC,EAAa5tC,WAAW,IAAIiK,OAAO,cACpDyW,UAAWktB,EAAaltB,UACxB+S,YAAama,EAAana,YAC1BqZ,eAAgBpB,EAChB5nC,KAAM8pC,EAAa9pC,KACnBipC,oBAAqBa,EAAab,oBAClC/sC,WAAYgK,KAAO4jC,EAAa5tC,WAAW,IAAIiK,OAAO,cACtDC,UAAWqN,SAASq2B,EAAa1jC,WACjC2Z,WAAYtM,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1Bwc,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAKF,iBAAxBiqC,GACAF,EAAa9pC,OAASpC,EAASwB,MAAMY,MAErCkqC,EAAehvC,OAInBA,EAAO,CACLc,SAAUkK,KAAO4jC,EAAa5tC,WAAW,IAAIiK,OAAO,cACpDyW,UAAWktB,EAAaltB,UACxB+S,YAAama,EAAana,YAC1BqZ,eAAgBc,EAAaD,YAAY,GAAG1P,OAC5Cn6B,KAAM8pC,EAAa9pC,KACnBipC,oBAAqBa,EAAab,oBAClC/sC,WAAYgK,KAAO4jC,EAAa5tC,WAAW,IAAIiK,OAAO,cACtDC,UAAWqN,SAASq2B,EAAa1jC,WACjC2Z,WAAYtM,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,OAE1Bwc,WAAY9I,SACVlZ,GAASa,IAAIyE,QACXzB,EAAK9C,aAAaQ,YAClB,cACAN,SAASjB,GAASuF,IAAIC,QAIF,iBAAxBiqC,GACAF,EAAa9pC,OAASpC,EAASwB,MAAMY,MAErCkqC,EAAehvC,SAInBwP,GAAU,IAkXQhK,YAAU,cACViD,MAAO,CAAEmX,OAAQ,UrH3gBnB,UqH+gBA,kBAAC,KAAD,CACE5c,KAAK,UACLuO,SAAS,SACTzL,QAtXA,SAACqK,GACrB1N,OAAOC,SAAW,4BAsXE8C,YAAU,eAET3B,aCviBrBxE,GAAWC,EAAQ,IA8OR6vC,I,8BAAAA,GA7Of,SAAgB1wC,GACd,IAAM0d,EAAkBxd,EAAe,QACjCyd,EAAoB9Z,KAAK+G,MAAM1K,EAAe,SAEhDqd,GAAS,EACTC,GAAU,EACVC,GAAU,EACTC,IACHH,GAAS,EACTC,GAAU,EACVC,GAAU,GAGVC,GACAC,GAC+B,QAA/BA,EAAkBlb,YAElB8a,EAIoC,SAHlC3c,GAASa,IAAIyE,QACXyX,EAAkBlb,UAAUU,aAC5B,cACAtB,SAASjB,GAASuF,IAAIC,MAC1BoX,EAIoC,SAHlC5c,GAASa,IAAIyE,QACXyX,EAAkBlb,UAAUY,eAC5B,cACAxB,SAASjB,GAASuF,IAAIC,MAC1BqX,EAIoC,SAHlC7c,GAASa,IAAIyE,QACXyX,EAAkBlb,UAAUQ,eAC5B,cACApB,SAASjB,GAASuF,IAAIC,OAE5B,IAAM0jC,EAAM9lC,OAAOC,SAAS7D,SAE5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkJ,KAAK,eAAerJ,UAAW0wC,KACtC,kBAAC,EAAD,CAAgBrnC,KAAK,kBAAkBrJ,UAAW+d,KAClD,kBAAC,IAAD,CAAO4yB,OAAO,EAAMtnC,KAAK,SAASrJ,UAAWmd,KAC7C,kBAAC,IAAD,CAAOwzB,OAAO,EAAMtnC,KAAK,kBAAkBrJ,UAAWwb,KACtD,kBAAC,IAAD,CAAOm1B,OAAO,EAAMtnC,KAAK,iBAAiBrJ,UAAWic,KACpDsB,IACQ,yBAARssB,GACS,uBAARA,GACQ,wBAARA,GACQ,2BAARA,GACQ,yBAARA,GACQ,4BAARA,GACQ,0BAARA,GACQ,6BAARA,GACQ,0BAARA,GACQ,sBAARA,GACAA,EAAIliC,SAAS,oBACL,uBAARkiC,GACQ,wBAARA,GACQ,yBAARA,GACQ,uBAARA,GACQ,0BAARA,GACQ,sBAARA,GACQ,MAARA,GACQ,WAARA,GACA,kBAAC,IAAD,KAEE,kBAAC,EAAD,CACE8G,OAAO,EACPtnC,KAAK,uBACLunC,OAAK,EACL5wC,UAAW6hB,KAEb,kBAAC,EAAD,CACE8uB,OAAO,EACPtnC,KAAK,yBACLunC,OAAK,EACL5wC,UAAW+a,KAEb,kBAAC,EAAD,CACE41B,OAAO,EACPtnC,KAAK,oBACLunC,OAAK,EACL5wC,UAAW6wC,KAEb,kBAAC,EAAD,CACEF,OAAO,EACPtnC,KAAK,qBACLunC,OAAK,EACL5wC,UAAWs/B,KAEb,kBAAC,EAAD,CACEqR,OAAO,EACPtnC,KAAK,wBACLunC,OAAK,EACL5wC,UAAW2gC,KAEb,kBAAC,EAAD,CACEgQ,OAAO,EACPtnC,KAAK,uBACLunC,OAAK,EACL5wC,UAAWymB,KAEb,kBAAC,EAAD,CACEkqB,OAAO,EACPtnC,KAAK,0BACLunC,OAAK,EACL5wC,UAAW8wC,KAEb,kBAAC,EAAD,CACEH,OAAO,EACPtnC,KAAK,qBACLunC,OAAK,EACL5wC,UAAW0+B,KAEb,kBAAC,EAAD,CACEiS,OAAO,EACPtnC,KAAK,wBACLunC,OAAK,EACL5wC,UAAW6uC,KAEb,kBAAC,EAAD,CACE8B,OAAO,EACPtnC,KAAK,2BACLunC,OAAK,EACL5wC,UAAW+wC,KAEb,kBAAC,EAAD,CACEJ,OAAO,EACPtnC,KAAK,sBACLunC,OAAK,EACL5wC,UAAWgwC,KAEb,kBAAC,EAAD,CACEW,OAAO,EACPtnC,KAAK,wBACLunC,OAAK,EACL5wC,UAAWgxC,KAGb,kBAAC,EAAD,CACEL,OAAO,EACPtnC,KAAK,qBACLunC,OAAK,EACL5wC,UAAWmmC,KAEb,kBAAC,EAAD,CACEwK,OAAO,EACPtnC,KAAK,oBACLunC,OAAK,EACL5wC,UAAW+nC,KAEb,kBAAC,EAAD,CACE4I,OAAO,EACPtnC,KAAK,sBACLunC,OAAK,EACL5wC,UAAW+rC,KAEb,kBAAC,EAAD,CACE4E,OAAO,EACPtnC,KAAK,sBACLunC,OAAK,EACL5wC,UAAWusC,KAEb,kBAAC,EAAD,CACEoE,OAAO,EACPtnC,KAAK,uBACLunC,OAAK,EACL5wC,UAAWkuC,OAGb1wB,GACO,2BAARqsB,GACS,WAARA,GACQ,MAARA,GACQ,4BAARA,EAmBAvsB,IACO,8BAARusB,GACS,oBAARA,GACQ,MAARA,GACAA,EAAIliC,SAAS,kBACbkiC,EAAIliC,SAAS,qBACL,WAARkiC,GACF,oCACG,IAED,kBAAC,IAAD,KACE,kBAAC,EAAD,CACE8G,OAAO,EACPtnC,KAAK,uBACLpG,MAAI,EACJjD,UAAW87B,KAEb,kBAAC,EAAD,CACE6U,OAAO,EACPtnC,KAAK,4BACLpG,MAAI,EACJjD,UAAWixC,KAEb,kBAAC,EAAD,CACEN,OAAO,EACPtnC,KAAK,kBACLpG,MAAI,EACJjD,UAAW6X,KAEb,kBAAC,EAAD,CACE84B,OAAO,EACPtnC,KAAK,oBACLpG,MAAI,EACJjD,UAAW+9B,MAEL,KAGZtgB,GAAmB,kBAAC,IAAD,CAAOzd,UAAW26B,KAxDrC,oCACG,IAED,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEgW,OAAO,EACPtnC,KAAK,yBACLtG,OAAK,EACL/C,UAAW42B,KAEb,kBAAC,EAAD,CACE+Z,OAAO,EACPtnC,KAAK,0BACLtG,OAAK,EACL/C,UAAWu6B,U,8BC/NvB55B,GAAWC,EAAQ,IAEnBswC,GAAoB,GAClBC,GAAWlxC,EAAe,WAChCixC,GAAoBC,GAChBxwC,GAASa,IAAIyE,QAAQkrC,GAAU,cAC/B,GACJ,IAAM3sC,GAAOZ,KAAK+G,MAAM1K,EAAe,SACjCsB,GAAYiD,GACd7D,GAASa,IAAIyE,QAAb,OAAqBzB,SAArB,IAAqBA,QAArB,aAAqBA,GAAM9C,oBAA3B,cAAqB,GAAoBC,WAAY,cAAcC,SACjEjB,GAASuF,IAAIC,MAEf,GACEtE,GAAY2C,GACd7D,GAASa,IAAIyE,QAAb,OAAqBzB,SAArB,IAAqBA,QAArB,aAAqBA,GAAM9C,oBAA3B,cAAqB,GAAoBI,UAAW,cAAcF,SAChEjB,GAASuF,IAAIC,MAEf,GACE5D,GAAYiC,GACd7D,GAASa,IAAIyE,QAAb,OAAqBzB,SAArB,IAAqBA,QAArB,aAAqBA,GAAMhC,iBAA3B,cAAqB,GAAiBxB,MAAO,cAAcY,SACzDjB,GAASuF,IAAIC,MAEf,GACE1D,GAAa+B,GACf7D,GAASa,IAAIyE,QAAb,OAAqBzB,SAArB,IAAqBA,QAArB,aAAqBA,GAAMhC,iBAA3B,cAAqB,GAAiBE,cAAe,cAAcd,SACjEjB,GAASuF,IAAIC,MAEf,GACEpD,KAAQyB,IAGJ,SAFN7D,GAASa,IAAIyE,QAAb,WAAqBzB,GAAKhC,iBAA1B,cAAqB,GAAgBQ,eAAgB,cAAcpB,SACjEjB,GAASuF,IAAIC,MAGblD,KAAOuB,IAGH,SAFN7D,GAASa,IAAIyE,QAAb,WAAqBzB,GAAKhC,iBAA1B,cAAqB,GAAgBU,aAAc,cAActB,SAC/DjB,GAASuF,IAAIC,MAGbhD,KAAUqB,IAGN,SAFN7D,GAASa,IAAIyE,QAAb,WAAqBzB,GAAKhC,iBAA1B,cAAqB,GAAgBY,eAAgB,cAAcxB,SACjEjB,GAASuF,IAAIC,MAGb9C,KAAQmB,IAGJ,SAFN7D,GAASa,IAAIyE,QAAb,WAAqBzB,GAAKhC,iBAA1B,cAAqB,GAAgBc,YAAa,cAAc1B,SAC9DjB,GAASuF,IAAIC,MAGb5C,KAAWiB,IAGP,SAFN7D,GAASa,IAAIyE,QAAb,WAAqBzB,GAAKhC,iBAA1B,cAAqB,GAAgBgB,eAAgB,cAAc5B,SACjEjB,GAASuF,IAAIC,MAGb1C,KAAQe,IAGJ,SAFN7D,GAASa,IAAIyE,QAAb,WAAqBzB,GAAKhC,iBAA1B,cAAqB,GAAgBkB,YAAa,cAAc9B,SAC9DjB,GAASuF,IAAIC,MAGbxC,GAAQ,eACTa,GADS,CAEZhC,UAAU,eAAD,OACJgC,SADI,IACJA,QADI,EACJA,GAAMhC,UADF,CAEPxB,MAAOuB,GACPG,cAAeD,GACfO,eAAgBD,GAChBG,aAAcD,GACdS,YAAaD,GACbL,eAAgBD,GAChBG,YAAaD,GACbG,eAAgBD,KAElB7B,aAAa,eAAD,OACP8C,SADO,IACPA,QADO,EACPA,GAAM9C,aADC,CAEVC,WAAYJ,GACZO,UAAWD,OAITZ,GAAWiwC,GAAkBtvC,SAASjB,GAASuF,IAAIC,MACnDirC,GAAe5sC,GACjB,CACEiB,YAAY,EACZjB,KAAMb,GACNc,QAASxD,GAASmL,WAAW,UAAW,KAE1C,CAAE3G,YAAY,EAAOjB,KAAM,KAAMC,QAAS,MCtFxC2sC,GAAe,GCAfC,GAAgB,CACtBA,cAA8B,MCDxBA,GAAgB,CACtBA,cAA8B,MCIxBA,GAAgB,CACtBA,aAA6B,KAC7BA,kBAAkC,ICP5BA,GAAgB,CACtBA,kBAAkC,ICE1BA,GAAgB,CACtBA,cAA8B,MCDxBA,GAAgB,CACtBA,UAA0B,MCKbC,8BAAgB,CAC7B7pC,KR6Ea,WAAyC,IAA/BjC,EAA8B,uDAAtB4rC,GAAcxC,EAAQ,uCAC7CtqC,EAAkBsqC,EAAlBtqC,KAAMC,EAAYqqC,EAAZrqC,QAEd,OAAQD,GACN,IzH3FyB,gByH4FvB,OAAO,eACFkB,EADL,CAEEC,YAAY,EACZjB,KAAMD,EAAQC,KACdC,QAASF,EAAQE,UAErB,IzHpGsB,ayH2GtB,IzH1GkB,SyH2GhB,OAAO,eACFe,EADL,CAEEC,YAAY,EACZjB,KAAM,KACNC,QAAS,OAEb,QACE,OAAOe,IQtGXX,QPTa,WAAyC,IAA/BW,EAA8B,uDAAtB4rC,GAAcxC,EAAQ,uCAC7CtqC,EAAkBsqC,EAAlBtqC,KAAMC,EAAYqqC,EAAZrqC,QAEd,OAAQD,GACN,I1HLuB,c0HMrB,MAAO,CAAEO,QAASN,GAEpB,I1HPyB,gB0HQvB,MAAO,CAAEM,QAAS,IAEpB,QACE,OAAOW,IODX+U,UNTa,WAA0C,IAAhC/U,EAA+B,uDAAvB6rC,GAAezC,EAAQ,uCAC9CtqC,EAAkBsqC,EAAlBtqC,KAAMC,EAAYqqC,EAAZrqC,QAEd,OAAQD,GACN,I3HJ6B,oB2HK3B,OAAO,eACFkB,EADL,CAEE8U,cAAe/V,EAAQ+V,gBAE3B,I3HR0B,iB2HSxB,OAAO,eACF9U,EADL,CAEE8U,cAAe,KAEnB,QACE,OAAO9U,IMLXqO,ULVa,WAA0C,IAAhCrO,EAA+B,uDAAvB6rC,GAAezC,EAAQ,uCAC9CtqC,EAAkBsqC,EAAlBtqC,KAAMC,EAAYqqC,EAAZrqC,QAEd,OAAQD,GACN,I5HD6B,oB4HE3B,OAAO,eACFkB,EADL,CAEEqV,cAAetW,EAAQsW,gBAE3B,I5HP0B,iB4HQxB,OAAO,eACFrV,EADL,CAEEqV,cAAe,KAEnB,QACE,OAAOrV,IKJX+gB,YJLa,WAA0C,IAAhC/gB,EAA+B,uDAAvB6rC,GAAezC,EAAQ,uCAC9CtqC,EAAkBsqC,EAAlBtqC,KAAMC,EAAYqqC,EAAZrqC,QAEd,OAAQD,GACN,I7HL2B,kB6HMzB,OAAO,eACFkB,EADL,CAEE8gB,aAAc/hB,EAAQ+hB,eAE1B,I7HXwB,e6HYtB,OAAO,eACF9gB,EADL,CAEE8gB,aAAc,KAElB,I7HbiC,kB6Hc/B,OAAO,eACF9gB,EADL,CAEE+rC,kBAAmBhtC,EAAQgtC,oBAE/B,I7HnB8B,e6HoB5B,OAAO,eACF/rC,EADL,CAEE+rC,kBAAmB,KAEvB,QACE,OAAO/rC,IInBXygB,gBHZa,WAA0C,IAAhCzgB,EAA+B,uDAAvB6rC,GAAezC,EAAQ,uCAC9CtqC,EAAkBsqC,EAAlBtqC,KAAMC,EAAYqqC,EAAZrqC,QAEd,OAAQD,GACN,I9HGiC,kB8HF/B,OAAO,eACFkB,EADL,CAEE+rC,kBAAmBhtC,EAAQgtC,oBAE/B,I9HH8B,e8HI5B,OAAO,eACF/rC,EADL,CAEE+rC,kBAAmB,KAEvB,QACE,OAAO/rC,IGFXqwB,SFVe,WAA0C,IAAhCrwB,EAA+B,uDAAvB6rC,GAAezC,EAAQ,uCAC9CtqC,EAAkBsqC,EAAlBtqC,KAAMC,EAAYqqC,EAAZrqC,QAEd,OAAQD,GACN,I/HC0B,mB+HAxB,OAAO,eACFkB,EADL,CAEEsqC,cAAevrC,EAAQurC,gBAE3B,I/HHuB,gB+HIrB,OAAO,eACFtqC,EADL,CAEEsqC,cAAe,KAEnB,QACE,OAAOtqC,IEJbk8B,KDXe,WAA0C,IAAhCl8B,EAA+B,uDAAvB6rC,GAAezC,EAAQ,uCAC9CtqC,EAAkBsqC,EAAlBtqC,KAAMC,EAAYqqC,EAAZrqC,QAEd,OAAQD,GACN,IhIGsB,egIFpB,OAAO,eACFkB,EADL,CAEEsmC,UAAWvnC,EAAQunC,YAEvB,IhIDmB,YgIEjB,OAAO,eACFtmC,EADL,CAEEsmC,UAAW,KAEf,QACE,OAAOtmC,MEjBTgsC,GAAa,CAACC,MAMLC,GALDC,uBACZC,GACAC,+BAAoBC,mBAAe,WAAf,EAAmBN,M,UC2G1BO,OAtGf,WACE,IAEIC,EAAY,KAHH,EAIsBnjC,oBAAS,GAJ/B,mBAINojC,EAJM,KAIKC,EAJL,OAK0BrjC,oBAAS,GALnC,mBAKNsjC,EALM,KAKOC,EALP,OAMmBvjC,oBAAS,GAN5B,mBAMNwjC,EANM,KAMIC,EANJ,KAkDb,OACE,kBAAC,IAAD,CAAUZ,MAAOA,IACf,kBAAC,KAAD,CACE71B,IAAK,SAACA,GACJm2B,EAAYn2B,GAEd4F,QAASuO,SACTuiB,OAjDS,SAAC9gC,GACVxR,EAAe,UACEoyC,GAEjBH,GAAc,GACdE,GAAgB,KAEhBF,GAAc,GACdF,EAAUQ,QACVF,GAAY,MAyCZG,SAZW,SAAChhC,GAChB6gC,GAAY,IAYRI,SAjBW,SAACjhC,GAChB6gC,GAAY,IAiBRK,SAAU,IACVC,QAAUP,EA3DM,IADF,OA8DhB,yBAAK5xC,UAAU,OACb,6BACE,yBAAKA,UAAU,WACb,kBAAC,KAAD,CACEuS,QAASi/B,EACTn+B,KA9CS,WACnBo+B,GAAc,IA8CJn+B,SA3Ca,WACvBm+B,GAAc,IA2CJl+B,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,OAAQnP,GAER,2BAAI8G,KAEN,kBAAC,KAAD,CACEkH,QAASm/B,EACTr+B,KApDW,WACjB7T,EAAe,SACjBmE,EAAYsB,UAmDJqO,SA/Ce,WACrB9T,EAAe,SACjBmE,EAAYsB,UA8CJsO,UAAQ,EACR5F,MAAO,IACP6F,cAAe,CACb3F,SAAU,aAEZ4F,kBAAmB,CAAEnK,MAAO,CAAEwK,QAAS,SACvCJ,OAAQnP,GAER,2BAAI+G,KAEN,kBAAC,GAAD,WCtGZ8mC,IAASxkC,OAAO,kBAAC,GAAD,MAAS2hB,SAASC,eAAe,U,mBCLjDjxB,EAAOC,QAAU,CAAC,WAAa,8BAA8B,aAAe,gCAAgC,KAAO,wBAAwB,oBAAsB,yC","file":"static/js/main.ddd323e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dots-icon.aa302437.svg\";","module.exports = __webpack_public_path__ + \"static/media/amcc-vector.042c9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-hotline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5a28702a.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymoose-logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c7b270ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-more.2d8e2c25.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.5fa26e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/work-chart.d8145f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-hotlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-openlines.50051d5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-openline.7fcce0f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/manage-polls.648b5bd2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sm_textarea\":\"managePoll_sm_textarea__2gyc1\",\"poll_info\":\"managePoll_poll_info__35K0P\",\"circle_white\":\"managePoll_circle_white__1jSAt\",\"select_md\":\"managePoll_select_md__30Qzr\",\"ant-select-dropdown\":\"managePoll_ant-select-dropdown__38nnC\",\"edit_tag\":\"managePoll_edit_tag__zHGBk\",\"add_tag\":\"managePoll_add_tag__2VJTM\",\"ant-tag\":\"managePoll_ant-tag__3TI5u\"};","const APP_NAME = \"AnonyMoose\";\r\nconst getKey = (key) => `${APP_NAME}.${key}`;\r\nexport const set = (key, value) => localStorage.setItem(getKey(key), value);\r\nexport const get = (key) => localStorage.getItem(getKey(key));\r\nexport const remove = (key) => localStorage.removeItem(getKey(key));\r\nexport const removeAll = () => localStorage.clear();\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    const user = AppStorage.get(\"user\");\r\n    const redirectPath = \"/login\";\r\n    return user ? (\r\n      <Component {...this.props} />\r\n    ) : (\r\n      <Redirect to={{ pathname: redirectPath }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Logo from \"../../src/assets/images/anonymoose-logo.svg\";\r\n\r\nconst CommonHeader = () => {\r\n  return (\r\n    <>\r\n      <img src={Logo} alt=\"AnonyMoose\" className=\"pr-4 pt-2 pt-lg-0 logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonHeader;\r\n","export const BASE_URL = \"http://10.0.6.10:8000/api/V1/\";\r\nexport const WEBSOCKET_HOTLINE_URL = \"ws://10.0.6.10:8000/ws/hotlineMessages/\";\r\nexport const WEBSOCKET_OPENLINE_URL =\r\n  \"ws://10.0.6.10:8000/ws/openlineMessages/\";\r\n","//Authentication service for AnonyMoose\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst options = {\r\n  headers: {\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\n\r\nclass AuthService {\r\n  async login(email, password, page) {\r\n    const response = await axios.post(\r\n      BASE_URL + \"authenticate/\",\r\n      { email, password, page },\r\n      options\r\n    );\r\n    if (response.data) {\r\n      const data = response.data;\r\n      const userFName = CryptoJS.AES.encrypt(\r\n        data.user_details?.first_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userLName = CryptoJS.AES.encrypt(\r\n        data.user_details?.last_name,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const departmentId = CryptoJS.AES.encrypt(\r\n        data.user_details?.department_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgUserId = CryptoJS.AES.encrypt(\r\n        data.user_details?.org_user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const endDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.end_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const startDate = CryptoJS.AES.encrypt(\r\n        data.user_details?.start_date,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userEmail = CryptoJS.AES.encrypt(\r\n        data.user_data?.email,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userMobile = CryptoJS.AES.encrypt(\r\n        data.user_data?.mobile_number,\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const orgId = CryptoJS.AES.encrypt(\r\n        data.user_data?.organization_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userId = CryptoJS.AES.encrypt(\r\n        data.user_data?.user_id.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amweb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_am_web_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_amcc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amorgcc = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_org_cc_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amidb = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_idb_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amseeded = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_seeded_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const amapp = CryptoJS.AES.encrypt(\r\n        data.user_data?.is_app_user.toString(),\r\n        \"anonymoose\"\r\n      ).toString();\r\n      const userData = {\r\n        ...data,\r\n        user_data: {\r\n          ...data.user_data,\r\n          email: userEmail,\r\n          mobile_number: userMobile,\r\n          organization_id: orgId,\r\n          user_id: userId,\r\n          is_am_web_user: amweb,\r\n          is_amcc_user: amcc,\r\n          is_app_user: amapp,\r\n          is_org_cc_user: amorgcc,\r\n          is_idb_user: amidb,\r\n          is_seeded_user: amseeded,\r\n        },\r\n        user_details: {\r\n          ...data.user_details,\r\n          first_name: userFName,\r\n          last_name: userLName,\r\n          department_id: departmentId,\r\n          org_user_id: orgUserId,\r\n          end_date: endDate,\r\n          start_date: startDate,\r\n        },\r\n      };\r\n      AppStorage.set(\"user\", JSON.stringify(userData));\r\n      AppStorage.set(\r\n        \"current\",\r\n        CryptoJS.AES.encrypt(JSON.stringify(password), \"anonymoose\").toString()\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    AppStorage.removeAll();\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nexport const login = (email, password, page) => (dispatch) => {\r\n  page = email === \"admin@anonymoose.co\" ? \"is_amcc_user\" : page;\r\n  return AuthService.login(email, password, page).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n          user: data,\r\n          current: password,\r\n        },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: SET_MESSAGE,\r\n      //   payload: message,\r\n      // });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const MANAGEORG_SUCCESS = \"MANAGEORG_SUCCESS\";\r\nexport const MANAGEORG_FAIL = \"MANAGEORG_FAIL\";\r\nexport const MANAGEEMP_FAIL = \"MANAGEEMP_FAIL\";\r\nexport const MANAGEEMP_SUCCESS = \"MANAGEEMP_SUCCESS\";\r\nexport const HOTLINE_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINE_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const HOTLINEASSIGN_FAIL = \"HOTLINE_FAIL\";\r\nexport const HOTLINEASSIGN_SUCCESS = \"HOTLINE_SUCCESS\";\r\nexport const OPENLINE_SUCCESS = \"OPENLINE_SUCCESS\";\r\nexport const OPENLINE_FAIL = \"OPENLINE_FAIL\";\r\nexport const POLL_SUCCESS = \"POLL_SUCCESS\";\r\nexport const POLL_FAIL = \"POLL_FAIL\";\r\n\r\n\r\n\r\n\r\n","export const STATUS_ACTIVE = \"Active\";\r\nexport const STATUS_INACTIVE = \"In active\";\r\nexport const AM_WEB = \"AM Web\";\r\nexport const AM_CC = \"AM CC\";\r\nexport const ORG_CC = \"Org CC\";\r\nexport const PIE_CHART = \"Pie Chart\";\r\nexport const BAR_CHART = \"Bar Chart\";\r\nexport const STAR_FORMAT = \"Star Format\";\r\nexport const SELECT_SINGLE = \"Select Single\";\r\nexport const SELECT_MULTIPLE = \"Select Multiple\";\r\nexport const STAR_RATING = \"Star Rating\";\r\nexport const MAKE_SUPER_USER = \"Make Super User\";\r\nexport const MAKE_USER = \"Make User\";\r\nexport const OPENLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const OPENLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const OPENLINE_CREATE_STEP3 = \"Review Details\";\r\nexport const HOTLINE_CREATE_STEP1 = \"Add Details\";\r\nexport const HOTLINE_CREATE_STEP2 = \"Assign Employee\";\r\nexport const HOTLINE_CREATE_STEP3 = \"Create Directory\";\r\nexport const URGENCY_LEVEL_LOW = \"Low\";\r\nexport const URGENCY_LEVEL_MEDIUM = \"Medium\";\r\nexport const URGENCY_LEVEL_HIGH = \"High\";\r\nexport const STATUS_OPEN = \"Open\";\r\nexport const STATUS_CLOSED = \"Closed\";\r\nexport const STATUS_NEW = \"New\";\r\nexport const AUDIT_LOG1 = \"Updated the Status to\";\r\nexport const AUDIT_LOG2 = \"Updated the Urgency level to\";\r\nexport const AUDIT_LOG3 = \"Added new Note\";\r\nexport const AUDIT_LOGH4 = \"View Hotline Converations\";\r\nexport const AUDIT_LOGO4 = \"View Openline Converations\";\r\nexport const SEXUAL_HARRASMENT = \"Sexual Harrasment\";\r\nexport const VIOLENCE = \"Violence\";\r\nexport const RACISM = \"Racism\";\r\nexport const CYBER_BULLYING = \"Cyber Bullying\";\r\nexport const FIGHT = \"Fight\";\r\nexport const DISCRIMINATION = \"Discrimination\";\r\nexport const SLAP = \"Slap\";\r\n","export const POLLS = \"Polls\";\r\nexport const OPENLINES = \"Openlines\";\r\nexport const HOTLINES = \"Hotlines\";\r\nexport const HOTLINE = \"Hotline\";\r\nexport const OPENLINE = \"Openline\";\r\nexport const ORGANIZATIONS = \"Organizations\";\r\nexport const BROADCAST_MESSAGES = \"Broadcast Messages\";\r\nexport const HELP = \"Help\";\r\nexport const INFO = \"Info\";\r\nexport const ORGANIZATION_DETAILS = \"Organization Details\";\r\nexport const EDIT_DETAILS = \"Edit Details\";\r\nexport const MANAGE_POLLS = \"Manage Polls\";\r\nexport const PREVIEW_POLL = \"Preview Poll\";\r\nexport const SCHEDULE = \"Schedule\";\r\nexport const RESCHEDULE = \"Reschedule\";\r\nexport const OOTB_POLL = \"OOTB Poll\";\r\nexport const POLL_RESULTS = \"Poll Results\";\r\nexport const SHOW_INTRIM_RESULT = \"Show Intrim Result\";\r\nexport const PUBLISH_POLL = \"Publish Poll\";\r\nexport const PUBLISH = \"Publish\";\r\nexport const MANAGE_EMPLOYEES = \"Manage Employees\";\r\nexport const MANAGE_HOTLINES = \"Manage Hotlines\";\r\nexport const CREATE_POLL = \"Create Poll\";\r\nexport const CREATE_ORGANIZATION = \"Create Organization\";\r\nexport const EDIT_ORGANIZATION = \"Edit Organization\";\r\nexport const EDIT_POLL = \"Edit Poll\";\r\nexport const VIEW_POLL = \"View Poll\";\r\nexport const VIEW = \"View\";\r\nexport const SEARCH_EMPLOYEE = \"Search Employee\";\r\nexport const SEARCH_USER = \"Search User\";\r\nexport const SEARCH = \"Search\";\r\nexport const ADD_USER = \"Add User\";\r\nexport const ADD_SEEDED_USER = \"Add Seeded User\";\r\nexport const EDIT_SEEDED_USERS = \"Edit Seeded Users\";\r\nexport const EDIT_SEEDED_USER = \"Edit Seeded User\";\r\nexport const EDIT_HOTLINE = \"Edit Hotline\";\r\nexport const NO_SEEDED_USERS = \"No Seeded User\";\r\nexport const CANCEL_MODAL = \"Cancel\";\r\nexport const UPDATE_MODAL = \"Update\";\r\nexport const ADD_TEXT_MODAL = \"Add\";\r\nexport const DELETE_TEXT_MODAL = \"Delete\";\r\nexport const OK_TEXT_MODAL = \"OK\";\r\nexport const YES_TEXT_MODAL = \"Yes\";\r\nexport const NO_TEXT_MODAL = \"No\";\r\nexport const CHANGE_PASSWORD_FOR = \"Change Password for\";\r\nexport const CHANGE_PASSWORD = \"Change Password\";\r\nexport const RESET_PASSWORD_LINK = \"Reset password for this user\";\r\nexport const RESET_PASSWORD = \"Reset Password\";\r\nexport const SET_NEW_PASSWORD = \"Set a new password for your account.\";\r\nexport const RESET_INVITE = \"Reset and Invite\";\r\nexport const RESET_PASSWORD_FOR = \"Reset password for \";\r\nexport const SUBMIT = \"Submit\";\r\nexport const NEXT = \"Next\";\r\nexport const BACK = \"Back\";\r\nexport const SAVE = \"Save\";\r\nexport const UPDATE = \"Update\";\r\nexport const CANCEL = \"Cancel\";\r\nexport const CREATE = \"Create\";\r\nexport const EDIT = \"Edit\";\r\nexport const DELETE = \"Delete\";\r\nexport const CREATE_INVITE = \"Create and Invite\";\r\nexport const ADD_ICON = \"Add Icon\";\r\nexport const SEEDED_USERS_DETAILS = \"Seeded Users Details\";\r\nexport const HOTLINE_DIRECTORY = \"Hotline Directory\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const CREATE_HOTLINE_DIRECTORY = \"Create Hotline Directory\";\r\nexport const CREATE_OPENLINE_DIRECTORY = \"Create Openline Directory\";\r\nexport const CREATE_HOTLINE_DIRECTORY_ENTRIES =\r\n  \"Create Hotline Directory Entries\";\r\nexport const CREATE_OPENLINE_DIRECTORY_ENTRIES =\r\n  \"Create Openline Directory Entries\";\r\nexport const DELETE_HOTLINE = \"Delete Hotline\";\r\nexport const ASSIGN = \"Assign\";\r\nexport const DONE = \"Done\";\r\nexport const ORGANIZATION_CREATE_STEP3 = \"Confirm Details\";\r\nexport const ACTIVITY = \"Activity\";\r\nexport const SHOW_LESS = \"Show less\";\r\nexport const SHOW = \"Show\";\r\nexport const OPENLINE_MESSAGES = \"Openline Messages\";\r\nexport const HOTLINE_MESSAGES = \"Hotline Messages\";\r\nexport const ASSIGNED_TO = \"Assigned To\";\r\nexport const FILTER = \"Filter\";\r\nexport const RESET = \"Reset\";\r\nexport const URGENCY_LEVEL = \"Urgency level\";\r\nexport const APPLY = \"Apply\";\r\nexport const CONVERSATIONS = \"Conversations\";\r\nexport const URGENCY = \"Urgency\";\r\nexport const NO_MESSAGES_FOUND = \"No messages found\";\r\nexport const NO_CONVERSATION_SELECETD = \"No Conversation Selected\";\r\nexport const SELECT_CONVERSATION = \"Select a Conversation to view\";\r\nexport const LAST_READ = \"Last Read\";\r\nexport const URGENCY_LEVEL_CHANGED = \"Urgency Level Changed\";\r\nexport const STATUS_CHANGED = \"Status Changed\";\r\nexport const SEND_MESSAGE_TEXT = \"Replying as Hotline representative\";\r\nexport const NOTES = \"Notes\";\r\nexport const TAKE_NOTE = \"Take a note\";\r\nexport const ADD_NOTE = \"Add note here\";\r\nexport const LOADING = \"Loading...\";\r\nexport const SIGN_IN = \"Sign In\";\r\nexport const SIGN_OUT = \"Sign Out\";\r\nexport const FORGOT_PASSWORD = \"Forgot Password\";\r\nexport const ADD_EMPLOYEE = \"Add Employee\";\r\nexport const MANAGE_ORGANIZATIONS = \"Manage Organizations\";\r\nexport const POLL_TITLE = \"Poll Title\";\r\nexport const POLL = \"Poll\";\r\nexport const UPLOAD = \"Upload\";\r\nexport const DOCUMENT_IMAGE = \" Document Or Image\";\r\nexport const CLOSE_TEXT_MODAL = \"Close\";\r\nexport const ADD_OPTION = \"Add Option\";\r\nexport const PREVIEW = \"Preview\";\r\nexport const EXTEND_END_DATE = \"Extend End Date\";\r\nexport const EXTEND_TEXT_MODAL = \"Extend Date\";\r\nexport const EDIT_OPENLINE = \"Edit Openline\";\r\nexport const UPLOAD_IMAGE = \"Upload Image\";\r\nexport const OPENLINE_DIRECTORY = \"Openline Directory\";\r\nexport const EDIT_PROFILE = \"Edit Profile\";\r\n","import React from \"react\";\r\nimport { Avatar } from \"antd\";\r\nimport \"../userInfo/userInfo.scss\";\r\nimport { Popover, List } from \"antd\";\r\nimport ExpandMore from \"../../assets/icons/expand-more.svg\";\r\nimport AuthService from \"./../../services/auth-service\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { AM_CC, AM_WEB, ORG_CC } from \"../../values\";\r\nimport { CHANGE_PASSWORD, EDIT_PROFILE, SIGN_OUT } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nclass AnonymooseUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleChangeUserRole = this.handleChangeUserRole.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    AuthService.logout();\r\n  }\r\n  handleChangeUserRole(type) {\r\n    if (type === \"amweb\") {\r\n      window.location.href = \"/amweb/hotlinemessages\";\r\n    } else if (type === \"amcc\") {\r\n      window.location.href = \"/amcc/manageorganizations\";\r\n    } else if (type === \"amorgcc\") {\r\n      window.location.href = \"/orgcc/manageemployees\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { amWEBUser, amCCUser, amORGUser } = this.props.userRole;\r\n    if (amCCUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amORGUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"Org CC\", \"anonymoose\").toString()\r\n      );\r\n    } else if (amWEBUser) {\r\n      AppStorage.set(\r\n        \"userType\",\r\n        CryptoJS.AES.encrypt(\"AM WEB\", \"anonymoose\").toString()\r\n      );\r\n    }\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    const {\r\n      email,\r\n      is_am_web_user,\r\n      is_amcc_user,\r\n      is_org_cc_user,\r\n      is_app_user,\r\n      is_idb_user,\r\n      is_seeded_user,\r\n    } = this.props.user.user_data;\r\n    const { first_name, last_name } = this.props.user.user_details;\r\n    const name = first_name + \" \" + last_name;\r\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const fullName = nameCapitalized.split(\" \");\r\n    const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n\r\n    return (\r\n      <>\r\n        <Popover\r\n          data-test=\"userInfo\"\r\n          className=\"test\"\r\n          placement=\"bottom\"\r\n          content={\r\n            <List className=\"u-info\" size=\"large\" bordered>\r\n              <List.Item className=\" d-flex d-lg-none\">\r\n                <div className=\"d-flex flex-column \">\r\n                  <span className=\"uname-top\">{nameCapitalized}</span>\r\n                  <span className=\"u-type\">{userType}</span>\r\n                </div>\r\n              </List.Item>\r\n              <List.Item>\r\n                <div className=\"email\">\r\n                  {email}\r\n                  <br />\r\n                  {/* {this.showLoggedinUserData()} */}\r\n                  <a href=\"#\">{EDIT_PROFILE}</a>\r\n                </div>\r\n              </List.Item>\r\n              {amORGUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amORGUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amWEBUser && is_amcc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amcc\")}>\r\n                  {AM_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_am_web_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amweb\")}>\r\n                  {AM_WEB}\r\n                </List.Item>\r\n              ) : null}\r\n              {amCCUser && is_org_cc_user ? (\r\n                <List.Item onClick={() => this.handleChangeUserRole(\"amorgcc\")}>\r\n                  {ORG_CC}\r\n                </List.Item>\r\n              ) : null}\r\n              <Link to=\"/changepassword\">\r\n                <List.Item>{CHANGE_PASSWORD}</List.Item>\r\n              </Link>\r\n              <List.Item onClick={this.handleLogoutClick}>{SIGN_OUT}</List.Item>\r\n            </List>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <Avatar className=\"mr-2\">{initials}</Avatar>\r\n          <span className=\"d-none d-lg-flex flex-column\">\r\n            <span className=\"uname-top\">{nameCapitalized}</span>\r\n            <span className=\"u-type\">{userType}</span>\r\n          </span>\r\n          <span className=\"expand-arrow\">\r\n            <img src={ExpandMore} alt=\"Expand Arrow\" className=\"pr-0 pr-md-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnonymooseUser));\r\n","import React, { useEffect } from \"react\";\r\nimport Logo from \"../../src/assets/images/logo.svg\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport AnonymooseUser from \"../components/userInfo/UserInfo\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst LoggedinHeader = (props) => {\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    let page = \"\";\r\n    if (userType === \"AM CC\") {\r\n      page = \"is_amcc_user\";\r\n    } else if (userType === \"AM WEB\") {\r\n      page = \"is_am_web_user\";\r\n    } else if (userType === \"Org CC\") {\r\n      page = \"is_org_cc_user\";\r\n    }\r\n    const password = props.current.includes('\"')\r\n      ? props.current.slice(1, -1)\r\n      : props.current;\r\n    // call authenticate api after 10 minutes.\r\n    setInterval(() => {\r\n      console.log('INTERVAL');\r\n      dispatch(login(props.user.user_data.email, password, page));\r\n    }, 600000);\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Col span={18} md={18} lg={12}>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Anonymoose Logo\"\r\n          className=\"pl-md-0 pr-0 pr-md-4 pt-0 pt-md-0 pt-lg-0 logo\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        span={6}\r\n        md={6}\r\n        lg={12}\r\n        className=\"d-flex justify-content-end av-wrapper\"\r\n      >\r\n        <AnonymooseUser userRole={props} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user, current } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n    current,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(LoggedinHeader);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  MANAGE_EMPLOYEES,\r\n  HOTLINES,\r\n  OPENLINES,\r\n  HELP,\r\n  INFO,\r\n  BROADCAST_MESSAGES,\r\n  POLLS,\r\n} from \"../headings\";\r\n\r\nclass OrgSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"employees\")) {\r\n        defaultKey = \"4\";\r\n      } else if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      } else if (this.props.data.location.pathname.includes(\"poll\")) {\r\n        defaultKey = \"3\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuFoldOutlined: MenuUnfoldOutlined ,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \" d-lg-block w-md-100 sider-width\"\r\n              : \"d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/hotlinedirectory\">{HOTLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/openlinedirectory\">{OPENLINES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/pollsdirectory\">{POLLS}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-emp\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/orgcc/manageemployees\">{MANAGE_EMPLOYEES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-broadcast\" />\r\n                </span>\r\n              }\r\n            >\r\n              {BROADCAST_MESSAGES}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-help\" />\r\n                </span>\r\n              }\r\n            >\r\n              {HELP}\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"7\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-info\" />\r\n                </span>\r\n              }\r\n            >\r\n              {INFO}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"#\" className=\"px-2\">\r\n              {INFO}\r\n            </a>\r\n            <a href=\"#\" className=\"px-2\">\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrgSidebar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport { MANAGE_ORGANIZATIONS } from \"../../headings\";\r\n\r\nclass AccSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ?MenuFoldOutlined : MenuUnfoldOutlined  ,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            this.state.collapsed\r\n              ? \"d-lg-block w-md-100 sider-width\"\r\n              : \" d-none d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-manage-org\" />\r\n                </span>\r\n              }\r\n            >\r\n              <Link to=\"/amcc/manageorganizations\">{MANAGE_ORGANIZATIONS}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccSidebar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ShowDetails = (props) => {\r\n  const history = useHistory();\r\n  const path = `/amcc/orgdetails/${props.record.organization_id}`;\r\n\r\n  const showModal = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.orgName ? (\r\n        <a onClick={showModal}>{props.record.name}</a>\r\n      ) : props.orgId ? (\r\n        <a onClick={showModal}>{props.record.identifier}</a>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React from \"react\";\r\nimport { Table, Select, Input } from \"antd\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport \"./table.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst Grid = ({ columns, data, rowKey }) => {\r\n  return (\r\n    <div id=\"no-more-tables\">\r\n      <Table\r\n        pagination={{ pageSize: 10 }}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className=\"cf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Buttons = ({value}) =>{\r\n    return (\r\n      <>\r\n        <Button type=\"primary\"> {value}</Button>\r\n      </>\r\n    );\r\n  }\r\nexport default Buttons;\r\n","import * as AppStorage from '../utils/AppStorage';\r\nexport default function authHeader() {\r\n  const CommonAuthHeader = JSON.parse(AppStorage.get(\"user\"));\r\n  if (CommonAuthHeader && CommonAuthHeader.user_data.tokens.access) {\r\n    return \"Bearer \" + CommonAuthHeader.user_data.tokens.access;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export const FIRST_NAME = \"First Name\";\r\nexport const LAST_NAME = \"Last Name\";\r\nexport const NAME = \"Name\";\r\nexport const RESPOND = \"Respond\";\r\nexport const EMAIL = \"Email\";\r\nexport const PASSWORD = \"Password\";\r\nexport const DATE = \"Date\";\r\nexport const MOBILE = \"Mobile\";\r\nexport const STATUS = \"Status\";\r\nexport const CHOOSE_ROLE = \"Choose Role\";\r\nexport const CURRENT_PASSWORD = \"Current Password\";\r\nexport const NEW_PASSWORD = \"New Password\";\r\nexport const CONFIRM_PASSWORD = \"Confirm Password\";\r\nexport const DIRECTORY_NAME = \"Directory Name\";\r\nexport const DESCRIPTION = \"Description\";\r\nexport const ACCESS = \"Access\";\r\nexport const ACTIONS = \"Actions\";\r\nexport const ORGANIZATION_NAME = \"Organization Name\";\r\nexport const ORGANIZATION_ID = \"Organization Id\";\r\nexport const HOTLINE_NAME = \"Hotline Name\";\r\nexport const OPENLINE_NAME = \"Openline Name\";\r\nexport const START_DATE = \"Start Date\";\r\nexport const END_DATE = \"End Date\";\r\nexport const SELECT_START_DATE = \"Select Start Date\";\r\nexport const SELECT_END_DATE = \"Select End Date\";\r\nexport const SELECT_START_TIME = \"Select Start Time\";\r\nexport const SELECT_END_TIME = \"Select End Time\";\r\nexport const PERMISSIONS = \"Permissions\";\r\nexport const DISPLAY_RESULTS_AS = \"Display final results as\";\r\nexport const QUESTION_TYPE = \"Question Type\";\r\nexport const QUESTION = \"Question\";\r\nexport const SHOW_RESULTS_POLL = \"Show result to users\";\r\nexport const SEE = \"See\";\r\nexport const PRIVACY_POLICY = \"Privacy Policy\";\r\n","export const PASSWORD_CHANGED =\r\n  \"Your password has been changed successfully. Please login again with your new password.\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART1 =\r\n  \"You are about to delete the organization\";\r\nexport const ABOUT_TO_DELETE_ORGANIZATION_PART2 =\r\n  \"Deleting organization would delete all records associated with it. Are you sure you want to delete organization\";\r\nexport const DELETE_CONFIRM = \"Are you sure you want to delete\";\r\nexport const ATLEAST_ONE_SEEDED_USER =\r\n  \"There should be at least one seeded user.\";\r\nexport const HOTLINE_UPDATED =\r\n  \"Hotline details have been changed successfully.\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART1 =\r\n  \"Create Hotline entries and assign them to managers,\";\r\nexport const HOTLINE_DIRECTORY_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const DELETE_CONFIRM_HOTLINE =\r\n  \"Are you sure you want to delete this hotline?\";\r\nexport const DELETE_CONFIRM_OPENLINE =\r\n  \"Are you sure you want to delete this Openline?\";\r\nexport const NO_CONVERSATION_INITIATED =\r\n  \"No conversations are initiated for the hotlines assigned to you\";\r\nexport const NO_CONVERSATION_INITIATED_OPENLINE =\r\n  \"No conversations are initiated for the openlines assigned to you\";\r\nexport const LOGIN_PART1 = \"Control Center and Insights Dashboard\";\r\nexport const LOGIN_PART2 = \"Raising Voice Anonymously Made Easy\";\r\nexport const LOGIN_PART3 =\r\n  \"Login to manage AnonyMoose eco-system. This includes employees eligible to use the app and/or components such as Hotlines, Openlines, Polls and Surveys, Broadcast Messages and access to different features of the Insights Dashboard, through set of assignable permissions.\";\r\nexport const CREATE_NEW_ORGANIZATION_TEXT =\r\n  \"Create a new Org Id for your client's organization\";\r\nexport const POLL_DATES_TEXT = \"Select Date and Time to publish the\";\r\nexport const EXTEND_END_DATE_TEXT_PART1 = \"Select Date and Time to \";\r\nexport const EXTEND_END_DATE_TEXT_PART2 = \"extend the\";\r\nexport const EXTEND_END_DATE_TEXT_PART3 =\r\n  \" date has been extended successfully.\";\r\nexport const OOTB_TEXT = \"Out Of The Box (OOTB) Poll\";\r\nexport const CREATE_NEW_POLL_TEXT =\r\n  \"Create polls and publish them for all employees from here\";\r\nexport const ASSIGN_HOTLINE_TEXT_PART1 = \"Assign Permissions for \";\r\nexport const ASSIGN_HOTLINE_TEXT_PART2 =\r\n  \"Reply to Messages, Add Notes, Status & Urgency level\";\r\nexport const OPENLINE_PERMISSION_TEXT_PART1 = \"Employees with permissions to \";\r\nexport const HIT_ENTER_TO_ADD = \"Hit enter to add\";\r\nexport const PRIVACY_POLICY_TEXT_PART1 =\r\n  \"THIS PRIVACY POLICY (“PRIVACY POLICY”) SETS FORTH HOW WE USE AND PROTECT THE PERSONAL INFORMATION COLLECTED WHILE USING OUR SERVICES. PLEASE READ THIS PRIVACY POLICY CAREFULLY. THIS PRIVACY POLICY IS APPLICABLE TO YOU (“YOU”, “YOUR”, “USER” OR “USERS”) IF YOU ARE USING, ACCESSING OUR SERVICES OR HAVE DOWNLOADED OR INSTALLED OUR PLATFORM. BY DOWNLOADING, CONTINUING TO USE OR ACCESSING THE PLATFORM OR THE SERVICES, YOU AGREE TO THE TERMS OF THIS PRIVACY POLICY. IF THE YOU DO NOT AGREE TO THIS PRIVACY POLICY, YOU MAY NOT USE, AVAIL OR ACCESS OUR SERVICES.\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART1 =\r\n  \"Create Openline entries and assign them to managers,\";\r\nexport const CREATE_NEW_OPENLINE_TEXT_PART2 =\r\n  \"head of departments or leadership.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART1 = \"Status of \";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART2 =\r\n  \" has been changed successfully.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART3 =\r\n  \" can't be changed as the end date has been passed.\";\r\nexport const STATUS_CHANGED_NOTIFICATION_PART4 =\r\n  \" can't be changed as this poll is completed.\";\r\nexport const ABOUT_TO_LOGOUT_TEXT =\r\n  \"You are about to log out. Click Ok to keep yourself logged in.\";\r\nexport const LOGGED_OUT_TEXT = \"You are logged out. Click Ok to log in again.\";\r\nexport const PERMISSION_DENIED =\r\n  \"You don't have access rights! Please contact your administrator.\";\r\nexport const ADD_SEEDED_USER_NOTIFICATION = \" has been added successfully.\";\r\nexport const EDIT_SEEDED_USER_NOTIFICATION_PART1 = \"Details for\";\r\nexport const EDIT_SEEDED_USER_NOTIFICATION_PART2 =\r\n  \" have been changed successfully.\";\r\nexport const DELETE_SEEDED_USER_NOTIFICATION =\r\n  \" has been deleted successfully.\";\r\nexport const EDIT_POLL_NOTIFICATION =\r\n  \"Poll details have been changed successfully.\";\r\nexport const POLL_RESULTS_NOT_AVAILABLE =\r\n  \"Results for this poll are not available at this moment.\";\r\nexport const ADD_EMPLOYEE_TEXT_PART1 =\r\n  \"Please create all employees for your organization who are eligible to use the app. You can either integrate with existing system, import through CSV or add each employee manually.\";\r\nexport const ADD_EMPLOYEE_TEXT_PART2 = \"Integrate with existing system\";\r\nexport const ADD_EMPLOYEE_TEXT_PART3 = \"Import through CSV\";\r\nexport const ADD_EMPLOYEE_TEXT_PART4 = \"Create manually\";\r\nexport const IMPORT_CSV = \"Import CSV file\";\r\nexport const DOWNLOAD_SAMPLE_FILE = \"Download Sample File\";\r\nexport const DROP_FILES_TO_UPLOAD = \"Drop files to upload or Browse\";\r\nexport const REQUEST_PASSWORD_RESET = \"Request Password Reset Link\";\r\nexport const BACK_TO = \"Back to \";\r\nexport const FORGOT_PASSWORD_TEXT1 =\r\n  \" Enter your registered email address to request a password reset link.\";\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, notification, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"./AccSidebar\";\r\nimport ShowDetails from \"../../containers/ShowDetails\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport Pencil from \"../../assets/icons/pencil.svg\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport moment from \"moment\";\r\nimport {\r\n  ACTIONS,\r\n  END_DATE,\r\n  ORGANIZATION_ID,\r\n  ORGANIZATION_NAME,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { CREATE_ORGANIZATION, ORGANIZATIONS, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOrganizations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      searchBy: \"\",\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { organizations } = this.props;\r\n    organizations?.forEach((org) => {\r\n      org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: organizations }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.organizations !== nextProps.organizations) {\r\n      nextProps.organizations.forEach((org) => {\r\n        org.start_date = moment(org.start_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        org.end_date = moment(org.end_date, \"DD-MM-YYYY\")\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.organizations }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        name: record.name,\r\n        identifier: record.identifier,\r\n        organization_id: record.organization_id,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 2 : 1,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description:\r\n            STATUS_CHANGED_NOTIFICATION_PART1 +\r\n            record.name +\r\n            STATUS_CHANGED_NOTIFICATION_PART2,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: ORGANIZATION_NAME,\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgName />,\r\n            props: {\r\n              \"data-title\": \"Organization Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ORGANIZATION_ID,\r\n        dataIndex: \"\",\r\n        key: \"identifier\",\r\n        width: \"20%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <ShowDetails record={record} orgId />,\r\n            props: {\r\n              \"data-title\": \"Organization Id\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"20%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"End date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status_id\",\r\n        width: \"10%\",\r\n\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"\",\r\n        key: \"\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          const path = `/amcc/editorg/${record.organization_id}`;\r\n          return {\r\n            children: (\r\n              <Link to={path}>\r\n                <img src={Pencil} alt=\"Actions\" />\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{ORGANIZATIONS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/amcc/createorg\">\r\n                        <Buttons value={CREATE_ORGANIZATION} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    key=\"manageOrg\"\r\n                    rowKey=\"identifier\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOrganizations;\r\n","import React, { useState } from \"react\";\r\n\r\nconst FloatLabel = props => {\r\n  const [focus, setFocus] = useState(false);\r\n  const { children, label, value } = props;\r\n\r\n  const labelClass =\r\n    focus || (value && value.length !== 0) ? \"label label-float\" : \"label\";\r\n\r\n  return (\r\n    <div\r\n      className=\"float-label\"\r\n      onBlur={() => setFocus(false)}\r\n      onFocus={() => setFocus(true)}\r\n    >\r\n      {children}\r\n      <label className={labelClass}>{label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatLabel;\r\n","export const REQUIRED_MESSAGE =\r\n  \"Please fill the fields marked with asterisk(*)\";\r\nexport const MAX_CHAR_LIMIT = \"Max Characters limit reached.\";\r\nexport const VALID_EMAIL = \"Please enter a valid email address.\";\r\nexport const VALID_MOBILE = \"Please enter a valid mobile number.\";\r\nexport const OLD_PASSWORD = \"Old Password is wrong.\";\r\nexport const ENTER_CURRENT_PASSWORD = \"Please enter your current password!\";\r\nexport const ENTER_NEW_PASSWORD = \"Please enter your new password!\";\r\nexport const ENTER_PASSWORD = \"Please enter your password\";\r\nexport const PASSWORD_RULES =\r\n  \"Please enter a valid password. It should be atleast 8 characters long with atleast 1 each of Capital letter, small letter, numeric and special character.\";\r\nexport const CONFIRM_YOUR_PASSWORD = \"Please confirm your password!\";\r\nexport const PASSWORD_NOT_MATCH =\r\n  \"The two passwords that you entered do not match!\";\r\nexport const ENTER_DIRECTORY_NAME = \"Please enter directory name\";\r\nexport const UPLOAD_IMAGE_REQUIRED = \"Please upload an image.\";\r\nexport const HOTLINE_ALREADY_EXISTS =\r\n  \"Sorry! This hotline already exists in the system. Please use a different name.\";\r\nexport const ENTER_DESCRIPTION = \"Please enter description\";\r\nexport const SELECT_DATE = \"Please select date\";\r\nexport const SELECT_STATUS = \"Please select status\";\r\nexport const ASSIGN_USERS_HOTLINES = \"Please select user(s).\";\r\nexport const ORGANIZATION_NAME_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different name.\";\r\nexport const ORGANIZATION_ID_ALREADY_EXISTS =\r\n  \"Sorry! This organization already exists in the system. Please use a different Id.\";\r\nexport const CREATE_ORGANIZATION_ERROR =\r\n  \"There is some difficulty while creating this organization.\";\r\nexport const STATUS_NOT_CHANGED =\r\n  \"Status can't be changed as the end date has been passed.\";\r\nexport const POLL_ALREADY_EXISTS =\r\n  \"Sorry! This Poll title already exists in the system. Please use a different name.\";\r\nexport const STAR_CHART_TYPE = \"Please select the Chart type as Star\";\r\nexport const PAST_TIME = \"Past Time can not be selected\";\r\nexport const OPENLINE_ALREADY_EXISTS =\r\n  \"Sorry! This openline already exists in the system. Please use a different name.\";\r\nexport const SELECT_USER_TYPE = \"Please select user type\";\r\nexport const UPLOAD_CSV_FILE= \"Please upload a csv file.\";\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../form/form.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepOne = ({\r\n  next,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  orgIdCount,\r\n  orgNameCount,\r\n  setOrgNameAlreadyExists,\r\n  setOrgIDAlreadyExists,\r\n  orgIDAlreadyExists,\r\n  orgNameAlreadyExists,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [error, showError] = useState(false);\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganization/\",\r\n        { organization_name: stepOneOrganizationInfo.organizationName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgNameAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOrganizationID/\",\r\n        { orgID: stepOneOrganizationInfo.organizationId },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setOrgIDAlreadyExists(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      if (\r\n        orgNameAlreadyExists === \"status: false\" &&\r\n        orgIDAlreadyExists === \"status: false\"\r\n      ) {\r\n        showError(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <Form\r\n      className=\"input-md floating-label w-100\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_NAME}\r\n              value={stepOneOrganizationInfo.organizationName}\r\n            >\r\n              <Form.Item className=\"required\" name=\"organizationName\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationName\"\r\n                  htmlFor=\"organizationName\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationName}\r\n                  value={stepOneOrganizationInfo.organizationName}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationName(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                />\r\n                {orgNameAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationName\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationName.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgNameAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={ORGANIZATION_ID}\r\n              value={stepOneOrganizationInfo.organizationId}\r\n            >\r\n              <Form.Item\r\n                className=\"required\"\r\n                name=\"organizationId\"\r\n                validateStatus=\"success\"\r\n              >\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"organizationId\"\r\n                  htmlFor=\"organizationId\"\r\n                  defaultValue={stepOneOrganizationInfo.organizationId}\r\n                  value={stepOneOrganizationInfo.organizationId}\r\n                  onChange={(e) => handleStepOneOnChange(e)}\r\n                  onBlur={(e) => CheckOrganizationID(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={20}\r\n                />\r\n                {orgIDAlreadyExists === \"status: false\" &&\r\n                  stepOneOrganizationInfo.organizationId\r\n                    .replace(/^\\s*/, \"\")\r\n                    .replace(/\\s*$/, \"\").length > 0 &&\r\n                  stepOneOrganizationInfo.organizationId.length > 0 && (\r\n                    <CheckCircleTwoTone\r\n                      className=\"successCheck\"\r\n                      twoToneColor=\"#52c41a\"\r\n                    />\r\n                  )}\r\n                {orgIDAlreadyExists == \"status: true\" && (\r\n                  <Alert\r\n                    message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n              {orgIdCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepOneOrganizationInfo.status1}>\r\n              <Form.Item className=\"required\" name=\"status1\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-100\"\r\n                    value={stepOneOrganizationInfo.status1}\r\n                    htmlFor=\"status1\"\r\n                    onSelect={(value) =>\r\n                      handleStepOneOnSelect(value, \"status1\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"w-100 \"\r\n                  name=\"s1Date\"\r\n                  value={stepOneOrganizationInfo.s1Date}\r\n                  onChange={(date) =>\r\n                    handleStepOneDatePickerChange(date, \"s1Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={stepOneNext}>\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepOne;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  DELETE,\r\n  DELETE_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n  NO_TEXT_MODAL,\r\n  OK_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport {\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART1,\r\n  ABOUT_TO_DELETE_ORGANIZATION_PART2,\r\n  ATLEAST_ONE_SEEDED_USER,\r\n  DELETE_CONFIRM,\r\n} from \"../../messages\";\r\n\r\nclass DeleteModal extends Component {\r\n  state = { visible: false, show: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.deleteOrg) {\r\n      this.showModal();\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showBothModals = () => {\r\n    this.setState({\r\n      visible: true,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  handleOnOk = () => {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.seededUser) {\r\n      if (this.props.viaEdit) {\r\n        this.props.handleDelete(this.props.user.email);\r\n      } else {\r\n        this.props.handleDelete(this.props.user.userId);\r\n      }\r\n    } else if (this.props.deleteOrg) {\r\n      this.props.handleDelete(this.props.org);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    if (this.props.deleteOrg) this.props.handleCancel();\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        history.push(\"/orgcc/hotlinedirectory\");\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.deleteOrg && !this.props.data.manageEmp ? (\r\n          <Button onClick={this.showBothModals}>{DELETE}</Button>\r\n        ) : this.props.data.manageEmp ? (\r\n          <a onClick={this.showModal}>{DELETE}</a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {this.props.deleteOrg ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleOk}\r\n            centered\r\n            width={700}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={CANCEL_MODAL}\r\n            cancelText={DELETE_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART1}{\" \"}\r\n              <strong>{this.props.org}</strong>.{\" \"}\r\n              {ABOUT_TO_DELETE_ORGANIZATION_PART2}{\" \"}\r\n              <strong>{this.props.org}</strong>?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length > 1 ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.viaEdit && this.props.seededUser ? (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={YES_TEXT_MODAL}\r\n            cancelText={NO_TEXT_MODAL}\r\n          >\r\n            <p>\r\n              {DELETE_CONFIRM} {this.props.user.firstName}?\r\n            </p>\r\n          </Modal>\r\n        ) : !this.props.deleteOrg &&\r\n          this.props.viaEdit &&\r\n          this.props.seededUsers.length === 1 ? (\r\n          <Modal\r\n            visible={this.state.show}\r\n            onOk={this.handleOnOk}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            <p>{ATLEAST_ONE_SEEDED_USER}</p>\r\n          </Modal>\r\n        ) : (\r\n          <Modal\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            centered\r\n            width={370}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{\r\n              children: \"Custom cancel\",\r\n            }}\r\n            okText={OK_TEXT_MODAL}\r\n            cancelText={CANCEL_MODAL}\r\n          >\r\n            <p>{DELETE_CONFIRM}</p>\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        {props.seededUser ? (\r\n          props.viaEdit ? (\r\n            <Button onClick={() => props.handleEditUser(props.user.email)}>\r\n              {EDIT}\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => props.handleEditUser(props.user.userId)}>\r\n              {EDIT}\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <a href=\"\">{EDIT}</a>\r\n        )}\r\n      </li>\r\n\r\n      <li>\r\n        {props.seededUser ? (\r\n          <DeleteModal\r\n            user={props.user}\r\n            handleDelete={props.handleDelete}\r\n            seededUsers={props.seededUsers}\r\n            seededUser\r\n            viaEdit={props.viaEdit}\r\n          />\r\n        ) : (\r\n          <DeleteModal data={props} />\r\n        )}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass GridPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridPopover;\r\n","import React from \"react\";\r\nimport Grid from \"../table/Table\";\r\nimport { Row, Col, Button, notification } from \"antd\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { EMAIL, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { ADD_SEEDED_USER } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n} from \"../../messages\";\r\n\r\nclass AssignedUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { seededUsers } = this.props;\r\n    this.setState({ data: seededUsers });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.seededUsers !== nextProps.seededUsers &&\r\n      nextProps.seededUsers.length > 0\r\n    ) {\r\n      this.setState({ data: nextProps.seededUsers });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const data = {\r\n      first_name: record.firstName,\r\n      last_name: record.lastName,\r\n      email: record.email,\r\n      mobile_number: record.mobile,\r\n      status_id: via === \"Active\" ? 2 : 1,\r\n      start_date: record.date2[0]\r\n        ? moment(record.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: record.date2[1]\r\n        ? moment(record.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: this.props.orgID,\r\n    };\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.firstName +\r\n          STATUS_CHANGED_NOTIFICATION_PART2,\r\n      });\r\n      this.props.statusOnClicked();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        width: \"22%\",\r\n        render: (firstName) => {\r\n          return {\r\n            children: firstName,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        width: \"22%\",\r\n        render: (lastName) => {\r\n          return {\r\n            children: lastName,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n        width: \"22%\",\r\n        render: (mobile) => {\r\n          return {\r\n            children: mobile.includes(\"+\") ? mobile : \"+\" + mobile,\r\n            props: {\r\n              \"data-title\": \"Mobile\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: EMAIL,\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"21%\",\r\n        render: (email) => {\r\n          return {\r\n            children: email,\r\n            props: {\r\n              \"data-title\": \"Email\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"status2\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status2 === 1 || record.status2 === \"1\" ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return (\r\n            <GridPopover\r\n              handleEditUser={this.props.handleEditUser}\r\n              handleDelete={this.props.handleDelete}\r\n              user={record}\r\n              seededUsers={this.props.seededUsers}\r\n              seededUser\r\n              viaEdit={this.props.viaEdit}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Row className=\"content-center pt-0\" data-test=\"addSeededuser\">\r\n        {this.props.fromStepTwo ? (\r\n          <Col className=\"d-flex align-items-center justify-content-end\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              onClick={() =>\r\n                this.props.fromStepTwo\r\n                  ? this.props.showAddSeededUserForm()\r\n                  : this.props.addSeededUser()\r\n              }\r\n            >\r\n              {ADD_SEEDED_USER}\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n        <Grid\r\n          rowKey=\"unique_identifier\"\r\n          columns={columns}\r\n          data={this.state.data}\r\n        />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignedUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport moment from \"moment\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport { DATE, EMAIL, FIRST_NAME, LAST_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, ADD_USER, UPDATE, NEXT } from \"../../headings\";\r\n\r\nconst CreateOrgStepTwo = ({\r\n  next,\r\n  prev,\r\n  stepTwoOrganizationInfo,\r\n  handleStepTwoOnChange,\r\n  handleStepTwoOnSelect,\r\n  handleMobile,\r\n  handleStepTwoDatePickerChange,\r\n  addUser,\r\n  seededUsers,\r\n  showAddUserForm,\r\n  showAddSeededUserForm,\r\n  showEditUserForm,\r\n  showEditSeededUserForm,\r\n  cancelAddUser,\r\n  cancelEditUser,\r\n  editUser,\r\n  deleteUser,\r\n  fNameCount,\r\n  lNameCount,\r\n}) => {\r\n  const [error, showError] = useState(false);\r\n  const [emailValidationError, showEmailValidationError] = useState(false);\r\n  const [mobileValidationError, showMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showAddUserForm || showAddUserForm) {\r\n      showError(false);\r\n      showEmailValidationError(false);\r\n      showMobileValidationError(false);\r\n      showPasswordValidationError(false);\r\n    }\r\n  }, [showAddUserForm, showEditUserForm]);\r\n\r\n  const stepTwoPrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const stepTwoNext = (e) => {\r\n    e.preventDefault();\r\n    next();\r\n  };\r\n\r\n  const addSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        addUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const editSeededUser = (type) => {\r\n    if (\r\n      stepTwoOrganizationInfo.firstName &&\r\n      stepTwoOrganizationInfo.lastName &&\r\n      stepTwoOrganizationInfo.status2 &&\r\n      stepTwoOrganizationInfo.mobile &&\r\n      stepTwoOrganizationInfo.s2Date &&\r\n      stepTwoOrganizationInfo.email\r\n    ) {\r\n      showError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        editUser(type);\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepTwo\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value) || e.target.value.length < 6) {\r\n      showEmailValidationError(true);\r\n    } else {\r\n      showEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = () => {\r\n    if (stepTwoOrganizationInfo.mobile.length > 10) {\r\n      showMobileValidationError(false);\r\n    } else {\r\n      showMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return seededUsers.length === 0 || showAddUserForm || showEditUserForm ? (\r\n    <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Col span={24}>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={FIRST_NAME}\r\n              value={stepTwoOrganizationInfo.firstName}\r\n            >\r\n              <Form.Item name=\"firstName\" className=\"required\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  className=\"input-control\"\r\n                  defaultValue={stepTwoOrganizationInfo.firstName}\r\n                  htmlFor=\"firstName\"\r\n                  value={stepTwoOrganizationInfo.firstName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {fNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label={LAST_NAME}\r\n              value={stepTwoOrganizationInfo.lastName}\r\n            >\r\n              <Form.Item name=\"lastName\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"lastName\"\r\n                  htmlFor=\"lastName\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.lastName}\r\n                  value={stepTwoOrganizationInfo.lastName}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  autoComplete=\"off\"\r\n                  maxLength={50}\r\n                />\r\n              </Form.Item>\r\n              {lNameCount && (\r\n                <Form.Item>\r\n                  <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                </Form.Item>\r\n              )}\r\n            </FloatLabel>\r\n          </Col>\r\n          {/* <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel\r\n              label=\"Temporary Password\"\r\n              value={stepTwoOrganizationInfo.password}\r\n            >\r\n              <Form.Item name=\"password\" className=\"pwd required\">\r\n                <Input.Password\r\n                  className=\"input-control\"\r\n                  htmlFor=\"password\"\r\n                  className=\"required\"\r\n                  id=\"password\"\r\n                  defaultValue={stepTwoOrganizationInfo.password}\r\n                  value={stepTwoOrganizationInfo.password}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validatePassword(e)}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n                {passwordValidationError && (\r\n                  <Alert\r\n                    message=\"Please enter a valid password.\r\n                    It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col> */}\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={EMAIL} value={stepTwoOrganizationInfo.email}>\r\n              <Form.Item name=\"email\" className=\"required\">\r\n                <Input\r\n                  className=\"input-control\"\r\n                  id=\"email\"\r\n                  htmlFor=\"email\"\r\n                  className=\"required\"\r\n                  defaultValue={stepTwoOrganizationInfo.email}\r\n                  value={stepTwoOrganizationInfo.email}\r\n                  onChange={(e) => handleStepTwoOnChange(e)}\r\n                  onBlur={(e) => validateEmailAddress(e)}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {emailValidationError && (\r\n                  <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={DATE} value=\"date\">\r\n              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                <RangePicker\r\n                  className=\"new w-100\"\r\n                  name=\"s2Date\"\r\n                  className=\"required\"\r\n                  value={stepTwoOrganizationInfo.s2Date}\r\n                  onChange={(date) =>\r\n                    handleStepTwoDatePickerChange(date, \"s2Date\")\r\n                  }\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row\">\r\n            <FloatLabel label={STATUS} value={stepTwoOrganizationInfo.status2}>\r\n              <Form.Item className=\"required\" name=\"status2\">\r\n                <>\r\n                  <Select\r\n                    className=\"input-control w-100 w-lg-50\"\r\n                    value={stepTwoOrganizationInfo.status2}\r\n                    htmlFor=\"status2\"\r\n                    className=\"required\"\r\n                    onSelect={(value) =>\r\n                      handleStepTwoOnSelect(value, \"status2\")\r\n                    }\r\n                  >\r\n                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                  </Select>\r\n                </>\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n          <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n            <FloatLabel label=\"Mobile\" value={stepTwoOrganizationInfo.mobile}>\r\n              <Form.Item name=\"mobile\" className=\"required\">\r\n                <PhoneInput\r\n                  country={\"us\"}\r\n                  id=\"mobile\"\r\n                  htmlFor=\"mobile\"\r\n                  value={stepTwoOrganizationInfo.mobile}\r\n                  onChange={handleMobile}\r\n                  onBlur={validateMobile}\r\n                  autoComplete=\"off\"\r\n                />\r\n                {mobileValidationError && (\r\n                  <Alert message={VALID_MOBILE} type=\"error\" showIcon></Alert>\r\n                )}\r\n              </Form.Item>\r\n            </FloatLabel>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Form.Item>\r\n        <div className=\"steps-action mt-5\">\r\n          {showAddUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelAddUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => addSeededUser(\"viaAddUserButton\")}\r\n              >\r\n                {ADD_USER}\r\n              </Button>\r\n            </>\r\n          ) : showEditUserForm ? (\r\n            <>\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => cancelEditUser()}\r\n              >\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => editSeededUser()}>\r\n                {UPDATE}\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n            {BACK}\r\n          </Button>\r\n        )}\r\n        {showAddUserForm || showEditUserForm ? null : (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => addSeededUser(\"viaNext\")}\r\n          >\r\n            {NEXT}\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <>\r\n      <AssignedUsers\r\n        seededUsers={seededUsers}\r\n        showAddSeededUserForm={showAddSeededUserForm}\r\n        fromStepTwo\r\n        handleEditUser={handleEditUser}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Form>\r\n        <Form.Item>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button className=\"mr-4\" type=\"secondary\" onClick={stepTwoPrev}>\r\n              {BACK}\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" onClick={stepTwoNext}>\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepTwo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Avatar,\r\n  Divider,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport \"../form/form.scss\";\r\nimport { CREATE_ORGANIZATION_ERROR, REQUIRED_MESSAGE } from \"../../errors\";\r\nimport {\r\n  ADD_SEEDED_USER,\r\n  BACK,\r\n  CREATE_INVITE,\r\n  OK_TEXT_MODAL,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst CreateOrgStepThree = ({\r\n  prev,\r\n  loader,\r\n  apiError,\r\n  handleOk,\r\n  handleCancel,\r\n  stepOneOrganizationInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  createNewOrganization,\r\n  seededUsers,\r\n  showEditSeededUserForm,\r\n  deleteUser,\r\n  addSeededUserFromThirdStep,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const { RangePicker } = DatePicker;\r\n  const [error, showError] = useState(false);\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const finish = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      seededUsers &&\r\n      stepOneOrganizationInfo.organizationName &&\r\n      stepOneOrganizationInfo.organizationId &&\r\n      stepOneOrganizationInfo.status1 &&\r\n      stepOneOrganizationInfo.s1Date\r\n    ) {\r\n      showError(false);\r\n      createNewOrganization();\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const stepThreePrev = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n\r\n  const handleEditUser = (userID) => {\r\n    showEditSeededUserForm(userID, \"viaStepThree\");\r\n  };\r\n\r\n  const handleDelete = (userID) => {\r\n    deleteUser(userID, \"viaStepThree\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n        <Avatar>{stepOneOrganizationInfo.organizationName?.charAt(0)}</Avatar>\r\n        <span className=\"md-name\">\r\n          {stepOneOrganizationInfo.organizationName}\r\n        </span>\r\n      </div>\r\n      <Form\r\n        className=\"input-md floating-label w-100\"\r\n        name=\"validate_other\"\r\n        form={form}\r\n      >\r\n        {error && (\r\n          <Form.Item>\r\n            <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n          </Form.Item>\r\n        )}\r\n        <Col span={24}>\r\n          <Modal\r\n            visible={apiError}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            centered\r\n            width={500}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={OK_TEXT_MODAL}\r\n          >\r\n            {\" \"}\r\n            <p>{CREATE_ORGANIZATION_ERROR}</p>{\" \"}\r\n          </Modal>\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_NAME}\r\n                value={stepOneOrganizationInfo.organizationName}\r\n              >\r\n                <Form.Item className=\"required\" name=\"organizationName\">\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationName\"\r\n                    id=\"organizationName\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationName}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationName}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={ORGANIZATION_ID}\r\n                value={stepOneOrganizationInfo.organizationId}\r\n              >\r\n                <Form.Item\r\n                  className=\"required\"\r\n                  name=\"organizationId\"\r\n                  validateStatus=\"success\"\r\n                >\r\n                  <Input\r\n                    className=\"input-control\"\r\n                    htmlFor=\"organizationId\"\r\n                    id=\"organizationId\"\r\n                    defaultValue={stepOneOrganizationInfo.organizationId}\r\n                    onChange={(e) => handleStepOneOnChange(e)}\r\n                    value={stepOneOrganizationInfo.organizationId}\r\n                    autoComplete=\"off\"\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label={STATUS}\r\n                value={stepOneOrganizationInfo.status1}\r\n              >\r\n                <Form.Item className=\"required\" name=\"status1\">\r\n                  <>\r\n                    <Select\r\n                      className=\"input-control w-100 w-lg-100\"\r\n                      value={stepOneOrganizationInfo.status1}\r\n                      htmlFor=\"status1\"\r\n                      onSelect={(value) =>\r\n                        handleStepOneOnSelect(value, \"status1\")\r\n                      }\r\n                      disabled\r\n                    >\r\n                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                      <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                    </Select>\r\n                  </>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n            <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel label={DATE} value=\"date\">\r\n                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                  <RangePicker\r\n                    className=\"w-100 \"\r\n                    name=\"s1Date\"\r\n                    defaultValue={stepOneOrganizationInfo.s1Date}\r\n                    value={stepOneOrganizationInfo.s1Date}\r\n                    onChange={(date) =>\r\n                      handleStepOneDatePickerChange(date, \"s1Date\")\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Divider className=\"w-100\" />\r\n        <Spin spinning={loader} size=\"large\">\r\n          <Col\r\n            span={24}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n            <div>\r\n              {\" \"}\r\n              <Button\r\n                className=\"mr-4\"\r\n                type=\"secondary\"\r\n                onClick={() => addSeededUserFromThirdStep()}\r\n              >\r\n                {ADD_SEEDED_USER}\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <AssignedUsers\r\n                seededUsers={seededUsers}\r\n                handleEditUser={handleEditUser}\r\n                handleDelete={handleDelete}\r\n                fromStepThree\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Form.Item>\r\n            <div className=\"steps-action mt-5\">\r\n              <Button className=\"mr-4\" type=\"secondary\" onClick={stepThreePrev}>\r\n                {BACK}\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={finish}>\r\n                {CREATE_INVITE}\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Spin>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Steps, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\n// import WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepOne from \"../form/CreateOrgStepOne\";\r\nimport CreateOrgStepTwo from \"../form/CreateOrgStepTwo\";\r\nimport CreateOrgStepThree from \"../form/CreateOrgStepThree\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CREATE_ORGANIZATION,\r\n  ORGANIZATIONS,\r\n  ORGANIZATION_CREATE_STEP3,\r\n  ORGANIZATION_DETAILS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: ORGANIZATION_DETAILS,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: SEEDED_USERS_DETAILS,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: ORGANIZATION_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst CreateOrgStepper = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [stepOneOrganization, setStepOneOrganization] = useState({\r\n    organizationName: \"\",\r\n    organizationId: \"\",\r\n    status1: \"\",\r\n    s1Date: \"\",\r\n  });\r\n  const [orgNameAlreadyExists, setOrgNameExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDExists] = useState(\"\");\r\n  const [stepTwoOrganization, setStepTwoOrganization] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    s2Date: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [showAddUserForm, setShowAddUserForm] = useState(false);\r\n  const [showEditUserForm, setShowEditUserForm] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n\r\n  const next = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setShowAddUserForm(false);\r\n    setShowEditUserForm(false);\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const addUser = (type) => {\r\n    if (type === \"viaNext\") {\r\n      setCurrent(current + 1);\r\n    }\r\n    const userID = Math.floor(Math.random() * 100) + 1;\r\n    const finalUser = { ...stepTwoOrganization, userId: userID };\r\n    setSeededUsers([...seededUsers, finalUser]);\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(stepTwoOrganization) &&\r\n        user.userId === stepTwoOrganization.userId\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = stepTwoOrganization;\r\n        setSeededUsers(users);\r\n      }\r\n    });\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const addSeededUserFromThirdStep = () => {\r\n    setCurrent(current - 1);\r\n    showAddSeededUserForm();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    window.location = \"/amcc/manageorganizations\";\r\n  };\r\n\r\n  const deleteUser = (userID, type) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.userId !== userID);\r\n    setSeededUsers(filteredUsers);\r\n    if (filteredUsers.length === 0) {\r\n      setStepTwoOrganization({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userId: \"\",\r\n        status2: \"\",\r\n        email: \"\",\r\n        //  password: \"\",\r\n        s2Date: \"\",\r\n        mobile: \"\",\r\n      });\r\n      if (type === \"viaStepThree\") {\r\n        setCurrent(current - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const showAddSeededUserForm = () => {\r\n    setShowAddUserForm(true);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setStepTwoOrganization({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userId: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      s2Date: \"\",\r\n      mobile: \"\",\r\n    });\r\n  };\r\n\r\n  const showEditSeededUserForm = (userID, type) => {\r\n    if (type === \"viaStepThree\") {\r\n      setCurrent(current - 1);\r\n    }\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowEditUserForm(true);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.userId === userID) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setStepTwoOrganization(editableUser);\r\n  };\r\n\r\n  const cancelAddUser = () => {\r\n    setShowAddUserForm(false);\r\n  };\r\n\r\n  const cancelEditUser = () => {\r\n    setShowEditUserForm(false);\r\n  };\r\n\r\n  const setOrgNameAlreadyExists = (value) => {\r\n    setOrgNameExists(value);\r\n  };\r\n\r\n  const setOrgIDAlreadyExists = (value) => {\r\n    setOrgIDExists(value);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    if (e.target.id === \"organizationId\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (\r\n      e.target.id === \"organizationName\" &&\r\n      e.target.value.length === 80\r\n    ) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setStepOneOrganization({\r\n      ...stepOneOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOrganization({ ...stepOneOrganization, [name]: date });\r\n  };\r\n\r\n  const handleStepTwoOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setStepTwoOrganization({\r\n      ...stepTwoOrganization,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (value, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: value });\r\n  };\r\n\r\n  const handleStepTwoDatePickerChange = (date, name) => {\r\n    setStepTwoOrganization({ ...stepTwoOrganization, [name]: date });\r\n  };\r\n\r\n  const createOrganization = () => {\r\n    setLoader(true);\r\n    const token = authHeader();\r\n    let seededUsersArray = [];\r\n    seededUsers.map((value) => {\r\n      let user = {\r\n        first_name: value.firstName,\r\n        last_name: value.lastName,\r\n        email: value.email,\r\n        // password: value.password,\r\n        status_id: parseInt(value.status2),\r\n        start_date: value.s2Date[0]\r\n          ? moment(value.s2Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: value.s2Date[1]\r\n          ? moment(value.s2Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        mobile_number: \"+\" + value.mobile,\r\n        is_seeded_user: 1,\r\n      };\r\n      seededUsersArray.push(user);\r\n    });\r\n    const data = {\r\n      organization: {\r\n        name: stepOneOrganization.organizationName,\r\n        identifier: stepOneOrganization.organizationId,\r\n        status_id: parseInt(stepOneOrganization.status1),\r\n        start_date: stepOneOrganization.s1Date[0]\r\n          ? moment(stepOneOrganization.s1Date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOrganization.s1Date[1]\r\n          ? moment(stepOneOrganization.s1Date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n      },\r\n      seeded_users: seededUsersArray,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"saveOrganization/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/amcc/manageorganizations\";\r\n      })\r\n      .catch((error) => {\r\n        if (error.message.includes(\"500\")) {\r\n          setApiError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amCCUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <AccSidebar />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/amcc/manageorganizations\">\r\n                      <Breadcrumb.Item>{ORGANIZATIONS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{CREATE_ORGANIZATION}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{CREATE_ORGANIZATION}</h1>\r\n                </Row>\r\n                <Steps className=\"mt-2\" current={current}>\r\n                  {steps.map((item) => (\r\n                    <Step key={item.title} title={item.title} />\r\n                  ))}\r\n                </Steps>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content org-form\">\r\n                        {current == 0 ? (\r\n                          <CreateOrgStepOne\r\n                            next={next}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            orgNameCount={orgNameCount}\r\n                            orgIdCount={orgIdCount}\r\n                            setOrgNameAlreadyExists={setOrgNameAlreadyExists}\r\n                            orgNameAlreadyExists={orgNameAlreadyExists}\r\n                            setOrgIDAlreadyExists={setOrgIDAlreadyExists}\r\n                            orgIDAlreadyExists={orgIDAlreadyExists}\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOrgStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            addUser={addUser}\r\n                            editUser={editUser}\r\n                            deleteUser={deleteUser}\r\n                            seededUsers={seededUsers}\r\n                            showAddUserForm={showAddUserForm}\r\n                            showAddSeededUserForm={showAddSeededUserForm}\r\n                            showEditUserForm={showEditUserForm}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            cancelAddUser={cancelAddUser}\r\n                            cancelEditUser={cancelEditUser}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOrgStepThree\r\n                            prev={prev}\r\n                            createNewOrganization={createOrganization}\r\n                            stepOneOrganizationInfo={stepOneOrganization}\r\n                            stepTwoOrganizationInfo={stepTwoOrganization}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            handleStepTwoOnChange={handleStepTwoOnChange}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                            handleStepTwoDatePickerChange={\r\n                              handleStepTwoDatePickerChange\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                            showEditSeededUserForm={showEditSeededUserForm}\r\n                            addSeededUserFromThirdStep={\r\n                              addSeededUserFromThirdStep\r\n                            }\r\n                            handleOk={handleOk}\r\n                            handleCancel={handleCancel}\r\n                            loader={loader}\r\n                            apiError={apiError}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrgStepper;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./manageOrg.scss\";\r\nimport WorkChart from \"../../assets/images/work-chart.svg\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport CreateOrgStepper from \"../form/CreateOrgStepper\";\r\nimport { CREATE_ORGANIZATION, MANAGE_ORGANIZATIONS } from \"../../headings\";\r\nimport { CREATE_NEW_ORGANIZATION_TEXT } from \"../../messages\";\r\nconst { Content } = Layout;\r\n\r\nconst CreateOrg = () => {\r\n  const [showResult, setShowResult] = React.useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amCCUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <AccSidebar />\r\n                <Content className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_ORGANIZATIONS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={WorkChart}\r\n                            alt=\"Create Organization\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_ORGANIZATION_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button onClick={showBtn} type=\"primary\">\r\n                            {CREATE_ORGANIZATION}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <CreateOrgStepper />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../userconfig\";\r\nimport authHeader from \"./auth-header\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst token = authHeader();\r\n\r\nconst options = {\r\n  headers: {\r\n    Authorization: token,\r\n    Accept: \"application/json, text/plain\",\r\n    \"Content-Type\": \"application/json;charset=UTF-8\",\r\n  },\r\n};\r\nclass UserService {\r\n  orgId() {\r\n    const orgcc_user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (orgcc_user && orgcc_user.user_data.organization_id) {\r\n      const orgId = CryptoJS.AES.decrypt(\r\n        orgcc_user.user_data.organization_id,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8);\r\n      return parseInt(orgId);\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  getOrganizationData() {\r\n    return axios.get(BASE_URL + \"getOrganization/\", options);\r\n  }\r\n\r\n  getEmployees() {\r\n    const organizationId = this.orgId();\r\n    return axios.get(\r\n      BASE_URL + \"getEmployees/\" + organizationId + \"/\",\r\n      options\r\n    );\r\n  }\r\n\r\n  getHotlines() {\r\n    return axios.get(BASE_URL + \"hotline/\", options);\r\n  }\r\n\r\n  getOpenlines() {\r\n    return axios.get(BASE_URL + \"openline/\", options);\r\n  }\r\n  getPolls(){\r\n    return axios.get(BASE_URL + \"poll/\", options);\r\n\r\n  }\r\n  getAssignHotlines(hotLineId) {\r\n    return axios.get(BASE_URL + \"getHotlineAssignEmpl/\" + hotLineId, options);\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowAllOrganizations from \"./ShowAllOrganizations\";\r\nimport CreateOrg from \"./CreateOrg\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageOrgAsync } from \"../../actions/manageOrg\";\r\n\r\nconst OrganizationContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getManageOrgAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.manageOrgData === null) {\r\n      setLoader(true);\r\n    } else if (props.manageOrgData !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.manageOrgData]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.manageOrgData !== null &&\r\n    props.manageOrgData.length === 0 ? (\r\n    <CreateOrg />\r\n  ) : (\r\n    <ShowAllOrganizations\r\n      organizations={props.manageOrgData}\r\n      statusOnClicked={statusOnClicked}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageOrgData } = state.manageOrg;\r\n  return {\r\n    manageOrgData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrganizationContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEORG_FAIL,\r\n    MANAGEORG_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageOrgAsync=()=>(dispatch)=>{\r\n        return UserService.getOrganizationData().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEORG_SUCCESS,\r\n                payload:{manageOrgData:data.data},\r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEORG_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    MANAGEEMP_FAIL,\r\n    MANAGEEMP_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getManageEmpAsync=()=>(dispatch)=>{\r\n        return UserService.getEmployees().then((data)=>{\r\n            dispatch({\r\n                type:MANAGEEMP_SUCCESS,\r\n                payload:{manageEmpData:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:MANAGEEMP_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Select, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport GridPopover from \"../table/Popover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { ADD_EMPLOYEE, MANAGE_EMPLOYEES, SEARCH } from \"../../../src/headings\";\r\nimport {\r\n  ACCESS,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  ACTIONS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass ManageEmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n        render: (firstname) => {\r\n          return {\r\n            children: firstname,\r\n            props: {\r\n              \"data-title\": \"First Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n        render: (lastname) => {\r\n          return {\r\n            children: lastname,\r\n            props: {\r\n              \"data-title\": \"Last Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"20%\",\r\n        render: (mobNumber) => {\r\n          return {\r\n            children: mobNumber,\r\n            props: {\r\n              \"data-title\": \"Mobile Number\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        key: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          let flag = false;\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n                flag = true;\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n                flag = true;\r\n              }\r\n              if (property == \"app_user\") {\r\n                if (!flag) {\r\n                  property = \"APP\";\r\n                }\r\n              }\r\n\r\n              if (test.length == 0) {\r\n                test += property;\r\n              } else if (property !== \"app_user\") {\r\n                if (test.includes(\"APP\")) {\r\n                  test = property;\r\n                } else {\r\n                  test += \", \" + property;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          return {\r\n            children: test,\r\n            props: {\r\n              \"data-title\": \"Access\",\r\n            },\r\n          };\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: (\r\n              <div className=\"primary-tag-rounded tag\">\r\n                <span className=\"circle mr-1\"></span>\r\n                {STATUS_ACTIVE}\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: ACTIONS,\r\n        dataIndex: \"Actions\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: () => {\r\n          return {\r\n            children: <GridPopover manageEmp />,\r\n            props: {\r\n              \"data-title\": \"Actions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n      loader: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    let { manageEmpData } = props;\r\n    this.setState({ data: manageEmpData, loader: false }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_EMPLOYEES}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/addemployee\">\r\n                      <Buttons value={ADD_EMPLOYEE} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.state.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"unique_identifier\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageEmp);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { VALID_EMAIL } from \"../../errors\";\r\nimport { EMAIL } from \"../../labels\";\r\nimport {\r\n  BACK_TO,\r\n  FORGOT_PASSWORD_TEXT1,\r\n  LOGIN_PART1,\r\n  LOGIN_PART2,\r\n  REQUEST_PASSWORD_RESET,\r\n} from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      error: false,\r\n      emailSent: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  sendEmail = (e) => {\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (this.state.email !== \"\") {\r\n      const data = {\r\n        email: this.state.email,\r\n      };\r\n      this.setState({ error: false, loader: true });\r\n      axios.post(BASE_URL + \"request-reset-email/\", data, options).then(() => {\r\n        this.setState({ emailSent: true, loader: false });\r\n      });\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              {this.state.emailSent ? \"EMAIL HAS BEEN SENT\" : null}\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{FORGOT_PASSWORD}</h2>\r\n                <p className=\"mt-3 font-weight-bold\">{FORGOT_PASSWORD_TEXT1}</p>\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                {this.state.error && (\r\n                  <Alert message={VALID_EMAIL} type=\"error\" showIcon></Alert>\r\n                )}\r\n                <FloatLabel label={EMAIL} value={this.state.email}>\r\n                  <Form.Item name=\"email\">\r\n                    <Input\r\n                      type=\"Email\"\r\n                      className=\"input-control\"\r\n                      placeholder=\" \"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeUsername}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={(e) => this.sendEmail()}\r\n                  >\r\n                    {REQUEST_PASSWORD_RESET}\r\n                  </Button>\r\n                </Form.Item>\r\n\r\n                <div className=\"justify-content-center d-flex\">\r\n                  <Button type=\"link\" className=\"link\">\r\n                    <Link to=\"/login\">\r\n                      {\" \"}\r\n                      {BACK_TO} <b className=\"pl-1\">{SIGN_IN}</b>\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { RESET_PASSWORD, SET_NEW_PASSWORD } from \"../../headings\";\r\nimport { LOGIN_PART1, LOGIN_PART2 } from \"../../messages\";\r\nimport {\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n} from \"../../errors\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CONFIRM_PASSWORD, PASSWORD } from \"../../labels\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      error: \"false\",\r\n      passwordValidationError: \"\",\r\n      resetDone: false,\r\n    };\r\n  }\r\n\r\n  onChangePassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeConfirmPassword = (e) => {\r\n    this.setState({\r\n      confirm_password: e.target.value,\r\n    });\r\n  };\r\n\r\n  resetPassword = (e) => {\r\n    console.log(\"propssss: \", this.props);\r\n    const { token, uidb64 } = this.props.location.search;\r\n    const data = {\r\n      password: this.state.password,\r\n      token: token,\r\n      uidb64: uidb64,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (\r\n      this.state.password === this.state.confirm_password &&\r\n      !this.state.passwordValidationError\r\n    ) {\r\n      axios\r\n        .put(BASE_URL + \"password-reset-complete/\", data, options)\r\n        .then(() => {\r\n          this.setState({ resetDone: true });\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      this.setState({ passwordValidationError: true });\r\n    } else {\r\n      this.setState({ passwordValidationError: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              <Row className=\"mb-4 d-none d-lg-block\">\r\n                <h2>{RESET_PASSWORD}</h2>\r\n                <p className=\"mt-3 font-weight-bold\">{SET_NEW_PASSWORD}</p>\r\n              </Row>\r\n              {this.state.resetDone ? \"PASSWORD HAS BEEN RESET\" : null}\r\n              <Form>\r\n                <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                  <Form.Item\r\n                    name=\"newpassword\"\r\n                    className=\"pwd required\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: ENTER_NEW_PASSWORD,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input.Password\r\n                      htmlFor=\"newpassword\"\r\n                      id=\"newPwd\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                      onBlur={(e) => this.validatePassword(e)}\r\n                    />\r\n                  </Form.Item>\r\n                  {this.state.passwordValidationError && (\r\n                    <Alert\r\n                      message={PASSWORD_RULES}\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </FloatLabel>\r\n\r\n                <FloatLabel\r\n                  label={CONFIRM_PASSWORD}\r\n                  value={this.state.confirm_password}\r\n                >\r\n                  <Form.Item\r\n                    name=\"confirmpassword\"\r\n                    className=\"pwd confirpwd required\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: CONFIRM_YOUR_PASSWORD,\r\n                      },\r\n                      ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                          if (\r\n                            !value ||\r\n                            getFieldValue(\"newpassword\") === value\r\n                          ) {\r\n                            return Promise.resolve();\r\n                          }\r\n\r\n                          return Promise.reject(PASSWORD_NOT_MATCH);\r\n                        },\r\n                      }),\r\n                    ]}\r\n                    dependencies={[\"newpassword\"]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input.Password\r\n                      htmlFor=\"confirmpassword\"\r\n                      id=\"confirmPwd\"\r\n                      value={this.state.confirm_password}\r\n                      onChange={this.onChangeConfirmPassword}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"primary-btn-lg w-100 mt-4\"\r\n                    onClick={(e) => this.resetPassword(e)}\r\n                  >\r\n                    {RESET_PASSWORD}\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, List } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { PRIVACY_POLICY, SEE } from \"../../labels\";\r\nimport { PRIVACY_POLICY_TEXT_PART1 } from \"../../messages\";\r\n\r\nclass PrivacyPolicyModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    window.open(\r\n      \"https://www.anonymoose.co/platformprivacypolicy.pdf\",\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {SEE}\r\n        <Button type=\"link\" className=\"link pl-1\" onClick={this.showModal}>\r\n          {PRIVACY_POLICY}\r\n        </Button>\r\n        <Modal\r\n          title={PRIVACY_POLICY}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className=\"modal-lg privacy-txt\"\r\n          centered\r\n        >\r\n          <Row className=\"modal-icon py-4\">\r\n            <p>\r\n              {PRIVACY_POLICY_TEXT_PART1}\r\n              <ol className=\"\">\r\n                <li>\r\n                  <u>Introduction</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      EarthenLamps Inc, registered in Delaware with principal\r\n                      office located at 12265 Viewoak Drive, Saratoga, CA 95070\r\n                      (<b>“Company”, “we”, “us”, “our”</b>), has developed a\r\n                      platform comprising of a mobile application, dashboard and\r\n                      control center under a name “AnonyMoose” (\r\n                      <b>“SaaS PlaCorm” or “PlaCorm”</b>)and offers services\r\n                      that will enable employees of an organization to provide\r\n                      feedback, ideas, suggesZons, and to report incidents\r\n                      relaZng to harassment or microaggressions, or any other\r\n                      concern, privately and discreetly, to such organizaZon’s\r\n                      leadership, management and designated individuals or\r\n                      departments<b>(“Services”)</b>.\r\n                    </li>\r\n\r\n                    <li className=\"\">\r\n                      We are committed to data privacy and have made this\r\n                      Privacy Policy to describe the procedures we adhere to for\r\n                      collecting, using, and disclosing the Personal Information\r\n                      (defined below). We recommend Users to read this Privacy\r\n                      Policy carefully so that Users understand our approach\r\n                      towards the use of their Personal Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>What kinds of information do we collect?</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      To provide the Services, we require to process information\r\n                      about you. The type of information that we collect depends\r\n                      on how you use our platform.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Personal Details:</b> We may collect any personal\r\n                      information such as your name, contact number, email\r\n                      address, and designaZon, provided by your organization, or\r\n                      while you create and/or update your respecZve account\r\n                      and/or use of the Services. This information that can\r\n                      identify, or is capable of identifying a person, shall be\r\n                      referred to as <b>“Personal Information”</b>.\r\n                    </li>\r\n                    <li>\r\n                      <b>Device information:</b> Whenever you access our\r\n                      Platform through Wi-Fi or the internet, we may also\r\n                      collect your browser name, usage, log related information,\r\n                      the type of electronic device, manufacturer, make, model,\r\n                      unique ID of the electronic device and other technical\r\n                      information about your means of connection to our Platform\r\n                      or Services, such as the operating system and other\r\n                      similar information. The device information will be used\r\n                      solely for the purpose of improving our Services and to\r\n                      provide You with better user experience.\r\n                    </li>\r\n                    <li>\r\n                      For the purposes of this Privacy Policy, such information\r\n                      in section 2.3 shall also be considered Personal\r\n                      Information.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How we use this information</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We use the information (which include the Personal\r\n                      Information) provided by you or collected by us in the\r\n                      following cases: (i) to provide User with the Services and\r\n                      to assist the User in the event the User needs any\r\n                      additional support; (ii) for creation or development of\r\n                      business intelligence or data analytics in relation to the\r\n                      Services provided by the Company; (iii) to understand\r\n                      usage patterns of our Platform or the Services; (iv) to\r\n                      improve usability of our Services and for Services\r\n                      maintenance; (v) to maintain and manage account of the\r\n                      organization; (vi) to prevent fraud and abuse (vii) to\r\n                      enhance the security of our the Platform and/ or the\r\n                      Services; (viii) to ensure that our Platform or the\r\n                      Services are not used for illegal purposes ; (ix) for\r\n                      internal record keeping; and (x) to comply with our legal\r\n                      or statutory obligations.\r\n                    </li>\r\n\r\n                    <li>\r\n                      ANONYMIZED DATA: We will also use your Personal\r\n                      Information collected by us to create aggregate anonymized\r\n                      data. We ensure that such anonymized data doesn’t directly\r\n                      identify you or your Personal Information shared with us.\r\n                      We may use this anonymized data for any purpose including\r\n                      but not limited to, research, understand usage patterns,\r\n                      analytical purposes, and to improve our Services. By\r\n                      agreeing to this Privacy Policy, you provide us the right\r\n                      to use your Personal Information to create anonymized data\r\n                      and use it for our business purposes.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How the information is shared</u>\r\n                  <p className=\"pl-4\">\r\n                    In the course of providing Services or access of the\r\n                    Platform to you, we may share your information, which may\r\n                    also include your Personal Information, with certain\r\n                    parties, in only the following cases. The Company does not\r\n                    share your Personal Information with any member within your\r\n                    organization/company/enterprise. Accordingly, you expressly\r\n                    give your free consent to us to disclose or share your\r\n                    Personal Information in the following cases:\r\n                  </p>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      <b>Administrators:</b> We may provide access to your\r\n                      Personal information to any of our authorized\r\n                      administrators for internal technical purpose, who shall\r\n                      be under confidentiality obligations towards the same. For\r\n                      the sake of clarity, such administrators shall not be part\r\n                      of your organization.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Service Providers:</b> We may share User’s Personal\r\n                      Information with the service providers, who are working\r\n                      with us, or may work with us, in connection with the\r\n                      operation of the Services and assisting us in improving\r\n                      the Platform. Examples include service providers who are\r\n                      providing technical infrastructure services, analyzing how\r\n                      our Platform is used, providing customer service,\r\n                      facilitating payments or conducting surveys.\r\n                    </li>\r\n                    <li>\r\n                      <b>Merger or Acquisi7on:</b> We may transfer User’s\r\n                      Personal Information if we are acquired by/we acquire or\r\n                      merge with another company or transfer a part of our\r\n                      business, to a third party. Any third party or resultant\r\n                      entity that receives the User’s Personal Information\r\n                      pursuant to a merger, demerger, amalgamation\r\n                      reconstruction, change in control or business transfer\r\n                      shall have the right to continue to use User’s Personal\r\n                      Information and such new entity shall abide with this\r\n                      privacy policy.\r\n                    </li>\r\n\r\n                    <li>\r\n                      <b>Legal and Regulatory Authorities:</b> We may be\r\n                      required to disclose User’s information including Personal\r\n                      Information due to legal or regulatory requirements. In\r\n                      such instances, we reserve the right to disclose User’s\r\n                      Personal Information as required in order to comply with\r\n                      our legal obligations, including but not limited to\r\n                      complying with court orders, warrants, or discovery\r\n                      requests. We may also disclose User’s Personal Information\r\n                      to (a) law enforcement officers or others; (b) to comply\r\n                      with a judicial proceeding, court order, or legal process\r\n                      served on us ; (c) to enforce or apply this Privacy Policy\r\n                      or our other policies or agreements; (d) respond to claims\r\n                      that any Personal Information violates the rights of\r\n                      third-parties; or (e) protect the rights, property, or\r\n                      personal safety of Company, or the general public.\r\n                    </li>\r\n                    <li>\r\n                      User agrees and acknowledges that we may not be required\r\n                      to inform User prior to or after disclosures made\r\n                      according to this section.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>How long your information is retained</u>\r\n                  <ol className=\"sub\">\r\n                    <li>\r\n                      We endeavor to collect only such Information including\r\n                      Personal Information that is necessary for the purposes\r\n                      indicated here. We may retain such information on a\r\n                      case-by-case determination depending on matters such as\r\n                      the nature of the information, why it is collected and\r\n                      processed, and relevant legal or operational retention\r\n                      needs. For example, we may retain such information to\r\n                      pursue legitimate business interests, conduct audits,\r\n                      comply with (and demonstrate compliance with) legal\r\n                      obligations, resolve disputes and enforce our agreements.\r\n                    </li>\r\n\r\n                    <li>\r\n                      We may retain your non- Personal Information even after\r\n                      you have stopped using our Platform or the Services for\r\n                      the sole purpose of providing better Services and\r\n                      improving usage pattern on the Platform.\r\n                    </li>\r\n                  </ol>\r\n                </li>\r\n                <li>\r\n                  <u> Access to your content on the PlaCorm:</u>\r\n                  <p className=\"pl-4\">\r\n                    While you use our Platform, you may provide certain\r\n                    information including but not limited to images, location\r\n                    detail, documents, text, audio clip, video clip,\r\n                    organization’s policies and training material to us (“User\r\n                    Content”). The Company ensures that the User Content remain\r\n                    private, integral and secure. The Company may access such\r\n                    User Content only to abide by its legal obligations as\r\n                    provided in section 4.4 of this Privacy Policy.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Our Security Measures:</u>\r\n                  <p className=\"pl-4\">\r\n                    User’s Personal Information is stored on our database which\r\n                    is hosted on the AWS cloud. Although there are appropriate\r\n                    ﬁrewalls and protections, we cannot warrant the security of\r\n                    any Personal Information transmitted as our systems are not\r\n                    hack proof. Data pilferage due to unauthorized hacking,\r\n                    virus attacks, technical issues is possible, and we take no\r\n                    liability or responsibility for it. Users are required to be\r\n                    careful to avoid ‘phishing’ scams, where someone may send\r\n                    User an e-mail that looks like it is from the Company asking\r\n                    for User’s Personal Information.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Hyperlinks:</u>\r\n                  <p className=\"pl-4\">\r\n                    The Platform may from time to time contain hyperlinks to\r\n                    other websites or mobile applications. Such links are\r\n                    provided for convenience only and we take no responsibility\r\n                    for the content and maintenance of or privacy compliance of\r\n                    any linked website. Any hyperlink on our Platform to another\r\n                    website does not imply our endorsement, support, or\r\n                    sponsorship of the operator of that website nor of the\r\n                    information and/or services which it provides. The Company\r\n                    is not a party to any transaction between you and such\r\n                    website.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Limitation of Liability:</u>\r\n                  <p className=\"pl-4\">\r\n                    NEITHER PARTY SHALL BE LIABLE TO THE OTHER FOR ANY INDIRECT,\r\n                    CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR SPECIAL DAMAGES,\r\n                    LOSS OF PROFIT, BUSINESS HOWSOEVER CAUSED, EVEN IF THE OTHER\r\n                    PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    THE MAXIMUM LIABLITY OF THE COMPANY FOR DIRECT DAMAGE OR\r\n                    LOSS SHALL BE LIMITED TO AN AMOUNT OF USD 1000 (US DOLLARS\r\n                    ONE THOUSAND ONLY). THE FOREGOING LIMITATIONS OF LIABILITY\r\n                    SHALL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE\r\n                    OF ANY LIMITED WARRANTY OR REMEDY HEREIN.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Reservation of Rights:</u>\r\n                  <p className=\"pl-4\">\r\n                    All rights not expressly granted in this Privacy Policy are\r\n                    reserved by the Company. Nothing contained in this Privacy\r\n                    Policy shall be construed as conferring by implication,\r\n                    estoppels or otherwise, any license or right under any\r\n                    copyright, patent, trademark or other intellectual property\r\n                    right of Company or any other person or to User.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <u>Governing Laws and Disputes:</u>\r\n                  <p className=\"pl-4\">\r\n                    This Privacy Policy shall in all respects be governed by and\r\n                    construed and enforced in accordance with the laws of\r\n                    Delaware and the courts in Delaware shall have an exclusive\r\n                    jurisdiction to adjudicate any subject matter under this\r\n                    Privacy Policy without any conﬂict of laws. Any dispute or\r\n                    diﬀerence arising between you and the Company as to the\r\n                    eﬀect, validity or interpretation or any other matter under\r\n                    this Privacy Policy or as to their rights, duties or\r\n                    liabilities hereunder shall be referred to arbitration in\r\n                    accordance with the rules of the International Chamber of\r\n                    Commerce to the exclusive jurisdiction to venue of the\r\n                    courts of Delaware.\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Changes to This Policy:</u>\r\n                  <p className=\"pl-4\">\r\n                    We may update this Privacy Policy from time to time. Users\r\n                    are encouraged to check this Privacy Policy on a regular\r\n                    basis to be aware of the changes made to it. The Company\r\n                    shall not be liable for any claims arising out of\r\n                    non-intimation of such change in this Privacy Policy. This\r\n                    Privacy Policy was last modiﬁed on{\" \"}\r\n                    <b>\r\n                      <span className=\"border-bottom\"> </span> July, 2020.\r\n                    </b>\r\n                  </p>\r\n                </li>\r\n\r\n                <li>\r\n                  <u>Contact Us</u>\r\n                  <p className=\"pl-4\">\r\n                    If User has any questions, concerns or grievances regarding\r\n                    this Privacy Policy, User can email us at our grievance\r\n                    email-address{\" \"}\r\n                    <a href=\"mailto:info@anonymoose.co\">info@anonymoose.co</a>\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </p>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicyModal;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Spin, Row, Col, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { CommonHeader } from \"../../containers\";\r\nimport Amccvector from \"../../assets/images/amcc-vector.svg\";\r\nimport \"./commonLogin.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport PrivacyPolicyModal from \"../modal/PrivacyPolicyModal\";\r\nimport { LOGIN_PART1, LOGIN_PART2, LOGIN_PART3 } from \"../../messages\";\r\nimport { FORGOT_PASSWORD, SIGN_IN } from \"../../headings\";\r\nimport { EMAIL, PASSWORD } from \"../../labels\";\r\nimport { ENTER_PASSWORD, VALID_EMAIL } from \"../../errors\";\r\n\r\nconst layout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      page: \"is_app_user\",\r\n      error: \"false\",\r\n      loading: false,\r\n    };\r\n  }\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { dispatch, history } = this.props;\r\n\r\n    dispatch(login(this.state.email, this.state.password, this.state.page))\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"true\",\r\n        });\r\n      });\r\n  }\r\n\r\n  canSubmit() {\r\n    const { email, password } = this.state;\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n    let isamcc = false;\r\n    let isorgcc = false;\r\n    let isamweb = false;\r\n    const isAuthenticated = AppStorage.get(\"user\");\r\n    if (!isAuthenticated) {\r\n      isamcc = true;\r\n      isorgcc = true;\r\n      isamweb = true;\r\n    }\r\n    const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n    if (\r\n      isAuthenticated &&\r\n      commonForAllUsers &&\r\n      commonForAllUsers.user_data != \"null\"\r\n    ) {\r\n      isamcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_amcc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isorgcc =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_org_cc_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n      isamweb =\r\n        CryptoJS.AES.decrypt(\r\n          commonForAllUsers.user_data.is_am_web_user,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    }\r\n    //  const checkSoftDelete = JSON.parse(AppStorage.get(\"user\"));\r\n    //  console.log(\"checkSoftDelete\",checkSoftDelete)\r\n\r\n    //  if(checkSoftDelete.user_data.soft_delete){\r\n    const isEnabled = this.canSubmit();\r\n    if (isLoggedIn) {\r\n      if (isorgcc) {\r\n        return <Redirect to=\"/orgcc/manageemployees\" />;\r\n      } else if (isamweb) {\r\n        return <Redirect to=\"/amweb/hotlinemessages\" />;\r\n      } else if (isamcc) {\r\n        return <Redirect to=\"/amcc/manageorganizations\" />;\r\n      }\r\n    }\r\n    //  }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"px-4 py-1 py-lg-3 header\">\r\n          <CommonHeader />\r\n        </Row>\r\n        <Row className=\"content-center mt-0 px-4\">\r\n          <Col\r\n            sm={24}\r\n            lg={12}\r\n            className=\"vector-area justify-content-center mt-1\"\r\n          >\r\n            <Col span={24} className=\"text-center\">\r\n              <h5 className=\"text-center primary-text\">{LOGIN_PART1}</h5>\r\n            </Col>\r\n            <Row className=\"justify-content-center mt-3\">\r\n              <img src={Amccvector} alt=\"Anonymoose\" className=\"pr-0 pr-lg-4\" />\r\n            </Row>\r\n            <Row className=\"pt-3\">\r\n              <p className=\"w-100 text-center text-wgt-md mb-1 d-none d-lg-block\">\r\n                {LOGIN_PART2}\r\n              </p>\r\n              <p className=\"text-center text-center subtext px-5 mb-0 d-none d-lg-block\">\r\n                {LOGIN_PART3}\r\n              </p>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            lg={{ span: 12 }}\r\n            md={{ span: 24 }}\r\n            xs={{ span: 24 }}\r\n            className=\"d-flex justify-content-center mt-2\"\r\n          >\r\n            <div className=\" col-md-24 col-lg-12 col-xl-10 login-box justify-content-center d-flex\">\r\n              <Spin spinning={this.state.loading} size=\"large\">\r\n                {this.state.error == \"true\" && (\r\n                  <Alert\r\n                    message=\"Invalid Login! Please try again\"\r\n                    type=\"error\"\r\n                    showIcon\r\n                  ></Alert>\r\n                )}\r\n                <Row className=\"mb-4 d-none d-lg-block\">\r\n                  <h2>{SIGN_IN}</h2>\r\n                </Row>\r\n\r\n                <Form\r\n                  className=\"floating-label\"\r\n                  {...layout}\r\n                  onSubmit={this.handleLogin}\r\n                  ref={(c) => {\r\n                    this.form = c;\r\n                  }}\r\n                  name=\"basic\"\r\n                  initialValues={{\r\n                    remember: true,\r\n                  }}\r\n                >\r\n                  <FloatLabel label={EMAIL} value={this.state.email}>\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: VALID_EMAIL,\r\n                          type: \"email\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"Email\"\r\n                        className=\"input-control\"\r\n                        placeholder=\" \"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeUsername}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <FloatLabel label={PASSWORD} value={this.state.password}>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: ENTER_PASSWORD,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"password\"\r\n                        className=\"input-control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                      />\r\n                    </Form.Item>\r\n                  </FloatLabel>\r\n                  <div className=\"forgot-pwd\">\r\n                    <Link to=\"/forgotpassword\"> {FORGOT_PASSWORD}</Link>\r\n                  </div>\r\n\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button\r\n                      disabled={!isEnabled}\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"primary-btn-lg w-100 mt-4\"\r\n                      onClick={() => {\r\n                        this.handleLogin();\r\n                      }}\r\n                    >\r\n                      {SIGN_IN}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </Spin>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-content position-fixed\">\r\n          <PrivacyPolicyModal />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n  HOTLINE_MESSAGES,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-hotlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Row, Col, Form, Input, Button, Modal, Alert } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./form.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport AmWebSidebar from \"../hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CHANGE_PASSWORD_FOR, OK_TEXT_MODAL, SUBMIT } from \"../../headings\";\r\nimport { PASSWORD_CHANGED } from \"../../messages\";\r\nimport {\r\n  OLD_PASSWORD,\r\n  ENTER_CURRENT_PASSWORD,\r\n  ENTER_NEW_PASSWORD,\r\n  PASSWORD_RULES,\r\n  CONFIRM_YOUR_PASSWORD,\r\n  PASSWORD_NOT_MATCH,\r\n} from \"../../errors\";\r\nimport { CURRENT_PASSWORD, NEW_PASSWORD, CONFIRM_PASSWORD } from \"../../labels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst ChangePassword = (props) => {\r\n  const type = AppStorage.get(\"userType\");\r\n  const userType = type\r\n    ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n    : \"\";\r\n  const [pwd, setPwd] = useState({\r\n    currentPwd: \"\",\r\n    newPwd: \"\",\r\n    confirmPwd: \"\",\r\n  });\r\n  const [passwordChanged, setPasswordChanged] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    setError(false);\r\n    showPasswordValidationError(false);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const userName = user\r\n      ? CryptoJS.AES.decrypt(\r\n          user.user_details.first_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8) +\r\n        \" \" +\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.last_name,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    setUserName(userName);\r\n  }, []);\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setPwd({\r\n      ...pwd,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const token = authHeader();\r\n    const data = {\r\n      old_password: pwd.currentPwd,\r\n      new_password: pwd.newPwd,\r\n      confirm_password: pwd.confirmPwd,\r\n    };\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (pwd.newPwd === pwd.confirmPwd && !passwordValidationError) {\r\n      axios\r\n        .put(BASE_URL + \"changepassword/\", data, options)\r\n        .then(() => {\r\n          setError(false);\r\n          setPasswordChanged(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.message.includes(\"400\")) {\r\n            setError(true);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">\r\n                    {CHANGE_PASSWORD_FOR} {userName}\r\n                  </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Modal\r\n                    visible={passwordChanged}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                    centered\r\n                    width={350}\r\n                    okButtonProps={{\r\n                      children: \"Custom OK\",\r\n                    }}\r\n                    cancelButtonProps={{ style: { display: \"none\" } }}\r\n                    okText={OK_TEXT_MODAL}\r\n                  >\r\n                    <p>{PASSWORD_CHANGED}</p>\r\n                  </Modal>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form className=\"input-md floating-label w-100\">\r\n                        <Col span={24}>\r\n                          <Row\r\n                            gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n                            className=\"d-block\"\r\n                          >\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={OLD_PASSWORD}\r\n                                    type=\"error\"\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <FloatLabel\r\n                                label={CURRENT_PASSWORD}\r\n                                value={pwd.currentPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"currentpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message:  ENTER_CURRENT_PASSWORD ,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"currentpassword\"\r\n                                    id=\"currentPwd\"\r\n                                    value={pwd.currentPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={NEW_PASSWORD}\r\n                                value={pwd.newPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"newpassword\"\r\n                                  className=\"pwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: ENTER_NEW_PASSWORD,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"newpassword\"\r\n                                    id=\"newPwd\"\r\n                                    value={pwd.newPwd}\r\n                                    onChange={handleOnChange}\r\n                                    onBlur={(e) => validatePassword(e)}\r\n                                  />\r\n                                </Form.Item>\r\n                                {passwordValidationError && (\r\n                                  <Alert\r\n                                    message={PASSWORD_RULES}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={CONFIRM_PASSWORD}\r\n                                value={pwd.confirmPwd}\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"confirmpassword\"\r\n                                  className=\"pwd confirpwd required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: CONFIRM_YOUR_PASSWORD,\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                      validator(_, value) {\r\n                                        if (\r\n                                          !value ||\r\n                                          getFieldValue(\"newpassword\") === value\r\n                                        ) {\r\n                                          return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject(\r\n                                          PASSWORD_NOT_MATCH\r\n                                        );\r\n                                      },\r\n                                    }),\r\n                                  ]}\r\n                                  dependencies={[\"newpassword\"]}\r\n                                  hasFeedback\r\n                                >\r\n                                  <Input.Password\r\n                                    htmlFor=\"confirmpassword\"\r\n                                    id=\"confirmPwd\"\r\n                                    value={pwd.confirmPwd}\r\n                                    onChange={handleOnChange}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              {SUBMIT}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Tooltip } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ADD_ICON, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\n\r\nclass AddIcoModal extends Component {\r\n  state = { visible: false, iconContent: \"\", ImageId: \"\" };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.addIcon(this.state.iconContent, this.state.ImageId);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSelectIcon = (e) => {\r\n    this.setState({\r\n      iconContent: e.currentTarget.innerHTML,\r\n      ImageId: e.currentTarget.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0\" onClick={this.showModal}>\r\n          <span className=\"icon icon-add-filled\" />\r\n          {ADD_ICON}\r\n        </Button>\r\n        <Modal\r\n          className=\"modal-icon\"\r\n          title={ADD_ICON}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"py-4\" data-test=\"AddIcon\">\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"1\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={1}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SEXUAL_HARRASMENT}>\r\n                <span className=\"icon icon-sexual-harassment-1\" />\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"2\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={2}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={VIOLENCE}>\r\n                <span className=\"icon icon-violence\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"3\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={3}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={RACISM}>\r\n                <span className=\"icon icon-racism\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"4\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={4}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={CYBER_BULLYING}>\r\n                <span className=\"icon icon-cyber-bullying\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"5\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={5}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={FIGHT}>\r\n                <span className=\"icon icon-fight\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"6\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={6}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={DISCRIMINATION}>\r\n                <span className=\"icon icon-discrimination\" />\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.ImageId === \"7\"\r\n                  ? \"col-3 col-lg-2 selected\"\r\n                  : \"col-3 col-lg-2\"\r\n              }\r\n              id={7}\r\n              onClick={this.onSelectIcon}\r\n            >\r\n              <Tooltip title={SLAP}>\r\n                <span className=\"icon icon-slap\" />\r\n              </Tooltip>\r\n            </div>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcoModal;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Alert } from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport {\r\n  ENTER_DIRECTORY_NAME,\r\n  REQUIRED_MESSAGE,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  ENTER_DESCRIPTION,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n} from \"../../errors\";\r\nimport { DIRECTORY_NAME, DESCRIPTION, DATE, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { NEXT } from \"../../headings\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nconst { Option } = Select;\r\n\r\nconst CreateHotlineStepOne = ({\r\n  next,\r\n  stepOneHotLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneHotLineInfo.directoryName &&\r\n      stepOneHotLineInfo.directoryName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.description &&\r\n      stepOneHotLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneHotLineInfo.iconHtml &&\r\n      stepOneHotLineInfo.status &&\r\n      stepOneHotLineInfo.sDate\r\n    ) {\r\n      if (hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkhotline/\",\r\n        { hotline_name: stepOneHotLineInfo.directoryName },\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0], \"hotlineErrorUpdated\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <FloatLabel\r\n        label={DIRECTORY_NAME}\r\n        value={stepOneHotLineInfo.directoryName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"directoryName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DIRECTORY_NAME },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneHotLineInfo.directoryName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"directoryName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"directoryName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated === \"status: false\" &&\r\n            stepOneHotLineInfo.directoryName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneHotLineInfo.directoryName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={HOTLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneHotLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: { ENTER_DESCRIPTION },\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            className=\"input-control\"\r\n            value={stepOneHotLineInfo.description}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneHotLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneHotLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneHotLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} />\r\n          {getIconText(stepOneHotLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneHotLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneHotLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateHotlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { FIRST_NAME, LAST_NAME, STATUS, ACCESS, MOBILE } from \"../../labels\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\n\r\nclass CreateHotlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n          loader: false,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoHotLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoHotLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>\r\n            {STATUS_ACTIVE}\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <Spin spinning={this.state.loader} size=\"large\">\r\n          <div id=\"no-more-tables\">\r\n            <Table\r\n              rowSelection={rowSelection}\r\n              columns={columns}\r\n              dataSource={this.state.filterData}\r\n              rowKey=\"unique_identifier\"\r\n            />\r\n          </div>\r\n          <div className=\"steps-action mt-5\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              style={{ margin: \"0 8px\" }}\r\n              onClick={() => this.stepTwoPrev()}\r\n              data-test=\"steptwoPrev\"\r\n            >\r\n              {BACK}\r\n            </Button>\r\n            <Button\r\n              className=\"md\"\r\n              type=\"primary\"\r\n              onClick={() => this.stepTwoNext()}\r\n              data-test=\"steptwoNext\"\r\n            >\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateHotlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nconst { TextArea } = Input;\r\nimport { SELECT_DATE } from \"../../errors\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { BACK, CREATE } from \"../../headings\";\r\n\r\nconst CreateHotlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneHotLine,\r\n  stepTwoHotLine,\r\n  getIconText,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoHotLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"directoryName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled\r\n            maxLength={80}\r\n            value={stepOneHotLine.directoryName}\r\n            id=\"directoryName\"\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"directoryName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneHotLine.description}\r\n            id=\"description\"\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneHotLine.sDate}\r\n            rules={[\r\n              {\r\n                readOnly: true,\r\n                required: true,\r\n                message: { SELECT_DATE },\r\n              },\r\n            ]}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneHotLine.status}\r\n                htmlFor=\"status\"\r\n                disabled\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control\">\r\n          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneHotLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"\"\r\n                  >\r\n                    {getIconText(stepOneHotLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateHotlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateHotlineStepOne from \"../form/CreateHotlineStepOne\";\r\nimport CreateHotlineStepTwo from \"../form/CreateHotlineStepTwo\";\r\nimport CreateHotlineStepThree from \"../form/CreateHotlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CREATE_HOTLINE_DIRECTORY,\r\n  HOTLINE_DIRECTORY,\r\n  CREATE_HOTLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n  HOTLINE_CREATE_STEP1,\r\n  HOTLINE_CREATE_STEP2,\r\n  HOTLINE_CREATE_STEP3,\r\n} from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: HOTLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: HOTLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n  const [stepOneHotLine, setStepOneHotLine] = useState({\r\n    directoryName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    iconHtml: \"\",\r\n  });\r\n\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n  const [stepTwoHotLine, setStepTwoHotLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneHotLine({ ...stepOneHotLine, [name]: date });\r\n  };\r\n\r\n  const setNameValidHandle = (value, name) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneHotLine({\r\n      ...stepOneHotLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoHotLine({\r\n      ...stepTwoHotLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_hotline: {\r\n        name: stepOneHotLine.directoryName,\r\n        help_text: stepOneHotLine.description,\r\n        start_date: stepOneHotLine.sDate[0]\r\n          ? moment(stepOneHotLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneHotLine.sDate[1]\r\n          ? moment(stepOneHotLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: stepOneHotLine.status,\r\n        hotline_icon_id: parseInt(stepOneHotLine.hotlineIconId),\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoHotLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.post(BASE_URL + \"hotline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/hotlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/hotlinedirectory\">\r\n                    <Breadcrumb.Item>{HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_HOTLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_HOTLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content\">\r\n                        {current == 0 ? (\r\n                          <CreateHotlineStepOne\r\n                            next={next}\r\n                            stepOneHotLineInfo={stepOneHotLine}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            setNameValidHandle={setNameValidHandle}\r\n                            addIcon={addIcon}\r\n                            getIconText={getIconText}\r\n                            hotlineErrorUpdated={hotlineErrorUpdated}\r\n                            data-test=\"CreateHotlineStepOne\"\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateHotlineStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepOneHotLine={stepOneHotLine}\r\n                            stepTwoHotLine={stepTwoHotLine}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateHotlineStepThree\r\n                            prev={prev}\r\n                            createNewHotLine={createHotLine}\r\n                            stepOneHotLine={stepOneHotLine}\r\n                            stepTwoHotLine={stepTwoHotLine}\r\n                            getIconText={getIconText}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default HotlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport HotlineCreation from \"../../components/hotlineCreation/HotlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, HOTLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  HOTLINE_DIRECTORY_TEXT_PART1,\r\n  HOTLINE_DIRECTORY_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HotlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{HOTLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {HOTLINE_DIRECTORY_TEXT_PART1}\r\n                          <br />\r\n                          {HOTLINE_DIRECTORY_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <HotlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HotlineDirectory;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DELETE,\r\n  DELETE_HOTLINE,\r\n  NO_TEXT_MODAL,\r\n  YES_TEXT_MODAL,\r\n} from \"../../headings\";\r\nimport { DELETE_CONFIRM_HOTLINE } from \"../../messages\";\r\n\r\nclass DeleteHotLineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"hotline/\" + this.props.hotlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{DELETE}</a>\r\n        <Modal\r\n          title={DELETE_HOTLINE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_HOTLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteHotLineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteHotlineModal from \"../../components/modal/DeleteHotlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/edithotline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/edithotline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteHotlineModal\r\n          hotlineId={test.hotline_id}\r\n          hotlineName={test.name}\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass HotlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotlinePopover;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst GridPermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    { title: NAME, dataIndex: \"first_name\", key: \"first_name\", width: \"30%\" },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridPermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchUser = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n  //const [value, setValue] = useState('');\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n      // setValue(\"\");\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this hotline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        //value={value}\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport GridPermission from \"../table/TablePermission\";\r\nimport SearchUser from \"../autocomplete/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\nimport { CANCEL, SHOW, DONE } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass PermissionModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedHotLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      hotlineId: this.props.selectedRows.hotline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getHotlineAssignEmpl/\" + this.props.selectedRows.hotline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedHotLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedHotLines = [...this.state.assignedHotLines];\r\n    let index = assignedHotLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedHotLines[index] = {\r\n      ...assignedHotLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedHotLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user_id }),\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"getHotlineAssignEmpl/\" + value.hotline_id, options)\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedHotLines, assignedEmp } = this.state;\r\n    const x = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      first_name: options.value,\r\n    };\r\n    const y = {\r\n      hotline_id: this.state.hotlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedHotLines: [...assignedHotLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <GridPermission\r\n              data={this.state.assignedHotLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchUser\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedHotLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionModal);\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport HotlinePopover from \"../table/HotlinePopover\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PermissionModal from \"./../modal/ShowModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  HOTLINE_NAME,\r\n  END_DATE,\r\n  START_DATE,\r\n  PERMISSIONS,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { HOTLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllHotlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { hotlines } = this.props;\r\n    hotlines?.forEach((hotline) => {\r\n      hotline.start_date = moment(hotline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      hotline.end_date = moment(hotline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: hotlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.hotlines !== nextProps.hotlines) {\r\n      nextProps.hotlines?.forEach((hotline) => {\r\n        hotline.start_date = moment(hotline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        hotline.end_date = moment(hotline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.hotlines }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const data = {\r\n        help_text: record.help_text,\r\n        hotline_icon_id: record.hotline_icon_id,\r\n        hotline_id: record.hotline_id,\r\n        name: record.name,\r\n        start_date: moment(record.start_date.replaceAll(\" / \", \"-\")).format(\r\n          \"DD-MM-YYYY\"\r\n        ),\r\n        end_date: moment(endDate.replaceAll(\"/\", \"-\")).format(\"DD-MM-YYYY\"),\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"hotline/\" + data.hotline_id, data, options)\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt, searchBy: value });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: HOTLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Hotline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <PermissionModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <HotlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{HOTLINE_DIRECTORY}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create Hotline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllHotlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HotlineDirectory from \"./HotlineDirectory\";\r\nimport ShowAllHotlines from \"./ShowAllHotlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHotlinesAsync } from \"../../actions/hotlines\";\r\n\r\nconst HotlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getHotlinesAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.hotlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.hotlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.hotlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.hotlinesdata !== null &&\r\n    props.hotlinesdata.length === 0 ? (\r\n    <HotlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllHotlines\r\n      hotlines={props.hotlinesdata}\r\n      statusOnClicked={statusOnClicked}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { hotlinesdata } = state.hotlinedata;\r\n  return {\r\n    hotlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HotlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    HOTLINE_FAIL,\r\n    HOTLINE_SUCCESS,\r\n    SET_MESSAGE,\r\n    HOTLINEASSIGN_FAIL,\r\n    HOTLINEASSIGN_SUCCESS\r\n    } from \"./types\";\r\n\r\n    export const getHotlinesAsync=()=>(dispatch)=>{\r\n        return UserService.getHotlines().then((data)=>{\r\n            dispatch({\r\n                type:HOTLINE_SUCCESS,\r\n                payload:{hotlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    export const getAssignHotlinesAsync=(hotLineId)=>(dispatch)=>{\r\n        return UserService.getAssignHotlines(hotLineId).then((data)=>{\r\n            dispatch({\r\n                type:HOTLINEASSIGN_SUCCESS,\r\n                payload:{assignhotlinedata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:HOTLINEASSIGN_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };","import React, { useState } from \"react\";\r\nimport { Modal, Checkbox, Col, Row, Button } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport { ASSIGN, CANCEL, DONE, HOTLINE } from \"../../headings\";\r\nimport { ASSIGN_HOTLINE_TEXT_PART2 } from \"../../messages\";\r\n\r\nconst AssignHotlineModal = ({\r\n  handleCheck,\r\n  selectedRow,\r\n  stepOneHotLineValues,\r\n  permissions,\r\n  getCheckValues,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = async () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = (e) => {\r\n    setVisible(false);\r\n    getCheckValues();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => showModal()}>\r\n        {ASSIGN}\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-checkbox\"\r\n        visible={visible}\r\n        onOk={() => handleOk()}\r\n        onCancel={() => handleCancel()}\r\n        centered\r\n        width={590}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{\r\n          children: \"Custom cancel\",\r\n          className: \"ant-btn-secondary\",\r\n        }}\r\n        okText={DONE}\r\n        cancelText={CANCEL}\r\n      >\r\n        <div>\r\n          {ASSIGN_HOTLINE_TEXT_PART1}{\" \"}\r\n          <b>{stepOneHotLineValues.directoryName}</b> {HOTLINE}\r\n          <br /> <span className=\"font-wgt-md\"> </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          <Row className=\"mt-2 mt-lg-5\">\r\n            <Col span={6}></Col>\r\n            <Col span={14} className=\"small text-center\">\r\n              {ASSIGN_HOTLINE_TEXT_PART2}\r\n            </Col>\r\n          </Row>\r\n          {selectedRow &&\r\n            selectedRow.map((item) => {\r\n              let per = permissions.find((p) => p.user_id === item.user_id);\r\n              return (\r\n                <Row className=\"mt-3 d-flex justify-content-center\">\r\n                  <Col span={12}>{`${item.firstname} ${item.lastname}`}</Col>\r\n                  <Col span={10}>\r\n                    <Checkbox\r\n                      checked={per && per.can_respond === 1 ? true : false}\r\n                      disabled\r\n                      onChange={(e) => handleCheck(item)}\r\n                    ></Checkbox>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignHotlineModal;\r\n","export const highlightText = (data, str) => {\r\n  let highlightedObject = {};\r\n  highlightedObject = data\r\n    .filter(\r\n      (item) =>\r\n        item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.responder_conversation_name\r\n          .toLowerCase()\r\n          .includes(str.toLowerCase()) ||\r\n        item.hotline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n        item.message.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n    .map((item) => {\r\n      let conversation_id = item.conversation_id.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let responder_conversation_name = item.responder_conversation_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let hotlineName = item.hotline_name.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      let itemMessage = item.message.replace(\r\n        new RegExp(str, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n      return {\r\n        ...item,\r\n        conversation_id: conversation_id,\r\n        responder_conversation_name: responder_conversation_name,\r\n        message: itemMessage,\r\n        hotline: {\r\n          name: hotlineName,\r\n          hotline_id: item.hotline_id,\r\n        },\r\n      };\r\n    });\r\n  return highlightedObject;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  FILTER,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n  HOTLINE,\r\n  CANCEL,\r\n  APPLY,\r\n} from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n} from \"../../values\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [hotline, setHotline] = useState([]);\r\n  const [hotlinesData, setHotlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldHotline, setOldHotline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldHotline, setSelectedOldHotline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedHotline, setSelectedHotline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserallHotlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.hotline_name,\r\n            value: value.hotline_id,\r\n          })\r\n        );\r\n        setHotlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, hotline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyHotline\") {\r\n      const removeHotline = selectedHotline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmHot = hotline.filter((ur) => ur !== props.removeFilter.value);\r\n      setHotline(rmHot);\r\n      setSelectedHotline(removeHotline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const hotlineOptions = hotlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setHotline(oldHotline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedHotline(selectedOldHotline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(hotline.length > 0 && { hotline_id: hotline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldHotline(hotline);\r\n    setSelectedOldHotline(selectedHotline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedHotline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleHotline(checkedValues) {\r\n    let selected = selectedHotline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(hotlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedHotline(selected);\r\n    setHotline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedHotline([]);\r\n      setHotline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{HOTLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"hotline\"\r\n                    options={hotlineOptions}\r\n                    value={hotline}\r\n                    onChange={handleHotline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Input, Row, Form } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport {\r\n  ADD_NOTE,\r\n  ADD_TEXT_MODAL,\r\n  CANCEL_MODAL,\r\n  TAKE_NOTE,\r\n} from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nclass NoteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formRef = React.createRef();\r\n    this.state = {\r\n      visible: false,\r\n      noteText: \"\",\r\n    };\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    var data = {\r\n      note_text: this.state.noteText,\r\n      conversation_id: this.props.convoId,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios.post(BASE_URL + \"addNotes/\", data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        this.setState({ noteText: \"\" });\r\n        this.formRef.current.resetFields();\r\n        this.props.getNoteData(res.data.conversation_id);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      noteText: \"\",\r\n    });\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ noteText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button onClick={this.showModal} type=\"link\" className=\"link pl-0 pt-0\">\r\n          <span className=\"icon icon-add-filled\" />\r\n          {TAKE_NOTE}\r\n        </Button>\r\n        <Modal\r\n          className=\"note-modal\"\r\n          title={TAKE_NOTE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={500}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={ADD_TEXT_MODAL}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Row className=\"pt-2\" data-test=\"NoteModal\">\r\n            <Form\r\n              className=\"input-md w-100\"\r\n              name=\"validate-other\"\r\n              ref={this.formRef}\r\n            >\r\n              <Form.Item className=\"mb-0\" name=\"send message\">\r\n                <TextArea\r\n                  className=\"input-control\"\r\n                  placeholder={ADD_NOTE}\r\n                  htmlFor=\"send message\"\r\n                  value={this.state.noteText}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteModal;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { ACTIVITY } from \"../../headings\";\r\nimport {\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n  URGENCY_LEVEL_HIGH,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  STATUS_CLOSED,\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGH4,\r\n} from \"../../values\";\r\n\r\nconst audit_log = [\r\n  { id: 1, name: AUDIT_LOG1 },\r\n  { id: 2, name: AUDIT_LOG2 },\r\n  { id: 3, name: AUDIT_LOG3 },\r\n  { id: 4, name: AUDIT_LOGH4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL + \"getconversationActivity/?conversation_id=\" + conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.hotline_id);\r\n  }\r\n\r\n  getAssigne(hotlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getHotlineAssignee/\" + hotlineId, options)\r\n      .then((res) => {\r\n        this.setState({ assigneEmp: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./hotlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport { STATUS } from \"../../labels\";\r\nimport {\r\n  LAST_READ,\r\n  STATUS_CHANGED,\r\n  URGENCY_LEVEL_CHANGED,\r\n  URGENCY_LEVEL,\r\n  SEND_MESSAGE_TEXT,\r\n} from \"../../headings\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getHotlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"hotline_message\")[\r\n          document.getElementsByClassName(\"hotline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getHotlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"hotlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if ((e.altKey && e.keyCode === 13) || (e.ctrlKey && e.keyCode === 13)) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message.length > 0) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        hotline_id: conversation.hotline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveHotlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.hotline_name.includes(\"</mark>\")) {\r\n      conversation.hotline_name = conversation.hotline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.hotline_name = conversation.hotline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.hotline_name = conversation.hotline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.hotline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ? (\r\n                        <Divider plain>{URGENCY_LEVEL_CHANGED}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\"Status has been changed to\") ? (\r\n                        <Divider plain>{STATUS_CHANGED}</Divider>\r\n                      ) : null}\r\n                      {msg.message.includes(\r\n                        \"Urgency Level has been changed to\"\r\n                      ) ||\r\n                      msg.message.includes(\r\n                        \"Status has been changed to\"\r\n                      ) ? null : (\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"outgoing-msg hotline_message mb-3\"\r\n                              : \"incoming-msg hotline_message mb-2\"\r\n                          }\r\n                        >\r\n                          <div\r\n                            className={\r\n                              msg.is_responder_message\r\n                                ? \"sent-msg\"\r\n                                : \"received-msg\"\r\n                            }\r\n                          >\r\n                            <p\r\n                              ellipsis\r\n                              // className=\"w-75 pr-2 mb-1\"\r\n                              dangerouslySetInnerHTML={createMarkup(\r\n                                msg.message\r\n                              )}\r\n                            />\r\n\r\n                            <span className=\"time-date\">\r\n                              {\" \"}\r\n                              {moment(msg.created_on).isSame(moment(), \"day\")\r\n                                ? moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"hh:mm A\")\r\n                                : moment(msg.created_on)\r\n                                    .utc()\r\n                                    .local()\r\n                                    .format(\"MM:DD:YY | hh:mm A \")}\r\n                              {msg.is_responder_message &&\r\n                                ` | ${msg.first_name} ${msg.last_name}`}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    name={conversation.conversation_id}\r\n                    placeholder={SEND_MESSAGE_TEXT}\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                hotline_id={conversation.hotline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextHotline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchHotlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.hotlineFilterData.length > 0 && {\r\n        hotline_id: props.hotlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      hotline_id:\r\n        allCheckedOnes.hotline_id && allCheckedOnes.hotline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchHotlineMessages from \"./SearchHotlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  HOTLINE,\r\n  NO_MESSAGES_FOUND,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\nimport { NO_CONVERSATION_SELECETD, SELECT_CONVERSATION } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HoltineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Urgency Level has been changed to ${\r\n        event === 1 ? \"Low\" : event === 2 ? \"Medium\" : \"High\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n    var dataForReceiveAPI = {\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      hotline_id: props.conversation.hotline_id,\r\n      conversation_id: conversation_id,\r\n      message: `Status has been changed to ${\r\n        event === 1 ? \"New\" : event === 2 ? \"Open\" : \"Closed\"\r\n      }`,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"hotlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n          axios\r\n            .post(\r\n              BASE_URL + \"receiveHotlineMessage/\",\r\n              dataForReceiveAPI,\r\n              options\r\n            )\r\n            .then((response) => {\r\n              if (response.status === 201) {\r\n                props.socket.send(JSON.stringify(response.data));\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.hotlineFilterData.map((hotline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyHotline\", hotline.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {HOTLINE}: <span>{hotline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchHotlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  hotlineFilterData={props.hotlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.hotline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoHotlines}\r\n                alt=\"No Hotlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoltineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED } from \"../../messages\";\r\n\r\nconst NoHotlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateHotline}\r\n        alt=\"No Hotlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED}</h5>\r\n    {/* <small>Select a hotline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoHotlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Spin } from \"antd\";\r\nimport { LOADING } from \"../../headings\";\r\n\r\nconst Spinner = (loader) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <Spin size=\"large\" tip={LOADING} spinning={loader}></Spin>\r\n    </Row>\r\n  </Col>\r\n);\r\n\r\nexport default Spinner;\r\n","import * as AppStorage from \"./AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nexport const displayNewConvAtTop = (\r\n  updatedConversations,\r\n  newConvo,\r\n  updatedNewConvo\r\n) => {\r\n  let index = 0;\r\n  // create a replica of updatedConversations\r\n  const dummyArray = updatedConversations;\r\n  // return the index of the new incoming conversation from the list of all conversations.\r\n  updatedConversations.map((value) => {\r\n    if (\r\n      value?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n      newConvo?.conversation_id\r\n    ) {\r\n      return (index = updatedConversations.indexOf(value));\r\n    }\r\n  });\r\n  // remove that new conversation from the dummy list temporarily.\r\n  dummyArray.splice(index, 1);\r\n  // push that removed incoming conversation on top of the list.\r\n  const finalConversations = [updatedNewConvo, ...dummyArray];\r\n  return finalConversations;\r\n};\r\n\r\nexport const increaseOverallCount = (\r\n  newConvo,\r\n  conversationsToDisplay,\r\n  selectedConv,\r\n  setUnreadCount\r\n) => {\r\n  const user = JSON.parse(AppStorage.get(\"user\"));\r\n  // return only that new incoming message which comes from a user other than logged in user.\r\n  const newConvFromDiffUser = conversationsToDisplay.filter(\r\n    (filter) =>\r\n      filter?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvo?.conversation_id &&\r\n      newConvo.created_by !==\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        ) &&\r\n      newConvo.conversation_id !== selectedConv\r\n  );\r\n  // return the new incoming message irrespective of any user.\r\n  const incomingConversation = conversationsToDisplay.filter(\r\n    (item) =>\r\n      item?.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n      newConvo?.conversation_id\r\n  );\r\n  for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n    if (\r\n      incomingConversation[0]?.conversation_id\r\n        .toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newConvFromDiffUser[item]?.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") &&\r\n      incomingConversation[0].unread_messages_count === 0\r\n    ) {\r\n      setUnreadCount((unreadCount) => unreadCount + 1);\r\n    }\r\n  }\r\n};\r\n\r\nexport const increaseOverallCountDuringFilters = (\r\n  newState,\r\n  allConversations,\r\n  urgencyFilterData,\r\n  statusFilterData,\r\n  lineFilterData,\r\n  searchString,\r\n  newInitiatedConv,\r\n  setUnreadCount,\r\n  setAllConversations,\r\n  conversation\r\n) => {\r\n  if (\r\n    urgencyFilterData.length > 0 ||\r\n    statusFilterData.length > 0 ||\r\n    lineFilterData.length > 0 ||\r\n    searchString.length > 0\r\n  ) {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // return only that new incoming message which comes from a user other than logged in user.\r\n    const newConvFromDiffUser = allConversations?.filter(\r\n      (filter) =>\r\n        filter?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newState?.conversation_id &&\r\n        newState.created_by !==\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ) &&\r\n        newState?.conversation_id !== conversation.conversation_id\r\n    );\r\n    // return the new incoming message irrespective of any user.\r\n    const incomingConversation = allConversations?.filter(\r\n      (item) =>\r\n        item?.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        newState?.conversation_id\r\n    );\r\n    for (var item = 0; item < newConvFromDiffUser.length; item++) {\r\n      if (\r\n        incomingConversation[0]?.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n          newConvFromDiffUser[item]?.conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\") &&\r\n        incomingConversation[0]?.unread_messages_count === 0\r\n      ) {\r\n        if (!newInitiatedConv.current) {\r\n          setUnreadCount((unreadCount) => unreadCount + 1);\r\n        }\r\n        const updatedAllConversations = allConversations.map((item) =>\r\n          item.conversation_id === newState?.conversation_id\r\n            ? {\r\n                ...item,\r\n                unread_messages_count: item.unread_messages_count + 1,\r\n              }\r\n            : item\r\n        );\r\n        setAllConversations(updatedAllConversations);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const unSetFilters = (via) => {\r\n  AppStorage.remove(\"urgencyLevels\");\r\n  AppStorage.remove(\"status\");\r\n  if (via === \"hotline\") {\r\n    AppStorage.remove(\"hotline\");\r\n  } else {\r\n    AppStorage.remove(\"openline\");\r\n  }\r\n  AppStorage.remove(\"searchBy\");\r\n  AppStorage.remove(\"ConvID\");\r\n};\r\n\r\nexport const filterSocket = (\r\n  totalFiltersApplied,\r\n  newConvo,\r\n  conversations,\r\n  conversationIds,\r\n  via\r\n) => {\r\n  const hotlineOrOpenlineFilter =\r\n    via === \"hotline\"\r\n      ? totalFiltersApplied.hotline\r\n      : totalFiltersApplied.openline;\r\n  const hotlineOrOpenlineConvoId =\r\n    via === \"hotline\" ? newConvo.hotline_id : newConvo.openline_id;\r\n  const hotlineOrOpenlineConvoName =\r\n    via === \"hotline\" ? newConvo.hotline_name : newConvo.openline_name;\r\n  let totalConversations = [];\r\n  if (\r\n    (totalFiltersApplied.status?.includes(newConvo.status_id.toString()) &&\r\n      totalFiltersApplied.urgency?.includes(\r\n        newConvo.urgency_level_id.toString()\r\n      ) &&\r\n      hotlineOrOpenlineFilter?.includes(hotlineOrOpenlineConvoId.toString()) &&\r\n      totalFiltersApplied.searchBy?.length > 0 &&\r\n      newConvo.conversation_id\r\n        .toLowerCase()\r\n        .includes(totalFiltersApplied.searchBy?.toLowerCase())) ||\r\n    newConvo.responder_conversation_name\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n    hotlineOrOpenlineConvoName\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase()) ||\r\n    newConvo.message\r\n      .toLowerCase()\r\n      .includes(totalFiltersApplied.searchBy?.toLowerCase())\r\n  ) {\r\n    let conversation_id = newConvo.conversation_id.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let responder_conversation_name = newConvo.responder_conversation_name.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let lineName = hotlineOrOpenlineConvoName.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    let itemMessage = newConvo.message.replace(\r\n      new RegExp(totalFiltersApplied.searchBy, \"gi\"),\r\n      (match) =>\r\n        `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n    );\r\n    const updatedConversation =\r\n      via === \"hotline\"\r\n        ? {\r\n            ...newConvo,\r\n            conversation_id: conversation_id,\r\n            responder_conversation_name: responder_conversation_name,\r\n            message: itemMessage,\r\n            hotline: {\r\n              name: lineName,\r\n              hotline_id: hotlineOrOpenlineConvoId,\r\n            },\r\n          }\r\n        : {\r\n            ...newConvo,\r\n            conversation_id: conversation_id,\r\n            responder_conversation_name: responder_conversation_name,\r\n            message: itemMessage,\r\n            openline: {\r\n              name: lineName,\r\n              openline_id: hotlineOrOpenlineConvoId,\r\n            },\r\n          };\r\n    if (\r\n      !conversationIds.includes(\r\n        updatedConversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      )\r\n    ) {\r\n      totalConversations = [...conversations, updatedConversation];\r\n    } else {\r\n      totalConversations = conversations;\r\n    }\r\n  } else {\r\n    totalConversations = conversations;\r\n  }\r\n  return totalConversations;\r\n};\r\n\r\nexport function setAppliedFilters(\r\n  urgencyLevels,\r\n  status,\r\n  line,\r\n  setUrgencyFilterData,\r\n  setStatusFilterData,\r\n  setLineFilterData,\r\n  via\r\n) {\r\n  setUrgencyFilterData(urgencyLevels);\r\n  setStatusFilterData(status);\r\n  setLineFilterData(line);\r\n  AppStorage.set(\r\n    \"urgencyLevels\",\r\n    Object.values(urgencyLevels)?.map((data) => data.value)\r\n  );\r\n  if (via === \"hotline\") {\r\n    AppStorage.set(\r\n      \"hotline\",\r\n      Object.values(line)?.map((data) => data.value)\r\n    );\r\n  } else {\r\n    AppStorage.set(\r\n      \"openline\",\r\n      Object.values(line)?.map((data) => data.value)\r\n    );\r\n  }\r\n  AppStorage.set(\r\n    \"status\",\r\n    Object.values(status)?.map((data) => data.value)\r\n  );\r\n}\r\n\r\nexport const createMarkup = (html) => {\r\n  return { __html: html };\r\n};\r\n","import { LeftOutlined } from \"@ant-design/icons\";\r\nimport { Form, Layout, Row } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport NoHotlines from \"../../assets/images/no-hotlines.svg\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport { HOTLINE_MESSAGES } from \"../../headings\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL, WEBSOCKET_HOTLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport \"./hotlineMessages.scss\";\r\nimport HoltineMessagesLeftSection from \"./HotlineMessagesLeftSection\";\r\nimport NoHotlineMessages from \"./NoHotlineMessages\";\r\nimport Spinner from \"./Spinner\";\r\nimport {\r\n  displayNewConvAtTop,\r\n  increaseOverallCount,\r\n  increaseOverallCountDuringFilters,\r\n  unSetFilters,\r\n  filterSocket,\r\n  setAppliedFilters,\r\n  createMarkup,\r\n} from \"../../utils/MessagesUtil\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst HotlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [hotlineFilterData, setHotlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    // remove filters when component loads.\r\n    unSetFilters(\"hotline\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n    increaseOverallCountDuringFilters(\r\n      newState,\r\n      mergedConversations,\r\n      urgencyFilterData,\r\n      statusFilterData,\r\n      hotlineFilterData,\r\n      searchString,\r\n      newInitiatedConv,\r\n      setUnreadCount,\r\n      setAllConversations,\r\n      conversation\r\n    );\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_HOTLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n      if (newConvo.message.includes(\"Urgency Level has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const urgency =\r\n          lastWord.trim() === \"Low\" ? 1 : lastWord.trim() === \"Medium\" ? 2 : 3;\r\n        setUrgencyLevel(urgency);\r\n      } else if (newConvo.message.includes(\"Status has been changed to\")) {\r\n        var words = newConvo.message.split(\" \");\r\n        const lastWord = words[words.length - 1];\r\n        const status =\r\n          lastWord.trim() === \"New\" ? 1 : lastWord.trim() === \"Open\" ? 2 : 3;\r\n        setStatus(status);\r\n      }\r\n    };\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const hotlineState =\r\n          AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let hotlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          hotline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (hotlineState !== null && hotlineState?.length > 0) {\r\n          hotlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            hotline: hotlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        // return those conversations which have matched filters or search.\r\n        if (urgencyFilter || statusFilter || hotlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds,\r\n            \"hotline\"\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.hotline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.hotline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                hotline: {\r\n                  name: value.hotline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !hotlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n          increaseOverallCount(\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            selectedConv,\r\n            setUnreadCount\r\n          );\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          hotlineFilter &&\r\n          !hotlineState.includes(newConvo.hotline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          // append the new incoming conversation at the top of the existing list of conversations.\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedHotline\r\n  ) => {\r\n    // set state values of applied filters.\r\n    setAppliedFilters(\r\n      selectedUrgency,\r\n      selectedStatus,\r\n      selectedHotline,\r\n      setUrgencyFilterData,\r\n      setStatusFilterData,\r\n      setHotlineFilterData,\r\n      \"hotline\"\r\n    );\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const hotlineState =\r\n      AppStorage.get(\"hotline\") && AppStorage.get(\"hotline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(hotlineState &&\r\n        hotlineState.length > 0 && { hotline_id: hotlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   hotline_id:\r\n    //     allAppliedFilters.hotline_id && allAppliedFilters.hotline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"hotlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      hotlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            hotlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  {HOTLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Spinner loader={loader} />\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <HoltineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoHotlines={NoHotlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  hotlineFilterData={hotlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoHotlineMessages CreateHotline={CreateHotline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HotlineMessages;\r\n","import React from \"react\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider, Header, Content } = Layout;\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  HELP,\r\n  HOTLINE_MESSAGES,\r\n  INFO,\r\n  OPENLINE_MESSAGES,\r\n} from \"../../headings\";\r\n\r\nclass AmWebSidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let defaultKey = \"\";\r\n    if (this.props.data?.location) {\r\n      if (this.props.data.location.pathname.includes(\"hotline\")) {\r\n        defaultKey = \"1\";\r\n      } else if (this.props.data.location.pathname.includes(\"openline\")) {\r\n        defaultKey = \"2\";\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {React.createElement(\r\n          this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger d-lg-none d-block\",\r\n            onClick: this.toggle,\r\n          }\r\n        )}\r\n        <Sider\r\n          className={\r\n            !this.state.collapsed\r\n              ? \"d-none d-lg-block w-md-100 sider-width\"\r\n              : \" d-lg-block w-md-100 sider-width\"\r\n          }\r\n          trigger={null}\r\n          collapsible\r\n          collapsed={this.state.collapsed}\r\n        >\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[defaultKey]}>\r\n            <Menu.Item\r\n              key=\"1\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-openlines\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/hotlinemessages\">{HOTLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              icon={\r\n                <span className=\"icon-circle\">\r\n                  <span className=\"icon icon-polls\" />\r\n                </span>\r\n              }\r\n            >\r\n              {\" \"}\r\n              <Link to=\"/amweb/openlinemessages\">{OPENLINE_MESSAGES}</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div className=\"btm-div\">\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {INFO}\r\n            </a>\r\n            <a href=\"/\" className=\"px-2\" disabled>\r\n              {HELP}\r\n            </a>\r\n          </div>\r\n        </Sider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmWebSidebar;\r\n","export const highlightText = (data, str) => {\r\n    let highlightedObject = {};\r\n    highlightedObject = data\r\n      .filter(\r\n        (item) =>\r\n          item.conversation_id.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.responder_conversation_name\r\n            .toLowerCase()\r\n            .includes(str.toLowerCase()) ||\r\n          item.openline_name.toLowerCase().includes(str.toLowerCase()) ||\r\n          item.message.toLowerCase().includes(str.toLowerCase())\r\n      )\r\n      .map((item) => {\r\n        let conversation_id = item.conversation_id.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let responder_conversation_name = item.responder_conversation_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let openlineName = item.openline_name.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        let itemMessage = item.message.replace(\r\n          new RegExp(str, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n        return {\r\n          ...item,\r\n          conversation_id: conversation_id,\r\n          responder_conversation_name: responder_conversation_name,\r\n          message: itemMessage,\r\n          openline: {\r\n            name: openlineName,\r\n            openline_id: item.openline_id,\r\n          },\r\n        };\r\n      });\r\n    return highlightedObject;\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Popover, Row, Col, Button, Divider, Checkbox } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport \"./FilterPopover.scss\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport {\r\n  APPLY,\r\n  CANCEL,\r\n  FILTER,\r\n  OPENLINE,\r\n  OPENLINES,\r\n  RESET,\r\n  URGENCY_LEVEL,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nexport const Content = (props) => {\r\n  const [status, setStatus] = useState([]);\r\n  const [urgencyLevel, setUrgencyLevel] = useState([]);\r\n  const [openline, setOpenline] = useState([]);\r\n  const [openlinesData, setOpenlinesData] = useState([]);\r\n  const [oldUrgency, setOldUrgency] = useState([]);\r\n  const [oldOpenline, setOldOpenline] = useState([]);\r\n  const [oldStatus, setOldStatus] = useState([]);\r\n  const [selectedOldUrgency, setSelectedOldUrgency] = useState([]);\r\n  const [selectedOldOpenline, setSelectedOldOpenline] = useState([]);\r\n  const [selectedOldStatus, setSelectedOldStatus] = useState([]);\r\n  const [selectedUrgency, setSelectedUrgency] = useState([]);\r\n  const [selectedOpenline, setSelectedOpenline] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getUserAllOpenlines/\" +\r\n          parseInt(\r\n            CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n              CryptoJS.enc.Utf8\r\n            )\r\n          ),\r\n        options\r\n      )\r\n      .then((res) => {\r\n        let data = [];\r\n        res.data.map((value) =>\r\n          data.push({\r\n            label: value.openline.name,\r\n            value: value.openline.openline_id,\r\n          })\r\n        );\r\n        setOpenlinesData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type !== undefined && !props.visible) {\r\n      onApplySubmit(false);\r\n    }\r\n  }, [urgencyLevel, status, openline]);\r\n\r\n  useEffect(() => {\r\n    if (props.removeFilter.type === \"urgencyLevel\") {\r\n      const removeUrgency = selectedUrgency.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmUrg = urgencyLevel.filter(\r\n        (ur) => ur !== props.removeFilter.value\r\n      );\r\n      setUrgencyLevel(rmUrg);\r\n      setSelectedUrgency(removeUrgency);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyOpenline\") {\r\n      const removeOpenline = selectedOpenline.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmOpen = openline.filter((ur) => ur !== props.removeFilter.value);\r\n      setOpenline(rmOpen);\r\n      setSelectedOpenline(removeOpenline);\r\n    }\r\n    if (props.removeFilter.type === \"urgencyStatus\") {\r\n      const removeStatus = selectedStatus.filter(\r\n        (it) => it.value !== props.removeFilter.value\r\n      );\r\n      const rmStatus = status.filter((ur) => ur !== props.removeFilter.value);\r\n      setStatus(rmStatus);\r\n      setSelectedStatus(removeStatus);\r\n    }\r\n  }, [props.removeFilter]);\r\n\r\n  const urgencyOptions = [\r\n    { label: URGENCY_LEVEL_LOW, value: 1 },\r\n    { label: URGENCY_LEVEL_MEDIUM, value: 2 },\r\n    { label: URGENCY_LEVEL_HIGH, value: 3 },\r\n  ];\r\n  const statusOptions = [\r\n    { label: STATUS_NEW, value: 1 },\r\n    { label: STATUS_OPEN, value: 2 },\r\n    { label: STATUS_CLOSED, value: 3 },\r\n  ];\r\n  const openlineOptions = openlinesData;\r\n\r\n  const onCancel = (e) => {\r\n    setUrgencyLevel(oldUrgency);\r\n    setStatus(oldStatus);\r\n    setOpenline(oldOpenline);\r\n    setSelectedUrgency(selectedOldUrgency);\r\n    setSelectedStatus(selectedOldStatus);\r\n    setSelectedOpenline(selectedOldOpenline);\r\n    props.hide();\r\n  };\r\n\r\n  const onApplySubmit = (hide) => {\r\n    let allCheckedOnes = {\r\n      ...(status.length > 0 && { status_id: status }),\r\n      ...(urgencyLevel.length > 0 && { urgency_level_id: urgencyLevel }),\r\n      ...(openline.length > 0 && { openline_id: openline }),\r\n    };\r\n    setOldStatus(status);\r\n    setOldUrgency(urgencyLevel);\r\n    setOldOpenline(openline);\r\n    setSelectedOldOpenline(selectedOpenline);\r\n    setSelectedOldStatus(selectedStatus);\r\n    setSelectedOldUrgency(selectedUrgency);\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const finalUrl =\r\n      props.searchString === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          props.searchString;\r\n\r\n    let filteredData = [];\r\n    axios.get(finalUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(\r\n        filteredData,\r\n        \"apply\",\r\n        selectedUrgency,\r\n        selectedStatus,\r\n        selectedOpenline\r\n      );\r\n    });\r\n    if (hide) {\r\n      props.hide();\r\n    }\r\n  };\r\n\r\n  function handleStatus(checkedValues) {\r\n    let selected = selectedStatus;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(statusOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedStatus(selected);\r\n    setStatus(checkedValues);\r\n  }\r\n\r\n  function handleOpenline(checkedValues) {\r\n    let selected = selectedOpenline;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(openlineOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedOpenline(selected);\r\n    setOpenline(checkedValues);\r\n  }\r\n\r\n  function handleUrgencyLevel(checkedValues) {\r\n    let selected = selectedUrgency;\r\n    if (checkedValues.length > 0) {\r\n      checkedValues.map((val) => {\r\n        if (!selected.find((it) => it.value === val)) {\r\n          selected.push(urgencyOptions.find((opt) => opt.value === val));\r\n        } else {\r\n          selected = selected.filter((it) => it.value === val);\r\n        }\r\n      });\r\n    } else {\r\n      selected = [];\r\n    }\r\n    setSelectedUrgency(selected);\r\n    setUrgencyLevel(checkedValues);\r\n  }\r\n\r\n  const handleReset = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const searchBy = AppStorage.get(\"searchBy\");\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    let filteredData = [];\r\n    axios.get(baseUrl, options).then((res) => {\r\n      if (searchBy?.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.loadFilteredConversations(filteredData, \"reset\", [], [], []);\r\n      setUrgencyLevel([]);\r\n      setSelectedUrgency([]);\r\n      setStatus([]);\r\n      setSelectedStatus([]);\r\n      setSelectedOpenline([]);\r\n      setOpenline([]);\r\n    });\r\n    props.hide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Col span={24} style={{ width: \"325px\" }}>\r\n        <div className=\"\">\r\n          <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n            <Col span=\"12\">\r\n              <h6>{FILTER}</h6>\r\n            </Col>\r\n            <Col span=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\"link pl-0 pt-0\"\r\n                onClick={() => handleReset()}\r\n              >\r\n                {RESET}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Divider className=\"mt-0 mb-1 w-100\" />\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Row className=\"filter-wrapper align-items-center px-3 py-2\">\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{URGENCY_LEVEL}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"urgencyLevel\"\r\n                    options={urgencyOptions}\r\n                    value={urgencyLevel}\r\n                    onChange={handleUrgencyLevel}\r\n                  />\r\n                </Col>\r\n              </div>\r\n\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{STATUS}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"status\"\r\n                    value={status}\r\n                    options={statusOptions}\r\n                    onChange={handleStatus}\r\n                  />\r\n                </Col>\r\n              </div>\r\n              <div className=\"w-100 mb-4\">\r\n                <Col span=\"24\" className=\"filter-type mb-3\">\r\n                  <h6>{OPENLINE}</h6>\r\n                </Col>\r\n                <Col span=\"24\">\r\n                  <Checkbox.Group\r\n                    className=\"d-flex flex-column flex-gap\"\r\n                    name=\"openline\"\r\n                    options={openlineOptions}\r\n                    value={openline}\r\n                    onChange={handleOpenline}\r\n                  />\r\n                </Col>\r\n              </div>\r\n            </Row>\r\n          </Scrollbars>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"24\" className=\"btn-row actions\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              onClick={() => onApplySubmit(true)}\r\n            >\r\n              {APPLY}\r\n            </Button>\r\n            <Button type=\"secondary\" onClick={onCancel}>\r\n              {CANCEL}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass FilterPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={\r\n            <Content\r\n              hide={this.hide}\r\n              searchString={this.props.searchString}\r\n              removeFilter={this.props.removeFilter}\r\n              loadFilteredConversations={this.props.loadFilteredConversations}\r\n              visible={this.state.visible}\r\n            />\r\n          }\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"icon icon-filter\"></span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterPopover;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { SHOW_LESS } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass AddedNotes extends Component {\r\n  state = {\r\n    expand: false,\r\n    counter: 0,\r\n    notesData: [],\r\n    conversationId: \"\",\r\n  };\r\n\r\n  typoExpand = () => {\r\n    this.setState({\r\n      expand: true,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  typoClose = () => {\r\n    this.setState({\r\n      expand: false,\r\n      counter: !this.state.expand\r\n        ? this.state.counter + 0\r\n        : this.state.counter + 1,\r\n    });\r\n  };\r\n\r\n  renderParagraph(item) {\r\n    return (\r\n      <div className=\"note-wrapper m-2\" key={this.state.counter}>\r\n        <span className=\"note-user\">\r\n          {moment(item.created_on).utc().local().format(\"MM:DD:YY • hh:mm A •\")}{\" \"}\r\n          {item.first_name} {item.last_name}\r\n        </span>\r\n        <Paragraph\r\n          ellipsis={{\r\n            rows: 3,\r\n            expandable: true,\r\n            symbol: \"Show more\",\r\n            onExpand: this.typoExpand,\r\n          }}\r\n        >\r\n          {item.note_text}\r\n        </Paragraph>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.props.addedNote.map((item) => (\r\n      <div className=\"show-less\" data-test=\"addedNotes\">\r\n        {this.renderParagraph(item)}\r\n        {this.state.expand && (\r\n          <a\r\n            data-test=\"showLess\"\r\n            className=\"d-flex justify-content-end\"\r\n            onClick={this.typoClose}\r\n          >\r\n            {SHOW_LESS}\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default AddedNotes;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Typography, Slider } from \"antd\";\r\nimport NoteModal from \"../modal/NoteModal\";\r\nimport AddedNotes from \"./AddedNotes\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NOTES } from \"../../headings\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      notes: [],\r\n      conversationId: \"\",\r\n    };\r\n    this.getNotes = this.getNotes.bind(this);\r\n  }\r\n\r\n  onChange = (rows) => {\r\n    this.setState({ rows });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ conversationId: this.props.conversation_id });\r\n    this.getNotes(this.props.conversation_id);\r\n  }\r\n\r\n  getNotes(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      params: { conversation_id: conversationId },\r\n    };\r\n\r\n    axios.get(BASE_URL + \"getNotes/\", options).then((res) => {\r\n      this.setState({\r\n        notes: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notes } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class} data-test=\"Notes\">\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{NOTES}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.notesClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col span=\"24\" className=\"px-3\">\r\n                  <NoteModal\r\n                    convoId={this.props.conversation_id}\r\n                    getNoteData={this.getNotes}\r\n                  />\r\n                  <Row className=\"added-notes\">\r\n                    <AddedNotes addedNote={notes} />\r\n                  </Row>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Timeline } from \"antd\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  AUDIT_LOG1,\r\n  AUDIT_LOG2,\r\n  AUDIT_LOG3,\r\n  AUDIT_LOGO4,\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { ACTIONS } from \"../../labels\";\r\nimport { ACTIVITY } from \"../../headings\";\r\n\r\nconst audit_log = [\r\n  { id: 5, name: AUDIT_LOG1 },\r\n  { id: 6, name: AUDIT_LOG2 },\r\n  { id: 7, name: AUDIT_LOG3 },\r\n  { id: 8, name: AUDIT_LOGO4 },\r\n];\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nclass Activity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      activity: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAcitivity(this.props.conversation_id);\r\n  }\r\n\r\n  getAcitivity(conversationId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineConversationActivity/?conversation_id=\" +\r\n          conversationId,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({ activity: res.data });\r\n      });\r\n  }\r\n\r\n  mapAuditLog(auditlog) {\r\n    let str = \"\";\r\n    audit_log.map((k) => {\r\n      if (k.id === auditlog.audit_log_event_id) {\r\n        str = k.name;\r\n        if (auditlog.status_value) {\r\n          obj_status.map((item) => {\r\n            if (auditlog.status_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n\r\n        if (auditlog.urgency_level_value) {\r\n          obj_urgencyLevel.map((item) => {\r\n            if (auditlog.urgency_level_value == item.id) {\r\n              str = str + \" <b>\" + item.name + \"</b>\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  render() {\r\n    const { activity } = this.state;\r\n    return (\r\n      <>\r\n        {/* <span onClick={this.divclicked} className=\"icon icon-create\"></span> */}\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ACTIVITY}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.activityClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Scrollbars\r\n                  autoHeight\r\n                  autoHeightMin={0}\r\n                  autoHeightMax={450}\r\n                  thumbMinSize={30}\r\n                  universal={true}\r\n                >\r\n                  <Col span=\"24\" className=\"px-3 pt-2\">\r\n                    <Timeline>\r\n                      {activity.map((item) => (\r\n                        <Timeline.Item>\r\n                          <span className=\"note-user\">\r\n                            {moment(item.created_on)\r\n                              .utc()\r\n                              .local()\r\n                              .format(\"MM:DD:YY • hh:mm A•\")}{\" \"}\r\n                            {item.name}\r\n                          </span>\r\n                          <br />\r\n                          {ReactHtmlParser(this.mapAuditLog(item))}\r\n                        </Timeline.Item>\r\n                      ))}\r\n                    </Timeline>\r\n                  </Col>\r\n                </Scrollbars>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Activity;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Divider, Tag } from \"antd\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ASSIGNED_TO } from \"../../headings\";\r\n\r\nclass Assigned extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myclass: \"\",\r\n      assigneEmp: [],\r\n    };\r\n    this.divclicked = this.divclicked.bind(this);\r\n  }\r\n\r\n  divclicked() {\r\n    if (this.state.myclass === \"\") {\r\n      this.setState({\r\n        myclass: \"rgt-panel\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        myclass: \"\",\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAssigne(this.props.openline_id);\r\n  }\r\n\r\n  getAssigne(openlineId) {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(BASE_URL + \"getOpenlineAssignEmpl/\" + openlineId, options)\r\n      .then((res) => {\r\n        let listOfAssignedUsers = [];\r\n        res.data.map((value) => {\r\n          const user = value.user.first_name + \" \" + value.user.last_name;\r\n          listOfAssignedUsers.push({ \"Assigned User_name\": user });\r\n          return listOfAssignedUsers;\r\n        });\r\n        this.setState({ assigneEmp: listOfAssignedUsers });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { assigneEmp } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"rgt-panel\" className={this.props.class}>\r\n          <p>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Row className=\"filter-wrapper align-items-center justify-content-between px-3 pt-3\">\r\n                  <Col span=\"12\">\r\n                    <h6>{ASSIGNED_TO}</h6>\r\n                  </Col>\r\n                  <Button\r\n                    onClick={this.showModal}\r\n                    type=\"link\"\r\n                    className=\"link pl-0 pt-0 align-items-center d-flex\"\r\n                  >\r\n                    <span\r\n                      className=\"icon icon-close small\"\r\n                      onClick={(e) => this.props.assigneClicked(e)}\r\n                    />\r\n                  </Button>\r\n                </Row>\r\n                <Divider className=\"my-2 w-100\" />\r\n                <Col\r\n                  span=\"24\"\r\n                  className=\"px-3 pt-2 assignees d-flex flex-column flex-gap\"\r\n                >\r\n                  {assigneEmp.map((item) => (\r\n                    <Tag>{item[\"Assigned User_name\"]}</Tag>\r\n                  ))}\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assigned;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Row, Col, Select, Form, Input, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Send from \"../../assets/icons/send.svg\";\r\nimport Note from \"./Note\";\r\nimport Activity from \"./Activity\";\r\nimport Assigned from \"./Assigned\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport \"./openlineMessages.scss\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport {\r\n  STATUS_CLOSED,\r\n  STATUS_NEW,\r\n  STATUS_OPEN,\r\n  URGENCY_LEVEL_HIGH,\r\n  URGENCY_LEVEL_LOW,\r\n  URGENCY_LEVEL_MEDIUM,\r\n} from \"../../values\";\r\nimport { LAST_READ, URGENCY_LEVEL } from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst obj_status = [\r\n  { id: 1, name: STATUS_NEW },\r\n  { id: 2, name: STATUS_OPEN },\r\n  { id: 3, name: STATUS_CLOSED },\r\n];\r\n\r\nconst obj_urgencyLevel = [\r\n  { id: 1, name: URGENCY_LEVEL_LOW },\r\n  { id: 2, name: URGENCY_LEVEL_MEDIUM },\r\n  { id: 3, name: URGENCY_LEVEL_HIGH },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst Messages = ({\r\n  conversation,\r\n  urgencyLevel,\r\n  status,\r\n  onChangeUrgencyLevel,\r\n  onChangeStatus,\r\n  searchString,\r\n  newState,\r\n  setCounter,\r\n  socket,\r\n  chatdiv,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [convoMessages, setConvoMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [convMsg, setConvMsg] = useState({});\r\n  const [displayNote, setDisplayNote] = useState({\r\n    noteDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n  const [displayActivity, setDisplayActivity] = useState({\r\n    activityDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [displayAssigne, setDisplayAssigne] = useState({\r\n    assigneDivClicked: false,\r\n    myClass: \"\",\r\n  });\r\n\r\n  const [hideDiv, sethideDiv] = useState(false);\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchString);\r\n  }, [searchString, conversation.conversation_id]);\r\n\r\n  useEffect(() => {\r\n    getOpenlineMessages();\r\n    connect();\r\n    var activity = document.getElementById(\"activityId\");\r\n    var note = document.getElementById(\"noteId\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n      assigne.classList.remove(\"selected\");\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n      note.classList.remove(\"selected\");\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n      activity.classList.remove(\"selected\");\r\n    }\r\n  }, [conversation.conversation_id, newState]);\r\n\r\n  useEffect(() => {\r\n    if (convoMessages.length > 0) {\r\n      if (searchBy.length > 1) {\r\n        let count = 0;\r\n        convoMessages.map((value) => {\r\n          if (value.message.includes(\"</mark>\")) {\r\n            count += 1;\r\n          }\r\n          return count;\r\n        });\r\n        var highlightedMessage = document.getElementsByTagName(\"mark\")[\r\n          count - 1\r\n        ];\r\n        if (highlightedMessage) {\r\n          highlightedMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      } else {\r\n        var lastMessage = document.getElementsByClassName(\"openline_message\")[\r\n          document.getElementsByClassName(\"openline_message\").length - 1\r\n        ];\r\n        if (lastMessage) {\r\n          lastMessage.scrollIntoView(false, { block: \"end\" });\r\n        }\r\n      }\r\n    }\r\n  }, [convoMessages, searchString]);\r\n\r\n  useEffect(() => {\r\n    const messagevalue =\r\n      convMsg[conversation.conversation_id] !== undefined\r\n        ? convMsg[conversation.conversation_id]\r\n        : \"\";\r\n    setMessage(messagevalue);\r\n  }, [conversation.conversation_id]);\r\n\r\n  const getOpenlineMessages = async () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let convID = \"\";\r\n    if (conversation.conversation_id.includes(\"<mark\")) {\r\n      convID = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n    } else {\r\n      convID = conversation.conversation_id;\r\n    }\r\n    var data = {\r\n      conversation_id: convID,\r\n      user_id: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineConvoMessages/\", data, options)\r\n      .then(async (res) => {\r\n        setConvoMessages(res.data);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n    setConvMsg({ ...convMsg, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const keyDown = (e) => {\r\n    if ((e.altKey && e.keyCode === 13) || (e.ctrlKey && e.keyCode === 13)) {\r\n      var textarea = document.querySelector(\".input-control\");\r\n      textarea.value = textarea.value + \"\\r\\n\";\r\n    }\r\n    if (!e.altKey && !e.shiftKey && !e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onSendMessageClick();\r\n    }\r\n  };\r\n\r\n  const onSendMessageClick = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    if (message) {\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n\r\n      let convID = \"\";\r\n      if (conversation.conversation_id.includes(\"<mark\")) {\r\n        convID = conversation.conversation_id\r\n          ?.toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convID = conversation.conversation_id;\r\n      }\r\n\r\n      var data = {\r\n        user_id: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n        openline_id: conversation.openline_id,\r\n        conversation_id: convID,\r\n        message: message,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      // Sending request for first message through API\r\n      axios\r\n        .post(BASE_URL + \"receiveOpenlineMessage/\", data, options)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            if (res.data.status_id === 1 || res.data.status_id === 3) {\r\n              onChangeStatus(2, convID);\r\n            }\r\n            setSearchBy(\"\");\r\n            setCounter(res);\r\n            setMessage(\"\");\r\n            setConvMsg({ ...convMsg, [convID]: \"\" });\r\n            socket.send(JSON.stringify(res.data));\r\n          }\r\n        });\r\n    }\r\n\r\n    form.setFieldsValue({ chatArea: \"\" });\r\n  };\r\n\r\n  const connect = () => {\r\n    setConvoMessages((convoMessages) => {\r\n      let arrayOf = [];\r\n      // Condition to pass the message to particular conv\r\n      if (\r\n        convoMessages &&\r\n        convoMessages.length &&\r\n        newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n          convoMessages[0].conversation_id\r\n            ?.toString()\r\n            .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        const filteredDataArray = convoMessages.filter(\r\n          (item) =>\r\n            item.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n            newState.conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n        );\r\n        arrayOf = [...filteredDataArray, newState];\r\n      } else {\r\n        arrayOf = [...convoMessages];\r\n      }\r\n      return arrayOf;\r\n    });\r\n  };\r\n\r\n  const notesClicked = (e) => {\r\n    var notes = document.getElementById(\"noteId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayNote.myClass === \"\") {\r\n      notes.classList.add(\"selected\");\r\n      setDisplayNote({ myClass: \"rgt-panel\", noteDivClicked: true });\r\n    } else {\r\n      notes.classList.remove(\"selected\");\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const activityClicked = (e) => {\r\n    var activity = document.getElementById(\"activityId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass != \"\") {\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass === \"\") {\r\n      activity.classList.add(\"selected\");\r\n      setDisplayActivity({ myClass: \"rgt-panel\", activityDivClicked: true });\r\n    } else {\r\n      activity.classList.remove(\"selected\");\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    assigne.classList.remove(\"selected\");\r\n  };\r\n\r\n  const assigneClicked = (e) => {\r\n    var assigne = document.getElementById(\"assigneId\");\r\n    if (isMobile) {\r\n      sethideDiv(true);\r\n    }\r\n    if (displayNote.myClass != \"\") {\r\n      setDisplayNote({ myClass: \"\", noteDivClicked: false });\r\n    }\r\n    if (displayActivity.myClass != \"\") {\r\n      setDisplayActivity({ myClass: \"\", activityDivClicked: false });\r\n    }\r\n    if (displayAssigne.myClass === \"\") {\r\n      assigne.classList.add(\"selected\");\r\n      setDisplayAssigne({ myClass: \"rgt-panel\", assigneDivClicked: true });\r\n    } else {\r\n      assigne.classList.remove(\"selected\");\r\n      setDisplayAssigne({ myClass: \"\", assigneDivClicked: false });\r\n    }\r\n    var activity = document.getElementById(\"activityId\");\r\n    activity.classList.remove(\"selected\");\r\n    var notes = document.getElementById(\"noteId\");\r\n    notes.classList.remove(\"selected\");\r\n  };\r\n\r\n  const createMarkup = (html) => {\r\n    return { __html: html };\r\n  };\r\n\r\n  if (searchString) {\r\n    if (conversation.responder_conversation_name.includes(\"</mark>\")) {\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.responder_conversation_name = conversation.responder_conversation_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.openline_name.includes(\"</mark>\")) {\r\n      conversation.openline_name = conversation.openline_name\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.openline_name = conversation.openline_name.replace(\r\n        new RegExp(searchString, \"gi\"),\r\n        (match) =>\r\n          `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n      );\r\n    }\r\n    if (conversation.conversation_id?.toString().includes(\"</mark>\")) {\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(/(<([^>]+)>)/gi, \"\");\r\n      conversation.conversation_id = conversation.conversation_id\r\n        ?.toString()\r\n        .replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n    }\r\n    convoMessages.map((item) => {\r\n      if (item.message.includes(\"</mark>\")) {\r\n        item.message = item.message?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      } else {\r\n        item.message = item.message.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n        item.message = item.message.replace(\r\n          new RegExp(searchString, \"gi\"),\r\n          (match) =>\r\n            `<mark style=\"background: #2769AA; color: white;\">${match}</mark>`\r\n        );\r\n      }\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  } else {\r\n    conversation.responder_conversation_name = conversation.responder_conversation_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.openline_name = conversation.openline_name\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    conversation.conversation_id = conversation.conversation_id\r\n      ?.toString()\r\n      .replace(/(<([^>]+)>)/gi, \"\");\r\n    convoMessages.map((item) => {\r\n      item.message = item.message\r\n        ?.toString()\r\n        .replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return {\r\n        ...item,\r\n        message: item.message,\r\n      };\r\n    });\r\n  }\r\n  let messageLength = convoMessages.length - conversation.unread_messages_count;\r\n  return (\r\n    <Col\r\n      span={24}\r\n      lg={18}\r\n      className={\r\n        chatdiv ? \"chat-section d-lg-flex\" : \"chat-section d-lg-flex d-none\"\r\n      }\r\n      data-test=\"messages\"\r\n    >\r\n      <Col span={24} className=\"h-100\">\r\n        <Row className=\"top-filter-pan p-2 p-lg-4 d-flex align-items-center\">\r\n          <Col span={24} lg={10}>\r\n            <div className=\"\">\r\n              <h6\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.responder_conversation_name\r\n                )}\r\n              />\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"left\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.openline_name\r\n                )}\r\n              />\r\n              &nbsp;|&nbsp;\r\n              <p\r\n                style={{ margin: 0, display: \"inline\", float: \"center\" }}\r\n                dangerouslySetInnerHTML={createMarkup(\r\n                  conversation.conversation_id\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col span={24} lg={14}>\r\n            <div className=\"d-flex justify-content-end pt-3 pt-sm-1 pt-md-0\">\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{URGENCY_LEVEL}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={urgencyLevel}\r\n                  onChange={(event) =>\r\n                    onChangeUrgencyLevel(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_urgencyLevel.map((u) => (\r\n                    <Option value={u.id}>{u.name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"selection-panel pr-3\">\r\n                <label>{STATUS}</label>\r\n                <Select\r\n                  bordered={false}\r\n                  value={status}\r\n                  onChange={(event) =>\r\n                    onChangeStatus(\r\n                      event,\r\n                      conversation.conversation_id\r\n                        ?.toString()\r\n                        .replace(/(<([^>]+)>)/gi, \"\")\r\n                    )\r\n                  }\r\n                >\r\n                  {obj_status.map((s) =>\r\n                    (status === 2 || status === 3) && s.id === 1 ? (\r\n                      <Option value={s.id} disabled>\r\n                        {s.name}\r\n                      </Option>\r\n                    ) : (\r\n                      <Option value={s.id}>{s.name}</Option>\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </div>\r\n              <div className=\"icon-row d-flex align-items-center\">\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"noteId\"\r\n                    className=\"icon icon-create\"\r\n                    onClick={(e) => notesClicked(e)}\r\n                  ></span>\r\n                  {/* add selected class to activr icon */}\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"activityId\"\r\n                    className=\"icon icon-activity\"\r\n                    onClick={(e) => activityClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n                <Col span={24} md={8}>\r\n                  <span\r\n                    id=\"assigneId\"\r\n                    className=\"icon icon-assign\"\r\n                    onClick={(e) => assigneClicked(e)}\r\n                  ></span>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* filter end */}\r\n\r\n        <Row className=\"row-hgt\">\r\n          <div\r\n            className={\r\n              displayNote.noteDivClicked ||\r\n              displayActivity.activityDivClicked ||\r\n              displayAssigne.assigneDivClicked\r\n                ? hideDiv\r\n                  ? \"w-75 d-none\"\r\n                  : \"w-75\"\r\n                : \"w-100\"\r\n            }\r\n          >\r\n            {/* add class w-75 when click on right side Note, Activity and Assign icon and remove once panel closed*/}\r\n            <div className=\"msg_main\">\r\n              <Scrollbars autoHeightMax={450} universal={true}>\r\n                <Col span={24} className=\"msg-history p-4\">\r\n                  {convoMessages.map((msg, index) => (\r\n                    <div>\r\n                      {messageLength === index ? (\r\n                        <Divider plain>{LAST_READ}</Divider>\r\n                      ) : null}\r\n                      <div\r\n                        className={\r\n                          msg.is_responder_message\r\n                            ? \"outgoing-msg openline_message mb-3\"\r\n                            : \"incoming-msg openline_message mb-2\"\r\n                        }\r\n                      >\r\n                        <div\r\n                          className={\r\n                            msg.is_responder_message\r\n                              ? \"sent-msg\"\r\n                              : \"received-msg\"\r\n                          }\r\n                        >\r\n                          <p\r\n                            ellipsis\r\n                            // className=\"w-75 pr-2 mb-1\"\r\n                            dangerouslySetInnerHTML={createMarkup(msg.message)}\r\n                          />\r\n\r\n                          <span className=\"time-date\">\r\n                            {\" \"}\r\n                            {moment(msg.created_on).isSame(moment(), \"day\")\r\n                              ? moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"hh:mm A\")\r\n                              : moment(msg.created_on)\r\n                                  .utc()\r\n                                  .local()\r\n                                  .format(\"MM:DD:YY | hh:mm A \")}\r\n                            {msg.is_responder_message &&\r\n                              ` | ${msg.first_name} ${msg.last_name}`}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Scrollbars>\r\n            </div>\r\n            <Col\r\n              span={24}\r\n              className={\r\n                displayNote.noteDivClicked ||\r\n                displayActivity.activityDivClicked ||\r\n                displayAssigne.assigneDivClicked\r\n                  ? \"send-msg w-75\"\r\n                  : \"send-msg w-100\"\r\n              }\r\n            >\r\n              {/* add class w-75 when click on right side Note, Activity and Assign icon and toggle with w-100 once panel closed*/}\r\n              <div className=\"type-msg\">\r\n                <Form\r\n                  className=\"input-md w-100\"\r\n                  name=\"validate-other\"\r\n                  form={form}\r\n                >\r\n                  <TextArea\r\n                    className=\"input-control\"\r\n                    id=\"chatArea\"\r\n                    placeholder=\"Replying as Openline representative\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={message}\r\n                    onKeyDown={keyDown}\r\n                    maxLength={10000}\r\n                  />\r\n                </Form>\r\n                <span\r\n                  className=\"ml-3 send\"\r\n                  onClick={() => onSendMessageClick()}\r\n                >\r\n                  <img src={Send} alt=\"send message\" />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-25 d-flex justify-content-end width-sm-100\">\r\n            {/* Converstaion Notes */}\r\n            {displayNote.noteDivClicked ? (\r\n              <Note\r\n                class={displayNote.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                notesClicked={() => notesClicked()}\r\n              />\r\n            ) : null}\r\n            {displayActivity.activityDivClicked ? (\r\n              <Activity\r\n                class={displayActivity.myClass}\r\n                conversation_id={conversation.conversation_id\r\n                  ?.toString()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")}\r\n                activityClicked={() => activityClicked()}\r\n              />\r\n            ) : null}\r\n            {displayAssigne.assigneDivClicked ? (\r\n              <Assigned\r\n                class={displayAssigne.myClass}\r\n                openline_id={conversation.openline_id}\r\n                assigneClicked={() => assigneClicked()}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useRef } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { highlightText } from \"../../utils/HighlightTextOpenline\";\r\nimport { SEARCH } from \"../../headings\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Search } = Input;\r\nconst SearchOpenlineMessages = (props) => {\r\n  const searchBy = useRef(\"\");\r\n\r\n  // return the filtered conversations on search filter.\r\n  const onSearch = (e) => {\r\n    var str = e.trim();\r\n    searchBy.current = str;\r\n    const statusFil = props.statusFilterData.map((status) => {\r\n      status = status.value;\r\n      return status;\r\n    });\r\n    let allCheckedOnes = {\r\n      ...(statusFil.length > 0 && { status_id: statusFil }),\r\n      ...(props.urgencyFilterData.length > 0 && {\r\n        urgency_level_id: props.urgencyFilterData.map((ugc) => ugc.value),\r\n      }),\r\n      ...(props.openlineFilterData.length > 0 && {\r\n        openline_id: props.openlineFilterData.map((ht) => ht.value),\r\n      }),\r\n    };\r\n    const finalInput = {\r\n      ...allCheckedOnes,\r\n      openline_id:\r\n        allCheckedOnes.openline_id && allCheckedOnes.openline_id.toString(),\r\n      status_id:\r\n        allCheckedOnes.status_id && allCheckedOnes.status_id.toString(),\r\n      urgency_level_id:\r\n        allCheckedOnes.urgency_level_id &&\r\n        allCheckedOnes.urgency_level_id.toString(),\r\n    };\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n    const finalUrl =\r\n      str === \"\"\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(finalInput)\r\n        : baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(finalInput) +\r\n          \"&search=\" +\r\n          str.toString();\r\n    axios.get(finalUrl, options).then((res) => {\r\n      props.setSearchString(searchBy.current);\r\n      AppStorage.set(\"searchBy\", searchBy.current);\r\n      let filteredData = [];\r\n      if (searchBy.current.length > 0) {\r\n        // highlight the text found during search.\r\n        filteredData = highlightText(res.data, searchBy.current);\r\n      } else {\r\n        filteredData = res.data;\r\n      }\r\n      props.setConversations(filteredData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      name=\"search\"\r\n      id=\"search\"\r\n      placeholder={SEARCH}\r\n      onChange={(e) => onSearch(e.target.value)}\r\n      onSearch={onSearch}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\nexport default SearchOpenlineMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Typography, Badge, Tag } from \"antd\";\r\nimport FilterPopover from \"./FilterPopover\";\r\nimport moment from \"moment\";\r\nimport Messages from \"./Messages\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport SearchOpenlineMessages from \"./SearchOpenlineMessages\";\r\nimport {\r\n  CONVERSATIONS,\r\n  NO_CONVERSATION_SELECETD,\r\n  NO_MESSAGES_FOUND,\r\n  OPENLINE,\r\n  SELECT_CONVERSATION,\r\n  URGENCY,\r\n} from \"../../headings\";\r\nimport { STATUS } from \"../../labels\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessagesLeftSection = (props) => {\r\n  const onChangeUrgencyLevel = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      urgency_level_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesUrgencyLevel/ \", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setUrgencyLevel(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangeStatus = (event, conversation_id) => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      conversation_id: conversation_id,\r\n      updated_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n      status_id: event,\r\n    };\r\n\r\n    axios\r\n      .put(BASE_URL + \"openlineConvoMessagesStatus/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          props.getConversations();\r\n          props.setStatus(event);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mid-content p-0\">\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          lg={6}\r\n          className={\r\n            props.showdiv\r\n              ? \"message-section py-4 d-none\"\r\n              : \"message-section py-4\"\r\n          }\r\n        >\r\n          <Col span={24} className=\" d-flex justify-content-between px-3\">\r\n            <h6>\r\n              {CONVERSATIONS}{\" \"}\r\n              <Badge className=\"pl-1\" count={props.unreadCount} />\r\n            </h6>\r\n\r\n            <FilterPopover\r\n              searchString={props.searchString}\r\n              removeFilter={props.removeFilter}\r\n              loadFilteredConversations={props.loadFilteredConversations}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={24} className=\"mt-4 px-3 d-block\">\r\n            <Scrollbars\r\n              autoHeight\r\n              autoHeightMin={0}\r\n              autoHeightMax={150}\r\n              thumbMinSize={30}\r\n              universal={true}\r\n            >\r\n              <>\r\n                {props.urgencyFilterData.map((data, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      key={index}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyLevel\", data.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                    >\r\n                      {URGENCY}: <span>{data.label}</span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.openlineFilterData.map((openline, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\r\n                          \"urgencyOpenline\",\r\n                          openline.value\r\n                        )\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {OPENLINE}: <span>{openline.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n                {props.statusFilterData.map((status, index) => (\r\n                  <>\r\n                    <Tag\r\n                      visible={true}\r\n                      closable\r\n                      onClose={() =>\r\n                        props.removeFilterLevel(\"urgencyStatus\", status.value)\r\n                      }\r\n                      className=\"mb-2\"\r\n                      key={index}\r\n                    >\r\n                      {STATUS}: <span>{status.label} </span>\r\n                    </Tag>\r\n                  </>\r\n                ))}\r\n              </>\r\n            </Scrollbars>\r\n          </Col>\r\n          <Col span={24} className=\"search-box mt-3 px-3\">\r\n            <Form form={props.form}>\r\n              <Form.Item name=\"search\" id=\"search\">\r\n                <SearchOpenlineMessages\r\n                  statusFilterData={props.statusFilterData}\r\n                  urgencyFilterData={props.urgencyFilterData}\r\n                  openlineFilterData={props.openlineFilterData}\r\n                  setSearchString={props.setSearchString}\r\n                  setConversations={props.setConversations}\r\n                />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHeightMin={0}\r\n            autoHeightMax={450}\r\n            thumbMinSize={30}\r\n            universal={true}\r\n          >\r\n            <Col span={24} className=\" inbox-messages\">\r\n              {props.conversations.length > 0 ? (\r\n                props.conversations.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        props.conversation.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n                        item.conversation_id\r\n                          ?.toString()\r\n                          .replace(/(<([^>]+)>)/gi, \"\")\r\n                          ? \"msg-wrapper active\"\r\n                          : \"msg-wrapper\"\r\n                      }\r\n                      onClick={() => props.onConversationClick(item)}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <p\r\n                          ellipsis\r\n                          style={{ fontWeight: \"bold\" }}\r\n                          className=\"w-75 pr-2 mb-1\"\r\n                          dangerouslySetInnerHTML={props.createMarkup(\r\n                            item.responder_conversation_name\r\n                          )}\r\n                        />\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          {moment(item.created_on).isSame(moment(), \"day\")\r\n                            ? moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"hh:mm\")\r\n                            : moment(item.created_on)\r\n                                .utc()\r\n                                .local()\r\n                                .format(\"MM:DD:YY\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <Paragraph\r\n                          ellipsis\r\n                          className=\"font-weight-normal mb-1 sm para_wrapper\"\r\n                        >\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.openline_name\r\n                            )}\r\n                          />\r\n                          &nbsp; |&nbsp;\r\n                          <span\r\n                            className=\"ellipsisText\"\r\n                            dangerouslySetInnerHTML={props.createMarkup(\r\n                              item.conversation_id\r\n                            )}\r\n                          />\r\n                        </Paragraph>\r\n                        <span className=\"small\">\r\n                          {\" \"}\r\n                          <Badge count={item.unread_messages_count} />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"msg-wrapper\">{NO_MESSAGES_FOUND}</div>\r\n              )}\r\n            </Col>\r\n          </Scrollbars>\r\n        </Col>\r\n\r\n        {props.conversation ? (\r\n          <Messages\r\n            conversation={props.conversation}\r\n            urgencyLevel={props.urgencyLevel}\r\n            status={props.status}\r\n            onChangeUrgencyLevel={onChangeUrgencyLevel}\r\n            onChangeStatus={onChangeStatus}\r\n            searchString={props.searchString}\r\n            newState={props.newState}\r\n            socket={props.socket}\r\n            setCounter={props.setCounter}\r\n            data-test=\"Messages\"\r\n            chatdiv={props.chatdiv}\r\n          />\r\n        ) : (\r\n          <Col\r\n            span={24}\r\n            lg={18}\r\n            className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n          >\r\n            <Row className=\"justify-content-center my-3\">\r\n              <img\r\n                src={props.NoOpenlines}\r\n                alt=\"No Openlines Selected\"\r\n                style={{ opacity: \"0.8\" }}\r\n              />\r\n            </Row>\r\n            <h5>{NO_CONVERSATION_SELECETD}</h5>\r\n            <small>{SELECT_CONVERSATION}</small>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessagesLeftSection;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { NO_CONVERSATION_INITIATED_OPENLINE } from \"../../messages\";\r\n\r\nconst NoOpenlineMessages = (props) => (\r\n  <Col\r\n    span={24}\r\n    lg={18}\r\n    className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n  >\r\n    <Row className=\"justify-content-center my-3\">\r\n      <img\r\n        src={props.CreateOpenline}\r\n        alt=\"No Openlines Selected\"\r\n        style={{ opacity: \"0.8\" }}\r\n      />\r\n    </Row>\r\n    <h5>{NO_CONVERSATION_INITIATED_OPENLINE}</h5>\r\n    {/* <small>Select a openline to view</small> */}\r\n  </Col>\r\n);\r\n\r\nexport default NoOpenlineMessages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Layout, Row, Col, Form, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./openlineMessages.scss\";\r\nimport AmWebSidebar from \"./AmWebSidebar\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport NoOpenlines from \"../../assets/images/no-openlines.svg\";\r\nimport { BASE_URL, WEBSOCKET_OPENLINE_URL } from \"../../userconfig\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport CreateOpenline from \"../../assets/images/create-openline.svg\";\r\nimport { isMobile } from \"mobile-device-detect\";\r\nimport OpenlineMessagesLeftSection from \"./OpenlineMessagesLeftSection\";\r\nimport NoOpenlineMessages from \"./NoOpenlineMessages\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\nimport { OPENLINE_MESSAGES } from \"../../headings\";\r\nimport {\r\n  displayNewConvAtTop,\r\n  increaseOverallCount,\r\n  increaseOverallCountDuringFilters,\r\n  unSetFilters,\r\n  filterSocket,\r\n  setAppliedFilters,\r\n  createMarkup,\r\n} from \"../../utils/MessagesUtil\";\r\n\r\nconst { Content } = Layout;\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineMessages = (props) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [initialConv, setInitialConv] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const [urgencyFilterData, setUrgencyFilterData] = useState([]);\r\n  const [openlineFilterData, setOpenlineFilterData] = useState([]);\r\n  const [statusFilterData, setStatusFilterData] = useState([]);\r\n  const [removeFilter, setRemoveFilter] = useState({});\r\n  const [conversation, setConversation] = useState(\"\");\r\n  const [urgencyLevel, setUrgencyLevel] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [newState, setNewState] = useState({});\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [allConversations, setAllConversations] = useState([]);\r\n  const [showdiv, setShowDiv] = useState(false);\r\n  const [chatdiv, setChatDiv] = useState(false);\r\n  const webSocket = useRef(null);\r\n  const newInitiatedConv = useRef(false);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getConversations();\r\n    connect();\r\n    // remove filters when component loads.\r\n    unSetFilters(\"openline\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBy =\r\n      AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n    let allConversationIds = [];\r\n    let mergedConversations = [];\r\n    allConversations?.map(({ conversation_id }) => {\r\n      let convoID = \"\";\r\n      // check if the conversation ID has a highlighted search text.\r\n      if (conversation_id?.includes(\"</mark>\")) {\r\n        // remove the mark tag from the ID to get the plain raw value.\r\n        convoID = conversation_id?.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n      } else {\r\n        convoID = conversation_id;\r\n      }\r\n      allConversationIds.push(convoID);\r\n    });\r\n    if (!allConversationIds.includes(newState?.conversation_id)) {\r\n      mergedConversations = [...allConversations, newState];\r\n    } else {\r\n      mergedConversations = allConversations;\r\n    }\r\n    setAllConversations(mergedConversations);\r\n    // increase the overall unread count as per the new incoming conversations via socket in case of search & filters applied.\r\n    increaseOverallCountDuringFilters(\r\n      newState,\r\n      mergedConversations,\r\n      urgencyFilterData,\r\n      statusFilterData,\r\n      openlineFilterData,\r\n      searchString,\r\n      newInitiatedConv,\r\n      setUnreadCount,\r\n      setAllConversations,\r\n      conversation\r\n    );\r\n    if (searchBy?.length > 0 && newInitiatedConv.current) {\r\n      newInitiatedConv.current = false;\r\n    }\r\n  }, [newState, allConversations]);\r\n\r\n  const connect = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    webSocket.current = new WebSocket(\r\n      WEBSOCKET_OPENLINE_URL +\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_data.organization_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ) +\r\n        \"/\"\r\n    );\r\n    webSocket.current.onopen = () => {\r\n      setSocket(webSocket.current);\r\n      console.log(\"connected\");\r\n    };\r\n    webSocket.current.onmessage = (event) => {\r\n      console.log(\"WEBSOCKET Event Received!\", event);\r\n      let newConvo = JSON.parse(event.data);\r\n      setNewState(newConvo);\r\n      sendSocketMessage(newConvo);\r\n    };\r\n\r\n    webSocket.current.onclose = () => {\r\n      console.log(\"WEBSOCKET Closed!\");\r\n    };\r\n    webSocket.current.onerror = (error) => {\r\n      console.log(\"WEBSOCKET Error!\", error);\r\n    };\r\n  };\r\n\r\n  // return the updated conversations with new messages via socket feature.\r\n  const sendSocketMessage = (newConvo) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    // only show conversations which are assigned to the user.\r\n    if (\r\n      newConvo.accessed_users.includes(\r\n        parseInt(\r\n          CryptoJS.AES.decrypt(user.user_data.user_id, \"anonymoose\").toString(\r\n            CryptoJS.enc.Utf8\r\n          )\r\n        )\r\n      )\r\n    ) {\r\n      setConversations((conversations) => {\r\n        const selectedConv =\r\n          AppStorage.get(\"ConvID\") && AppStorage.get(\"ConvID\");\r\n        const urgencyState =\r\n          AppStorage.get(\"urgencyLevels\") &&\r\n          AppStorage.get(\"urgencyLevels\").split(\",\");\r\n        const statusState =\r\n          AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n        const openlineState =\r\n          AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n        const searchBy =\r\n          AppStorage.get(\"searchBy\") && AppStorage.get(\"searchBy\").toString();\r\n        // extracts IDs of all the present conversations for an AMWeb user.\r\n        let conversationIds = [];\r\n        conversations.map(({ conversation_id }) => {\r\n          let convoID = \"\";\r\n          // check if the conversation ID has a highlighted search text.\r\n          if (conversation_id.includes(\"</mark>\")) {\r\n            // remove the mark tag from the ID to get the plain raw value.\r\n            convoID = conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\");\r\n          } else {\r\n            convoID = conversation_id;\r\n          }\r\n          conversationIds.push(convoID);\r\n        });\r\n        let updatedNewConvo = newConvo;\r\n        let conversationsToDisplay = conversations;\r\n        let urgencyFilter = false;\r\n        let statusFilter = false;\r\n        let openlineFilter = false;\r\n        let searchFilter = false;\r\n        let hasConversationWithSearchedWord = [];\r\n        let convoWithSearchWord = [];\r\n        let totalFiltersApplied = {\r\n          urgency: \"\",\r\n          status: \"\",\r\n          openline: \"\",\r\n          searchBy: \"\",\r\n        };\r\n        // check if there is any filter applied on conversations.\r\n        if (urgencyState !== null && urgencyState?.length > 0) {\r\n          urgencyFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            urgency: urgencyState,\r\n          };\r\n        }\r\n        if (statusState !== null && statusState?.length > 0) {\r\n          statusFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            status: statusState,\r\n          };\r\n        }\r\n        if (openlineState !== null && openlineState?.length > 0) {\r\n          openlineFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            openline: openlineState,\r\n          };\r\n        }\r\n        if (searchBy !== null && searchBy?.length > 0) {\r\n          searchFilter = true;\r\n          totalFiltersApplied = {\r\n            ...totalFiltersApplied,\r\n            searchBy: searchBy,\r\n          };\r\n        }\r\n        // return those conversations which have matched filters or search.\r\n        if (urgencyFilter || statusFilter || openlineFilter || searchFilter) {\r\n          conversationsToDisplay = filterSocket(\r\n            totalFiltersApplied,\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            conversationIds,\r\n            \"openline\"\r\n          );\r\n        }\r\n\r\n        if (searchFilter) {\r\n          convoWithSearchWord = [\r\n            newConvo.conversation_id,\r\n            newConvo.responder_conversation_name,\r\n            newConvo.openline_name,\r\n            newConvo.message,\r\n          ];\r\n          hasConversationWithSearchedWord = convoWithSearchWord.map((value) =>\r\n            value.toLowerCase().includes(searchBy.toLowerCase())\r\n          );\r\n        }\r\n        if (\r\n          !searchFilter &&\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter\r\n        ) {\r\n          // check if a new conversation is initiated from a mobile App user which is not already present in AMWeb.\r\n          // if yes, append that new conversation to the existing list of conversations.\r\n          if (!conversationIds.includes(newConvo.conversation_id)) {\r\n            conversationsToDisplay = [...conversationsToDisplay, newConvo];\r\n            newInitiatedConv.current = true;\r\n          }\r\n        }\r\n        const updatedConversations = conversationsToDisplay.map((value) => {\r\n          // check if the message has been sent in a conversation via different user other than logged in user.\r\n          if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by !==\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ) &&\r\n            newConvo.conversation_id !== selectedConv\r\n          ) {\r\n            // check if the new coming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            // increase the unread message count of this new conversation.\r\n            updatedNewConvo = {\r\n              ...updatedNewConvo,\r\n              unread_messages_count: value.unread_messages_count + 1,\r\n            };\r\n            return updatedNewConvo;\r\n          }\r\n          // check if the message has been sent in a conversation via same user as logged in user.\r\n          else if (\r\n            value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n              newConvo.conversation_id &&\r\n            newConvo.created_by ===\r\n              parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_data.user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              )\r\n          ) {\r\n            // check if the new incoming conversation includes some searched text.\r\n            if (value.responder_conversation_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                responder_conversation_name: value.responder_conversation_name,\r\n              };\r\n            }\r\n            if (value.conversation_id.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                conversation_id: value.conversation_id,\r\n              };\r\n            }\r\n            if (value.openline_name.includes(\"</mark>\")) {\r\n              updatedNewConvo = {\r\n                ...updatedNewConvo,\r\n                openline: {\r\n                  name: value.openline_name,\r\n                },\r\n              };\r\n            }\r\n            return updatedNewConvo;\r\n          }\r\n          // return a list of the remaining conversations as it is other than the new coming conversation.\r\n          else {\r\n            return value;\r\n          }\r\n        });\r\n        // increment the overall unread count as per the new incoming conversations when there is not filter applied.\r\n        if (\r\n          !urgencyFilter &&\r\n          !statusFilter &&\r\n          !openlineFilter &&\r\n          !searchFilter\r\n        ) {\r\n          // increase the overall unread count as per the new incoming conversations via socket without any search & filters.\r\n          increaseOverallCount(\r\n            newConvo,\r\n            conversationsToDisplay,\r\n            selectedConv,\r\n            setUnreadCount\r\n          );\r\n        }\r\n        let finalConversations = [];\r\n        if (\r\n          urgencyFilter &&\r\n          !urgencyState.includes(newConvo.urgency_level_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          statusFilter &&\r\n          !statusState.includes(newConvo.status_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          openlineFilter &&\r\n          !openlineState.includes(newConvo.openline_id.toString())\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else if (\r\n          searchFilter &&\r\n          !hasConversationWithSearchedWord.includes(true)\r\n        ) {\r\n          finalConversations = updatedConversations;\r\n        } else {\r\n          // append the new incoming conversation at the top of the existing list of conversations.\r\n          finalConversations = displayNewConvAtTop(\r\n            updatedConversations,\r\n            newConvo,\r\n            updatedNewConvo\r\n          );\r\n        }\r\n        return finalConversations;\r\n      });\r\n    }\r\n  };\r\n\r\n  // return the filtered conversations according to the applied filters.\r\n  const loadFilteredConversations = (\r\n    data,\r\n    type,\r\n    selectedUrgency,\r\n    selectedStatus,\r\n    selectedOpenline\r\n  ) => {\r\n    // set state values of applied filters.\r\n    setAppliedFilters(\r\n      selectedUrgency,\r\n      selectedStatus,\r\n      selectedOpenline,\r\n      setUrgencyFilterData,\r\n      setStatusFilterData,\r\n      setOpenlineFilterData,\r\n      \"openline\"\r\n    );\r\n    setConversations(data);\r\n    if (type === \"reset\") {\r\n      form.setFieldsValue({ search: \"\" });\r\n    }\r\n  };\r\n\r\n  // remove the applied filter after clicking on its corresponding remove icon.\r\n  function removeFilterLevel(type, value) {\r\n    setRemoveFilter({ type, value });\r\n  }\r\n\r\n  const getConversations = () => {\r\n    const token = authHeader();\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const urgencyState =\r\n      AppStorage.get(\"urgencyLevels\") &&\r\n      AppStorage.get(\"urgencyLevels\").split(\",\");\r\n    const statusState =\r\n      AppStorage.get(\"status\") && AppStorage.get(\"status\").split(\",\");\r\n    const openlineState =\r\n      AppStorage.get(\"openline\") && AppStorage.get(\"openline\").split(\",\");\r\n    let allAppliedFilters = {\r\n      ...(urgencyState &&\r\n        urgencyState.length > 0 && { urgency_level_id: urgencyState }),\r\n      ...(statusState && statusState.length > 0 && { status_id: statusState }),\r\n      ...(openlineState &&\r\n        openlineState.length > 0 && { openline_id: openlineState }),\r\n    };\r\n    // const finalInput = {\r\n    //   ...allAppliedFilters,\r\n    //   openline_id:\r\n    //     allAppliedFilters.openline_id && allAppliedFilters.openline_id.toString(),\r\n    //   status_id:\r\n    //     allAppliedFilters.status_id && allAppliedFilters.status_id.toString(),\r\n    //   urgency_level_id:\r\n    //     allAppliedFilters.urgency_level_id &&\r\n    //     allAppliedFilters.urgency_level_id.toString(),\r\n    // };\r\n    const baseUrl =\r\n      BASE_URL +\r\n      \"openlineResponderConversation/?user_id=\" +\r\n      parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      );\r\n\r\n    const urlWithFilters =\r\n      searchString.length > 0 &&\r\n      urgencyFilterData.length === 0 &&\r\n      statusFilterData.length === 0 &&\r\n      openlineFilterData.length === 0\r\n        ? baseUrl + \"&search=\" + searchString\r\n        : searchString.length > 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl +\r\n          \"&filter=\" +\r\n          JSON.stringify(allAppliedFilters) +\r\n          \"&search=\" +\r\n          searchString\r\n        : searchString.length === 0 &&\r\n          (urgencyFilterData.length > 0 ||\r\n            statusFilterData.length > 0 ||\r\n            openlineFilterData.length > 0)\r\n        ? baseUrl + \"&filter=\" + JSON.stringify(allAppliedFilters)\r\n        : \"\";\r\n    if (user) {\r\n      if (urlWithFilters.length > 0) {\r\n        axios.get(urlWithFilters, options).then((res) => {\r\n          setConversations(res.data);\r\n        });\r\n      } else {\r\n        axios.get(baseUrl, options).then((res) => {\r\n          let disabledCount = 0;\r\n          setInitialConv(res.data);\r\n          setConversations(res.data);\r\n          setLoader(false);\r\n          setAllConversations(res.data);\r\n          const selectedUsers = res.data.reduce(\r\n            (accumulator, currentValue, index) => {\r\n              if (currentValue.unread_messages_count != 0) {\r\n                disabledCount++;\r\n              }\r\n            },\r\n            []\r\n          );\r\n          setUnreadCount(disabledCount);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    setShowDiv(false);\r\n    setChatDiv(false);\r\n  };\r\n\r\n  const onConversationClick = (conversation) => {\r\n    if (isMobile) {\r\n      setShowDiv(true);\r\n      setChatDiv(true);\r\n    }\r\n    let updatedData = {};\r\n    setConversations((conversations) => {\r\n      updatedData = conversations.map((value) =>\r\n        value.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.conversation_id.toString().replace(/(<([^>]+)>)/gi, \"\")\r\n          ? { ...conversation, unread_messages_count: 0 }\r\n          : value\r\n      );\r\n      return updatedData;\r\n    });\r\n    if (conversation.unread_messages_count > 0 && unreadCount > 0) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n    AppStorage.set(\"ConvID\", conversation.conversation_id);\r\n    setConversation(conversation);\r\n    setUrgencyLevel(conversation.urgency_level_id);\r\n    setStatus(conversation.status_id);\r\n  };\r\n\r\n  // set the value of an overall count on send message from any conversation.\r\n  const setCounter = (conversation) => {\r\n    let receivedConversation = conversation.data;\r\n    for (var item = 0; item < conversations.length - 1; item++) {\r\n      if (\r\n        conversations[item].conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\") ===\r\n        conversation.data.conversation_id\r\n          .toString()\r\n          .replace(/(<([^>]+)>)/gi, \"\")\r\n      ) {\r\n        receivedConversation = {\r\n          ...receivedConversation,\r\n          unread_messages_count: conversations[item].unread_messages_count,\r\n        };\r\n      }\r\n    }\r\n    if (\r\n      receivedConversation.unread_messages_count &&\r\n      receivedConversation.unread_messages_count > 0 &&\r\n      unreadCount > 0\r\n    ) {\r\n      const leftCount = unreadCount - 1;\r\n      setUnreadCount(leftCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amWEBUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"openlinemsg\">\r\n        <Layout>\r\n          <Layout>\r\n            <AmWebSidebar amWEBUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">\r\n                  <span>\r\n                    <LeftOutlined\r\n                      className=\"d-inline-flex d-lg-none pr-3 back-arrow \"\r\n                      title=\"Back to Messages\"\r\n                      onClick={() => onBackClick()}\r\n                    />\r\n                  </span>\r\n                  {OPENLINE_MESSAGES}\r\n                </h1>\r\n              </Row>\r\n              {loader ? (\r\n                <Col\r\n                  span={24}\r\n                  lg={18}\r\n                  className=\"chat-section no-selected bg-white justify-content-center align-items-center d-none d-lg-flex\"\r\n                >\r\n                  <Row className=\"justify-content-center my-3\">\r\n                    <Spin\r\n                      size=\"large\"\r\n                      tip=\"Loading...\"\r\n                      spinning={loader}\r\n                    ></Spin>\r\n                  </Row>\r\n                </Col>\r\n              ) : !loader && initialConv?.length > 0 ? (\r\n                <OpenlineMessagesLeftSection\r\n                  conversation={conversation}\r\n                  conversations={conversations}\r\n                  chatdiv={chatdiv}\r\n                  urgencyLevel={urgencyLevel}\r\n                  status={status}\r\n                  searchString={searchString}\r\n                  newState={newState}\r\n                  socket={socket}\r\n                  setCounter={setCounter}\r\n                  NoOpenlines={NoOpenlines}\r\n                  createMarkup={createMarkup}\r\n                  setSearchString={setSearchString}\r\n                  setConversations={setConversations}\r\n                  onConversationClick={onConversationClick}\r\n                  removeFilter={removeFilter}\r\n                  removeFilterLevel={removeFilterLevel}\r\n                  statusFilterData={statusFilterData}\r\n                  openlineFilterData={openlineFilterData}\r\n                  urgencyFilterData={urgencyFilterData}\r\n                  loadFilteredConversations={loadFilteredConversations}\r\n                  getConversations={getConversations}\r\n                  setStatus={setStatus}\r\n                  setUrgencyLevel={setUrgencyLevel}\r\n                  unreadCount={unreadCount}\r\n                  showdiv={showdiv}\r\n                />\r\n              ) : (\r\n                <NoOpenlineMessages CreateOpenline={CreateOpenline} />\r\n              )}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenlineMessages;\r\n","import React from \"react\";\r\nimport LoggedinHeader from \"./LoggedinHeader\";\r\nimport AmWebSidebar from \"../components/hotlineMessages/AmWebSidebar\";\r\nimport OrgSidebar from \"./OrgSidebar\";\r\nimport AccSidebar from \"../components/manageOrg/AccSidebar\";\r\nimport { Row, Layout } from \"antd\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\nimport { PERMISSION_DENIED } from \"../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { Content } = Layout;\r\nclass PermissionDenied extends React.Component {\r\n  render() {\r\n    const type = AppStorage.get(\"userType\");\r\n    const userType = type\r\n      ? CryptoJS.AES.decrypt(type, \"anonymoose\").toString(CryptoJS.enc.Utf8)\r\n      : \"\";\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          {userType === \"AM WEB\" ? (\r\n            <LoggedinHeader amWEBUser />\r\n          ) : userType === \"AM CC\" ? (\r\n            <LoggedinHeader amCCUser />\r\n          ) : userType === \"Org CC\" ? (\r\n            <LoggedinHeader amORGUser />\r\n          ) : null}\r\n        </Row>\r\n        <Row className=\"content-center\">\r\n          <Layout>\r\n            <Layout>\r\n              {userType === \"AM WEB\" ? (\r\n                <AmWebSidebar data={this.props} />\r\n              ) : userType === \"Org CC\" ? (\r\n                <OrgSidebar data={this.props} />\r\n              ) : userType === \"AM CC\" ? (\r\n                <AccSidebar />\r\n              ) : null}\r\n\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\" style={{ justifyContent: \"center\" }}>\r\n                  <h1 className=\"mb-0\">{PERMISSION_DENIED}</h1>\r\n                </Row>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionDenied;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, Input } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport \"../modal/modal.scss\";\r\nimport {\r\n  CANCEL_MODAL,\r\n  RESET_INVITE,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_FOR,\r\n  RESET_PASSWORD_LINK,\r\n} from \"../../headings\";\r\nimport { CONFIRM_PASSWORD, NEW_PASSWORD } from \"../../labels\";\r\nimport {ENTER_NEW_PASSWORD, CONFIRM_YOUR_PASSWORD} from \"../../errors\";\r\n\r\nclass ResetPwdModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordOk();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.handleResetPasswordCancel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"link\" className=\"link pl-0 mt-4\" onClick={this.showModal}>\r\n          <span>{RESET_PASSWORD_LINK}</span>\r\n        </Button>\r\n        <Modal\r\n          title={RESET_PASSWORD}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={RESET_INVITE}\r\n          cancelText={CANCEL_MODAL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                {RESET_PASSWORD_FOR}{\" \"}\r\n                <span className=\"font-weight-md\">{this.props.user}</span>\r\n              </div>\r\n              <FloatLabel label={NEW_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"newpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {ENTER_NEW_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"newpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={CONFIRM_PASSWORD} value=\"\">\r\n                <Form.Item\r\n                  name=\"confirmpwd\"\r\n                  className=\"pwd\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: {CONFIRM_YOUR_PASSWORD},\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"confirmpwd\"\r\n                    className=\"required\"\r\n                    value=\"\"\r\n                  />\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPwdModal;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n  Spin,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport ResetPwdModal from \"../modal/ResetPwdModal\";\r\nimport { CANCEL_MODAL, EDIT_SEEDED_USER, UPDATE_MODAL } from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  REQUIRED_MESSAGE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  DATE,\r\n  EMAIL,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst EditSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleEditOk}\r\n      onCancel={props.handleEditCancel}\r\n      centered\r\n      width={900}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={UPDATE_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >\r\n      <Spin spinning={props.loader} size=\"large\">\r\n        <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n          <div>{EDIT_SEEDED_USER}</div>\r\n          <br />\r\n          <div className=\"avatar-wrapper pt-2 pb-4\">\r\n            <Avatar>{props.seededUserName.charAt(0)}</Avatar>\r\n            <span className=\"md-name\">{props.seededUserName}</span>\r\n          </div>\r\n          {props.error && (\r\n            <Form.Item>\r\n              <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n            </Form.Item>\r\n          )}\r\n          <Col span={24}>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={FIRST_NAME}\r\n                  value={props.seededUserDetails.firstName}\r\n                >\r\n                  <Form.Item name=\"firstName\" className=\"required\">\r\n                    <Input\r\n                      id=\"firstName\"\r\n                      className=\"input-control\"\r\n                      defaultValue={props.seededUserDetails.firstName}\r\n                      htmlFor=\"firstName\"\r\n                      value={props.seededUserDetails.firstName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.fNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={LAST_NAME}\r\n                  value={props.seededUserDetails.lastName}\r\n                >\r\n                  <Form.Item name=\"lastName\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"lastName\"\r\n                      htmlFor=\"lastName\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.lastName}\r\n                      value={props.seededUserDetails.lastName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.lNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={EMAIL} value={props.seededUserDetails.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"email\"\r\n                      htmlFor=\"email\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.email}\r\n                      value={props.seededUserDetails.email}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      onBlur={(e) => props.validateEmailAddress(e)}\r\n                      autoComplete=\"off\"\r\n                      disabled\r\n                    />\r\n                    {props.emailValidationError && (\r\n                      <Alert\r\n                        message={VALID_EMAIL}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={DATE} value=\"date2\">\r\n                  <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                    <RangePicker\r\n                      className=\"new w-100\"\r\n                      name=\"date2\"\r\n                      className=\"required\"\r\n                      value={props.seededUserDetails.date2}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                <FloatLabel\r\n                  label={MOBILE}\r\n                  value={props.seededUserDetails.mobile}\r\n                >\r\n                  <Form.Item name=\"mobile\" className=\"required\">\r\n                    <PhoneInput\r\n                      country={\"us\"}\r\n                      id=\"mobile\"\r\n                      htmlFor=\"mobile\"\r\n                      defaultValue={props.seededUserDetails.mobile}\r\n                      value={props.seededUserDetails.mobile}\r\n                      onChange={props.handleMobile}\r\n                      onBlur={(e) => props.validateMobile(e)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.mobileValidationError && (\r\n                      <Alert\r\n                        message={VALID_MOBILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={STATUS}\r\n                  value={props.seededUserDetails.status2}\r\n                >\r\n                  <Form.Item className=\"required\" name=\"status2\">\r\n                    <>\r\n                      <Select\r\n                        className=\"input-control w-100 w-lg-50\"\r\n                        value={props.seededUserDetails.status2}\r\n                        htmlFor=\"status2\"\r\n                        className=\"required\"\r\n                        onSelect={(value) =>\r\n                          props.handleSeededUserOnSelect(value, \"status2\")\r\n                        }\r\n                      >\r\n                        <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                        <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                      </Select>\r\n                    </>\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n      <ResetPwdModal\r\n        user={props.seededUserDetails.firstName}\r\n        handleResetPasswordOk={props.handleResetPasswordOk}\r\n        handleResetPasswordCancel={props.handleResetPasswordCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSeededUser;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Alert,\r\n  DatePicker,\r\n  Spin,\r\n} from \"antd\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { ADD_SEEDED_USER, CANCEL_MODAL, ADD_TEXT_MODAL } from \"../../headings\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  MAX_CHAR_LIMIT,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  EMAIL,\r\n  DATE,\r\n  MOBILE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewSeededUser = (props) => {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      onOk={props.handleAddSeededUser}\r\n      onCancel={props.handleAddSeededUserCancel}\r\n      centered\r\n      width={1200}\r\n      okButtonProps={{\r\n        children: \"Custom OK\",\r\n      }}\r\n      cancelButtonProps={{\r\n        children: \"Custom cancel\",\r\n      }}\r\n      okText={ADD_TEXT_MODAL}\r\n      cancelText={CANCEL_MODAL}\r\n    >{console.log('props.loader: ', props.loader)}\r\n      <Spin spinning={props.loader} size=\"large\">\r\n        <Form className=\"input-md floating-label w-100\" name=\"validate_other\">\r\n          {props.error && (\r\n            <Form.Item>\r\n              <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n            </Form.Item>\r\n          )}\r\n          <Col span={24}>\r\n            <div>{ADD_SEEDED_USER}</div>\r\n            <br />\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={FIRST_NAME}\r\n                  value={props.seededUserDetails.firstName}\r\n                >\r\n                  <Form.Item name=\"firstName\" className=\"required\">\r\n                    <Input\r\n                      id=\"firstName\"\r\n                      className=\"input-control\"\r\n                      defaultValue={props.seededUserDetails.firstName}\r\n                      htmlFor=\"firstName\"\r\n                      value={props.seededUserDetails.firstName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.fNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={LAST_NAME}\r\n                  value={props.seededUserDetails.lastName}\r\n                >\r\n                  <Form.Item name=\"lastName\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"lastName\"\r\n                      htmlFor=\"lastName\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.lastName}\r\n                      value={props.seededUserDetails.lastName}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      autoComplete=\"off\"\r\n                      maxLength={50}\r\n                    />\r\n                  </Form.Item>\r\n                  {props.lNameCount && (\r\n                    <Form.Item>\r\n                      <Alert message={MAX_CHAR_LIMIT} type=\"error\"></Alert>\r\n                    </Form.Item>\r\n                  )}\r\n                </FloatLabel>\r\n              </Col>\r\n              {/* <Col span={24} md={8} className=\"gutter-row\">\r\n              <FloatLabel\r\n                label=\"Temporary Password\"\r\n                value={props.seededUserDetails.password}\r\n              >\r\n                <Form.Item name=\"password\" className=\"pwd required\">\r\n                  <Input.Password\r\n                    className=\"input-control\"\r\n                    htmlFor=\"password\"\r\n                    className=\"required\"\r\n                    id=\"password\"\r\n                    defaultValue={props.seededUserDetails.password}\r\n                    value={props.seededUserDetails.password}\r\n                    onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                    onBlur={(e) => props.validatePassword(e)}\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  {props.passwordValidationError && (\r\n                    <Alert\r\n                      message=\"Please enter a valid password.\r\n                      It should be atlast 8 characters long with atleast 1 each of Capital letter, Small letter, Numeric and Special character.\"\r\n                      type=\"error\"\r\n                      showIcon\r\n                    ></Alert>\r\n                  )}\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col> */}\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={EMAIL} value={props.seededUserDetails.email}>\r\n                  <Form.Item name=\"email\" className=\"required\">\r\n                    <Input\r\n                      className=\"input-control\"\r\n                      id=\"email\"\r\n                      htmlFor=\"email\"\r\n                      className=\"required\"\r\n                      defaultValue={props.seededUserDetails.email}\r\n                      value={props.seededUserDetails.email}\r\n                      onChange={(e) => props.handleSeededUserOnChange(e)}\r\n                      onBlur={(e) => props.validateEmailAddress(e)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.emailValidationError && (\r\n                      <Alert\r\n                        message={VALID_EMAIL}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel label={DATE} value=\"date2\">\r\n                  <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                    <RangePicker\r\n                      className=\"new w-100\"\r\n                      name=\"date2\"\r\n                      className=\"required\"\r\n                      value={props.seededUserDetails.date2}\r\n                      onChange={(date) =>\r\n                        props.handleSeededUserDatePickerChange(date, \"date2\")\r\n                      }\r\n                      disabledDate={props.disabledDate}\r\n                    />\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row phone-field\">\r\n                <FloatLabel\r\n                  label={MOBILE}\r\n                  value={props.seededUserDetails.mobile}\r\n                >\r\n                  <Form.Item name=\"mobile\" className=\"required\">\r\n                    <PhoneInput\r\n                      country={\"us\"}\r\n                      id=\"mobile\"\r\n                      htmlFor=\"mobile\"\r\n                      value={props.seededUserDetails.mobile}\r\n                      onChange={props.handleMobile}\r\n                      onBlur={props.validateMobile}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {props.mobileValidationError && (\r\n                      <Alert\r\n                        message={VALID_MOBILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n              <Col span={24} md={8} className=\"gutter-row\">\r\n                <FloatLabel\r\n                  label={STATUS}\r\n                  value={props.seededUserDetails.status2}\r\n                >\r\n                  <Form.Item className=\"required\" name=\"status2\">\r\n                    <>\r\n                      <Select\r\n                        className=\"input-control w-100 w-lg-50\"\r\n                        value={props.seededUserDetails.status2}\r\n                        htmlFor=\"status2\"\r\n                        className=\"required\"\r\n                        onSelect={(value) =>\r\n                          props.handleSeededUserOnSelect(value, \"status2\")\r\n                        }\r\n                      >\r\n                        <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                        <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                      </Select>\r\n                    </>\r\n                  </Form.Item>\r\n                </FloatLabel>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewSeededUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  ORGANIZATION_DETAILS,\r\n  EDIT_DETAILS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n  SEEDED_USERS_DETAILS,\r\n} from \"../../headings\";\r\nimport { DATE, ORGANIZATION_ID, ORGANIZATION_NAME, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport {\r\n  ADD_SEEDED_USER_NOTIFICATION,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART1,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n  DELETE_SEEDED_USER_NOTIFICATION,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrgDetails = (props) => {\r\n  const history = useHistory();\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [form] = Form.useForm();\r\n  const orgID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setSeededUsers(appendedUsers);\r\n      setLoader(false);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onFinish = (values) => {};\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            date2: [\r\n              moment(value.date2[0], \"YYYY-MM-DD\"),\r\n              moment(value.date2[1], \"YYYY-MM-DD\"),\r\n            ],\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const editOrg = () => {\r\n    const path = `/amcc/editorg/${orgID}`;\r\n    history.push(path, \"viaOrgDetails\");\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description:\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART1 +\r\n          seededUserName +\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n        placement,\r\n      });\r\n      setLoader(false);\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      // password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        setLoader(true);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              seededUserDetails.firstName + ADD_SEEDED_USER_NOTIFICATION,\r\n            placement,\r\n          });\r\n          setLoader(false);\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: userName + DELETE_SEEDED_USER_NOTIFICATION,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{ORGANIZATION_DETAILS}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"d-flex justify-content-between align-items-center\"\r\n                      >\r\n                        <h6 className=\"py-3 mb-0\">{ORGANIZATION_DETAILS}</h6>\r\n                        <div>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3\"\r\n                            onClick={() => editOrg()}\r\n                          >\r\n                            <span className=\"icon icon-pencil\" />\r\n                            <span className=\"pl-2 d-none d-block-md\">\r\n                              {EDIT_DETAILS}\r\n                            </span>\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                        <Avatar>{organizationDetails.name.charAt(0)}</Avatar>\r\n                        <span className=\"md-name\">\r\n                          {organizationDetails.name}\r\n                        </span>\r\n                      </div>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                        onFinish={onFinish}\r\n                        form={form}\r\n                      >\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_NAME}\r\n                                value={organizationDetails.name}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    htmlFor=\"organization name\"\r\n                                    defaultValue={organizationDetails.name}\r\n                                    value={organizationDetails.name}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_ID}\r\n                                value={organizationDetails.identifier}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"identifier\"\r\n                                    name=\"identifier\"\r\n                                    htmlFor=\"organization name\"\r\n                                    defaultValue={\r\n                                      organizationDetails.identifier\r\n                                    }\r\n                                    value={organizationDetails.identifier}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={organizationDetails.status}\r\n                              >\r\n                                <Form.Item className=\"required\" name=\"status1\">\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-100\"\r\n                                      value={organizationDetails.status}\r\n                                      htmlFor=\"status\"\r\n                                      onSelect={(value) =>\r\n                                        handleOrganizationOnSelect(\r\n                                          value,\r\n                                          \"status\"\r\n                                        )\r\n                                      }\r\n                                      disabled\r\n                                    >\r\n                                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                      <Option value=\"2\">\r\n                                        {STATUS_INACTIVE}\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date1\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date1\"\r\n                                    value={organizationDetails.date1}\r\n                                    disabled\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <Row className=\"w-100\">\r\n                        <Col span={24} md={12}>\r\n                          <h6 className=\"py-3 mb-0\">{SEEDED_USERS_DETAILS}</h6>\r\n                        </Col>\r\n                        <Col\r\n                          span={24}\r\n                          md={12}\r\n                          className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                        >\r\n                          <Button\r\n                            className=\"mr-4\"\r\n                            type=\"secondary\"\r\n                            onClick={() => addSeededUser()}\r\n                          >\r\n                            {ADD_SEEDED_USER}\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        {seededUsers.length > 0 ? (\r\n                          <AssignedUsers\r\n                            seededUsers={seededUsers}\r\n                            orgID={parseInt(orgID)}\r\n                            statusOnClicked={statusOnClicked}\r\n                            handleEditUser={handleEditSeededUser}\r\n                            handleDelete={handleDeleteSeededUser}\r\n                            addSeededUser={addSeededUser}\r\n                            viaEdit\r\n                            orgDetails\r\n                            seededUser\r\n                          />\r\n                        ) : (\r\n                          <Col span={24} lg={18}>\r\n                            <Row className=\"justify-content-center\">\r\n                              {NO_SEEDED_USERS}\r\n                            </Row>\r\n                          </Col>\r\n                        )}\r\n                        {editVisible ? (\r\n                          <EditSeededUsers\r\n                            error={modalError}\r\n                            handleEditOk={handleEditOk}\r\n                            handleEditCancel={handleEditCancel}\r\n                            seededUsers={seededUsers}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                            seededUserName={seededUserName}\r\n                            seededUserDetails={seededUserDetails}\r\n                            disabledDate={disabledDate}\r\n                            handleSeededUserOnChange={handleSeededUserOnChange}\r\n                            handleSeededUserDatePickerChange={\r\n                              handleSeededUserDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                            validateEmailAddress={validateEmailAddress}\r\n                            emailValidationError={emailValidationError}\r\n                            validateMobile={validateMobile}\r\n                            mobileValidationError={mobileValidationError}\r\n                            handleResetPasswordOk={handleResetPasswordOk}\r\n                            handleResetPasswordCancel={\r\n                              handleResetPasswordCancel\r\n                            }\r\n                            loader={loader}\r\n                          />\r\n                        ) : showAddSeededUser ? (\r\n                          <AddNewSeededUser\r\n                            error={modalError}\r\n                            handleAddSeededUser={handleAddSeededUser}\r\n                            handleAddSeededUserCancel={\r\n                              handleAddSeededUserCancel\r\n                            }\r\n                            seededUsers={seededUsers}\r\n                            fNameCount={fNameCount}\r\n                            lNameCount={lNameCount}\r\n                            seededUserDetails={seededUserDetails}\r\n                            disabledDate={disabledDate}\r\n                            handleSeededUserOnChange={handleSeededUserOnChange}\r\n                            handleSeededUserDatePickerChange={\r\n                              handleSeededUserDatePickerChange\r\n                            }\r\n                            handleMobile={handleMobile}\r\n                            handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                            validateEmailAddress={validateEmailAddress}\r\n                            emailValidationError={emailValidationError}\r\n                            validateMobile={validateMobile}\r\n                            mobileValidationError={mobileValidationError}\r\n                            validatePassword={validatePassword}\r\n                            passwordValidationError={passwordValidationError}\r\n                            loader={loader}\r\n                          />\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrgDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport EditSeededUsers from \"./EditSeededUsers\";\r\nimport AddNewSeededUser from \"./AddNewSeededUser\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\nimport AssignedUsers from \"../manageOrg/AssignedUsers\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport {\r\n  DELETE,\r\n  EDIT_ORGANIZATION,\r\n  UPDATE,\r\n  CANCEL,\r\n  EDIT_SEEDED_USERS,\r\n  ADD_SEEDED_USER,\r\n  NO_SEEDED_USERS,\r\n} from \"../../headings\";\r\nimport {\r\n  MAX_CHAR_LIMIT,\r\n  ORGANIZATION_ID_ALREADY_EXISTS,\r\n  ORGANIZATION_NAME_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n} from \"../../errors\";\r\nimport { DATE, ORGANIZATION_ID, STATUS } from \"../../labels\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport {\r\n  ADD_SEEDED_USER_NOTIFICATION,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART1,\r\n  EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n  DELETE_SEEDED_USER_NOTIFICATION,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = (props) => {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const orgID = props.computedMatch?.params.id;\r\n  const [error, showError] = useState(false);\r\n  const [modalError, showModalError] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n  const [passwordValidationError, showPasswordValidationError] = useState(\r\n    false\r\n  );\r\n  const [orgNameAlreadyExists, setOrgNameAlreadyExists] = useState(\"\");\r\n  const [orgIDAlreadyExists, setOrgIDAlreadyExists] = useState(\"\");\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n  const [organizationIdentifier, setOrganizationIdentifier] = useState(\"\");\r\n  const [seededUserName, setSeededUserName] = useState(\"\");\r\n  const [seededUserEmail, setSeededUserEmail] = useState(\"\");\r\n  const [organizationDetails, setOrganizationDetails] = useState({\r\n    name: \"\",\r\n    identifier: \"\",\r\n    org_id: \"\",\r\n    status: \"\",\r\n    date1: \"\",\r\n  });\r\n  const [seededUserDetails, setSeededUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status2: \"\",\r\n    email: \"\",\r\n    //  password: \"\",\r\n    date2: \"\",\r\n    mobile: \"\",\r\n  });\r\n  const [seededUsers, setSeededUsers] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [showAddSeededUser, setShowAddSeededUser] = useState(false);\r\n  const [deleteClick, setDeleteClick] = useState(false);\r\n  const [orgNameCount, setOrgNameCount] = useState(false);\r\n  const [orgIdCount, setOrgIDCount] = useState(false);\r\n  const [fNameCount, setFNameCount] = useState(false);\r\n  const [lNameCount, setLNameCount] = useState(false);\r\n  const [orgStatus, setOrgStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getOrganization/${orgID}/`, options).then((res) => {\r\n      const data = res?.data;\r\n      setOrganizationDetails({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n        status: data.organization.status_id.toString(),\r\n        date1: [\r\n          moment(data.organization.start_date, \"YYYY-MM-DD\"),\r\n          moment(data.organization.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n      });\r\n      setOrganizationName(data.organization.name);\r\n      setOrganizationIdentifier(data.organization.identifier);\r\n      setOrgStatus(data.organization.status_id.toString());\r\n      form.setFieldsValue({\r\n        name: data.organization.name,\r\n        identifier: data.organization.identifier,\r\n      });\r\n      let appendedUsers = [];\r\n      data.seeded_user.map((value) => {\r\n        if (!value.soft_delete) {\r\n          appendedUsers = [\r\n            ...appendedUsers,\r\n            {\r\n              firstName: value.first_name,\r\n              lastName: value.last_name,\r\n              status2: value.status_id.toString(),\r\n              email: value.email,\r\n              date2: [\r\n                moment(value.start_date, \"YYYY-MM-DD\"),\r\n                moment(value.end_date, \"YYYY-MM-DD\"),\r\n              ],\r\n              mobile: value.mobile_number,\r\n            },\r\n          ];\r\n        }\r\n      });\r\n      setLoader(false);\r\n      setSeededUsers(appendedUsers);\r\n    });\r\n  }, [statusClicked]);\r\n\r\n  const onDelete = () => {\r\n    setDeleteClick(true);\r\n  };\r\n\r\n  const CheckOrganizationName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationName) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganization/\",\r\n          { organization_name: organizationDetails.name },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgNameAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgNameAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const CheckOrganizationID = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== organizationIdentifier) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOrganizationID/\",\r\n          { orgId: organizationDetails.identifier },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setOrgIDAlreadyExists(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setOrgIDAlreadyExists(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditVisible(false);\r\n  };\r\n\r\n  const handleAddSeededUserCancel = () => {\r\n    setShowAddSeededUser(false);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (!emailValidationError && !mobileValidationError) {\r\n        editUser();\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const editUser = () => {\r\n    seededUsers.forEach((user) => {\r\n      if (\r\n        JSON.stringify(user) !== JSON.stringify(seededUserDetails) &&\r\n        user.email === seededUserDetails.email\r\n      ) {\r\n        let index = seededUsers.indexOf(user);\r\n        let users = JSON.parse(JSON.stringify(seededUsers));\r\n        users[index] = seededUserDetails;\r\n        const finalUsers = [];\r\n        users.map((value) => {\r\n          value = {\r\n            ...value,\r\n            date2: [\r\n              moment(value.date2[0], \"YYYY-MM-DD\"),\r\n              moment(value.date2[1], \"YYYY-MM-DD\"),\r\n            ],\r\n          };\r\n          finalUsers.push(value);\r\n        });\r\n        setSeededUsers(finalUsers);\r\n      }\r\n    });\r\n    onSeededUserEditSubmit();\r\n  };\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  const handleOrganizationOnChange = (e) => {\r\n    if (e.target.id === \"identifier\" && e.target.value.length === 20) {\r\n      setOrgIDCount(true);\r\n    } else if (e.target.id === \"name\" && e.target.value.length === 80) {\r\n      setOrgNameCount(true);\r\n    } else {\r\n      setOrgNameCount(false);\r\n      setOrgIDCount(false);\r\n    }\r\n    setOrganizationDetails({\r\n      ...organizationDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrganizationOnSelect = (value, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: value });\r\n  };\r\n\r\n  const handleOrganizationDatePickerChange = (date, name) => {\r\n    setOrganizationDetails({ ...organizationDetails, [name]: date });\r\n  };\r\n\r\n  const handleSeededUserOnChange = (e) => {\r\n    if (e.target.id === \"firstName\" && e.target.value.length === 50) {\r\n      setFNameCount(true);\r\n    } else if (e.target.id === \"lastName\" && e.target.value.length === 50) {\r\n      setLNameCount(true);\r\n    } else {\r\n      setFNameCount(false);\r\n      setLNameCount(false);\r\n    }\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setSeededUserDetails({\r\n      ...seededUserDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleSeededUserOnSelect = (value, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: value });\r\n  };\r\n\r\n  const handleSeededUserDatePickerChange = (date, name) => {\r\n    setSeededUserDetails({ ...seededUserDetails, [name]: date });\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (seededUserDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (e) => {\r\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/;\r\n    if (!re.test(e.target.value)) {\r\n      showPasswordValidationError(true);\r\n    } else {\r\n      showPasswordValidationError(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setDeleteClick(false);\r\n  };\r\n\r\n  const handleDeleteOrganization = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .delete(BASE_URL + `deleteOrganization/${orgID}/`, options)\r\n      .then(() => {\r\n        window.location = \"/amcc/manageorganizations\";\r\n      });\r\n  };\r\n\r\n  const handleResetPasswordOk = () => {};\r\n\r\n  const handleResetPasswordCancel = () => {};\r\n\r\n  const onOrgEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      organization_id: orgID,\r\n      name: organizationDetails.name,\r\n      identifier: organizationDetails.identifier,\r\n      start_date: organizationDetails.date1[0]\r\n        ? moment(organizationDetails.date1[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: organizationDetails.date1[1]\r\n        ? moment(organizationDetails.date1[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(organizationDetails.status),\r\n    };\r\n    const endDate = moment(organizationDetails.date1[1]).format(\"MM-DD-YYYY\");\r\n    if (organizationDetails.status !== orgStatus) {\r\n      if (new Date() < new Date(endDate)) {\r\n        if (organizationDetails.name && organizationDetails.identifier) {\r\n          if (\r\n            (orgNameAlreadyExists === \"status: false\" ||\r\n              organizationDetails.name === organizationName) &&\r\n            (orgIDAlreadyExists === \"status: false\" ||\r\n              organizationDetails.identifier === organizationIdentifier)\r\n          ) {\r\n            showError(false);\r\n            axios\r\n              .put(BASE_URL + \"saveOrganization/\", data, options)\r\n              .then(() => {\r\n                window.location = \"/amcc/manageorganizations\";\r\n              });\r\n          }\r\n        } else {\r\n          showError(true);\r\n        }\r\n      } else {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: STATUS_NOT_CHANGED,\r\n          placement,\r\n        });\r\n      }\r\n    } else {\r\n      if (organizationDetails.name && organizationDetails.identifier) {\r\n        showError(false);\r\n        setLoader(true);\r\n        axios.put(BASE_URL + \"saveOrganization/\", data, options).then(() => {\r\n          window.location = \"/amcc/manageorganizations\";\r\n        });\r\n      } else {\r\n        showError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSeededUserEditSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const data = {\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      email: seededUserEmail,\r\n      //email: seededUserDetails.email,\r\n      mobile_number: seededUserDetails.mobile,\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"seededUser/\", data, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description:\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART1 +\r\n          seededUserName +\r\n          EDIT_SEEDED_USER_NOTIFICATION_PART2,\r\n        placement,\r\n      });\r\n      setLoader(false);\r\n      setEditVisible(false);\r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    if (props.location.state) {\r\n      const path = `/amcc/orgdetails/${orgID}`;\r\n      history.push(path);\r\n    } else {\r\n      window.location = \"/amcc/manageorganizations\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const handleEditSeededUser = (email) => {\r\n    setEditVisible(true);\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setEmailValidationError(false);\r\n    setMobileValidationError(false);\r\n    let editableUser = {};\r\n    seededUsers.forEach((seededUser) => {\r\n      if (seededUser.email === email) {\r\n        editableUser = seededUser;\r\n      }\r\n    });\r\n    setSeededUserDetails(editableUser);\r\n    setSeededUserName(editableUser.firstName);\r\n    setSeededUserEmail(editableUser.email);\r\n  };\r\n\r\n  const addSeededUser = () => {\r\n    setSeededUserDetails({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      status2: \"\",\r\n      email: \"\",\r\n      // password: \"\",\r\n      date2: \"\",\r\n      mobile: \"\",\r\n    });\r\n    showModalError(false);\r\n    setFNameCount(false);\r\n    setLNameCount(false);\r\n    setShowAddSeededUser(true);\r\n  };\r\n\r\n  const handleAddSeededUser = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    const newSeededUser = {\r\n      email: seededUserDetails.email,\r\n      mobile_number: \"+\" + seededUserDetails.mobile,\r\n      //  password: seededUserDetails.password,\r\n      is_seeded_user: 1,\r\n      first_name: seededUserDetails.firstName,\r\n      last_name: seededUserDetails.lastName,\r\n      start_date: seededUserDetails.date2[0]\r\n        ? moment(seededUserDetails.date2[0]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      end_date: seededUserDetails.date2[1]\r\n        ? moment(seededUserDetails.date2[1]).format(\"DD-MM-YYYY\")\r\n        : \"\",\r\n      status_id: parseInt(seededUserDetails.status2),\r\n      organization_id: parseInt(orgID),\r\n    };\r\n    const data = {\r\n      seeded_users: [newSeededUser],\r\n    };\r\n    const appendedUsers = [\r\n      ...seededUsers,\r\n      {\r\n        firstName: newSeededUser.first_name,\r\n        lastName: newSeededUser.last_name,\r\n        status2: newSeededUser.status_id.toString(),\r\n        email: newSeededUser.email,\r\n        date2: [\r\n          moment(newSeededUser.start_date, \"YYYY-MM-DD\"),\r\n          moment(newSeededUser.end_date, \"YYYY-MM-DD\"),\r\n        ],\r\n        mobile: newSeededUser.mobile_number,\r\n      },\r\n    ];\r\n\r\n    if (\r\n      seededUserDetails.firstName &&\r\n      seededUserDetails.lastName &&\r\n      seededUserDetails.status2 &&\r\n      seededUserDetails.mobile &&\r\n      seededUserDetails.date2 &&\r\n      seededUserDetails.email\r\n    ) {\r\n      showModalError(false);\r\n      if (\r\n        !emailValidationError &&\r\n        !mobileValidationError &&\r\n        !passwordValidationError\r\n      ) {\r\n        setSeededUsers(appendedUsers);\r\n        setLoader(true);\r\n        axios.post(BASE_URL + \"seededUser/\", data, options).then((res) => {\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description:\r\n              seededUserDetails.firstName + ADD_SEEDED_USER_NOTIFICATION,\r\n            placement,\r\n          });\r\n          setLoader(false);\r\n          setShowAddSeededUser(false);\r\n        });\r\n      }\r\n    } else {\r\n      showModalError(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSeededUser = (email) => {\r\n    let filteredUsers = seededUsers?.filter((user) => user?.email !== email);\r\n    let userName = \"\";\r\n    seededUsers.map((value) => {\r\n      if (email === value.email) userName = value.firstName;\r\n    });\r\n    setSeededUsers(filteredUsers);\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios.delete(BASE_URL + `seededUser/${email}`, options).then(() => {\r\n      const placement = \"bottomLeft\";\r\n      api.info({\r\n        description: userNam + DELETE_SEEDED_USER_NOTIFICATION,\r\n        placement,\r\n      });\r\n    });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{EDIT_ORGANIZATION}</h1>\r\n              </Row>\r\n\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"d-flex justify-content-between align-items-center\"\r\n                      >\r\n                        <h6 className=\"py-3 mb-0\">{EDIT_ORGANIZATION}</h6>\r\n                        <div>\r\n                          <Button\r\n                            type=\"link\"\r\n                            className=\"link pl-0 btn-link-primary ml-3 deleteOrg\"\r\n                            onClick={onDelete}\r\n                          >\r\n                            <span className=\"icon icon-delete\" />\r\n                            <span className=\"d-none d-md-inline-flex deleteOrg\">\r\n                              {DELETE}\r\n                            </span>\r\n                          </Button>\r\n                          {deleteClick ? (\r\n                            <DeleteModal\r\n                              org={organizationName}\r\n                              handleDelete={handleDeleteOrganization}\r\n                              handleCancel={handleCancelDelete}\r\n                              deleteOrg\r\n                            />\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </Col>\r\n                      <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                        <Avatar>{organizationName.charAt(0)}</Avatar>\r\n                        <span className=\"md-name\">{organizationName}</span>\r\n                      </div>\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        form={form}\r\n                      >\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message={REQUIRED_MESSAGE}\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label=\"Organization Name\"\r\n                                value={organizationDetails.name}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    className=\"required\"\r\n                                    defaultValue={organizationDetails.name}\r\n                                    value={organizationDetails.name}\r\n                                    onChange={(e) =>\r\n                                      handleOrganizationOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => CheckOrganizationName(e)}\r\n                                    htmlFor=\"name\"\r\n                                    autoComplete=\"off\"\r\n                                    maxLength={80}\r\n                                  />\r\n                                  {orgNameAlreadyExists === \"status: false\" &&\r\n                                    organizationDetails.name\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    organizationDetails.name.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {orgNameAlreadyExists == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={ORGANIZATION_NAME_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                                {orgNameCount && (\r\n                                  <Form.Item>\r\n                                    <Alert\r\n                                      message={MAX_CHAR_LIMIT}\r\n                                      type=\"error\"\r\n                                    ></Alert>\r\n                                  </Form.Item>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={ORGANIZATION_ID}\r\n                                value={organizationDetails.identifier}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"identifier\"\r\n                                  id=\"identifier\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control edit-input\"\r\n                                    name=\"identifier\"\r\n                                    id=\"identifier\"\r\n                                    htmlFor=\"identifier\"\r\n                                    className=\"required\"\r\n                                    defaultValue={\r\n                                      organizationDetails.identifier\r\n                                    }\r\n                                    value={organizationDetails.identifier}\r\n                                    onChange={(e) =>\r\n                                      handleOrganizationOnChange(e)\r\n                                    }\r\n                                    onBlur={(e) => CheckOrganizationID(e)}\r\n                                    autoComplete=\"off\"\r\n                                    maxLength={20}\r\n                                  />\r\n                                  {orgIDAlreadyExists === \"status: false\" &&\r\n                                    organizationDetails.identifier\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    organizationDetails.identifier.length >\r\n                                      0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {orgIDAlreadyExists == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={ORGANIZATION_ID_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                                {orgIdCount && (\r\n                                  <Form.Item>\r\n                                    <Alert\r\n                                      message={MAX_CHAR_LIMIT}\r\n                                      type=\"error\"\r\n                                    ></Alert>\r\n                                  </Form.Item>\r\n                                )}\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={organizationDetails.status}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required edit-input\"\r\n                                  name=\"status\"\r\n                                >\r\n                                  <>\r\n                                    <Select\r\n                                      className=\"input-control w-100 w-lg-100\"\r\n                                      value={organizationDetails.status}\r\n                                      htmlFor=\"status\"\r\n                                      onSelect={(value) =>\r\n                                        handleOrganizationOnSelect(\r\n                                          value,\r\n                                          \"status\"\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                      <Option value=\"2\">\r\n                                        {STATUS_INACTIVE}\r\n                                      </Option>\r\n                                    </Select>\r\n                                  </>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date1\">\r\n                                <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date1\"\r\n                                    value={organizationDetails.date1}\r\n                                    onChange={(date) =>\r\n                                      handleOrganizationDatePickerChange(\r\n                                        date,\r\n                                        \"date1\"\r\n                                      )\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Form.Item>\r\n                          <div className=\"steps-action mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onOrgEditSubmit}\r\n                            >\r\n                              {UPDATE}\r\n                            </Button>\r\n                            <Button\r\n                              className=\"ml-4\"\r\n                              type=\"secondary\"\r\n                              onClick={cancelEditing}\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                          </div>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col\r\n                      span={24}\r\n                      md={12}\r\n                      className=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <h6 className=\"py-3 mb-0\">{EDIT_SEEDED_USERS}</h6>\r\n                    </Col>\r\n                    <Col\r\n                      span={24}\r\n                      md={12}\r\n                      className=\"d-flex justify-content-left justify-content-md-end align-items-center my-3 my-md-0\"\r\n                    >\r\n                      <Button\r\n                        className=\"mr-4\"\r\n                        type=\"secondary\"\r\n                        onClick={() => addSeededUser()}\r\n                      >\r\n                        {ADD_SEEDED_USER}\r\n                      </Button>\r\n                    </Col>\r\n                    {seededUsers.length > 0 ? (\r\n                      <AssignedUsers\r\n                        seededUsers={seededUsers}\r\n                        statusOnClicked={statusOnClicked}\r\n                        orgID={parseInt(orgID)}\r\n                        handleEditUser={handleEditSeededUser}\r\n                        handleDelete={handleDeleteSeededUser}\r\n                        addSeededUser={addSeededUser}\r\n                        viaEdit\r\n                        seededUser\r\n                      />\r\n                    ) : (\r\n                      <Col span={24} lg={18}>\r\n                        <Row className=\"justify-content-center\">\r\n                          {NO_SEEDED_USERS}\r\n                        </Row>\r\n                      </Col>\r\n                    )}\r\n                    {editVisible ? (\r\n                      <EditSeededUsers\r\n                        error={modalError}\r\n                        handleEditOk={handleEditOk}\r\n                        handleEditCancel={handleEditCancel}\r\n                        seededUsers={seededUsers}\r\n                        seededUserName={seededUserName}\r\n                        fNameCount={fNameCount}\r\n                        lNameCount={lNameCount}\r\n                        seededUserDetails={seededUserDetails}\r\n                        disabledDate={disabledDate}\r\n                        handleSeededUserOnChange={handleSeededUserOnChange}\r\n                        handleSeededUserDatePickerChange={\r\n                          handleSeededUserDatePickerChange\r\n                        }\r\n                        handleMobile={handleMobile}\r\n                        handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                        validateEmailAddress={validateEmailAddress}\r\n                        emailValidationError={emailValidationError}\r\n                        validateMobile={validateMobile}\r\n                        mobileValidationError={mobileValidationError}\r\n                        handleResetPasswordOk={handleResetPasswordOk}\r\n                        handleResetPasswordCancel={handleResetPasswordCancel}\r\n                        loader={loader}\r\n                      />\r\n                    ) : showAddSeededUser ? (\r\n                      <AddNewSeededUser\r\n                        error={modalError}\r\n                        handleAddSeededUser={handleAddSeededUser}\r\n                        handleAddSeededUserCancel={handleAddSeededUserCancel}\r\n                        seededUsers={seededUsers}\r\n                        fNameCount={fNameCount}\r\n                        lNameCount={lNameCount}\r\n                        seededUserDetails={seededUserDetails}\r\n                        disabledDate={disabledDate}\r\n                        handleSeededUserOnChange={handleSeededUserOnChange}\r\n                        handleSeededUserDatePickerChange={\r\n                          handleSeededUserDatePickerChange\r\n                        }\r\n                        handleMobile={handleMobile}\r\n                        handleSeededUserOnSelect={handleSeededUserOnSelect}\r\n                        validateEmailAddress={validateEmailAddress}\r\n                        emailValidationError={emailValidationError}\r\n                        validatePassword={validatePassword}\r\n                        passwordValidationError={passwordValidationError}\r\n                        validateMobile={validateMobile}\r\n                        mobileValidationError={mobileValidationError}\r\n                        loader={loader}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Avatar,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n} from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageOrg/manageOrg.scss\";\r\nimport AccSidebar from \"../manageOrg/AccSidebar\";\r\nimport FloatLabel from \"./FloatLabels\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditOrg = () => {\r\n  const onFinish = (values) => {};\r\n  const { RangePicker } = DatePicker;\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amCCUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\">\r\n        <Layout>\r\n          <Layout>\r\n            <AccSidebar />\r\n            <Content>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">Edit Profile</h1>\r\n              </Row>\r\n              <div className=\"mid-content\">\r\n                <Row>\r\n                  <Col span={24}>\r\n                    <div className=\"avatar-wrapper pt-2 pb-4\">\r\n                      <Avatar>W</Avatar>\r\n                      <span className=\"md-name\">Alan Charles</span>\r\n                    </div>\r\n                    <Form\r\n                      className=\"input-md floating-label w-100\"\r\n                      name=\"\"\r\n                      onFinish={onFinish}\r\n                    >\r\n                      <Col span={24}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Name\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"organization name\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user name \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"User Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"user id\"\r\n                                validateStatus=\"success\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter user id \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"user name\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Email Id\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"email id\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter email id \",\r\n                                    type: \"email\",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"email id\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Status\">\r\n                              <Form.Item\r\n                                className=\"required\"\r\n                                name=\"status\"\r\n                                rules={[\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please enter status \",\r\n                                  },\r\n                                ]}\r\n                              >\r\n                                <Input\r\n                                  className=\"input-control\"\r\n                                  htmlFor=\"status\"\r\n                                />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                          <Col span={24} md={8} className=\"gutter-row\">\r\n                            <FloatLabel label=\"Select Date\">\r\n                              <Form.Item className=\"input-control datepicker-wrapper required\">\r\n                                <RangePicker className=\"w-100 \" />\r\n                              </Form.Item>\r\n                            </FloatLabel>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Form.Item>\r\n                        <div className=\"steps-action mt-5\">\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                          <Button className=\"ml-4\" type=\"secondary\">\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditOrg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Spin,\r\n  notification,\r\n} from \"antd\";\r\nimport AddIcoModal from \"../../components/modal/AddIcoModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  STATUS_NOT_CHANGED,\r\n  ENTER_DIRECTORY_NAME,\r\n  HOTLINE_ALREADY_EXISTS,\r\n  SELECT_DATE,\r\n  ENTER_DESCRIPTION,\r\n} from \"../../errors\";\r\nimport { HOTLINE_UPDATED } from \"../../messages\";\r\nimport { CANCEL, EDIT_HOTLINE, UPDATE } from \"../../headings\";\r\nimport {\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditHotLine = (props) => {\r\n  const [hotLineData, sethotLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    hotline_icon_id: \"\",\r\n    hotline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [hotlineStatus, setHotlineStatus] = useState(\"\");\r\n  const [iconHtml, seticonHtml] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [hotlineErrorUpdated, sethotlineErrorUpdated] = useState(\"\");\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const [error, showError] = useState(false);\r\n\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n\r\n  const addIcon = (values, id) => {\r\n    sethotLineData({\r\n      ...hotLineData,\r\n      hotline_icon_id: id,\r\n    });\r\n    seticonHtml(values);\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const setIcon = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return '<span class=\"icon icon-sexual-harassment-1 ant-tooltip-open\"></span>';\r\n      case \"2\":\r\n        return '<span class=\"icon icon-violence ant-tooltip-open\"></span>';\r\n      case \"3\":\r\n        return '<span class=\"icon icon-racism ant-tooltip-open\"></span>';\r\n      case \"4\":\r\n        return '<span class=\"icon icon-cyber-bullying ant-tooltip-open\"></span>';\r\n      case \"5\":\r\n        return '<span class=\"icon icon-fight ant-tooltip-open\"></span>';\r\n      case \"6\":\r\n        return '<span class=\"icon icon-discrimination ant-tooltip-open\"></span>';\r\n      case \"7\":\r\n        return '<span class=\"icon icon-slap ant-tooltip-open\"></span>';\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    const eDate = moment(location.state.end_date, \"MM / DD / YYYY\").format(\r\n      \"YYYY-MM-DD\"\r\n    );\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n    sethotLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      hotline_icon_id: location.state.hotline_icon_id,\r\n      hotline_id: location.state.hotline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      status_id: location.state.status_id.toString(),\r\n    });\r\n    setHotlineStatus(location.state.status_id.toString());\r\n    const test = setIcon(location.state.hotline_icon_id.toString());\r\n    seticonHtml(test);\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    sethotLineData({ ...hotLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    sethotLineData({ ...hotLineData, [name]: value });\r\n  };\r\n\r\n  const editHotline = (e) => {\r\n    if (\r\n      hotLineData.name &&\r\n      hotLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      hotLineData.help_text &&\r\n      hotLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      hotLineData.status_id &&\r\n      hotLineData.hotline_icon_id &&\r\n      hotLineData.start_date\r\n    ) {\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n      const endDate = moment(hotLineData.start_date[1]).format(\"MM-DD-YYYY\");\r\n      const data = {\r\n        end_date: moment(hotLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n        help_text: hotLineData.help_text,\r\n        hotline_icon_id: hotLineData.hotline_icon_id,\r\n        hotline_id: hotLineData.hotline_id,\r\n        name: hotLineData.name,\r\n        start_date: moment(hotLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n        status_id: parseInt(hotLineData.status_id),\r\n        updated_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      };\r\n      if (\r\n        hotlineErrorUpdated == \"status: false\" ||\r\n        hotLineData.name === location.state.name\r\n      ) {\r\n        if (hotlineStatus !== hotLineData.status_id) {\r\n          if (new Date() < new Date(endDate)) {\r\n            saveHotLine(data);\r\n          } else {\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: STATUS_NOT_CHANGED,\r\n              placement,\r\n            });\r\n          }\r\n        } else {\r\n          saveHotLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/hotlinedirectory\";\r\n  };\r\n\r\n  const saveHotLine = (data) => {\r\n    const token = authHeader();\r\n    let hotLineId = hotLineData.hotline_id;\r\n    delete hotLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.put(BASE_URL + \"hotline/\" + hotLineId, data, options).then((res) => {\r\n      if (res.status === 200) {\r\n        const placement = \"bottomLeft\";\r\n        api.info({\r\n          description: HOTLINE_UPDATED,\r\n          placement,\r\n        });\r\n        window.location = \"/orgcc/hotlinedirectory\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkhotline/\",\r\n          { hotline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            sethotlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      sethotlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_HOTLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n\r\n                    <FloatLabel label={DIRECTORY_NAME} value={hotLineData.name}>\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: { ENTER_DIRECTORY_NAME },\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={hotLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckHotlineName(e)}\r\n                          id=\"name\"\r\n                          name=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {hotlineErrorUpdated == \"status: false\" &&\r\n                          hotLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          hotLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {hotlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={HOTLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={hotLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={hotLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            id=\"help_text\"\r\n                            name=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          disabledDate={disabledDate}\r\n                          value={hotLineData.start_date}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: { SELECT_DATE },\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={hotLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={hotLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <AddIcoModal\r\n                          data-test=\"addIconComponent\"\r\n                          addIcon={addIcon}\r\n                        />\r\n                        {getIconText(\r\n                          hotLineData.hotline_icon_id.toString()\r\n                        ) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      hotLineData.hotline_icon_id.toString()\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(\r\n                                      hotLineData.hotline_icon_id.toString()\r\n                                    )}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editHotline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditHotLine;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport { ADD_EMPLOYEE } from \"../../headings\";\r\nimport {\r\n  ADD_EMPLOYEE_TEXT_PART1,\r\n  ADD_EMPLOYEE_TEXT_PART2,\r\n  ADD_EMPLOYEE_TEXT_PART3,\r\n  ADD_EMPLOYEE_TEXT_PART4,\r\n} from \"../../messages\";\r\n\r\nconst AddEmployee = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{ADD_EMPLOYEE}</h1>\r\n                  <div className=\"d-block w-100 pl-3 pl-lg-0 pt-1\">\r\n                    <small>{ADD_EMPLOYEE_TEXT_PART1}</small>\r\n                  </div>\r\n                </Row>\r\n                <div className=\"mid-content mt-0 mt-md-4 no-bg px-3 px-md-0\">\r\n                  <Row>\r\n                    <Col span={24} className=\"mt-5\">\r\n                      <Row\r\n                        className=\"d-flex justify-content-center\"\r\n                        gutter={{ xs: 8, sm: 32, md: 32, lg: 100 }}\r\n                      >\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div\r\n                            className={`d-flex flex-column ${styles.box_bordered} ${styles.box_bordered_active}`}\r\n                          >\r\n                            <span\r\n                              className={`icon-integrate ${styles.icon}`}\r\n                            ></span>\r\n                            <div className=\"font-weight-bold text-center\">\r\n                              {ADD_EMPLOYEE_TEXT_PART2}\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div\r\n                            className={`d-flex flex-column ${styles.box_bordered}`}\r\n                          >\r\n                            <span className={`icon-csv ${styles.icon}`}></span>\r\n                            <Link to=\"/orgcc/importfile\">\r\n                              <div className=\"font-weight-bold text-center\">\r\n                                {ADD_EMPLOYEE_TEXT_PART3}\r\n                              </div>\r\n                            </Link>\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={24} md={8} xl={7}>\r\n                          <div\r\n                            className={`d-flex flex-column ${styles.box_bordered}`}\r\n                          >\r\n                            <span\r\n                              className={`icon-add-user ${styles.icon}`}\r\n                            ></span>\r\n                            <Link to=\"/orgcc/createmanually\">\r\n                              <div className=\"font-weight-bold text-center\">\r\n                                {ADD_EMPLOYEE_TEXT_PART4}\r\n                              </div>\r\n                            </Link>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Upload, message } from \"antd\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport { DROP_FILES_TO_UPLOAD } from \"../../messages\";\r\nconst { Dragger } = Upload;\r\n\r\nconst UploadFiles = (props) => {\r\n  return (\r\n    <Dragger\r\n      accept=\".csv\"\r\n      name=\"file\"\r\n      onChange={(value) => props.onChange(value)}\r\n    >\r\n      <p className=\"ant-upload-drag-icon\">\r\n        <span className=\"icon icon-upload\" />\r\n      </p>\r\n      <p className=\"ant-upload-text\">{DROP_FILES_TO_UPLOAD}</p>\r\n    </Dragger>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Breadcrumb, Button, Alert, Spin } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nconst { Content } = Layout;\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport UploadFiles from \"./UploadFiles\";\r\nimport { ADD_EMPLOYEE, CANCEL, UPLOAD } from \"../../headings\";\r\nimport { IMPORT_CSV, DOWNLOAD_SAMPLE_FILE } from \"../../messages\";\r\nimport { UPLOAD_CSV_FILE } from \"../../errors\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst ImportFiles = () => {\r\n  const [error, showError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [file, setFile] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/addemployee\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    let fileList = e.fileList.slice(-1);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setFile(fileList);\r\n  };\r\n\r\n  const onUpload = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (file) {\r\n      const data = {\r\n        file: file[0].base64,\r\n      };\r\n      showError(false);\r\n      setLoader(true);\r\n      axios.post(BASE_URL + \"uploadCsv/\", data, options).then(() => {\r\n        window.location = \"/orgcc/manageemployees\";\r\n      });\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/addemployee\">\r\n                      <Breadcrumb.Item>{ADD_EMPLOYEE}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{IMPORT_CSV}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{IMPORT_CSV} </h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    {error && (\r\n                      <Alert\r\n                        message={UPLOAD_CSV_FILE}\r\n                        type=\"error\"\r\n                        showIcon\r\n                      ></Alert>\r\n                    )}\r\n                    <Row className=\"d-flex justify-content-center align-items-center\">\r\n                      <Col span={20} className=\"mt-3 dragdrop\">\r\n                        <UploadFiles onChange={onChange} file={file} />\r\n                      </Col>\r\n                      <Col\r\n                        span={24}\r\n                        className=\"justify-content-center d-flex mt-5\"\r\n                      >\r\n                        <Button type=\"link\" className=\"link pl-0\">\r\n                          <span className=\"icon icon-download-icon\" />\r\n                          {DOWNLOAD_SAMPLE_FILE}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"mt-3 btn-row\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"mr-4 mb-4\"\r\n                        onClick={onUpload}\r\n                      >\r\n                        {UPLOAD}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        className=\"md\"\r\n                        onClick={onCancel}\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Spin>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImportFiles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n  Alert,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport styles from \"./manageEmp.module.scss\";\r\nimport \"../form/form.scss\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { ADD_EMPLOYEE, SAVE, CANCEL } from \"../../headings\";\r\nimport { ADD_EMPLOYEE_TEXT_PART4 } from \"../../messages\";\r\nimport {\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  SELECT_USER_TYPE,\r\n  VALID_EMAIL,\r\n  VALID_MOBILE,\r\n} from \"../../errors\";\r\nimport {\r\n  EMAIL,\r\n  FIRST_NAME,\r\n  LAST_NAME,\r\n  MOBILE,\r\n  STATUS,\r\n  DATE,\r\n  CHOOSE_ROLE,\r\n} from \"../../labels\";\r\nimport {\r\n  MAKE_SUPER_USER,\r\n  MAKE_USER,\r\n  STATUS_ACTIVE,\r\n  STATUS_INACTIVE,\r\n} from \"../../values\";\r\n\r\nconst { Content } = Layout;\r\nconst { RangePicker } = DatePicker;\r\nconst CreateManually = () => {\r\n  const [userDetails, setUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    status: \"\",\r\n    email: \"\",\r\n    date: \"\",\r\n    mobile: \"\",\r\n    empId: \"\",\r\n    department: \"\",\r\n    role: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [error, showError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [emailValidationError, setEmailValidationError] = useState(false);\r\n  const [mobileValidationError, setMobileValidationError] = useState(false);\r\n\r\n  const handleUserOnChange = (e) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMobile = (mobile) => {\r\n    setUserDetails({\r\n      ...userDetails,\r\n      mobile: mobile,\r\n    });\r\n  };\r\n\r\n  const handleUserOnSelect = (value, name) => {\r\n    setUserDetails({ ...userDetails, [name]: value });\r\n  };\r\n\r\n  const handleUserDatePickerChange = (date, name) => {\r\n    setUserDetails({ ...userDetails, [name]: date });\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const validateEmailAddress = (e) => {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    if (!re.test(e.target.value)) {\r\n      setEmailValidationError(true);\r\n    } else {\r\n      setEmailValidationError(false);\r\n    }\r\n  };\r\n\r\n  const validateMobile = (e) => {\r\n    var regex = /^\\+\\d$/;\r\n    if (userDetails.mobile.length > 10 || regex.test(e.target.value)) {\r\n      setMobileValidationError(false);\r\n    } else {\r\n      setMobileValidationError(true);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (\r\n      userDetails.firstName &&\r\n      userDetails.lastName &&\r\n      userDetails.email &&\r\n      userDetails.mobile &&\r\n      userDetails.status &&\r\n      userDetails.role &&\r\n      userDetails.date\r\n    ) {\r\n      const data = {\r\n        first_name: userDetails.firstName,\r\n        last_name: userDetails.lastName,\r\n        email: userDetails.email,\r\n        mobile_number: \"+\" + userDetails.mobile,\r\n        is_org_cc_user: userDetails.role === \"2\" ? 1 : 0,\r\n        is_idb_user: 0,\r\n        is_super_user: userDetails.role === \"1\" ? 1 : 0,\r\n        start_date: userDetails.date[0]\r\n          ? moment(userDetails.date[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: userDetails.date[1]\r\n          ? moment(userDetails.date[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        status_id: parseInt(userDetails.status),\r\n      };\r\n      showError(false);\r\n      setLoader(true);\r\n      axios.post(BASE_URL + \"createUser/\", data, options).then(() => {\r\n        window.location = \"/orgcc/manageemployees\";\r\n      });\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/addemployee\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <Content className={`w-100 ml-0 ${styles.no_sidebar}`}>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/addemployee\">\r\n                      <Breadcrumb.Item>{ADD_EMPLOYEE}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{ADD_EMPLOYEE_TEXT_PART4}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1 className=\"mb-0\">{ADD_EMPLOYEE_TEXT_PART4}</h1>\r\n                </Row>\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row className=\"d-flex justify-content-center align-items-center\">\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <Form className=\"input-md floating-label w-100\" name=\"\">\r\n                        {error && (\r\n                          <Form.Item>\r\n                            <Alert\r\n                              message={REQUIRED_MESSAGE}\r\n                              type=\"error\"\r\n                              showIcon\r\n                            ></Alert>\r\n                          </Form.Item>\r\n                        )}\r\n                        <Col span={24}>\r\n                          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={FIRST_NAME}\r\n                                value={userDetails.firstName}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"firstName\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"firstName\"\r\n                                    htmlFor=\"firstName\"\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={LAST_NAME}\r\n                                value={userDetails.lastName}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"lastName\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    id=\"lastName\"\r\n                                    htmlFor=\"lastName\"\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={EMAIL}\r\n                                value={userDetails.email}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"email\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <Input\r\n                                    type=\"email\"\r\n                                    className=\"input-control\"\r\n                                    id=\"email\"\r\n                                    htmlFor=\"email\"\r\n                                    value={userDetails.email}\r\n                                    onChange={(e) => handleUserOnChange(e)}\r\n                                    onBlur={(e) => validateEmailAddress(e)}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {emailValidationError && (\r\n                                    <Alert\r\n                                      message={VALID_EMAIL}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col\r\n                              span={24}\r\n                              md={8}\r\n                              className=\"gutter-row phone-field\"\r\n                            >\r\n                              <FloatLabel\r\n                                label={MOBILE}\r\n                                value={userDetails.mobile}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"mobile\"\r\n                                  validateStatus=\"success\"\r\n                                >\r\n                                  <PhoneInput\r\n                                    country=\"us\"\r\n                                    id=\"mobile\"\r\n                                    htmlFor=\"mobile\"\r\n                                    value={userDetails.mobile}\r\n                                    onChange={handleMobile}\r\n                                    onBlur={validateMobile}\r\n                                    autoComplete=\"off\"\r\n                                  />\r\n                                  {mobileValidationError && (\r\n                                    <Alert\r\n                                      message={VALID_MOBILE}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={STATUS}\r\n                                value={userDetails.status}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"status\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_STATUS,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Select\r\n                                    className=\"input-control w-100\"\r\n                                    htmlFor=\"status\"\r\n                                    onSelect={(value) =>\r\n                                      handleUserOnSelect(value, \"status\")\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{STATUS_ACTIVE}</Option>\r\n                                    <Option value=\"2\">{STATUS_INACTIVE}</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label={DATE} value=\"date\">\r\n                                <Form.Item\r\n                                  className=\"input-control datepicker-wrapper required\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_DATE,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <RangePicker\r\n                                    className=\"w-100 \"\r\n                                    name=\"date\"\r\n                                    value={userDetails.date}\r\n                                    onChange={(date) =>\r\n                                      handleUserDatePickerChange(date, \"date\")\r\n                                    }\r\n                                    disabledDate={disabledDate}\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel\r\n                                label={CHOOSE_ROLE}\r\n                                value={userDetails.role}\r\n                              >\r\n                                <Form.Item\r\n                                  className=\"required\"\r\n                                  name=\"role\"\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: SELECT_USER_TYPE,\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Select\r\n                                    className=\"input-control w-100\"\r\n                                    htmlFor=\"role\"\r\n                                    onSelect={(value) =>\r\n                                      handleUserOnSelect(value, \"role\")\r\n                                    }\r\n                                  >\r\n                                    <Option value=\"1\">{MAKE_SUPER_USER}</Option>\r\n                                    <Option value=\"2\">{MAKE_USER}</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F1\">\r\n                                <Form.Item name=\"f1\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f1\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F2\">\r\n                                <Form.Item name=\"f2\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f3\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F3\">\r\n                                <Form.Item name=\"f3\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f3\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F4\">\r\n                                <Form.Item name=\"f4\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f4\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                            <Col span={24} md={8} className=\"gutter-row\">\r\n                              <FloatLabel label=\"F5\">\r\n                                <Form.Item name=\"f5\">\r\n                                  <Input\r\n                                    className=\"input-control\"\r\n                                    htmlFor=\"f5\"\r\n                                  />\r\n                                </Form.Item>\r\n                              </FloatLabel>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"mr-4\"\r\n                            onClick={onSubmit}\r\n                          >\r\n                            {SAVE}\r\n                          </Button>\r\n                          <Button type=\"secondary\" onClick={onCancel}>\r\n                            {CANCEL}\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Spin>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateManually;\r\n","import React from \"react\";\r\nimport { Upload, Button, Modal } from \"antd\";\r\nimport { CLOSE_TEXT_MODAL, DOCUMENT_IMAGE } from \"../../headings\";\r\n\r\nconst UploadImage = ({\r\n  file,\r\n  handleStepOneUpload,\r\n  handleBeforeUpload,\r\n  handleOnRemove,\r\n  handlePollImagePreview,\r\n  handleCancel,\r\n  poll,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Upload\r\n        listType=\"picture\"\r\n        fileList={file}\r\n        onChange={(value) => handleStepOneUpload(value, \"pollDocument\")}\r\n        beforeUpload={(value) => handleBeforeUpload(value, \"pollDocument\")}\r\n        onRemove={(value) => handleOnRemove(value, \"pollImageValidation\")}\r\n        onPreview={(value) => handlePollImagePreview(value)}\r\n        className=\"upload-list-inline c-upload\"\r\n        accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n      >\r\n        <Button type=\"link\" className=\"link pl-0\">\r\n          <span className=\"icon icon-upload pr-2\"></span>\r\n          {DOCUMENT_IMAGE}\r\n        </Button>\r\n      </Upload>\r\n      <Modal\r\n        className=\"modal-openline\"\r\n        visible={poll.previewVisible}\r\n        title={poll.previewTitle}\r\n        centered\r\n        onOk={(value) => handleCancel(value)}\r\n        okButtonProps={{\r\n          children: \"Custom OK\",\r\n        }}\r\n        cancelButtonProps={{ style: { display: \"none\" } }}\r\n        okText={CLOSE_TEXT_MODAL}\r\n      >\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={poll.previewImage} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nimport { Tag, Input, Tooltip, Col, Button } from \"antd\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport { ADD_OPTION } from \"../../headings\";\r\n\r\nclass MultiChoice extends Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: \"\",\r\n    editInputIndex: -1,\r\n    editInputValue: \"\",\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter((tag) => tag !== removedTag);\r\n    this.props.setSingleChoiceResponse(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const tagsOption = this.props.pollResponse;\r\n    this.setState({ tags: tagsOption });\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: \"\",\r\n    });\r\n    this.props.setSingleChoiceResponse(tags);\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tags,\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className={`${styles.edit_tag}`}\r\n              key={tag}\r\n              closable={!this.props.disabled}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={(e) => {\r\n                  // if (index ) {\r\n                  this.setState(\r\n                    { editInputIndex: index, editInputValue: tag },\r\n                    () => {\r\n                      this.editInput.focus();\r\n                    }\r\n                  );\r\n                  e.preventDefault();\r\n                  // }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        <Col span={12} className=\"mb-4\">\r\n          <Tag onClick={this.showInput} className={`${styles.add_tag}`}>\r\n            <Button\r\n              type=\"link\"\r\n              className=\"link pl-0\"\r\n              onClick={this.showModal}\r\n              disabled={this.props.disabled}\r\n            >\r\n              <span className=\"icon icon-add-filled\" />\r\n              {ADD_OPTION}\r\n            </Button>\r\n          </Tag>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiChoice;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { CANCEL, PUBLISH_POLL, PUBLISH, SCHEDULE } from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport {\r\n  SELECT_END_DATE,\r\n  SELECT_END_TIME,\r\n  SELECT_START_DATE,\r\n  SELECT_START_TIME,\r\n} from \"../../labels\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.props.onPublish();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return current && current < moment(this.props.pollData.pollStartDate);\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ startTimeError: true });\r\n    } else {\r\n      this.setState({ startTimeError: false });\r\n      this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollStartDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.startTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label={SELECT_START_TIME}\r\n                        value={this.props.pollData.pollStartTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.props.pollData.pollEndDate}\r\n                    disabledDate={this.disabledEndDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.props.pollData.pollEndTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import moment from 'moment-timezone';\r\n//#region Formats\r\n\r\nconst formatAsYYYYMMDDHHmmss = date => moment(date, \"MM/DD/YYYY\").format('YYYY-MM-DD[T]HH:mm:ss');\r\nconst formatAsHHmmss = date => moment(date).format('HH:mm:ss');\r\nconst formatAsMMMDDYYYY = date => moment(date).format('MM-DD-YYYY');\r\nconst formatAsHHmm = date => moment(date).format('HH:mm');\r\nconst formatAsYYYYMMDD = date => moment(date).format('YYYY-MM-DD');\r\nconst formatAsDDMMYYYY = date => moment(date).format('DD-MM-YYYY');\r\n\r\n\r\nconst format = date => moment(date).format();\r\nexport default{\r\n    formatAsYYYYMMDDHHmmss,\r\n    formatAsHHmmss,\r\n    formatAsMMMDDYYYY,\r\n    formatAsHHmm,\r\n    formatAsYYYYMMDD,\r\n    formatAsDDMMYYYY,\r\n    format\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Tooltip,\r\n  Input,\r\n  Radio,\r\n  Checkbox,\r\n  Breadcrumb,\r\n  Spin,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport DateTimeModal from \"../modal/DateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { BACK, PREVIEW_POLL, POLLS } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nfunction onChange(checked) {\r\n  console.log(`switch to ${checked}`);\r\n}\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst PreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  isImage,\r\n  data,\r\n  attachmentName,\r\n}) => {\r\n  const [schedulePoll, setSchedulePoll] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const openDocument = (e) => {};\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    setLoader(true);\r\n    const optionsData = [];\r\n    let data = {};\r\n    poll.pollResponse.map((value) => {\r\n      optionsData.push({ option_text: value });\r\n    });\r\n    if (isImage) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          image:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          image_name: attachmentName,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else if (poll.pollDocument?.length === 0) {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    } else {\r\n      data = {\r\n        create_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          document:\r\n            poll.pollDocument && poll.pollDocument[0]\r\n              ? poll.pollDocument[0].base64\r\n              : \"\",\r\n          document_name: attachmentName,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: momentUtil.formatAsDDMMYYYY(poll.pollStartDate),\r\n          start_time: momentUtil.formatAsHHmmss(poll.pollStartTime),\r\n          end_date: momentUtil.formatAsDDMMYYYY(poll.pollEndDate),\r\n          end_time: momentUtil.formatAsHHmmss(poll.pollEndTime),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: optionsData,\r\n      };\r\n    }\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"poll/\", data, options)\r\n      .then(() => {\r\n        setLoader(false);\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      })\r\n      .catch((error) => {\r\n        setLoader(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{PREVIEW_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Spin spinning={loader} size=\"large\">\r\n                    <Col\r\n                      span={24}\r\n                      className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                    >\r\n                      <h6>\r\n                        {poll.pollName}\r\n                        <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                          <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                        </Tooltip>\r\n                      </h6>\r\n                    </Col>\r\n\r\n                    <div className=\"mid-content\">\r\n                      <Row>\r\n                        <Col span={24}>\r\n                          <p className=\"font-weight-md6\">{poll.pollQuestion}</p>\r\n                          <Row className=\"preview-que\" disabled={true}>\r\n                            <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                              {poll.pollQuestionType === \"1\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Radio>{value}</Radio>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"2\" ? (\r\n                                poll.pollResponse.map((value) => (\r\n                                  <Checkbox>{value}</Checkbox>\r\n                                ))\r\n                              ) : poll.pollQuestionType === \"3\" ? (\r\n                                <ReactStars\r\n                                  {...starsRating}\r\n                                  value={poll.pollRatingResponse}\r\n                                  disabled={true}\r\n                                />\r\n                              ) : null}\r\n                            </div>\r\n                          </Row>\r\n                          <Row className=\"mt-2\">\r\n                            <div class=\"ant-upload-list-item\">\r\n                              <div class=\"ant-upload-list-item-info\">\r\n                                <span class=\"ant-upload-span\">\r\n                                  <div class=\"ant-upload-text-icon\">\r\n                                    <PaperClipOutlined />\r\n                                  </div>\r\n                                  <span\r\n                                    class=\"ant-upload-list-item-name\"\r\n                                    title=\"add-user-doc\"\r\n                                  >\r\n                                    {poll.pollDocument &&\r\n                                    poll.pollDocument[0] ? (\r\n                                      <a\r\n                                        href={poll.pollDocument[0].base64}\r\n                                        download={\r\n                                          poll.pollDocument[0].originFileObj\r\n                                            .name\r\n                                        }\r\n                                      >\r\n                                        {\r\n                                          poll.pollDocument[0].originFileObj\r\n                                            .name\r\n                                        }\r\n                                      </a>\r\n                                    ) : null}\r\n                                  </span>\r\n                                  <span class=\"ant-upload-list-item-card-actions\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"ant-btn\"\r\n                                    ></button>\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 px-3\">\r\n                      <Button\r\n                        type=\"secondary\"\r\n                        type=\"secondary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"mr-4\"\r\n                        onClick={onBackCreatePoll}\r\n                      >\r\n                        {BACK}\r\n                      </Button>\r\n                      <DateTimeModal\r\n                        pollData={poll}\r\n                        handlePollStartDatePickerChange={\r\n                          handlePollStartDatePickerChange\r\n                        }\r\n                        handlePollEndDatePickerChange={\r\n                          handlePollEndDatePickerChange\r\n                        }\r\n                        handlePollStartTimePickerChange={\r\n                          handlePollStartTimePickerChange\r\n                        }\r\n                        handlePollEndTimePickerChange={\r\n                          handlePollEndTimePickerChange\r\n                        }\r\n                        onPublish={onPublish}\r\n                      />\r\n                    </div>\r\n                  </Spin>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewPoll;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Breadcrumb,\r\n  Alert,\r\n  message,\r\n} from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport PreviewPoll from \"./PreviewPoll\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  CANCEL,\r\n  CREATE_POLL,\r\n  POLLS,\r\n  POLL_TITLE,\r\n  PREVIEW,\r\n  UPLOAD,\r\n} from \"../../headings\";\r\nimport {\r\n  POLL_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  STAR_CHART_TYPE,\r\n} from \"../../errors\";\r\nimport {\r\n  BAR_CHART,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n} from \"../../values\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst CreatePoll = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: \"\",\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    attachmentName: \"\",\r\n    pollStartTime: new Date(),\r\n    pollEndTime: new Date(),\r\n    pollResponse: [],\r\n    pollImageValidation: true,\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n  });\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult) {\r\n        if (!poll.pollChartType) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else if (poll.pollQuestionType !== \"3\") {\r\n        if (poll.pollResponse.length === 0) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else if (poll.pollQuestionType === \"3\") {\r\n        if (poll.pollRatingResponse === 0) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (value.file.status === \"removed\") {\r\n      showuploadError(true);\r\n    }\r\n    let fileList = value.fileList.slice(-1);\r\n    checkDoucmentType(value.file.type);\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setAttachmentName(value.file.name);\r\n    setPoll({ ...poll, [name]: fileList });\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handlePollImagePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setPoll({\r\n      ...poll,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setPoll({ ...poll, pollImageValidation: true });\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    let xlsxfileExt = file.name.includes(\".xls\");\r\n    let pptxfileExt = file.name.includes(\".pptx\");\r\n    let docfileExt = file.name.includes(\".doc\");\r\n    let csvfileExt = file.name.includes(\".csv\");\r\n\r\n    const isValidDoc =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\" ||\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    if (!isValidDoc) {\r\n      showuploadError(false);\r\n      message.error(`${file.name} is not a supported format file type.`);\r\n    } else {\r\n      showuploadError(true);\r\n    }\r\n    const isImage =\r\n      file.type === \"image/jpeg\" ||\r\n      file.type === \"image/png\" ||\r\n      file.type === \"image/gif\";\r\n    const isDocument =\r\n      file.type === \"application/pdf\" ||\r\n      xlsxfileExt ||\r\n      pptxfileExt ||\r\n      docfileExt ||\r\n      csvfileExt;\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    const isLt10M = file.size / 1024 / 1024 < 10;\r\n    if (isImage) {\r\n      if (!isLt5M && isImage) {\r\n        showuploadError(false);\r\n        message.error(\"Image must smaller than 5MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n\r\n    if (isDocument) {\r\n      if (!isLt10M && isDocument) {\r\n        showuploadError(false);\r\n        message.error(\"Document must smaller than 10MB!\");\r\n      } else {\r\n        showuploadError(true);\r\n      }\r\n    }\r\n    return (isValidDoc && isLt5M) || isLt10M;\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setpollError(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!previewPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props} />\r\n                <Content>\r\n                  <Row className=\"pt-3\">\r\n                    <Breadcrumb separator=\">\">\r\n                      <NavLink to=\"/orgcc/pollsdirectory\">\r\n                        <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                      </NavLink>\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                  </Row>\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{CREATE_POLL}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                          form={form}\r\n                        >\r\n                          {error && (\r\n                            <Form.Item>\r\n                              <Alert\r\n                                message={REQUIRED_MESSAGE}\r\n                                type=\"error\"\r\n                                showIcon\r\n                              ></Alert>\r\n                            </Form.Item>\r\n                          )}\r\n                          <Col span={24}>\r\n                            <Row>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={POLL_TITLE}\r\n                                  value={poll.pollName}\r\n                                >\r\n                                  <TextArea\r\n                                    showCount\r\n                                    maxLength={50}\r\n                                    htmlFor=\"polltitle\"\r\n                                    value={poll.pollName}\r\n                                    id=\"pollName\"\r\n                                    onChange={(e) => onCreateChange(e)}\r\n                                    onBlur={(e) => isPollNameDuplicate(e)}\r\n                                    autoComplete=\"off\"\r\n                                    className={`required ${styles.sm_textarea}`}\r\n                                  />\r\n\r\n                                  {pollError === \"status: false\" &&\r\n                                    poll.pollName\r\n                                      .replace(/^\\s*/, \"\")\r\n                                      .replace(/\\s*$/, \"\").length > 0 &&\r\n                                    poll.pollName.length > 0 && (\r\n                                      <CheckCircleTwoTone\r\n                                        className=\"successCheck\"\r\n                                        twoToneColor=\"#52c41a\"\r\n                                      />\r\n                                    )}\r\n                                  {pollError == \"status: true\" && (\r\n                                    <Alert\r\n                                      message={POLL_ALREADY_EXISTS}\r\n                                      type=\"error\"\r\n                                      showIcon\r\n                                    ></Alert>\r\n                                  )}\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={DESCRIPTION}\r\n                                  value={poll.pollHelpText}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollHelpText\"\r\n                                    id=\"pollHelpText\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"helptext\"\r\n                                      id=\"pollHelpText\"\r\n                                      name=\"pollHelpText\"\r\n                                      value={poll.pollHelpText}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row mt-3\">\r\n                                <h6>{UPLOAD}</h6>\r\n                                <Form.Item\r\n                                  name=\"upload\"\r\n                                  className=\"upload-list\"\r\n                                >\r\n                                  <UploadImage\r\n                                    file={poll.pollDocument}\r\n                                    handleStepOneUpload={handleStepOneUpload}\r\n                                    handleBeforeUpload={handleBeforeUpload}\r\n                                    handleOnRemove={handleOnRemove}\r\n                                    handlePollImagePreview={\r\n                                      handlePollImagePreview\r\n                                    }\r\n                                    handleCancel={handleCancel}\r\n                                    poll={poll}\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                          <Col span={24} className=\"gutter-row\">\r\n                            <Row>\r\n                              <Col\r\n                                span={24}\r\n                                md={8}\r\n                                lg={8}\r\n                                xl={6}\r\n                                className=\"mb-3 t-2 mb-y-0\"\r\n                              >\r\n                                <Form.Item\r\n                                  name=\"showresult\"\r\n                                  label={SHOW_RESULTS_POLL}\r\n                                  className=\"mb-0\"\r\n                                >\r\n                                  <Switch\r\n                                    id=\"showResult\"\r\n                                    checked={poll.showResult}\r\n                                    onChange={(checked, e) =>\r\n                                      onChange(checked, e)\r\n                                    }\r\n                                  />\r\n                                </Form.Item>\r\n                              </Col>\r\n                              {poll.showResult ? (\r\n                                <Col span={24} md={10} lg={8}>\r\n                                  <FloatLabel\r\n                                    label={DISPLAY_RESULTS_AS}\r\n                                    value={poll.pollChartType}\r\n                                  >\r\n                                    <Form.Item\r\n                                      className=\"required mb-0\"\r\n                                      name=\"result\"\r\n                                    >\r\n                                      <>\r\n                                        <Select\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"result\"\r\n                                          className=\"required\"\r\n                                          value={poll.pollChartType}\r\n                                          onSelect={(value) =>\r\n                                            handlePollOnSelect(\r\n                                              value,\r\n                                              \"pollChartType\"\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <Select.Option value=\"1\">\r\n                                            {PIE_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"3\">\r\n                                            {BAR_CHART}\r\n                                          </Select.Option>\r\n                                          <Select.Option value=\"4\">\r\n                                            {STAR_FORMAT}\r\n                                          </Select.Option>\r\n                                        </Select>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </FloatLabel>\r\n                                  {chartError && (\r\n                                    <Form.Item>\r\n                                      <Alert\r\n                                        message={STAR_CHART_TYPE}\r\n                                        type=\"error\"\r\n                                        showIcon\r\n                                      ></Alert>\r\n                                    </Form.Item>\r\n                                  )}\r\n                                </Col>\r\n                              ) : (\r\n                                <Col></Col>\r\n                              )}\r\n                            </Row>\r\n                          </Col>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div className=\"mid-content mt-4\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <Form\r\n                          className=\"input-md floating-label w-100\"\r\n                          name=\"validate_other\"\r\n                        >\r\n                          <Col span={24}>\r\n                            <Row className=\"d-block\">\r\n                              <Col span={24} md={6} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={QUESTION_TYPE}\r\n                                  value={poll.pollQuestionType}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"questiontype\"\r\n                                  >\r\n                                    <>\r\n                                      <Select\r\n                                        className=\"\"\r\n                                        htmlFor=\"questiontype\"\r\n                                        className=\"required\"\r\n                                        id=\"pollQuestionType\"\r\n                                        value={poll.pollQuestionType}\r\n                                        onSelect={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollQuestionType\"\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <Select.Option\r\n                                          value=\"1\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType === \"4\"\r\n                                          }\r\n                                        >\r\n                                          {SELECT_SINGLE}\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"2\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType === \"4\"\r\n                                          }\r\n                                        >\r\n                                          {SELECT_MULTIPLE}\r\n                                        </Select.Option>\r\n                                        <Select.Option\r\n                                          value=\"3\"\r\n                                          disabled={\r\n                                            poll.pollChartType !== \"\" &&\r\n                                            poll.pollChartType !== \"4\"\r\n                                          }\r\n                                        >\r\n                                          {STAR_RATING}\r\n                                        </Select.Option>\r\n                                      </Select>\r\n                                    </>\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={18} className=\"gutter-row\">\r\n                                <FloatLabel\r\n                                  label={QUESTION}\r\n                                  value={poll.pollQuestion}\r\n                                >\r\n                                  <Form.Item\r\n                                    className=\"required\"\r\n                                    name=\"pollQuestion\"\r\n                                    id=\"pollQuestion\"\r\n                                    validateStatus=\"success\"\r\n                                  >\r\n                                    <Input\r\n                                      className=\"input-control\"\r\n                                      htmlFor=\"pollQuestion\"\r\n                                      id=\"pollQuestion\"\r\n                                      name=\"pollQuestion\"\r\n                                      defaultValue={poll.pollQuestion}\r\n                                      value={poll.pollQuestion}\r\n                                      autoComplete=\"off\"\r\n                                      maxLength={500}\r\n                                      onChange={(e) => onCreateChange(e)}\r\n                                    />\r\n                                  </Form.Item>\r\n                                </FloatLabel>\r\n                              </Col>\r\n                              <Col span={24} md={8} lg={6} className=\"mt-4\">\r\n                                {poll.pollQuestionType === \"3\" ? (\r\n                                  <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    name=\"pollRatingResponse\"\r\n                                    onChange={(value) =>\r\n                                      handlePollOnSelect(\r\n                                        value,\r\n                                        \"pollRatingResponse\"\r\n                                      )\r\n                                    }\r\n                                    classNames=\"mt-3\"\r\n                                  />\r\n                                ) : poll.pollQuestionType === \"1\" ? (\r\n                                  <div>\r\n                                    <MultiChoice\r\n                                      setSingleChoiceResponse={\r\n                                        setSingleChoiceResponse\r\n                                      }\r\n                                      pollResponse={poll.pollResponse}\r\n                                    />\r\n                                  </div>\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  <MultiChoice\r\n                                    pollResponse={poll.pollResponse}\r\n                                    setSingleChoiceResponse={\r\n                                      setSingleChoiceResponse\r\n                                    }\r\n                                  />\r\n                                ) : null}\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n\r\n                          <div className=\"mt-5\">\r\n                            <Button\r\n                              type=\"primary\"\r\n                              className=\"md mr-4\"\r\n                              onClick={onPreview}\r\n                            >\r\n                              {PREVIEW}\r\n                            </Button>\r\n                            <Button\r\n                              type=\"secondary\"\r\n                              type=\"secondary\"\r\n                              htmlType=\"submit\"\r\n                              onClick={onCancel}\r\n                            >\r\n                              {CANCEL}\r\n                            </Button>\r\n                          </div>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <PreviewPoll\r\n          poll={poll}\r\n          setPollsDate={setPollsDate}\r\n          backtoEdit={backtoEdit}\r\n          isImage={isImage}\r\n          attachmentName={attachmentName}\r\n          data={props}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreatePoll;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"./managePoll.module.scss\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ManagePolls from \"../../assets/images/manage-polls.svg\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport CreatePoll from \"../managePolls/CreatePoll\";\r\nimport { CREATE_POLL, MANAGE_POLLS } from \"../../headings\";\r\nimport { CREATE_NEW_POLL_TEXT } from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\nconst ManagePoll = (props) => {\r\n  const [createPoll, setCreatePoll] = useState(false);\r\n  const ShowCreatePoll = () => {\r\n    setCreatePoll(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!createPoll ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Polls\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{MANAGE_POLLS}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={ManagePolls}\r\n                            alt=\"Create Poll\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_POLL_TEXT}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={ShowCreatePoll}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE_POLL}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <Redirect to=\"/orgcc/createpoll\" />\r\n        // <CreatePoll data={props.data} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ManagePoll;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Form, Col, DatePicker } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport {\r\n  CANCEL,\r\n  EXTEND_END_DATE,\r\n  EXTEND_TEXT_MODAL,\r\n  POLL,\r\n} from \"../../headings\";\r\nimport {\r\n  EXTEND_END_DATE_TEXT_PART1,\r\n  EXTEND_END_DATE_TEXT_PART2,\r\n} from \"../../messages\";\r\nimport { SELECT_END_DATE, SELECT_END_TIME } from \"../../labels\";\r\nimport { SELECT_DATE } from \"../../errors\";\r\n\r\nlet startDate = \"\";\r\n\r\nclass ExtendEndDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      pollEndDate: \"\",\r\n      pollEndTime: new Date(),\r\n    };\r\n    this.range = this.range.bind(this);\r\n    this.disabledDateTime = this.disabledDateTime.bind(this);\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   console.log(\r\n  //    '***********'\r\n  //   );\r\n  //   // const s_date = moment(\r\n  //   //   this.props.pollsData.start_date + \" \" + this.props.pollsData.start_time\r\n  //   // );\r\n  //   // const sDate = moment(s_date)\r\n  //   //   .utcOffset(\"+05:30\")\r\n  //   //   .format(\"YYYY/MM/DD HH:mm:ss\");\r\n  //   // const eDate = moment(\r\n  //   //   this.props.pollsData.end_date + \" \" + this.props.pollsData.end_time\r\n  //   // )\r\n  //   //   .utcOffset(\"+05:30\")\r\n  //   //   .format(\"YYYY/MM/DD HH:mm:ss\");\r\n  //   // this.setState({ pollStartDate: moment(this.props.pollsData.start_date),\r\n  //   //   pollEndDate: this.props.pollsData.end_date,\r\n  //   //   pollStartTime: this.props.pollsData.start_time,\r\n  //   //   pollEndTime: this.props.pollsData.end_time,\r\n  //   //  });\r\n  // }\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    let obj = {\r\n      poll_id: this.props.pollsData.poll_id,\r\n      pollName: this.props.pollsData.title,\r\n    };\r\n    this.props.extendPollDate(obj, this.state);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    window.location = \"/orgcc/pollsdirectory\";\r\n  };\r\n\r\n  onChangeEndDate(date) {\r\n    this.setState({\r\n      pollEndDate: date,\r\n    });\r\n  }\r\n\r\n  onChangeEndTime(time) {\r\n    this.setState({\r\n      pollEndTime: time,\r\n    });\r\n  }\r\n\r\n  disabledDate(current) {\r\n    return current && current < moment().startOf(\"day\");\r\n  }\r\n\r\n  range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  disabledDateTime(current, type) {\r\n    if (type === \"start\") {\r\n      startDate = current;\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    } else if (type === \"end\") {\r\n      if (moment(current).isSame(moment(), \"day\")) {\r\n        var now = moment();\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      } else if (moment(current).isSame(moment(startDate))) {\r\n        var now = moment(startDate);\r\n        return {\r\n          disabledHours: () => this.range(0, now.hour()),\r\n          disabledMinutes: () => this.range(0, now.minutes()),\r\n          disabledSeconds: () => this.range(0, now.seconds()),\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{EXTEND_END_DATE}</a>\r\n        <Modal\r\n          title={EXTEND_END_DATE}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            className: \"ant-btn-secondary\",\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={EXTEND_TEXT_MODAL}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              <div className=\"mb-4 subtext-md font-weight-md6\">\r\n                {EXTEND_END_DATE_TEXT_PART1}{\" \"}\r\n                <span className=\"pr-1\"> {EXTEND_END_DATE_TEXT_PART2}</span>\r\n                {this.props.pollsData.title} {POLL}\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    value={this.state.pollEndDate}\r\n                    disabledDate={this.disabledDate}\r\n                    onChange={(date) => this.onChangeEndDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"eDate\"\r\n                    className=\"required\"\r\n                  />\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.state.pollEndTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExtendEndDate;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport ExtendEndDate from \"../../components/modal/ExtendEndDate\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT, SHOW_INTRIM_RESULT, VIEW } from \"../../headings\";\r\n\r\nconst content = (data, extendPollDate) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: `/orgcc/editpoll/${data.poll_id}`, state: data }}>\r\n        <li>\r\n          <a href={`/orgcc/editpoll/${data.poll_id}`}>\r\n            {data.status_id === 4 || data.status_id === 1 ? VIEW : EDIT}\r\n          </a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      {data.show_result_to_users &&\r\n      (data.status_id === 4 || data.status_id === 1) ? (\r\n        <Link to={{ pathname: \"/orgcc/pollresponse\", state: data }}>\r\n          <li>\r\n            <a href=\"/orgcc/pollresponse\">{SHOW_INTRIM_RESULT}</a>{\" \"}\r\n          </li>{\" \"}\r\n        </Link>\r\n      ) : null}\r\n      {data.status_id === 1 || data.status_id === 2 || data.status_id === 3 ? (\r\n        <li>\r\n          <ExtendEndDate extendPollDate={extendPollDate} pollsData={data} />\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data, this.props.extendPollDate)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined, PaperClipOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport PollPopover from \"../table/PollPopover\";\r\nimport CreatePollPopover from \"../table/CreatePollPopover\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CREATE_POLL, MANAGE_POLLS, SEARCH } from \"../../headings\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART4,\r\n  EXTEND_END_DATE_TEXT_PART3,\r\n} from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filterData: [],\r\n      searchBy: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { polls } = this.props;\r\n    polls?.forEach((poll) => {\r\n      poll.start_date = moment(poll.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM/DD/YYYY\");\r\n      poll.end_date = moment(poll.end_date).utc().local().format(\"MM/DD/YYYY\");\r\n    });\r\n    this.setState({ data: polls }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.polls !== nextProps.polls) {\r\n      nextProps.polls?.forEach((poll) => {\r\n        poll.start_date = moment(poll.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n        poll.end_date = moment(poll.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM/DD/YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.polls }, () => {\r\n        this.onSearch(this.state.searchBy);\r\n      });\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  extendPollDate = (value, date) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      end_date: momentUtil.formatAsDDMMYYYY(date.pollEndDate),\r\n      end_time: momentUtil.formatAsHHmmss(date.pollEndTime),\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"extendEndDate/\" + value.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description: value.pollName + EXTEND_END_DATE_TEXT_PART3,\r\n        });\r\n        window.location = \"/orgcc/pollsdirectory\";\r\n      });\r\n  };\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  statusClicked = (record, via) => {\r\n    let data = {};\r\n    if (via.length === 0) {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.title +\r\n          STATUS_CHANGED_NOTIFICATION_PART4,\r\n      });\r\n    } else if (via === \"Scheduled\" || via === \"Active\") {\r\n      data = {\r\n        status_id: 2,\r\n      };\r\n    } else if (via === \"inActive\") {\r\n      const startDate = record.start_date;\r\n      const sdate = startDate.split(\"/\")[0];\r\n      const smonth = startDate.split(\"/\")[1];\r\n      const syear = startDate.split(\"/\")[2];\r\n      const finalStartDate = new Date(smonth + \"-\" + sdate + \"-\" + syear);\r\n      const currentDate = new Date();\r\n      if (finalStartDate > currentDate) {\r\n        data = {\r\n          status_id: 3,\r\n        };\r\n      } else if (finalStartDate < currentDate) {\r\n        data = {\r\n          status_id: 1,\r\n        };\r\n      } else if (finalStartDate === currentDate) {\r\n        const startTime = record.start_time;\r\n        const SFullDate = smonth + \"-\" + sdate + \"-\" + syear;\r\n        const startTimeWithDate = new Date(SFullDate + startTime);\r\n        if (startTimeWithDate > new Date()) {\r\n          data = {\r\n            status_id: 3,\r\n          };\r\n        } else if (startTimeWithDate <= new Date()) {\r\n          data = {\r\n            status_id: 1,\r\n          };\r\n        }\r\n      }\r\n    }\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"changePollStatus/\" + record.poll_id + \"/\", data, options)\r\n      .then(() => {\r\n        notification.config({\r\n          placement: \"bottomLeft\",\r\n        });\r\n        notification.open({\r\n          description:\r\n            STATUS_CHANGED_NOTIFICATION_PART1 +\r\n            record.title +\r\n            STATUS_CHANGED_NOTIFICATION_PART2,\r\n        });\r\n        this.props.statusOnClicked();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { polls, loader } = this.props;\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"name\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.image || record.document ? <PaperClipOutlined /> : null,\r\n            props: {\r\n              \"data-title\": \"\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name, record) => {\r\n          return {\r\n            children: (\r\n              <Link\r\n                to={{\r\n                  pathname: `/orgcc/editpoll/${record.poll_id}`,\r\n                  state: record,\r\n                }}\r\n              >\r\n                <li>\r\n                  <a href={`/orgcc/editpoll/${record.poll_id}`}>{name}</a>{\" \"}\r\n                </li>\r\n              </Link>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Start Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.start_date + \" \" + record.start_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"End Date & Time\",\r\n        dataIndex: \"\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (record) => {\r\n          return {\r\n            children: record.end_date + \" \" + record.end_time.slice(0, -3),\r\n            props: {\r\n              \"data-title\": \"Start Date & Time\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 2 ? (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"inActive\")}\r\n                >\r\n                  In active\r\n                </div>\r\n              ) : record.status_id === 1 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Active\r\n                </div>\r\n              ) : record.status_id === 3 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Scheduled\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Scheduled\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  Completed\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: (\r\n              <PollPopover extendPollDate={this.extendPollDate} data={record} />\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{MANAGE_POLLS}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      {/* <CreatePollPopover polls={polls} /> */}\r\n                      <Link to=\"/orgcc/createpoll\">\r\n                        <Buttons value={CREATE_POLL} />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"poll_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllPolls;\r\n","import React from \"react\";\r\nimport { Popover, Button } from \"antd\";\r\nimport DeleteModal from \"../../components/modal/DeleteModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\n\r\nconst content = (props) => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        {\" \"}\r\n        <a href=\"/orgcc/createpoll\">Create New</a>{\" \"}\r\n      </li>\r\n\r\n      {/* <li>\r\n        <a href=\"/orgcc/existingpolls\">Choose from existing</a>{\" \"}\r\n      </li> */}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass CreatePollPopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps && this.state.visible) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <Button type=\"primary\">{CREATE_POLL}</Button>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePollPopover;\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    POLL_SUCCESS,\r\n    POLL_FAIL,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getPollAsync=()=>(dispatch)=>{\r\n        return UserService.getPolls().then((data)=>{\r\n            dispatch({\r\n                type:POLL_SUCCESS,\r\n                payload:{pollsdata:data.data},\r\n                \r\n            });    \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:POLL_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport ManagePolls from \"./ManagePolls\";\r\nimport ShowAllPolls from \"./ShowAllPolls\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\n\r\nconst PollsContainer = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getPollAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.pollsdata === null) {\r\n      setLoader(true);\r\n    } else if (props.pollsdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.pollsdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader && props.pollsdata !== null && props.pollsdata.length === 0 ? (\r\n    <ManagePolls data={props} />\r\n  ) : (\r\n    <ShowAllPolls\r\n      polls={props.pollsdata}\r\n      data={props}\r\n      loader={loader}\r\n      statusOnClicked={statusOnClicked}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollsContainer);\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Button, Input, Breadcrumb } from \"antd\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { POLLS, POLL_RESULTS } from \"../../headings\";\r\nimport { POLL_RESULTS_NOT_AVAILABLE } from \"../../messages\";\r\n\r\nconst starsRating = {\r\n  size: 30,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 3,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\n\r\nconst PollResponse = (props) => {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={props} />\r\n              <Content>\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{POLL_RESULTS}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3 justify-content-between\">\r\n                  <h1 className=\"mb-0\">{location.state.title}</h1>\r\n                  <Col\r\n                    span={24}\r\n                    md={24}\r\n                    lg={12}\r\n                    xl={15}\r\n                    className=\"d-flex align-items-center justify-content-start justify-content-lg-end px-3 px-lg-0 my-4 my-lg-0\"\r\n                  >\r\n                    {/* <span className=\"pr-3\">Total audience : 2300</span> */}\r\n                    {/* <Button type=\"primary\" className=\"md\">\r\n                      Download\r\n                    </Button> */}\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    className=\"d-flex align-items-center justify-content-end\"\r\n                  ></Col>\r\n                </Row>\r\n                <div className=\"\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <p className=\"font-weight-md6\">\r\n                        {location.state.question}\r\n                      </p>\r\n                      {/* <span className=\"font-weight-md6 pt-3 d-flex\">\r\n                        1846 Responses\r\n                      </span> */}\r\n\r\n                      <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            {/* <div className=\"c-vector-area\">\r\n                          <img\r\n                           // src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div> */}\r\n                            <h1 className=\"text-center pt-3\">\r\n                              {POLL_RESULTS_NOT_AVAILABLE}\r\n                            </h1>\r\n                            <Row className=\"d-flex justify-content-center\">\r\n                              {/* <Divider className=\"mt-1\" /> */}\r\n                            </Row>\r\n                            <Col\r\n                              span={24}\r\n                              className=\"d-flex align-items-center justify-content-center\"\r\n                            >\r\n                              {/* <Button\r\n                            data-test=\"createHotline\"\r\n                           // onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            Create\r\n                          </Button> */}\r\n                              {/* <Link to=\"/orgcc/createhotline\">\r\n                        <Buttons value=\"Create\" />\r\n                     </Link> */}\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <Row className=\"preview-que mt-3\">\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center font-weight-md6\"\r\n                        >\r\n                          {/* <span>\r\n                            <ReactStars {...starsRating} />\r\n                          </span> */}\r\n                          {/* <span className=\"pl-5\">30%</span> */}\r\n                        </Col>\r\n\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center font-weight-md6\"\r\n                        >\r\n                          {/* <span>\r\n                            <ReactStars {...starsRating} />\r\n                          </span>\r\n                          <span className=\"pl-5\">20%</span> */}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </React.Fragment>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PollResponse;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Col, DatePicker, Alert } from \"antd\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport moment from \"moment\";\r\nimport \"../modal/modal.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { PAST_TIME, SELECT_DATE } from \"../../errors\";\r\nimport {\r\n  CANCEL,\r\n  PUBLISH,\r\n  RESCHEDULE,\r\n  SCHEDULE,\r\n  PUBLISH_POLL,\r\n} from \"../../headings\";\r\nimport { POLL_DATES_TEXT } from \"../../messages\";\r\nimport {\r\n  SELECT_START_DATE,\r\n  SELECT_END_DATE,\r\n  SELECT_START_TIME,\r\n  SELECT_END_TIME,\r\n} from \"../../labels\";\r\n\r\nclass DatetimeModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      startDate: \"\",\r\n      startTime: new Date(),\r\n      endDate: \"\",\r\n      endTime: new Date(),\r\n      startTimeError: false,\r\n      endTimeError: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      pollStartDate,\r\n      pollStartTime,\r\n      pollEndDate,\r\n      pollEndTime,\r\n    } = this.props.pollData;\r\n    const sdate = pollStartDate.split(\"-\")[0];\r\n    const smonth = pollStartDate.split(\"-\")[1];\r\n    const syear = pollStartDate.split(\"-\")[2];\r\n    const edate = pollEndDate.split(\"-\")[0];\r\n    const emonth = pollEndDate.split(\"-\")[1];\r\n    const eyear = pollEndDate.split(\"-\")[2];\r\n    this.setState({\r\n      startDate: moment(pollStartDate, \"DD-MM-YYYY\"),\r\n      endDate: moment(pollEndDate, \"DD-MM-YYYY\"),\r\n      startTime: new Date(\r\n        syear + \"-\" + smonth + \"-\" + sdate + \"T\" + pollStartTime\r\n      ),\r\n      endTime: new Date(eyear + \"-\" + emonth + \"-\" + edate + \"T\" + pollEndTime),\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (\r\n      !this.props.pollData.pollStartDate ||\r\n      !this.props.pollData.pollEndDate\r\n    ) {\r\n      this.props.showError(true);\r\n    } else {\r\n      this.props.showError(false);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onPublish();\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  disabledStartDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  disabledEndDate = (current) => {\r\n    if (this.props.pollData.pollStartDate) {\r\n      return (\r\n        current &&\r\n        current < moment(this.props.pollData.pollStartDate, \"DD-MM-YYYY\")\r\n      );\r\n    } else {\r\n      return current && current < moment().startOf(\"day\");\r\n    }\r\n  };\r\n\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.props.handlePollStartDatePickerChange(date, \"pollStartDate\");\r\n  };\r\n\r\n  onChangeEndDate = (date) => {\r\n    this.props.handlePollEndDatePickerChange(date, \"pollEndDate\");\r\n  };\r\n\r\n  onChangeStartTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ startTimeError: true });\r\n    } else {\r\n      this.setState({ startTimeError: false, startTime: time });\r\n      this.props.handlePollStartTimePickerChange(time, \"pollStartTime\");\r\n    }\r\n  };\r\n\r\n  onChangeEndTime = (time) => {\r\n    const currentTime = new Date();\r\n    if (currentTime > time) {\r\n      this.setState({ endTimeError: true });\r\n    } else {\r\n      this.setState({ endTime: time, endTimeError: false });\r\n      this.props.handlePollEndTimePickerChange(time, \"pollEndTime\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" className=\"md mr-4\" onClick={this.showModal}>\r\n          {this.props.viaEdit ? RESCHEDULE : SCHEDULE}\r\n        </Button>\r\n        <Modal\r\n          title={PUBLISH_POLL}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={520}\r\n          okButtonProps={\r\n            this.props.pollData.status_id === 4\r\n              ? {\r\n                  style: { display: \"none\" },\r\n                }\r\n              : {\r\n                  children: \"Custom OK\",\r\n                }\r\n          }\r\n          cancelButtonProps={\r\n            this.props.pollData.status_id === 4\r\n              ? {\r\n                  className: \"ant-btn-primary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n              : {\r\n                  className: \"ant-btn-secondary\",\r\n                  children: \"Custom cancel\",\r\n                }\r\n          }\r\n          okText={PUBLISH}\r\n          cancelText={CANCEL}\r\n        >\r\n          <Form className=\"input-md floating-label w-100\">\r\n            <Col span={24} className=\"gutter-row\">\r\n              {this.props.error && (\r\n                <Form.Item>\r\n                  <Alert message={SELECT_DATE} type=\"error\" showIcon></Alert>\r\n                </Form.Item>\r\n              )}\r\n              <div className=\"mb-4 subtext-md\">\r\n                {POLL_DATES_TEXT}\r\n                <span className=\"pr-1 pr-1 font-weight-md6\">\r\n                  {\" \"}\r\n                  {this.props.pollData.pollName}\r\n                </span>\r\n                Poll\r\n              </div>\r\n\r\n              <FloatLabel label={SELECT_START_DATE} value=\"sDate\">\r\n                <Form.Item\r\n                  name=\"sDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker\r\n                    defaultValue={this.state.startDate}\r\n                    disabledDate={this.disabledStartDate}\r\n                    onChange={(date) => this.onChangeStartDate(date)}\r\n                    className=\"w-100\"\r\n                    name=\"sDate\"\r\n                    className=\"required\"\r\n                    disabled={this.props.pollData.status_id === 4}\r\n                  />\r\n                  {this.state.startTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker1\"\r\n                        label={SELECT_START_TIME}\r\n                        value={this.state.startTime}\r\n                        onChange={(time) => this.onChangeStartTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n              <FloatLabel label={SELECT_END_DATE} value=\"eDate\">\r\n                <Form.Item\r\n                  name=\"eDate\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: SELECT_DATE,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {this.state.endDate !== \"\" ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <DatePicker\r\n                        defaultValue={this.state.endDate}\r\n                        disabledDate={this.disabledEndDate}\r\n                        onChange={(date) => this.onChangeEndDate(date)}\r\n                        className=\"w-100\"\r\n                        name=\"eDate\"\r\n                        className=\"required\"\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <DatePicker\r\n                      defaultValue={this.state.endDate}\r\n                      disabledDate={this.disabledEndDate}\r\n                      onChange={(date) => this.onChangeEndDate(date)}\r\n                      className=\"w-100\"\r\n                      name=\"eDate\"\r\n                      className=\"required\"\r\n                      disabled={this.props.pollData.status_id === 4}\r\n                    />\r\n                  )}\r\n                  {this.state.endTimeError && (\r\n                    <Alert message={PAST_TIME} type=\"error\" showIcon></Alert>\r\n                  )}\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker2\"\r\n                        label={SELECT_END_TIME}\r\n                        value={this.state.endTime}\r\n                        onChange={(time) => this.onChangeEndTime(time)}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                        disabled={this.props.pollData.status_id === 4}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Form.Item>\r\n              </FloatLabel>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatetimeModal;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Button, Tooltip, Radio, Checkbox, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport EditDateTimeModal from \"../modal/EditDateTimeModal\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { PaperClipOutlined } from \"@ant-design/icons\";\r\nimport { BACK, PREVIEW_POLL } from \"../../headings\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { Content } = Layout;\r\n\r\nconst EditPreviewPoll = ({\r\n  poll,\r\n  setPollsDate,\r\n  backtoEdit,\r\n  editPoll,\r\n  showError,\r\n  error,\r\n  data,\r\n  loader,\r\n  attachmentName,\r\n}) => {\r\n  const handlePollStartDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollEndDatePickerChange = (date, name) => {\r\n    setPollsDate(date, name);\r\n  };\r\n\r\n  const handlePollStartTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const handlePollEndTimePickerChange = (time, name) => {\r\n    setPollsDate(time, name);\r\n  };\r\n\r\n  const onBackCreatePoll = () => {\r\n    backtoEdit(poll);\r\n  };\r\n\r\n  const onPublish = () => {\r\n    editPoll();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={data} />\r\n                <Content>\r\n                  <Row className=\"py-3 justify-content-between\">\r\n                    <h1 className=\"mb-0\">{PREVIEW_POLL}</h1>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={18}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    ></Col>\r\n                  </Row>\r\n                  <Col\r\n                    span={24}\r\n                    className={`mb-3 px-3 px-md-0 ${styles.poll_info}`}\r\n                  >\r\n                    <h6>\r\n                      {poll.pollName}\r\n                      <Tooltip placement=\"top\" title={poll.pollHelpText}>\r\n                        <span className=\"pl-2 icon icon-info-circle\"></span>\r\n                      </Tooltip>\r\n                    </h6>\r\n                  </Col>\r\n                  <React.Fragment>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <div className=\"mid-content\">\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            <p className=\"font-weight-md6\">\r\n                              {poll.pollQuestion}\r\n                            </p>\r\n                            <Row className=\"preview-que\" disabled={true}>\r\n                              <div className=\"d-flex flex-column flex-gap chk-opt\">\r\n                                {poll.pollQuestionType === \"1\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Radio>{value}</Radio>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"2\" ? (\r\n                                  poll.pollResponse.map((value) => (\r\n                                    <Checkbox>{value}</Checkbox>\r\n                                  ))\r\n                                ) : poll.pollQuestionType === \"3\" ? (\r\n                                  <ReactStars\r\n                                    {...starsRating}\r\n                                    value={poll.pollRatingResponse}\r\n                                    disabled={true}\r\n                                  />\r\n                                ) : null}\r\n                              </div>\r\n                            </Row>\r\n                            <Row className=\"mt-2\">\r\n                              <div class=\"ant-upload-list-item\">\r\n                                <div class=\"ant-upload-list-item-info\">\r\n                                  <span class=\"ant-upload-span\">\r\n                                    <div class=\"ant-upload-text-icon\">\r\n                                      <PaperClipOutlined />\r\n                                    </div>\r\n                                    <span\r\n                                      class=\"ant-upload-list-item-name\"\r\n                                      title=\"add-user-doc\"\r\n                                    >\r\n                                      {poll.pollDocument ? (\r\n                                        <a\r\n                                          href={poll.pollDocument}\r\n                                          download={poll.pollDocument}\r\n                                        >\r\n                                          {attachmentName}\r\n                                        </a>\r\n                                      ) : null}\r\n                                    </span>\r\n                                    <span class=\"ant-upload-list-item-card-actions\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"ant-btn\"\r\n                                      ></button>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"mt-5 px-3\">\r\n                        <Button\r\n                          type=\"secondary\"\r\n                          type=\"secondary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"mr-4\"\r\n                          onClick={onBackCreatePoll}\r\n                        >\r\n                          {BACK}\r\n                        </Button>\r\n                        <EditDateTimeModal\r\n                          pollData={poll}\r\n                          handlePollStartDatePickerChange={\r\n                            handlePollStartDatePickerChange\r\n                          }\r\n                          handlePollEndDatePickerChange={\r\n                            handlePollEndDatePickerChange\r\n                          }\r\n                          handlePollStartTimePickerChange={\r\n                            handlePollStartTimePickerChange\r\n                          }\r\n                          handlePollEndTimePickerChange={\r\n                            handlePollEndTimePickerChange\r\n                          }\r\n                          onPublish={onPublish}\r\n                          showError={showError}\r\n                          error={error}\r\n                          viaEdit\r\n                        />\r\n                      </div>\r\n                    </Spin>\r\n                  </React.Fragment>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPreviewPoll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  Input,\r\n  Switch,\r\n  Alert,\r\n  message,\r\n  notification,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport styles from \"./managePoll.module.scss\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport MultiChoice from \"./MultipleChoice\";\r\nimport EditPreviewPoll from \"./EditPreviewPoll\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport momentUtil from \"../../utils/momentUtil\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  VIEW_POLL,\r\n  EDIT_POLL,\r\n  POLL_TITLE,\r\n  UPLOAD,\r\n  DOCUMENT_IMAGE,\r\n  PREVIEW,\r\n  CANCEL,\r\n} from \"../../headings\";\r\nimport { REQUIRED_MESSAGE, STAR_CHART_TYPE } from \"../../errors\";\r\nimport {\r\n  DESCRIPTION,\r\n  DISPLAY_RESULTS_AS,\r\n  QUESTION,\r\n  QUESTION_TYPE,\r\n  SHOW_RESULTS_POLL,\r\n} from \"../../labels\";\r\nimport {\r\n  BAR_CHART,\r\n  PIE_CHART,\r\n  SELECT_MULTIPLE,\r\n  SELECT_SINGLE,\r\n  STAR_FORMAT,\r\n  STAR_RATING,\r\n} from \"../../values\";\r\nimport { EDIT_POLL_NOTIFICATION } from \"../../messages\";\r\n\r\nconst starsRating = {\r\n  size: 40,\r\n  count: 5,\r\n  isHalf: false,\r\n  value: 0,\r\n  color: \"#B4B4B4\",\r\n  activeColor: \"#EA5042\",\r\n  onChange: (newValue) => {\r\n    console.log(`Example 3: new value is ${newValue}`);\r\n  },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Content } = Layout;\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst EditPoll = (props) => {\r\n  const history = useHistory();\r\n  const [attachmentName, setAttachmentName] = useState(\"\");\r\n  const [poll, setPoll] = useState({\r\n    pollName: \"\",\r\n    pollHelpText: \"\",\r\n    pollDocument: [],\r\n    showResult: false,\r\n    pollChartType: \"\",\r\n    pollQuestion: \"\",\r\n    pollQuestionType: \"\",\r\n    pollRatingResponse: 0,\r\n    pollStartDate: \"\",\r\n    pollEndDate: \"\",\r\n    pollStartTime: \"\",\r\n    pollEndTime: \"\",\r\n    pollResponse: [],\r\n    pollOptionText: [],\r\n    pollId: \"\",\r\n    status_id: \"\",\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const [pollError, setpollError] = useState(\"\");\r\n  const [error, showError] = useState(false);\r\n  const [chartError, showChartError] = useState(false);\r\n  const [previewPoll, setPreviewPoll] = useState(false);\r\n  const [uploadError, showuploadError] = useState(true);\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [form] = Form.useForm();\r\n  let location = useLocation();\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const pollID = props.computedMatch?.params.id;\r\n\r\n  useEffect(() => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.get(BASE_URL + `getPoll/${pollID}/`, options).then((res) => {\r\n      const data = res.data;\r\n      setPoll({\r\n        ...poll,\r\n        pollId: data.poll_id,\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollDocument:\r\n          data.image_name !== null || data.document_name !== null\r\n            ? [\r\n                {\r\n                  uid: \"1\",\r\n                  name:\r\n                    data.image_name !== null\r\n                      ? data.image_name\r\n                      : data.document_name !== null\r\n                      ? data.document_name\r\n                      : \"\",\r\n                  status: \"done\",\r\n                  url: data.image ? data.image : data.document,\r\n                },\r\n              ]\r\n            : \"\",\r\n        showResult: data.show_result_to_users,\r\n        pollChartType: data.poll_result_chart_type.toString(),\r\n        pollQuestion: data.question,\r\n        pollQuestionType: data.poll_question_type.toString(),\r\n        pollRatingResponse: data.poll_question_rating_type,\r\n        pollStartDate: momentUtil.formatAsDDMMYYYY(data.start_date),\r\n        pollEndDate: momentUtil.formatAsDDMMYYYY(data.end_date),\r\n        pollStartTime: data.start_time,\r\n        pollEndTime: data.end_time,\r\n        status_id: data.status_id,\r\n        pollResponse: data.option_text.map((value) => value.option_text),\r\n        pollOptionText: data.option_text,\r\n      });\r\n      setAttachmentName(\r\n        data.image_name !== null\r\n          ? data.image_name\r\n          : data.document_name !== null\r\n          ? data.document_name\r\n          : \"\"\r\n      );\r\n      const isImage =\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"jpeg\") ||\r\n        data.image\r\n          ?.slice(data.image.lastIndexOf(\".\"), data.image.length)\r\n          .includes(\"png\");\r\n      if (isImage) {\r\n        setIsImage(true);\r\n      } else {\r\n        setIsImage(false);\r\n      }\r\n      setLoader(false);\r\n      form.setFieldsValue({\r\n        pollName: data.title,\r\n        pollHelpText: data.help_text,\r\n        pollQuestion: data.question,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const setPollsDate = (date, name) => {\r\n    setPoll({ ...poll, [name]: date });\r\n  };\r\n\r\n  const handleCancel = (value) => setPoll({ ...poll, previewVisible: false });\r\n\r\n  const backtoEdit = (value) => {\r\n    setPreviewPoll(false);\r\n    setPoll({\r\n      ...poll,\r\n      pollName: value.pollName,\r\n      pollHelpText: value.pollHelpText,\r\n      pollDocument: value.pollDocument,\r\n      showResult: value.showResult,\r\n      pollChartType: value.pollChartType,\r\n      pollQuestion: value.pollQuestion,\r\n      pollQuestionType: value.pollQuestionType,\r\n      pollRatingResponse: value.pollRatingResponse,\r\n      pollStartDate: value.pollStartDate,\r\n      pollEndDate: value.pollEndDate,\r\n      pollResponse: value.pollResponse,\r\n    });\r\n\r\n    form.setFieldsValue({\r\n      pollHelpText: value.pollHelpText,\r\n      pollQuestion: value.pollQuestion,\r\n    });\r\n  };\r\n\r\n  const onPreview = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      uploadError &&\r\n      poll.pollName &&\r\n      poll.pollName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollHelpText &&\r\n      poll.pollHelpText.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      poll.pollQuestionType &&\r\n      poll.pollQuestionType.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      poll.pollQuestion\r\n    ) {\r\n      if (poll.showResult) {\r\n        if (poll.pollChartType === \"2\") {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else if (poll.pollQuestionType !== \"3\") {\r\n        if (poll.pollResponse.length === 0) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else if (poll.pollQuestionType === \"3\") {\r\n        if (poll.pollRatingResponse === 0 || !poll.pollRatingResponse) {\r\n          showError(true);\r\n          setPreviewPoll(false);\r\n        } else {\r\n          showError(false);\r\n          setPreviewPoll(true);\r\n        }\r\n      } else {\r\n        showError(false);\r\n        setPreviewPoll(true);\r\n      }\r\n    } else {\r\n      showError(true);\r\n      setPreviewPoll(false);\r\n    }\r\n  };\r\n\r\n  function convertImgToBase64(url, callback, outputFormat) {\r\n    var canvas = document.createElement(\"CANVAS\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = new Image();\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.onload = function () {\r\n      canvas.height = img.height;\r\n      canvas.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n      callback.call(this, dataURL);\r\n      // Clean up\r\n      canvas = null;\r\n    };\r\n    img.src = url;\r\n  }\r\n\r\n  const editPoll = () => {\r\n    setLoader(true);\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    let optionsData = [];\r\n    poll.pollResponse.map((value) => optionsData.push({ option_text: value }));\r\n\r\n    const finalOptions = optionsData.map((value) => {\r\n      var option = Object.assign({}, value);\r\n      poll.pollOptionText.map((item) => {\r\n        if (item.option_text === value.option_text) {\r\n          option.poll_option_id = item.poll_option_id;\r\n          option.poll = poll.pollId;\r\n        } else if (\r\n          item.option_text !== value.option_text &&\r\n          !option.poll_option_id\r\n        ) {\r\n          option.poll_option_id = \"\";\r\n          option.poll = poll.pollId;\r\n        }\r\n      });\r\n      return option;\r\n    });\r\n    let data = {};\r\n\r\n    const startDate = moment.isMoment(poll.pollStartDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollStartDate)\r\n      : poll.pollStartDate;\r\n    const endDate = moment.isMoment(poll.pollEndDate)\r\n      ? momentUtil.formatAsDDMMYYYY(poll.pollEndDate)\r\n      : poll.pollEndDate;\r\n    const startTime =\r\n      poll.pollStartTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollStartTime)\r\n        : poll.pollStartTime;\r\n    const endTime =\r\n      poll.pollEndTime instanceof Date\r\n        ? momentUtil.formatAsHHmmss(poll.pollEndTime)\r\n        : poll.pollEndTime;\r\n    if (\r\n      poll.pollDocument?.length === 0 ||\r\n      poll.pollDocument[0].url?.length === 0\r\n    ) {\r\n      data = {\r\n        update_poll: {\r\n          title: poll.pollName,\r\n          help_text: poll.pollHelpText,\r\n          show_result_to_users: poll.showResult ? 1 : 0,\r\n          poll_result_chart_type: poll.pollChartType\r\n            ? parseInt(poll.pollChartType)\r\n            : 2,\r\n          poll_question_type: parseInt(poll.pollQuestionType),\r\n          question: poll.pollQuestion,\r\n          start_date: startDate,\r\n          start_time: startTime,\r\n          end_date: endDate,\r\n          end_time: endTime,\r\n          status_id: poll.status_id,\r\n          poll_id: poll.pollId,\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        },\r\n        option: finalOptions,\r\n      };\r\n      axios\r\n        .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n        .then(() => {\r\n          setLoader(false);\r\n          const placement = \"bottomLeft\";\r\n          api.info({\r\n            description: EDIT_POLL_NOTIFICATION,\r\n            placement,\r\n          });\r\n          window.location = \"/orgcc/pollsdirectory\";\r\n        });\r\n    } else {\r\n      if (poll.pollDocument[0]?.url) {\r\n        convertImgToBase64(poll.pollDocument[0]?.url, function (base64Img) {\r\n          if (isImage) {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                image: base64Img,\r\n                image_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n          } else {\r\n            data = {\r\n              update_poll: {\r\n                title: poll.pollName,\r\n                help_text: poll.pollHelpText,\r\n                document: base64Img,\r\n                document_name: attachmentName,\r\n                show_result_to_users: poll.showResult ? 1 : 0,\r\n                poll_result_chart_type: poll.pollChartType\r\n                  ? parseInt(poll.pollChartType)\r\n                  : 2,\r\n                poll_question_type: parseInt(poll.pollQuestionType),\r\n                question: poll.pollQuestion,\r\n                start_date: startDate,\r\n                start_time: startTime,\r\n                end_date: endDate,\r\n                end_time: endTime,\r\n                status_id: poll.status_id,\r\n                poll_id: poll.pollId,\r\n                created_by: parseInt(\r\n                  CryptoJS.AES.decrypt(\r\n                    user.user_details.org_user_id,\r\n                    \"anonymoose\"\r\n                  ).toString(CryptoJS.enc.Utf8)\r\n                ),\r\n              },\r\n              option: finalOptions,\r\n            };\r\n          }\r\n          axios\r\n            .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n            .then(() => {\r\n              setLoader(false);\r\n              const placement = \"bottomLeft\";\r\n              api.info({\r\n                description: \"Poll details have been changed successfully.\",\r\n                placement,\r\n              });\r\n              window.location = \"/orgcc/pollsdirectory\";\r\n            });\r\n        });\r\n      } else {\r\n        if (isImage) {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              image: poll.pollDocument.base64,\r\n              image_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        } else {\r\n          data = {\r\n            update_poll: {\r\n              title: poll.pollName,\r\n              help_text: poll.pollHelpText,\r\n              document: poll.pollDocument.base64,\r\n              document_name: attachmentName,\r\n              show_result_to_users: poll.showResult ? 1 : 0,\r\n              poll_result_chart_type: poll.pollChartType\r\n                ? parseInt(poll.pollChartType)\r\n                : 2,\r\n              poll_question_type: parseInt(poll.pollQuestionType),\r\n              question: poll.pollQuestion,\r\n              start_date: startDate,\r\n              start_time: startTime,\r\n              end_date: endDate,\r\n              end_time: endTime,\r\n              status_id: poll.status_id,\r\n              poll_id: poll.pollId,\r\n              created_by: parseInt(\r\n                CryptoJS.AES.decrypt(\r\n                  user.user_details.org_user_id,\r\n                  \"anonymoose\"\r\n                ).toString(CryptoJS.enc.Utf8)\r\n              ),\r\n            },\r\n            option: finalOptions,\r\n          };\r\n        }\r\n        axios\r\n          .put(BASE_URL + \"poll/\" + poll.pollId + \"/\", data, options)\r\n          .then(() => {\r\n            setLoader(false);\r\n            const placement = \"bottomLeft\";\r\n            api.info({\r\n              description: \"Poll details have been changed successfully.\",\r\n              placement,\r\n            });\r\n            window.location = \"/orgcc/pollsdirectory\";\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = (checked, e) => {\r\n    setPoll({ ...poll, [e.target.id]: checked });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/orgcc/pollsdirectory\");\r\n  };\r\n\r\n  const onCreateChange = (e) => {\r\n    setPoll({ ...poll, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const checkChartType = (value) => {\r\n    if (showResult && value === \"3\" && poll.pollChartType != \"4\") {\r\n      showChartError(true);\r\n    }\r\n  };\r\n\r\n  const handlePollOnSelect = (value, name) => {\r\n    if (value === \"3\" && name === \"pollQuestionType\") {\r\n      checkChartType(value);\r\n    } else {\r\n      showChartError(false);\r\n    }\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const setSingleChoiceResponse = (value) => {\r\n    let name = \"pollResponse\";\r\n    setPoll({ ...poll, [name]: value });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    if (poll.status_id === 4 || poll.status_id === 1) {\r\n      return null;\r\n    } else {\r\n      if (value.file.status === \"removed\") {\r\n        showuploadError(true);\r\n      }\r\n      let fileList = value.fileList.slice(-1);\r\n      checkDoucmentType(value.file.type);\r\n      fileList.forEach(function (file, index) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.base64 = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file.originFileObj);\r\n      });\r\n      setAttachmentName(value.file.name);\r\n      setPoll({ ...poll, [name]: fileList });\r\n    }\r\n  };\r\n\r\n  const checkDoucmentType = (fileType) => {\r\n    const isImage = fileType?.includes(\"image\");\r\n    if (isImage) {\r\n      setIsImage(true);\r\n    } else {\r\n      setIsImage(false);\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    if (poll.status_id === 4 || poll.status_id === 1) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      convertImgToBase64(file.url, function (base64Img) {\r\n        // await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setPoll({\r\n          ...poll,\r\n          previewImage: base64Img,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setPoll({\r\n        ...poll,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBeforeUpload = (file, name) => {\r\n    if (poll.status_id === 4 || poll.status_id === 1) {\r\n      return null;\r\n    } else {\r\n      let xlsxfileExt = file.name.includes(\".xls\");\r\n      let pptxfileExt = file.name.includes(\".pptx\");\r\n      let docfileExt = file.name.includes(\".doc\");\r\n      let csvfileExt = file.name.includes(\".csv\");\r\n\r\n      const isValidDoc =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\" ||\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n\r\n      if (!isValidDoc) {\r\n        showuploadError(true);\r\n        message.error(`${file.name} is not a supported format file type.`);\r\n      } else {\r\n        showuploadError(false);\r\n      }\r\n      const isImage =\r\n        file.type === \"image/jpeg\" ||\r\n        file.type === \"image/png\" ||\r\n        file.type === \"image/gif\";\r\n      const isDocument =\r\n        file.type === \"application/pdf\" ||\r\n        xlsxfileExt ||\r\n        pptxfileExt ||\r\n        docfileExt ||\r\n        csvfileExt;\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      const isLt10M = file.size / 1024 / 1024 < 10;\r\n      if (isImage) {\r\n        if (!isLt5M && isImage) {\r\n          showuploadError(false);\r\n          message.error(\"Image must smaller than 5MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n\r\n      if (isDocument) {\r\n        if (!isLt10M && isDocument) {\r\n          showuploadError(false);\r\n          message.error(\"Document must smaller than 10MB!\");\r\n        } else {\r\n          showuploadError(true);\r\n        }\r\n      }\r\n      return (isValidDoc && isLt5M) || isLt10M;\r\n    }\r\n  };\r\n\r\n  const isPollNameDuplicate = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    if (e.target.value !== location.state.title) {\r\n      axios\r\n        .post(BASE_URL + \"checkpoll/\", { title: e.target.value }, options)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setpollError(res.data[0]);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <React.Fragment>\r\n        {!previewPoll ? (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <Row className=\"inner-header\">\r\n              <LoggedinHeader amORGUser />\r\n            </Row>\r\n            <Row className=\"content-center pt-0\">\r\n              <Layout>\r\n                <Layout>\r\n                  <OrgSidebar amORGUser data={props} />\r\n                  <Content>\r\n                    <Spin spinning={loader} size=\"large\">\r\n                      <Form\r\n                        className=\"input-md floating-label w-100\"\r\n                        name=\"validate_other\"\r\n                        initialValues={{\r\n                          remember: true,\r\n                        }}\r\n                        form={form}\r\n                      >\r\n                        <Row className=\"py-3\">\r\n                          <h1 className=\"mb-0\">\r\n                            {poll.status_id === 4 || poll.status_id === 1\r\n                              ? VIEW_POLL\r\n                              : EDIT_POLL}\r\n                          </h1>\r\n                        </Row>\r\n\r\n                        <div className=\"mid-content\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              {error && (\r\n                                <Form.Item>\r\n                                  <Alert\r\n                                    message={REQUIRED_MESSAGE}\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                  ></Alert>\r\n                                </Form.Item>\r\n                              )}\r\n                              <Col span={24}>\r\n                                <Row>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={POLL_TITLE}\r\n                                      value={poll.pollName}\r\n                                    >\r\n                                      <TextArea\r\n                                        showCount\r\n                                        maxLength={50}\r\n                                        htmlFor=\"polltitle\"\r\n                                        value={poll.pollName}\r\n                                        id=\"pollName\"\r\n                                        onChange={(e) => onCreateChange(e)}\r\n                                        onBlur={(e) => isPollNameDuplicate(e)}\r\n                                        autoComplete=\"off\"\r\n                                        disabled={\r\n                                          poll.status_id === 4 ||\r\n                                          poll.status_id === 1\r\n                                        }\r\n                                        className={`required ${styles.sm_textarea}`}\r\n                                      />\r\n\r\n                                      {pollError === \"status: false\" &&\r\n                                        poll.pollName\r\n                                          .replace(/^\\s*/, \"\")\r\n                                          .replace(/\\s*$/, \"\").length > 0 &&\r\n                                        poll.pollName.length > 0 && (\r\n                                          <CheckCircleTwoTone\r\n                                            className=\"successCheck\"\r\n                                            twoToneColor=\"#52c41a\"\r\n                                          />\r\n                                        )}\r\n                                      {pollError == \"status: true\" && (\r\n                                        <Alert\r\n                                          message={POLL_ALREADY_EXISTS}\r\n                                          type=\"error\"\r\n                                          showIcon\r\n                                        ></Alert>\r\n                                      )}\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={DESCRIPTION}\r\n                                      value={poll.pollHelpText}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"pollHelpText\"\r\n                                        id=\"pollHelpText\"\r\n                                        validateStatus=\"success\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control\"\r\n                                          htmlFor=\"helptext\"\r\n                                          id=\"pollHelpText\"\r\n                                          name=\"pollHelpText\"\r\n                                          value={poll.pollHelpText}\r\n                                          disabled={\r\n                                            poll.status_id === 4 ||\r\n                                            poll.status_id === 1\r\n                                          }\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"gutter-row mt-3\">\r\n                                    {poll.pollDocument?.length === 0 && (\r\n                                      <h6>{UPLOAD}</h6>\r\n                                    )}\r\n                                    <Form.Item\r\n                                      name=\"upload\"\r\n                                      className=\"upload-list\"\r\n                                      valuePropName=\"fileList\"\r\n                                    >\r\n                                      <>\r\n                                        <Upload\r\n                                          listType=\"picture\"\r\n                                          fileList={poll.pollDocument}\r\n                                          onChange={(value) =>\r\n                                            handleStepOneUpload(\r\n                                              value,\r\n                                              \"pollDocument\"\r\n                                            )\r\n                                          }\r\n                                          beforeUpload={(value) =>\r\n                                            handleBeforeUpload(\r\n                                              value,\r\n                                              \"pollDocument\"\r\n                                            )\r\n                                          }\r\n                                          onRemove={() => handleOnRemove()}\r\n                                          onPreview={(value) =>\r\n                                            handleStepOnePreview(value)\r\n                                          }\r\n                                          className=\"upload-list-inline c-upload\"\r\n                                          accept=\"image/png, image/jpeg, image/gif, application/pdf, .doc, .csv, .pptx, application/vnd.ms-excel, .csv \"\r\n                                        >\r\n                                          {poll.pollDocument.length === 0 ? (\r\n                                            <Button\r\n                                              type=\"link\"\r\n                                              className=\"link pl-0\"\r\n                                            >\r\n                                              <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                                              {DOCUMENT_IMAGE}\r\n                                            </Button>\r\n                                          ) : null}\r\n                                        </Upload>\r\n                                        <Modal\r\n                                          visible={poll.previewVisible}\r\n                                          title={poll.previewTitle}\r\n                                          centered\r\n                                          onOk={(value) => handleCancel(value)}\r\n                                          okButtonProps={{\r\n                                            children: \"Custom OK\",\r\n                                          }}\r\n                                          cancelButtonProps={{\r\n                                            style: { display: \"none\" },\r\n                                          }}\r\n                                          okText=\"Close\"\r\n                                        >\r\n                                          <img\r\n                                            alt=\"example\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            src={poll.previewImage}\r\n                                          />\r\n                                        </Modal>\r\n                                      </>\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col span={24} className=\"gutter-row\">\r\n                                <Row className=\"align-items-center d-flex\">\r\n                                  <Col span={24} md={8} lg={8} xl={6}>\r\n                                    <Form.Item\r\n                                      name=\"showresult\"\r\n                                      label={SHOW_RESULTS_POLL}\r\n                                      className=\"mb-0\"\r\n                                    >\r\n                                      <Switch\r\n                                        id=\"showResult\"\r\n                                        checked={poll.showResult}\r\n                                        disabled={\r\n                                          poll.status_id === 4 ||\r\n                                          poll.status_id === 1\r\n                                        }\r\n                                        onChange={(checked, e) =>\r\n                                          onChange(checked, e)\r\n                                        }\r\n                                      />\r\n                                    </Form.Item>\r\n                                  </Col>\r\n                                  {poll.showResult ? (\r\n                                    <Col span={24} lg={6}>\r\n                                      <FloatLabel\r\n                                        label={DISPLAY_RESULTS_AS}\r\n                                        value={poll.pollChartType}\r\n                                      >\r\n                                        <Form.Item\r\n                                          className=\"required mb-0\"\r\n                                          name=\"result\"\r\n                                        >\r\n                                          <>\r\n                                            <Select\r\n                                              className=\"input-control\"\r\n                                              htmlFor=\"result\"\r\n                                              className=\"required\"\r\n                                              disabled={\r\n                                                poll.status_id === 4 ||\r\n                                                poll.status_id === 1\r\n                                              }\r\n                                              value={\r\n                                                poll.pollChartType === \"2\"\r\n                                                  ? \"\"\r\n                                                  : poll.pollChartType\r\n                                              }\r\n                                              onSelect={(value) =>\r\n                                                handlePollOnSelect(\r\n                                                  value,\r\n                                                  \"pollChartType\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <Select.Option value=\"1\">\r\n                                                {PIE_CHART}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"3\">\r\n                                                {BAR_CHART}\r\n                                              </Select.Option>\r\n                                              <Select.Option value=\"4\">\r\n                                                {STAR_FORMAT}\r\n                                              </Select.Option>\r\n                                            </Select>\r\n                                          </>\r\n                                        </Form.Item>\r\n                                      </FloatLabel>\r\n                                      {chartError && (\r\n                                        <Form.Item>\r\n                                          <Alert\r\n                                            message={STAR_CHART_TYPE}\r\n                                            type=\"error\"\r\n                                            showIcon\r\n                                          ></Alert>\r\n                                        </Form.Item>\r\n                                      )}\r\n                                    </Col>\r\n                                  ) : (\r\n                                    <Col></Col>\r\n                                  )}\r\n                                </Row>\r\n                              </Col>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n\r\n                        <div className=\"mid-content mt-4\">\r\n                          <Row>\r\n                            <Col span={24}>\r\n                              <Col span={24}>\r\n                                <Row className=\"d-block\">\r\n                                  <Col span={24} md={6} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={QUESTION_TYPE}\r\n                                      value={poll.pollQuestionType}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required\"\r\n                                        name=\"questiontype\"\r\n                                      >\r\n                                        <>\r\n                                          <Select\r\n                                            className=\"\"\r\n                                            htmlFor=\"questiontype\"\r\n                                            className=\"required\"\r\n                                            id=\"pollQuestionType\"\r\n                                            disabled={\r\n                                              poll.status_id === 4 ||\r\n                                              poll.status_id === 1\r\n                                            }\r\n                                            value={poll.pollQuestionType}\r\n                                            onSelect={(value) =>\r\n                                              handlePollOnSelect(\r\n                                                value,\r\n                                                \"pollQuestionType\"\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <Select.Option\r\n                                              value=\"1\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType === \"4\"\r\n                                              }\r\n                                            >\r\n                                              {SELECT_SINGLE}\r\n                                            </Select.Option>\r\n                                            <Select.Option\r\n                                              value=\"2\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType === \"4\"\r\n                                              }\r\n                                            >\r\n                                              {SELECT_MULTIPLE}\r\n                                            </Select.Option>\r\n                                            <Select.Option\r\n                                              value=\"3\"\r\n                                              disabled={\r\n                                                poll.pollChartType !== \"\" &&\r\n                                                poll.pollChartType !== \"4\"\r\n                                              }\r\n                                            >\r\n                                              {STAR_RATING}\r\n                                            </Select.Option>\r\n                                          </Select>\r\n                                        </>\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} md={18} className=\"gutter-row\">\r\n                                    <FloatLabel\r\n                                      label={QUESTION}\r\n                                      value={poll.pollQuestion}\r\n                                    >\r\n                                      <Form.Item\r\n                                        className=\"required edit-input\"\r\n                                        name=\"pollQuestion\"\r\n                                        id=\"pollQuestion\"\r\n                                      >\r\n                                        <Input\r\n                                          className=\"input-control edit-input\"\r\n                                          name=\"pollQuestion\"\r\n                                          id=\"pollQuestion\"\r\n                                          htmlFor=\"pollQuestion\"\r\n                                          className=\"required\"\r\n                                          disabled={\r\n                                            poll.status_id === 4 ||\r\n                                            poll.status_id === 1\r\n                                          }\r\n                                          defaultValue={poll.pollQuestion}\r\n                                          value={poll.pollQuestion}\r\n                                          onChange={(e) => onCreateChange(e)}\r\n                                          autoComplete=\"off\"\r\n                                          maxLength={500}\r\n                                        />\r\n                                      </Form.Item>\r\n                                    </FloatLabel>\r\n                                  </Col>\r\n                                  <Col span={24} className=\"mt-4\">\r\n                                    {poll.pollQuestionType === \"3\" ? (\r\n                                      <ReactStars\r\n                                        {...starsRating}\r\n                                        value={poll.pollRatingResponse}\r\n                                        name=\"pollRatingResponse\"\r\n                                        disabled={\r\n                                          poll.status_id === 4 ||\r\n                                          poll.status_id === 1\r\n                                        }\r\n                                        onChange={(value) =>\r\n                                          handlePollOnSelect(\r\n                                            value,\r\n                                            \"pollRatingResponse\"\r\n                                          )\r\n                                        }\r\n                                        classNames=\"mt-3\"\r\n                                      />\r\n                                    ) : poll.pollQuestionType === \"1\" ? (\r\n                                      <div>\r\n                                        <MultiChoice\r\n                                          setSingleChoiceResponse={\r\n                                            setSingleChoiceResponse\r\n                                          }\r\n                                          pollResponse={poll.pollResponse}\r\n                                          disabled={\r\n                                            poll.status_id === 4 ||\r\n                                            poll.status_id === 1\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                    ) : poll.pollQuestionType === \"2\" ? (\r\n                                      <MultiChoice\r\n                                        pollResponse={poll.pollResponse}\r\n                                        setSingleChoiceResponse={\r\n                                          setSingleChoiceResponse\r\n                                        }\r\n                                        disabled={\r\n                                          poll.status_id === 4 ||\r\n                                          poll.status_id === 1\r\n                                        }\r\n                                      />\r\n                                    ) : null}\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n\r\n                              <div className=\"mt-5\">\r\n                                <Button\r\n                                  type=\"primary\"\r\n                                  className=\"md mr-4\"\r\n                                  onClick={onPreview}\r\n                                >\r\n                                  {PREVIEW}\r\n                                </Button>\r\n                                <Button\r\n                                  type=\"secondary\"\r\n                                  type=\"secondary\"\r\n                                  htmlType=\"submit\"\r\n                                  onClick={onCancel}\r\n                                >\r\n                                  {CANCEL}\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Form>\r\n                    </Spin>\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Row>\r\n          </React.Fragment>\r\n        ) : (\r\n          <EditPreviewPoll\r\n            poll={poll}\r\n            setPollsDate={setPollsDate}\r\n            backtoEdit={backtoEdit}\r\n            editPoll={editPoll}\r\n            showError={showError}\r\n            attachmentName={attachmentName}\r\n            data={props}\r\n            error={error}\r\n            loader={loader}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPoll;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Input, Divider, Breadcrumb } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport Grid from \"../table/Table\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPollAsync } from \"../../actions/poll\";\r\nimport { CREATE_POLL, POLLS, OOTB_POLL, SEARCH } from \"../../headings\";\r\nimport { OOTB_TEXT } from \"../../messages\";\r\n\r\nconst { Search } = Input;\r\nconst { Content } = Layout;\r\n\r\nclass ExistingPolls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Poll Name\",\r\n        dataIndex: \"title\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Poll Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    this.state = {\r\n      columns: columns,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(getPollAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { pollsdata } = this.props;\r\n\r\n    if (prevProps.pollsdata !== pollsdata) {\r\n      this.setState(\r\n        {\r\n          data: pollsdata,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props} />\r\n              <Content className=\"\">\r\n                <Row className=\"pt-3\">\r\n                  <Breadcrumb separator=\">\">\r\n                    <NavLink to=\"/orgcc/pollsdirectory\">\r\n                      <Breadcrumb.Item>{POLLS}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <NavLink to=\"/createpoll\">\r\n                      <Breadcrumb.Item>{CREATE_POLL}</Breadcrumb.Item>\r\n                    </NavLink>\r\n                    <Breadcrumb.Item>{OOTB_POLL}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row className=\"py-3\">\r\n                  <h1>{OOTB_TEXT}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <div className=\"mid-content\">\r\n                  <Grid\r\n                    rowKey=\"hotline_id\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                  {/* <Row>\r\n                    <Col span={24}>\r\n                      <h6 className=\"mb-4\">Poll Name</h6>\r\n                      <Row className=\"my-2\">\r\n                      <Link to=\"/\">Impact of Microaggression</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                      <Row className=\"my-2\">\r\n                        <Link to=\"/\">Microaggressions – do we have it?</Link>\r\n                      </Row>\r\n                      <Divider className=\"w-100\" />\r\n                    </Col>\r\n                  </Row> */}\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { pollsdata } = state.poll;\r\n  return {\r\n    pollsdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExistingPolls);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Upload,\r\n  Modal,\r\n} from \"antd\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\n\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { CLOSE_TEXT_MODAL, NEXT, UPLOAD_IMAGE } from \"../../headings\";\r\nimport { DATE, DESCRIPTION, OPENLINE_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n  SELECT_STATUS,\r\n  UPLOAD_IMAGE_REQUIRED,\r\n} from \"../../errors\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nconst { Option } = Select;\r\n\r\nconst CreateOpenlineStepOne = ({\r\n  next,\r\n  imageError,\r\n  stepOneOpenLineInfo,\r\n  handleStepOneOnChange,\r\n  handleStepOneOnSelect,\r\n  handleStepOneUpload,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n  handleBeforeUpload,\r\n  handleStepOneDatePickerChange,\r\n  addIcon,\r\n  getIconText,\r\n  setNameValidHandle,\r\n  hotlineErrorUpdated,\r\n}) => {\r\n  const [hotlineForm, setHotlineForm] = useState({\r\n    iconText: \"\",\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [disabledbtn, setdisabledbtn] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  const stepOneNext = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      stepOneOpenLineInfo.openelineName &&\r\n      stepOneOpenLineInfo.openelineName.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.description &&\r\n      stepOneOpenLineInfo.description.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\")\r\n        .length > 0 &&\r\n      stepOneOpenLineInfo.file &&\r\n      stepOneOpenLineInfo.file.length > 0 &&\r\n      stepOneOpenLineInfo.status &&\r\n      stepOneOpenLineInfo.sDate\r\n    ) {\r\n      if (!imageError && hotlineErrorUpdated == \"status: false\") {\r\n        showError(false);\r\n        setdisabledbtn(false);\r\n        next();\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckHotlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        BASE_URL + \"checkOpenline/\",\r\n        { openline_name: stepOneOpenLineInfo.openelineName },\r\n\r\n        options\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setNameValidHandle(res.data[0]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepOne\"\r\n      className=\"input-md w-md-100 w-75 floating-label\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      {error && (\r\n        <Form.Item>\r\n          <Alert message={REQUIRED_MESSAGE} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <FloatLabel\r\n        label={OPENLINE_NAME}\r\n        value={stepOneOpenLineInfo.openelineName}\r\n      >\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"openelineName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DIRECTORY_NAME,\r\n            },\r\n          ]}\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextArea\r\n            showCount\r\n            maxLength={80}\r\n            value={stepOneOpenLineInfo.openelineName}\r\n            onChange={(e) => handleStepOneOnChange(e)}\r\n            onBlur={(e) => CheckHotlineName(e)}\r\n            id=\"openelineName\"\r\n            className=\"input-control\"\r\n            htmlFor=\"openelineName\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {hotlineErrorUpdated == \"status: false\" &&\r\n            stepOneOpenLineInfo.openelineName\r\n              .replace(/^\\s*/, \"\")\r\n              .replace(/\\s*$/, \"\").length > 0 &&\r\n            stepOneOpenLineInfo.openelineName.length > 0 && (\r\n              <CheckCircleTwoTone\r\n                className=\"successCheck\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            )}\r\n          {hotlineErrorUpdated == \"status: true\" && (\r\n            <Alert\r\n              message={OPENLINE_ALREADY_EXISTS}\r\n              type=\"error\"\r\n              showIcon\r\n            ></Alert>\r\n          )}\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={DESCRIPTION} value={stepOneOpenLineInfo.description}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: ENTER_DESCRIPTION,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <TextArea\r\n              className=\"input-control\"\r\n              value={stepOneOpenLineInfo.description}\r\n              onChange={(e) => handleStepOneOnChange(e)}\r\n              id=\"description\"\r\n              htmlFor=\"description\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <FloatLabel label={DATE} value=\"sDate\">\r\n        <Form.Item className=\"input-control datepicker-wrapper\">\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n            name=\"sDate\"\r\n            value={stepOneOpenLineInfo.sDate}\r\n            onChange={(date) => handleStepOneDatePickerChange(date, \"sDate\")}\r\n            disabledDate={disabledDate}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: SELECT_DATE,\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n      </FloatLabel>\r\n      <FloatLabel label={STATUS} value={stepOneOpenLineInfo.status}>\r\n        <Form.Item\r\n          className=\"required\"\r\n          name=\"status\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: SELECT_STATUS,\r\n            },\r\n          ]}\r\n        >\r\n          <>\r\n            <Select\r\n              className=\"input-control w-100 w-lg-50\"\r\n              value={stepOneOpenLineInfo.status}\r\n              htmlFor=\"status\"\r\n              onSelect={(value) => handleStepOneOnSelect(value, \"status\")}\r\n            >\r\n              <Option value=\"5\">{STATUS_ACTIVE}</Option>\r\n              <Option value=\"4\">{STATUS_INACTIVE}</Option>\r\n            </Select>\r\n          </>\r\n        </Form.Item>\r\n      </FloatLabel>\r\n\r\n      <Form.Item className=\"\">\r\n        <Form.Item\r\n          className=\"upload-control required\"\r\n          name=\"upload\"\r\n          valuePropName=\"fileList\"\r\n        >\r\n          <Upload\r\n            listType=\"picture\"\r\n            fileList={stepOneOpenLineInfo.file}\r\n            beforeUpload={(value) => handleBeforeUpload(value)}\r\n            onChange={(value) => handleStepOneUpload(value, \"file\")}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n            accept=\"image/png, image/jpeg, image/gif\"\r\n          >\r\n            {stepOneOpenLineInfo.file.length === 0 && (\r\n              <Button type=\"link\" className=\"link pl-0\">\r\n                <span className=\"icon icon-upload pr-2\"></span>\r\n                {UPLOAD_IMAGE}\r\n              </Button>\r\n            )}\r\n          </Upload>\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLineInfo.previewVisible}\r\n            title={stepOneOpenLineInfo.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLineInfo.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <AddIcoModal data-test=\"addIconComponent\" addIcon={addIcon} /> */}\r\n          {getIconText(stepOneOpenLineInfo.hotlineIconId) && (\r\n            <div className=\"ant-upload-list ant-upload-list-picture\">\r\n              <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                  <span className=\"d-inline-flex align-items-center\">\r\n                    <a className=\"ant-upload-list-item-thumbnail\">\r\n                      {ReactHtmlParser(stepOneOpenLineInfo.iconHtml)}\r\n                    </a>\r\n\r\n                    <span\r\n                      className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                      title={getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    >\r\n                      {getIconText(stepOneOpenLineInfo.hotlineIconId)}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n      </Form.Item>\r\n      {imageError && (\r\n        <Form.Item>\r\n          <Alert message={UPLOAD_IMAGE_REQUIRED} type=\"error\" showIcon></Alert>\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={stepOneNext}\r\n          data-test=\"stepOneNext\"\r\n        >\r\n          {NEXT}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateOpenlineStepOne;\r\n","import React from \"react\";\r\nimport { Table, Button, Row, Col, Alert, Spin } from \"antd\";\r\nimport AssignHotlineModal from \"../modal/AssignHotlineModal\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../table/table.scss\";\r\nimport { BACK, NEXT, SEARCH_USER } from \"../../headings\";\r\nimport { ASSIGN_USERS_HOTLINES } from \"../../errors\";\r\nimport { STATUS_ACTIVE } from \"../../values\";\r\nimport { ACCESS, FIRST_NAME, LAST_NAME, MOBILE, STATUS } from \"../../labels\";\r\n\r\nclass CreateOpenlineStepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeData: \"\",\r\n      showAssigntoModal: \"false\",\r\n      showAlert: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    this.setState({ loader: true });\r\n    dispatch(getManageEmpAsync());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      this.setState(\r\n        {\r\n          employeeData: manageEmpData,\r\n          loader: false,\r\n        },\r\n        () => {\r\n          this.onSearch(\"\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { employeeData } = this.state;\r\n    const filterDt = this.filterIt(employeeData, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({\r\n      showAssigntoModal: true,\r\n    });\r\n  };\r\n\r\n  stepTwoPrev = () => {\r\n    this.props.prev();\r\n  };\r\n\r\n  stepTwoNext = () => {\r\n    if (this.props.stepTwoOpenLine.chekedValues.length !== 0) {\r\n      this.props.next();\r\n    } else {\r\n      this.setState({ showAlert: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.props.stepTwoOpenLine;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.props.handleStepTwoOnSelect,\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: FIRST_NAME,\r\n        dataIndex: \"firstname\",\r\n        key: \"firstname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: LAST_NAME,\r\n        dataIndex: \"lastname\",\r\n        key: \"lastname\",\r\n        width: \"22%\",\r\n      },\r\n      {\r\n        title: MOBILE,\r\n        dataIndex: \"Mobile_Number\",\r\n        key: \"Mobile_Number\",\r\n        width: \"21%\",\r\n      },\r\n      {\r\n        title: ACCESS,\r\n        dataIndex: \"Access\",\r\n        render: (res) => {\r\n          let test = \"\";\r\n          for (let property in res) {\r\n            if (res[property] == true) {\r\n              if (property == \"am_web\") {\r\n                property = \"AM WEB\";\r\n              }\r\n              if (property == \"org_cc_user\") {\r\n                property = \"Org CC\";\r\n              }\r\n              if (property == \"app_user\") {\r\n                property = \"APP\";\r\n              }\r\n\r\n              if (test.length == 0) test += property;\r\n              else test += \", \" + property;\r\n            }\r\n          }\r\n          return <span>{test}</span>;\r\n        },\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        // render: () => (\r\n        //   <div className=\"primary-tag-rounded tag\">\r\n        //     <span className=\"circle mr-1\"></span>Active\r\n        //   </div>\r\n        // ),\r\n        render: () => (\r\n          <div className=\"primary-tag-rounded tag\">\r\n            <span className=\"circle mr-1\"></span>\r\n            {STATUS_ACTIVE}\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Col data-test=\"createHotlineStepTwo\" span={24}>\r\n          <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n            <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n              <Row>\r\n                <Col span={24} lg={9} className=\"search-box\">\r\n                  <Search\r\n                    placeholder={SEARCH_USER}\r\n                    onSearch={this.onSearch}\r\n                  ></Search>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {this.state.showAlert && (\r\n          <Alert message={ASSIGN_USERS_HOTLINES} type=\"error\" showIcon />\r\n        )}\r\n        <Spin spinning={this.state.loader} size=\"large\">\r\n          <div id=\"no-more-tables\">\r\n            <Table\r\n              rowSelection={rowSelection}\r\n              columns={columns}\r\n              dataSource={this.state.filterData}\r\n              rowKey=\"unique_identifier\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"steps-action mt-5\">\r\n            <Button\r\n              className=\"mr-4\"\r\n              type=\"secondary\"\r\n              style={{ margin: \"0 8px\" }}\r\n              onClick={() => this.stepTwoPrev()}\r\n              data-test=\"steptwoPrev\"\r\n            >\r\n              {BACK}\r\n            </Button>\r\n            <Button\r\n              className=\"md\"\r\n              type=\"primary\"\r\n              onClick={() => this.stepTwoNext()}\r\n              data-test=\"steptwoNext\"\r\n            >\r\n              {NEXT}\r\n            </Button>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CreateOpenlineStepTwo);\r\n","import React from \"react\";\r\nimport { Form, Select, Input, Button, DatePicker, Upload, Modal } from \"antd\";\r\nimport \"../form/form.scss\";\r\nimport { STATUS_ACTIVE, STATUS_INACTIVE } from \"../../values\";\r\nimport { BACK, CLOSE_TEXT_MODAL, CREATE } from \"../../headings\";\r\nconst { TextArea } = Input;\r\n\r\nconst CreateOpenlineStepThree = ({\r\n  prev,\r\n  createNewHotLine,\r\n  stepOneOpenLine,\r\n  stepTwoOpenLine,\r\n  handleStepOnePreview,\r\n  handleCancel,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const stepThreeBack = (e) => {\r\n    e.preventDefault();\r\n    prev();\r\n  };\r\n  const generateHotLine = (e) => {\r\n    createNewHotLine();\r\n  };\r\n\r\n  const assignedUserNames = stepTwoOpenLine.selectedRows.map(\r\n    (element) => element.firstname + \" \" + element.lastname\r\n  );\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <Form\r\n      data-test=\"createHotlineStepThree\"\r\n      className=\"input-md w-md-100 w-75\"\r\n      name=\"validate_other\"\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"openelineName\">\r\n        <>\r\n          <TextArea\r\n            showCount\r\n            disabled={true}\r\n            maxLength={80}\r\n            value={stepOneOpenLine.openelineName}\r\n            id={\"openelineName\"}\r\n            className=\"input-control textarea-input\"\r\n            htmlFor=\"openelineName\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <Form.Item name=\"description\">\r\n        <>\r\n          <TextArea\r\n            disabled={true}\r\n            className=\"input-control textarea-md\"\r\n            value={stepOneOpenLine.description}\r\n            id={\"description\"}\r\n            htmlFor=\"description\"\r\n          />\r\n        </>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"input-control datepicker-wrapper\">\r\n        <>\r\n          <RangePicker\r\n            className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5\"\r\n            name=\"sdate\"\r\n            value={stepOneOpenLine.sDate}\r\n            disabled\r\n          />\r\n        </>\r\n      </Form.Item>\r\n      <div className=\"d-block d-lg-flex\">\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"status\">\r\n            <>\r\n              <Select\r\n                className=\"input-control\"\r\n                value={stepOneOpenLine.status}\r\n                htmlFor=\"status\"\r\n                disabled={true}\r\n              >\r\n                <Select.Option value=\"5\">{STATUS_ACTIVE}</Select.Option>\r\n                <Select.Option value=\"4\">{STATUS_INACTIVE}</Select.Option>{\" \"}\r\n              </Select>\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"w-100 w-lg-50 mr-0 mr-lg-5\">\r\n          <Form.Item name=\"userNames\">\r\n            <>\r\n              <Input\r\n                className=\"input-control\"\r\n                htmlFor=\"assigned to\"\r\n                id={assignedUserNames}\r\n                disabled\r\n                value={assignedUserNames.join(\", \")}\r\n              />\r\n            </>\r\n          </Form.Item>\r\n        </div>\r\n      </div>\r\n      <Form.Item className=\"w-100 w-lg-50\">\r\n        <Form.Item className=\"upload-control required\">\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture\"\r\n            disabled\r\n            fileList={stepOneOpenLine.file}\r\n            onPreview={(value) => handleStepOnePreview(value)}\r\n          ></Upload>\r\n\r\n          <Modal\r\n            className=\"modal-openline\"\r\n            visible={stepOneOpenLine.previewVisible}\r\n            title={stepOneOpenLine.previewTitle}\r\n            centered\r\n            onOk={(value) => handleCancel(value)}\r\n            okButtonProps={{\r\n              children: \"Custom OK\",\r\n            }}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            okText={CLOSE_TEXT_MODAL}\r\n          >\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\" }}\r\n              src={stepOneOpenLine.previewImage}\r\n            />\r\n          </Modal>\r\n\r\n          {/* <div className=\"ant-upload-list ant-upload-list-picture\">\r\n            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                <span className=\"d-inline-flex align-items-center\">\r\n                  <a className=\"ant-upload-list-item-thumbnail\" href=\"#\" rel=\"\">\r\n                    {ReactHtmlParser(stepOneOpenLine.iconHtml)}\r\n                  </a>\r\n\r\n                  <span\r\n                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                    title=\"women safety\"\r\n                  >\r\n                    {getIconText(stepOneOpenLine.hotlineIconId)}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <div className=\"steps-action mt-5\">\r\n        <Button\r\n          type=\"secondary\"\r\n          className=\"mr-4\"\r\n          type=\"secondary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          htmlType=\"submit\"\r\n          onClick={stepThreeBack}\r\n          data-test=\"stepThreePrev\"\r\n        >\r\n          {BACK}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"md\"\r\n          htmlType=\"submit\"\r\n          onClick={generateHotLine}\r\n          data-test=\"stepThreeNext\"\r\n        >\r\n          {CREATE}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateOpenlineStepThree;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Steps, Row, Col, Breadcrumb, message, Spin } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineCreation/hotlineCreation.scss\";\r\nimport CreateOpenlineStepOne from \"../openlineForm/CreateOpenlineStepOne\";\r\nimport CreateOpenlineStepTwo from \"../openlineForm/CreateOpenlineStepTwo\";\r\nimport CreateOpenlineStepThree from \"../openlineForm/CreateOpenlineStepThree\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport {\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  OPENLINE_CREATE_STEP1,\r\n  OPENLINE_CREATE_STEP2,\r\n  OPENLINE_CREATE_STEP3,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport {\r\n  CREATE_OPENLINE_DIRECTORY,\r\n  OPENLINE_DIRECTORY,\r\n  CREATE_OPENLINE_DIRECTORY_ENTRIES,\r\n} from \"../../headings\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: OPENLINE_CREATE_STEP1,\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP2,\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: OPENLINE_CREATE_STEP3,\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst OpenlineCreation = (props) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [imageError, setImageError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [stepOneOpenLine, setStepOneOpenLine] = useState({\r\n    openelineName: \"\",\r\n    description: \"\",\r\n    status: \"\",\r\n    sDate: \"\",\r\n    tDate: \"\",\r\n    hotlineIconId: \"\",\r\n    file: \"\",\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    previewTitle: \"\",\r\n    imagename: \"\",\r\n  });\r\n  const [hotlineErrorUpdated, setHotlineErrorUpdated] = useState(\"\");\r\n\r\n  const [stepTwoOpenLine, setStepTwoOpenLine] = useState({\r\n    selectedRows: \"\",\r\n    selectedRowKeys: [],\r\n    chekedValues: [],\r\n  });\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: value });\r\n  };\r\n\r\n  const handleBeforeUpload = (value) => {\r\n    if (!value.type.includes(\"image\")) {\r\n      setImageError(true);\r\n      message.error(\r\n        `The file that you attemped to upload ${value.name} is not supported`\r\n      );\r\n      return false;\r\n    } else {\r\n      setImageError(false);\r\n    }\r\n    return value.type;\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      [name]: fileList,\r\n      imagename: filename,\r\n    });\r\n  };\r\n\r\n  const handleReaderloaded = (readerEvt) => {\r\n    let binaryString = readerEvt.target.result;\r\n    setStepOneOpenLine({ ...stepOneOpenLine, file: btoa(binaryString) });\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    file.preview = await getBase64(file.originFileObj);\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setStepOneOpenLine({ ...stepOneOpenLine, previewVisible: false });\r\n  const setNameValidHandle = (value) => {\r\n    setHotlineErrorUpdated(value);\r\n  };\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setStepOneOpenLine({ ...stepOneOpenLine, [name]: date });\r\n  };\r\n\r\n  const addIcon = (values, id) => {\r\n    setStepOneOpenLine({\r\n      ...stepOneOpenLine,\r\n      hotlineIconId: id,\r\n      iconHtml: values,\r\n    });\r\n  };\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleStepTwoOnSelect = (selectedRowKeys, selectedRows) => {\r\n    let permissions = [];\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    let difference = selectedRows.filter(\r\n      ({ user_id: id1 }) =>\r\n        !permissions?.some(({ user_id: id2 }) => id2 === id1)\r\n    );\r\n\r\n    let per = difference.reduce((accumulator, currentValue) => {\r\n      accumulator.push({\r\n        user_id: currentValue.user_id,\r\n        can_respond: 1,\r\n        can_view_reports: 0,\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      });\r\n      return accumulator;\r\n    }, []);\r\n    permissions = permissions?.concat(per);\r\n    setStepTwoOpenLine({\r\n      ...stepTwoOpenLine,\r\n      selectedRowKeys: selectedRowKeys,\r\n      selectedRows: selectedRows,\r\n      chekedValues: permissions,\r\n    });\r\n  };\r\n\r\n  const createHotLine = async () => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n    const token = authHeader();\r\n\r\n    const data = {\r\n      create_openline: {\r\n        name: stepOneOpenLine.openelineName,\r\n        help_text: stepOneOpenLine.description,\r\n        openline_image: stepOneOpenLine.file[0].base64,\r\n        openline_image_name: stepOneOpenLine.imagename,\r\n        start_date: stepOneOpenLine.sDate[0]\r\n          ? moment(stepOneOpenLine.sDate[0]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        end_date: stepOneOpenLine.sDate[1]\r\n          ? moment(stepOneOpenLine.sDate[1]).format(\"DD-MM-YYYY\")\r\n          : \"\",\r\n        created_by: parseInt(\r\n          CryptoJS.AES.decrypt(\r\n            user.user_details.org_user_id,\r\n            \"anonymoose\"\r\n          ).toString(CryptoJS.enc.Utf8)\r\n        ),\r\n      },\r\n      permissions: stepTwoOpenLine.chekedValues,\r\n    };\r\n\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    setLoader(true);\r\n    axios.post(BASE_URL + \"openline/\", data, options).then(() => {\r\n      window.location = \"/orgcc/openlinedirectory\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"hotlineCreation\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"pt-3\">\r\n                <Breadcrumb separator=\">\">\r\n                  <NavLink to=\"/orgcc/openlinedirectory\">\r\n                    <Breadcrumb.Item>{OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                  </NavLink>\r\n                  <Breadcrumb.Item>{CREATE_OPENLINE_DIRECTORY}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Row>\r\n              <Row className=\"py-3\">\r\n                <h1 className=\"mb-0\">{CREATE_OPENLINE_DIRECTORY_ENTRIES}</h1>\r\n              </Row>\r\n              <Steps className=\"mt-2\" current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <div className=\"steps-content\">\r\n                        {current == 0 ? (\r\n                          <CreateOpenlineStepOne\r\n                            next={next}\r\n                            imageError={imageError}\r\n                            stepOneOpenLineInfo={stepOneOpenLine}\r\n                            handleStepOneOnChange={handleStepOneOnChange}\r\n                            handleStepOneOnSelect={handleStepOneOnSelect}\r\n                            handleStepOneUpload={handleStepOneUpload}\r\n                            handleBeforeUpload={handleBeforeUpload}\r\n                            handleStepOnePreview={handleStepOnePreview}\r\n                            handleCancel={handleCancel}\r\n                            handleStepOneDatePickerChange={\r\n                              handleStepOneDatePickerChange\r\n                            }\r\n                            addIcon={addIcon}\r\n                            getIconText={getIconText}\r\n                            setNameValidHandle={setNameValidHandle}\r\n                            hotlineErrorUpdated={hotlineErrorUpdated}\r\n                            data-test=\"CreateHotlineStepOne\"\r\n                          />\r\n                        ) : current == 1 ? (\r\n                          <CreateOpenlineStepTwo\r\n                            next={next}\r\n                            prev={prev}\r\n                            stepOneHotLine={stepOneOpenLine}\r\n                            stepTwoOpenLine={stepTwoOpenLine}\r\n                            handleStepTwoOnSelect={handleStepTwoOnSelect}\r\n                          />\r\n                        ) : current == 2 ? (\r\n                          <CreateOpenlineStepThree\r\n                            prev={prev}\r\n                            createNewHotLine={createHotLine}\r\n                            stepOneOpenLine={stepOneOpenLine}\r\n                            stepTwoOpenLine={stepTwoOpenLine}\r\n                            getIconText={getIconText}\r\n                            handleStepOnePreview={handleStepOnePreview}\r\n                            handleCancel={handleCancel}\r\n                          />\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OpenlineCreation;\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Row, Col, Divider, Button } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../hotlineDirectory/hotlineDirectory.scss\";\r\nimport CreateHotline from \"../../assets/images/create-hotline.svg\";\r\nimport OpenlineCreation from \"../../components/openlineCreation/OpenlineCreation\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { CREATE, OPENLINE_DIRECTORY } from \"../../headings\";\r\nimport {\r\n  CREATE_NEW_OPENLINE_TEXT_PART1,\r\n  CREATE_NEW_OPENLINE_TEXT_PART2,\r\n} from \"../../messages\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OpenlineDirectory = (props) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const showBtn = () => {\r\n    setShowResult(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {!showResult === true ? (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Row className=\"inner-header\">\r\n            <LoggedinHeader amORGUser />\r\n          </Row>\r\n          <Row className=\"content-center pt-0\">\r\n            <Layout>\r\n              <Layout>\r\n                <OrgSidebar amORGUser data={props.data} />\r\n                <Content data-test=\"Directory\" className=\"\">\r\n                  <Row className=\"py-3\">\r\n                    <h1 className=\"mb-0\">{OPENLINE_DIRECTORY}</h1>\r\n                  </Row>\r\n                  <div className=\"mid-content d-flex justify-content-center align-items-center\">\r\n                    <Row>\r\n                      <Col span={24}>\r\n                        <div className=\"c-vector-area\">\r\n                          <img\r\n                            src={CreateHotline}\r\n                            alt=\"Create Hotline\"\r\n                            className=\"pr-4\"\r\n                          />\r\n                        </div>\r\n                        <p className=\"text-center pt-3\">\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART1}\r\n                          <br />\r\n                          {CREATE_NEW_OPENLINE_TEXT_PART2}\r\n                        </p>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                          <Divider className=\"mt-1\" />\r\n                        </Row>\r\n                        <Col\r\n                          span={24}\r\n                          className=\"d-flex align-items-center justify-content-center\"\r\n                        >\r\n                          <Button\r\n                            data-test=\"createHotline\"\r\n                            onClick={showBtn}\r\n                            type=\"primary\"\r\n                          >\r\n                            {CREATE}\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : (\r\n        <OpenlineCreation />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OpenlineDirectory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Col, Checkbox } from \"antd\";\r\n\r\nimport \"./table.scss\";\r\nimport { ACTIONS, NAME, RESPOND } from \"../../labels\";\r\n\r\nconst OpenlinePermission = ({ data, deleteRecord, handleCheck }) => {\r\n  const [permissionData, setPermissionaData] = useState();\r\n\r\n  useEffect(() => {\r\n    changeDataSource();\r\n  }, [data]);\r\n\r\n  const changeDataSource = () => {\r\n    setPermissionaData(data);\r\n  };\r\n\r\n  const onDelete = (key, e) => {\r\n    e.preventDefault();\r\n    deleteRecord(key);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: NAME,\r\n      dataIndex: \"first_name\",\r\n      key: \"first_name\",\r\n      width: \"30%\",\r\n      render: (record, response) => {\r\n        return {\r\n          children: response.user.first_name,\r\n          props: {\r\n            \"data-title\": \"Name\",\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: RESPOND,\r\n      dataIndex: \"can_respond\",\r\n      key: \"can_respond\",\r\n      width: \"20%\",\r\n      editable: true,\r\n      render: (res, record) => (\r\n        <Col span={12} className=\"d-flex justify-content-end changeColor\">\r\n          <Checkbox\r\n            value=\"reports\"\r\n            checked={res}\r\n            onChange={(e) => handleCheck(record)}\r\n            disabled\r\n          ></Checkbox>\r\n        </Col>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Reports\",\r\n    //   dataIndex: \"can_view_reports\",\r\n    //   key: \"can_view_reports\",\r\n    //   width: \"20%\",\r\n    //   editable: true,\r\n    //   render: (res) => (\r\n    //     <Col span={12} className=\"d-flex justify-content-end\">\r\n    //       <Checkbox value=\"reports\" checked={res}></Checkbox>\r\n    //     </Col>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: ACTIONS,\r\n      dataIndex: \"user_id\",\r\n      key: \"user_id\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <span\r\n          onClick={(e) => {\r\n            onDelete(record, e);\r\n          }}\r\n          className=\"uploaded-icon icon icon-close d-inline-flex justify-content-end align-items-center\"\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n  var locale = {\r\n    emptyText: \"  \",\r\n  };\r\n  return (\r\n    <div className=\"no-bordered-grid\">\r\n      <Table\r\n        className=\"no-bg-table\"\r\n        locale={locale}\r\n        rowClassName={() => \"editable-row\"}\r\n        columns={columns}\r\n        dataSource={permissionData}\r\n        rowKey={\"rowkey\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenlinePermission;\r\n","import React, { useState } from \"react\";\r\nimport { AutoComplete, Alert } from \"antd\";\r\nimport \"./autocomplete.scss\";\r\nimport { SEARCH_EMPLOYEE } from \"../../headings\";\r\n\r\nconst SearchEmployee = ({ searchData, addAssignUser, data }) => {\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [addedUser, setAddedUser] = useState(\"\");\r\n\r\n  const onSelectSearch = (value, option) => {\r\n    let user = data.filter((d) => d.user.user_id === option.user_id);\r\n    if (user.length > 0) {\r\n      setIsAdded(true);\r\n      setAddedUser(value);\r\n    } else {\r\n      addAssignUser(value, option);\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    setIsAdded(false);\r\n    setAddedUser(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdded && (\r\n        <Alert\r\n          data-test=\"alert\"\r\n          message={`${addedUser} is already assigned for this openline.`}\r\n          type=\"error\"\r\n          showIcon\r\n        ></Alert>\r\n      )}\r\n\r\n      <AutoComplete\r\n        data-test=\"Searchuser\"\r\n        options={searchData}\r\n        placeholder={SEARCH_EMPLOYEE}\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n        onSelect={(val, option) => onSelectSearch(val, option)}\r\n        onChange={() => onChange()}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default SearchEmployee;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Col, Row, Spin } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport OpenlinePermission from \"../table/OpenlinePermission\";\r\nimport SearchEmployee from \"../autocomplete/SearchEmployee\";\r\nimport { connect } from \"react-redux\";\r\nimport { getManageEmpAsync } from \"../../actions/manageEmp\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, DONE, SHOW } from \"../../headings\";\r\nimport {\r\n  ASSIGN_HOTLINE_TEXT_PART2,\r\n  HIT_ENTER_TO_ADD,\r\n  OPENLINE_PERMISSION_TEXT_PART1,\r\n} from \"../../messages\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nclass OpenlinePermissioModal extends Component {\r\n  state = {\r\n    visible: false,\r\n    assignedOpenLines: \"\",\r\n    hotLineName: \"\",\r\n    assignedEmp: \"\",\r\n    loader: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n      employeeData: [],\r\n      hotLineName: this.props.selectedRows.name,\r\n      openlineId: this.props.selectedRows.openline_id,\r\n      loader: true,\r\n    });\r\n    const { dispatch } = this.props;\r\n    dispatch(getManageEmpAsync());\r\n    this.getAssignedEmployee();\r\n  };\r\n\r\n  getAssignedEmployee = () => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        BASE_URL +\r\n          \"getOpenlineAssignEmpl/\" +\r\n          this.props.selectedRows.openline_id,\r\n        options\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          assignedOpenLines: res.data,\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(BASE_URL + \"openlineAssignEmpl/\", this.state.assignedEmp, options)\r\n      .then((res) => {\r\n        this.getAssignedEmployee();\r\n        this.setState({\r\n          assignedEmp: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  handleCheck = (record) => {\r\n    let assignedOpenLines = [...this.state.assignedOpenLines];\r\n    let index = assignedOpenLines.findIndex(\r\n      (el) => el.user_id === record.user_id\r\n    );\r\n    assignedOpenLines[index] = {\r\n      ...assignedOpenLines[index],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedOpenLines });\r\n\r\n    let assignedEmp = [...this.state.assignedEmp];\r\n    let aindex = assignedEmp.findIndex((el) => el.user_id === record.user_id);\r\n    assignedEmp[aindex] = {\r\n      ...assignedEmp[aindex],\r\n      can_respond: !record.can_respond,\r\n    };\r\n    this.setState({ assignedEmp });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteRecord = (value) => {\r\n    var obj = {\r\n      user_id: value.user.user_id,\r\n    };\r\n    const newArray =\r\n      this.state.assignedEmp &&\r\n      this.state.assignedEmp.filter(function (element) {\r\n        return element.user_id !== value.user.user_id;\r\n      });\r\n    this.setState({\r\n      assignedEmp: newArray,\r\n    });\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      data: JSON.stringify({ user_id: value.user.user_id }),\r\n    };\r\n    axios\r\n      .delete(\r\n        BASE_URL + \"getOpenlineAssignEmpl/\" + value.openline.openline_id,\r\n        options\r\n      )\r\n      .then(() => {\r\n        this.getAssignedEmployee();\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  addUser = (value, options) => {\r\n    const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n    const { assignedOpenLines, assignedEmp } = this.state;\r\n    const x = {\r\n      user: {\r\n        user_id: parseInt(options.user_id),\r\n        first_name: options.value,\r\n      },\r\n      openline: {\r\n        openline_id: this.state.openlineId,\r\n      },\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n    };\r\n    const y = {\r\n      openline_id: this.state.openlineId,\r\n      user_id: parseInt(options.user_id),\r\n      can_respond: true,\r\n      can_view_reports: false,\r\n      created_by: parseInt(\r\n        CryptoJS.AES.decrypt(\r\n          user.user_details.org_user_id,\r\n          \"anonymoose\"\r\n        ).toString(CryptoJS.enc.Utf8)\r\n      ),\r\n    };\r\n\r\n    this.setState({\r\n      assignedOpenLines: [...assignedOpenLines, x],\r\n      assignedEmp: [...assignedEmp, y],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { manageEmpData } = this.props;\r\n    var newArray = [];\r\n    if (prevProps.manageEmpData != manageEmpData) {\r\n      for (var i = 0; i < manageEmpData.length; i++) {\r\n        newArray.push({\r\n          value: manageEmpData[i].firstname.concat(\r\n            \" \",\r\n            manageEmpData[i].lastname\r\n          ),\r\n          user_id: manageEmpData[i].user_id,\r\n        });\r\n      }\r\n      this.setState({ employeeData: newArray });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>{SHOW}</a>\r\n        <Modal\r\n          className=\"modal-checkbox\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={590}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n            className: \"ant-btn-secondary\",\r\n          }}\r\n          okText={DONE}\r\n          cancelText={CANCEL}\r\n        >\r\n          <div>\r\n            {OPENLINE_PERMISSION_TEXT_PART1} {this.state.hotLineName}\r\n          </div>\r\n\r\n          <Row className=\"mt-2 mt-lg-5 mb-3 thead-outer\">\r\n            <Col span={10}>{ASSIGN_HOTLINE_TEXT_PART2}</Col>\r\n            {/* <Col span={5}>View Reports</Col> */}\r\n          </Row>\r\n          <Spin spinning={this.state.loader} size=\"large\">\r\n            <OpenlinePermission\r\n              data={this.state.assignedOpenLines}\r\n              deleteRecord={this.deleteRecord}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          </Spin>\r\n          <Row className=\"mb-2 autocomplete\">\r\n            <Col span={24}>\r\n              <SearchEmployee\r\n                searchData={this.state.employeeData}\r\n                addAssignUser={this.addUser}\r\n                data={this.state.assignedOpenLines}\r\n              />\r\n              <small>{HIT_ENTER_TO_ADD}</small>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { assignhotlines } = state.assignedHotline;\r\n  const { manageEmpData } = state.manageEmp;\r\n  const { message } = state.message;\r\n  return {\r\n    assignhotlines,\r\n    manageEmpData,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlinePermissioModal);\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport \"../modal/modal.scss\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport { NO_TEXT_MODAL, YES_TEXT_MODAL } from \"../../headings\";\r\nimport { DELETE_CONFIRM_OPENLINE } from \"../../messages\";\r\n\r\nclass DeleteOpenlineModal extends Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.deleteHotline();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  deleteHotline() {\r\n    const { history } = this.props;\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .delete(BASE_URL + \"openline/\" + this.props.openlineId, options)\r\n      .then(() => {\r\n        window.location = \"/orgcc/openlinedirectory\";\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a onClick={this.showModal}>Delete</a>\r\n        <Modal\r\n          title=\"Delete Openline\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          centered\r\n          width={370}\r\n          okButtonProps={{\r\n            children: \"Custom OK\",\r\n          }}\r\n          cancelButtonProps={{\r\n            children: \"Custom cancel\",\r\n          }}\r\n          okText={YES_TEXT_MODAL}\r\n          cancelText={NO_TEXT_MODAL}\r\n        >\r\n          <p>{DELETE_CONFIRM_OPENLINE}</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteOpenlineModal;\r\n","import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteOpenlineModal from \"../../components/modal/DeleteOpenlineModal\";\r\nimport dotsicon from \"../../assets/icons/dots-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EDIT } from \"../../headings\";\r\n\r\nconst content = (test) => (\r\n  <div>\r\n    <ul>\r\n      <Link to={{ pathname: \"/orgcc/editopenline\", state: test }}>\r\n        <li>\r\n          <a href=\"/orgcc/editopenline\">{EDIT}</a>{\" \"}\r\n        </li>\r\n      </Link>\r\n      <li>\r\n        <DeleteOpenlineModal openlineId={test.openline_id} />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nclass OpenlinePopover extends React.Component {\r\n  state = {\r\n    visible: false,\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({ visible });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={content(this.props.data)}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n        >\r\n          <span className=\"ico-grid-dots\">\r\n            <img src={dotsicon} alt=\"DotIcon\" className=\"pr-4\" />\r\n          </span>\r\n        </Popover>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenlinePopover;\r\n","import React from \"react\";\r\nimport { Layout, Row, Col, Input, Spin, notification } from \"antd\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport \"../manageEmp/manageEmp.scss\";\r\nimport Grid from \"../table/Table\";\r\nimport Buttons from \"../button/Button\";\r\nimport { AudioOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OpenlinePermissioModal from \"../modal/OpenlinePermissioModal\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport moment from \"moment\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport OpenlinePopover from \"../table/OpenlinePopover\";\r\nimport {\r\n  STATUS_CHANGED_NOTIFICATION_PART1,\r\n  STATUS_CHANGED_NOTIFICATION_PART2,\r\n  STATUS_CHANGED_NOTIFICATION_PART3,\r\n} from \"../../messages\";\r\nimport {\r\n  END_DATE,\r\n  OPENLINE_NAME,\r\n  PERMISSIONS,\r\n  START_DATE,\r\n  STATUS,\r\n} from \"../../labels\";\r\nimport { STATUS_INACTIVE, STATUS_ACTIVE } from \"../../values\";\r\nimport { OPENLINE_DIRECTORY, SEARCH } from \"../../headings\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: \"#1890ff\",\r\n    }}\r\n  />\r\n);\r\nconst { Content } = Layout;\r\n\r\nclass ShowAllOpenlines extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { openlines } = this.props;\r\n    openlines?.forEach((openline) => {\r\n      openline.start_date = moment(openline.start_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n      openline.end_date = moment(openline.end_date)\r\n        .utc()\r\n        .local()\r\n        .format(\"MM / DD / YYYY\");\r\n    });\r\n    this.setState({ data: openlines }, () => {\r\n      this.onSearch(\"\");\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.props.openlines !== nextProps.openlines) {\r\n      nextProps.openlines?.forEach((openline) => {\r\n        openline.start_date = moment(openline.start_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n        openline.end_date = moment(openline.end_date)\r\n          .utc()\r\n          .local()\r\n          .format(\"MM / DD / YYYY\");\r\n      });\r\n      this.setState({ data: nextProps.openlines }, () => {\r\n        this.onSearch(\"\");\r\n      });\r\n    }\r\n  }\r\n\r\n  statusClicked = (record, via) => {\r\n    const endDate = record.end_date.replaceAll(\" / \", \"/\");\r\n    if (new Date() < new Date(endDate)) {\r\n      const data = {\r\n        status_id: via === \"Active\" ? 4 : 5,\r\n      };\r\n      const token = authHeader();\r\n      const options = {\r\n        headers: {\r\n          Authorization: token,\r\n          Accept: \"application/json, text/plain\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      };\r\n      axios\r\n        .put(\r\n          BASE_URL + \"changeOpenlineStatus/\" + record.openline_id + \"/\",\r\n          data,\r\n          options\r\n        )\r\n        .then(() => {\r\n          notification.config({\r\n            placement: \"bottomLeft\",\r\n          });\r\n          notification.open({\r\n            description:\r\n              STATUS_CHANGED_NOTIFICATION_PART1 +\r\n              record.name +\r\n              STATUS_CHANGED_NOTIFICATION_PART2,\r\n          });\r\n          this.props.statusOnClicked();\r\n        });\r\n    } else {\r\n      notification.config({\r\n        placement: \"bottomLeft\",\r\n      });\r\n      notification.open({\r\n        description:\r\n          STATUS_CHANGED_NOTIFICATION_PART1 +\r\n          record.name +\r\n          STATUS_CHANGED_NOTIFICATION_PART3,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterIt(arr, searchKey) {\r\n    if (!searchKey || searchKey === \"\" || searchKey === null) {\r\n      return arr;\r\n    }\r\n    return arr.filter(function (obj) {\r\n      return Object.keys(obj).some(function (key) {\r\n        if (typeof obj[key] === \"string\") {\r\n          return obj[key].toUpperCase().includes(searchKey.toUpperCase());\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSearch = (value) => {\r\n    const { data } = this.state;\r\n    const filterDt = this.filterIt(data, value);\r\n    this.setState({ filterData: filterDt });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: OPENLINE_NAME,\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"22%\",\r\n        render: (name) => {\r\n          return {\r\n            children: name,\r\n            props: {\r\n              \"data-title\": \"Openline Name\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: START_DATE,\r\n        dataIndex: \"start_date\",\r\n        key: \"start_date\",\r\n        width: \"22%\",\r\n        render: (start_date) => {\r\n          return {\r\n            children: start_date,\r\n            props: {\r\n              \"data-title\": \"Start Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: END_DATE,\r\n        dataIndex: \"end_date\",\r\n        key: \"end_date\",\r\n        width: \"21%\",\r\n        render: (end_date) => {\r\n          return {\r\n            children: end_date,\r\n            props: {\r\n              \"data-title\": \"End Date\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: PERMISSIONS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"20%\",\r\n        render: (selectedRows) => {\r\n          return {\r\n            children: (\r\n              <div>\r\n                <OpenlinePermissioModal selectedRows={selectedRows} />\r\n              </div>\r\n            ),\r\n            props: {\r\n              \"data-title\": \"Permissions\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: STATUS,\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"10%\",\r\n        render: (record) => {\r\n          return {\r\n            children:\r\n              record.status_id === 5 ? (\r\n                <div\r\n                  className=\"primary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"Active\")}\r\n                >\r\n                  <span className=\"circle mr-1\"></span>\r\n                  {STATUS_ACTIVE}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"secondary-tag-rounded tag\"\r\n                  onClick={() => this.statusClicked(record, \"InActive\")}\r\n                >\r\n                  {STATUS_INACTIVE}\r\n                </div>\r\n              ),\r\n            props: {\r\n              \"data-title\": \"Status\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        width: \"5%\",\r\n        render: (record) => {\r\n          return {\r\n            children: <OpenlinePopover data={record} />,\r\n            props: {\r\n              \"data-title\": \"Action\",\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Row className=\"inner-header\">\r\n          <LoggedinHeader amORGUser />\r\n        </Row>\r\n        <Row className=\"content-center pt-0\">\r\n          <Layout>\r\n            <Layout>\r\n              <OrgSidebar amORGUser data={this.props.data} />\r\n              <Content className=\"\">\r\n                <Row className=\"py-3\">\r\n                  <h1>{OPENLINE_DIRECTORY}</h1>\r\n                </Row>\r\n                <Col span={24}>\r\n                  <Row className=\"pt-1 pb-3 px-3 px-lg-0 sm-direction-reverse\">\r\n                    <Col span={24} lg={18} className=\"search-row mt-2 mt-lg-0\">\r\n                      <Row>\r\n                        <Col span={24} lg={9} className=\"search-box\">\r\n                          <Search\r\n                            placeholder={SEARCH}\r\n                            onSearch={this.onSearch}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      span={24}\r\n                      lg={6}\r\n                      className=\"d-flex align-items-center justify-content-end\"\r\n                    >\r\n                      <Link to=\"/orgcc/createopenline\">\r\n                        <Buttons value=\"Create Openline\" />\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Spin spinning={this.props.loader} size=\"large\">\r\n                  <Grid\r\n                    rowKey=\"openline_id\"\r\n                    columns={columns}\r\n                    data={this.state.filterData}\r\n                  />\r\n                </Spin>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllOpenlines;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OpenlineDirectory from \"./OpenlineDirectory\";\r\nimport ShowAllOpenlines from \"./ShowAllOpenlines\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOpelineAsync } from \"../../actions/openline\";\r\n\r\nconst OpenlineContainer = (props) => {\r\n  const [statusClicked, setStatusClicked] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  useEffect(() => {\r\n    const { dispatch } = props;\r\n    dispatch(getOpelineAsync());\r\n  }, [statusClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.openlinesdata === null) {\r\n      setLoader(true);\r\n    } else if (props.openlinesdata !== null) {\r\n      setLoader(false);\r\n    }\r\n  }, [props.openlinesdata]);\r\n\r\n  const statusOnClicked = () => {\r\n    setStatusClicked(!statusClicked);\r\n  };\r\n\r\n  return !loader &&\r\n    props.openlinesdata !== null &&\r\n    props.openlinesdata.length === 0 ? (\r\n    <OpenlineDirectory data={props} />\r\n  ) : (\r\n    <ShowAllOpenlines\r\n      statusOnClicked={statusOnClicked}\r\n      openlines={props.openlinesdata}\r\n      data={props}\r\n      loader={loader}\r\n    />\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { openlinesdata } = state.openline;\r\n  return {\r\n    openlinesdata,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OpenlineContainer);\r\n","import UserService from '../services/user.service';\r\n\r\nimport{\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS,\r\n    SET_MESSAGE\r\n    } from \"./types\";\r\n\r\n    export const getOpelineAsync=()=>(dispatch)=>{\r\n        return UserService.getOpenlines().then((data)=>{\r\n            dispatch({\r\n                type:OPENLINE_SUCCESS,\r\n                payload:{openlinesdata:data.data},\r\n                \r\n            });    \r\n            \r\n            return Promise.resolve();\r\n        }, \r\n        (error)=>{\r\n            const message=\r\n            (error.response&&\r\n                error.response.data && error.response.data.message)||\r\n                error.message||\r\n                error.toString();\r\n            dispatch({\r\n                type:OPENLINE_FAIL,\r\n            });\r\n            \r\n            dispatch({\r\n                type:SET_MESSAGE,\r\n                payload:message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        );\r\n    };\r\n\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  Alert,\r\n  Row,\r\n  Layout,\r\n  Upload,\r\n  Spin,\r\n  Modal,\r\n} from \"antd\";\r\nimport * as AppStorage from \"../../utils/AppStorage\";\r\nimport moment from \"moment\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport axios from \"axios\";\r\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\r\nimport FloatLabel from \"../form/FloatLabels\";\r\nimport { LoggedinHeader } from \"../../containers\";\r\nimport OrgSidebar from \"../../containers/OrgSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../form/form.scss\";\r\nimport { BASE_URL } from \"../../userconfig\";\r\nimport { CANCEL, EDIT_OPENLINE, UPDATE, UPLOAD_IMAGE } from \"../../headings\";\r\nimport {\r\n  STATUS_INACTIVE,\r\n  STATUS_ACTIVE,\r\n  CYBER_BULLYING,\r\n  DISCRIMINATION,\r\n  FIGHT,\r\n  RACISM,\r\n  SEXUAL_HARRASMENT,\r\n  SLAP,\r\n  VIOLENCE,\r\n} from \"../../values\";\r\nimport { DATE, DESCRIPTION, DIRECTORY_NAME, STATUS } from \"../../labels\";\r\nimport {\r\n  ENTER_DESCRIPTION,\r\n  ENTER_DIRECTORY_NAME,\r\n  OPENLINE_ALREADY_EXISTS,\r\n  REQUIRED_MESSAGE,\r\n  SELECT_DATE,\r\n} from \"../../errors\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst EditOpenline = (props) => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [openLineData, setOpenLineData] = useState({\r\n    end_date: \"\",\r\n    help_text: \"\",\r\n    openline_id: \"\",\r\n    name: \"\",\r\n    start_date: \"\",\r\n    openline_image: \"\",\r\n    openline_image_name: \"\",\r\n    status_id: \"\",\r\n    iconHtml: \"\",\r\n    ImgfileList: [],\r\n  });\r\n  const [error, showError] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [openlineErrorUpdated, setopenlineErrorUpdated] = useState(\"\");\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const sDate = moment(location.state.start_date).format(\"YYYY-MM-DD\");\r\n    const eDate = moment(location.state.end_date).format(\"YYYY-MM-DD\");\r\n    let dates = [moment(sDate, \"YYYY/MM/DD\"), moment(eDate, \"YYYY/MM/DD\")];\r\n\r\n    setOpenLineData({\r\n      end_date: \"\",\r\n      help_text: location.state.help_text,\r\n      openline_id: location.state.openline_id,\r\n      name: location.state.name,\r\n      start_date: dates,\r\n      openline_image: location.state.openline_image,\r\n      openline_image_name: location.state.openline_image_name,\r\n      status_id: location.state.status_id.toString(),\r\n      ImgfileList: [\r\n        {\r\n          uid: \"1\",\r\n          name: location.state.openline_image_name,\r\n          status: \"done\",\r\n          url: location.state.openline_image,\r\n        },\r\n      ],\r\n    });\r\n    form.setFieldsValue({\r\n      name: location.state.name,\r\n      help_text: location.state.help_text,\r\n    });\r\n  }, []);\r\n\r\n  const handleStepOneOnChange = (e) => {\r\n    setOpenLineData({ ...openLineData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleStepOneDatePickerChange = (date, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: date });\r\n  };\r\n\r\n  const handleStepOneOnSelect = (value, name) => {\r\n    setOpenLineData({ ...openLineData, [name]: value });\r\n  };\r\n\r\n  function convertImgToBase64(url, callback, outputFormat) {\r\n    var canvas = document.createElement(\"CANVAS\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = new Image();\r\n    img.crossOrigin = \"Anonymous\";\r\n    img.onload = function () {\r\n      canvas.height = img.height;\r\n      canvas.width = img.width;\r\n      ctx.drawImage(img, 0, 0);\r\n      var dataURL = canvas.toDataURL(outputFormat || \"image/png\");\r\n      callback.call(this, dataURL);\r\n      // Clean up\r\n      canvas = null;\r\n    };\r\n    img.src = url;\r\n  }\r\n\r\n  const editOpenline = (e) => {\r\n    if (\r\n      openLineData.name &&\r\n      openLineData.name.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length > 0 &&\r\n      openLineData.help_text &&\r\n      openLineData.help_text.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").length >\r\n        0 &&\r\n      openLineData.openline_image.length > 0 &&\r\n      openLineData.status_id &&\r\n      openLineData.start_date\r\n    ) {\r\n      setLoader(true);\r\n      showError(false);\r\n      e.preventDefault();\r\n      const user = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n      let data = {};\r\n      if (openLineData.ImgfileList[0].uid === \"1\") {\r\n        convertImgToBase64(openLineData.openline_image, function (base64Img) {\r\n          data = {\r\n            end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n            help_text: openLineData.help_text,\r\n            openline_id: openLineData.openline_id,\r\n            openline_image: base64Img,\r\n            name: openLineData.name,\r\n            openline_image_name: openLineData.openline_image_name,\r\n            start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n            status_id: parseInt(openLineData.status_id),\r\n            updated_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n            created_by: parseInt(\r\n              CryptoJS.AES.decrypt(\r\n                user.user_details.org_user_id,\r\n                \"anonymoose\"\r\n              ).toString(CryptoJS.enc.Utf8)\r\n            ),\r\n          };\r\n\r\n          if (\r\n            openlineErrorUpdated == \"status: false\" ||\r\n            openLineData.name === location.state.name\r\n          ) {\r\n            updateOpenLine(data);\r\n          }\r\n        });\r\n      } else {\r\n        data = {\r\n          end_date: moment(openLineData.start_date[1]).format(\"DD-MM-YYYY\"),\r\n          help_text: openLineData.help_text,\r\n          openline_id: openLineData.openline_id,\r\n          openline_image: openLineData.ImgfileList[0].base64,\r\n          name: openLineData.name,\r\n          openline_image_name: openLineData.openline_image_name,\r\n          start_date: moment(openLineData.start_date[0]).format(\"DD-MM-YYYY\"),\r\n          status_id: parseInt(openLineData.status_id),\r\n          updated_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n          created_by: parseInt(\r\n            CryptoJS.AES.decrypt(\r\n              user.user_details.org_user_id,\r\n              \"anonymoose\"\r\n            ).toString(CryptoJS.enc.Utf8)\r\n          ),\r\n        };\r\n        if (\r\n          openlineErrorUpdated == \"status: false\" ||\r\n          openLineData.name === location.state.name\r\n        ) {\r\n          updateOpenLine(data);\r\n        }\r\n      }\r\n    } else {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  const cancelHotline = (e) => {\r\n    window.location = \"/orgcc/openlinedirectory\";\r\n  };\r\n\r\n  const updateOpenLine = (data) => {\r\n    const token = authHeader();\r\n    let openLineId = openLineData.openline_id;\r\n    delete openLineData.hotline_id;\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    axios\r\n      .put(BASE_URL + \"openline/\" + openLineId + \"/\", data, options)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoader(false);\r\n          window.location = \"/orgcc/openlinedirectory\";\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleStepOneUpload = (value, name) => {\r\n    let fileList = value.fileList.slice(-1);\r\n    let filename = value.file.name;\r\n    fileList.forEach(function (file, index) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        file.base64 = e.target.result;\r\n        file.response = \"Uploaded successfully\";\r\n      };\r\n      reader.readAsDataURL(file.originFileObj);\r\n    });\r\n    // setOpenLineData({ ...openLineData, [name]: fileList });\r\n    setOpenLineData({\r\n      ...openLineData,\r\n      ImgfileList: fileList,\r\n      openline_image: fileList,\r\n      openline_image_name: filename,\r\n    });\r\n\r\n    if (value.file.status === \"removed\") {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        ImgfileList: [],\r\n        openline_image: \"\",\r\n        openline_image_name: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStepOnePreview = async (file) => {\r\n    if (file.uid === \"1\") {\r\n      convertImgToBase64(file.url, function (base64Img) {\r\n        // await toImgDataURL(proxyUrl + file.url, function (dataURL) {\r\n        setOpenLineData({\r\n          ...openLineData,\r\n          previewImage: base64Img,\r\n          previewVisible: true,\r\n          previewTitle: file.name,\r\n        });\r\n      });\r\n    } else {\r\n      setOpenLineData({\r\n        ...openLineData,\r\n        previewImage: file.base64,\r\n        previewVisible: true,\r\n        previewTitle: file.name,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOnRemove = (value, name) => {\r\n    setOpenLineData({ ...openLineData, fileList: [] });\r\n  };\r\n\r\n  const handleCancel = (value) =>\r\n    setOpenLineData({ ...openLineData, previewVisible: false });\r\n\r\n  function toImgDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"get\", url);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        callback(this.result);\r\n      };\r\n\r\n      fr.readAsDataURL(xhr.response); // async call\r\n    };\r\n\r\n    xhr.send();\r\n  }\r\n\r\n  const getIconText = (id) => {\r\n    switch (id) {\r\n      case \"1\":\r\n        return SEXUAL_HARRASMENT;\r\n      case \"2\":\r\n        return VIOLENCE;\r\n      case \"3\":\r\n        return RACISM;\r\n      case \"4\":\r\n        return CYBER_BULLYING;\r\n      case \"5\":\r\n        return FIGHT;\r\n      case \"6\":\r\n        return DISCRIMINATION;\r\n      case \"7\":\r\n        return SLAP;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const CheckOpenlineName = (e) => {\r\n    const token = authHeader();\r\n    const options = {\r\n      headers: {\r\n        Authorization: token,\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    };\r\n    if (e.target.value !== location.state.name) {\r\n      axios\r\n        .post(\r\n          BASE_URL + \"checkOpenline/\",\r\n          { openline_name: e.target.value },\r\n          options\r\n        )\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setopenlineErrorUpdated(res.data[0]);\r\n          }\r\n        });\r\n    } else {\r\n      setopenlineErrorUpdated(false);\r\n    }\r\n  };\r\n\r\n  const { RangePicker } = DatePicker;\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"inner-header\">\r\n        <LoggedinHeader amORGUser />\r\n      </Row>\r\n      <Row className=\"content-center pt-0\" data-test=\"manageEmp\">\r\n        <Layout>\r\n          <Layout>\r\n            <OrgSidebar amORGUser data={props} />\r\n            <Content className=\"\">\r\n              <Row className=\"py-3\">\r\n                <h1>{EDIT_OPENLINE}</h1>\r\n              </Row>\r\n              <Spin spinning={loader} size=\"large\">\r\n                <div className=\"mid-content mt-4\">\r\n                  <Form\r\n                    data-test=\"createHotlineStepOne\"\r\n                    className=\"input-md w-md-100 w-75 floating-label\"\r\n                    name=\"validate_other\"\r\n                    form={form}\r\n                  >\r\n                    {error && (\r\n                      <Form.Item>\r\n                        <Alert\r\n                          message={REQUIRED_MESSAGE}\r\n                          type=\"error\"\r\n                          showIcon\r\n                        ></Alert>\r\n                      </Form.Item>\r\n                    )}\r\n                    <FloatLabel\r\n                      label={DIRECTORY_NAME}\r\n                      value={openLineData.name}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DIRECTORY_NAME,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <TextArea\r\n                          showCount\r\n                          maxLength={80}\r\n                          value={openLineData.name}\r\n                          onChange={(e) => handleStepOneOnChange(e)}\r\n                          onBlur={(e) => CheckOpenlineName(e)}\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          className=\"input-control textarea-input\"\r\n                          htmlFor=\"name\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        {openlineErrorUpdated == \"status: false\" &&\r\n                          openLineData.name\r\n                            .replace(/^\\s*/, \"\")\r\n                            .replace(/\\s*$/, \"\").length > 0 &&\r\n                          openLineData.name.length > 0 && (\r\n                            <CheckCircleTwoTone\r\n                              className=\"successCheck\"\r\n                              twoToneColor=\"#52c41a\"\r\n                            />\r\n                          )}\r\n                        {openlineErrorUpdated == \"status: true\" && (\r\n                          <Alert\r\n                            message={OPENLINE_ALREADY_EXISTS}\r\n                            type=\"error\"\r\n                            showIcon\r\n                          ></Alert>\r\n                        )}\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel\r\n                      label={DESCRIPTION}\r\n                      value={openLineData.help_text}\r\n                    >\r\n                      <Form.Item\r\n                        className=\"required\"\r\n                        name=\"help_text\"\r\n                        id=\"help_text\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: ENTER_DESCRIPTION,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <>\r\n                          <TextArea\r\n                            className=\"input-control textarea-input\"\r\n                            value={openLineData.help_text}\r\n                            onChange={(e) => handleStepOneOnChange(e)}\r\n                            name=\"help_text\"\r\n                            id=\"help_text\"\r\n                            htmlFor=\"help_text\"\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={DATE} value=\"start_date\">\r\n                      <Form.Item className=\"input-control datepicker-wrapper\">\r\n                        <RangePicker\r\n                          className=\"datepicker w-100 w-lg-50 mr-0 mr-lg-5 required\"\r\n                          name=\"start_date\"\r\n                          value={openLineData.start_date}\r\n                          disabledDate={disabledDate}\r\n                          onChange={(date) =>\r\n                            handleStepOneDatePickerChange(date, \"start_date\")\r\n                          }\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: SELECT_DATE,\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <FloatLabel label={STATUS} value={openLineData.status_id}>\r\n                      <Form.Item className=\"required\" name=\"status\">\r\n                        <>\r\n                          <Select\r\n                            className=\"input-control w-100 w-lg-50\"\r\n                            value={openLineData.status_id}\r\n                            htmlFor=\"status\"\r\n                            onSelect={(value) =>\r\n                              handleStepOneOnSelect(value, \"status_id\")\r\n                            }\r\n                          >\r\n                            <Select.Option value=\"5\">\r\n                              {STATUS_ACTIVE}\r\n                            </Select.Option>\r\n                            <Select.Option value=\"4\">\r\n                              {STATUS_INACTIVE}\r\n                            </Select.Option>\r\n                          </Select>\r\n                        </>\r\n                      </Form.Item>\r\n                    </FloatLabel>\r\n                    <Form.Item className=\"\">\r\n                      <Form.Item\r\n                        className=\"upload-control required\"\r\n                        name=\"upload\"\r\n                        valuePropName=\"fileList\"\r\n                      >\r\n                        <Upload\r\n                          listType=\"picture\"\r\n                          fileList={openLineData.ImgfileList}\r\n                          onChange={(value) =>\r\n                            handleStepOneUpload(value, \"openline_image\")\r\n                          }\r\n                          onPreview={(value) => handleStepOnePreview(value)}\r\n                          handleOnRemove={handleOnRemove}\r\n                          accept=\"image/png, image/jpeg, image/gif\"\r\n                        >\r\n                          {openLineData.openline_image.length === 0 && (\r\n                            <Button type=\"link\" className=\"link pl-0\">\r\n                              <span className=\"icon icon-upload pr-2\"></span>{\" \"}\r\n                              {UPLOAD_IMAGE}\r\n                            </Button>\r\n                          )}\r\n                        </Upload>\r\n\r\n                        <Modal\r\n                          visible={openLineData.previewVisible}\r\n                          title={openLineData.previewTitle}\r\n                          centered\r\n                          onOk={(value) => handleCancel(value)}\r\n                          okButtonProps={{\r\n                            children: \"Custom OK\",\r\n                          }}\r\n                          cancelButtonProps={{ style: { display: \"none\" } }}\r\n                          okText=\"Close\"\r\n                        >\r\n                          <img\r\n                            alt=\"example\"\r\n                            style={{ width: \"100%\" }}\r\n                            src={openLineData.previewImage}\r\n                          />\r\n                        </Modal>\r\n\r\n                        {getIconText(openLineData.openline_id) && (\r\n                          <div className=\"ant-upload-list ant-upload-list-picture\">\r\n                            <div className=\"ant-upload-list-item ant-upload-list-item-list-type-picture\">\r\n                              <div className=\"ant-upload-list-item-info d-inline-flex w-100\">\r\n                                <span className=\"d-inline-flex align-items-center\">\r\n                                  <a className=\"ant-upload-list-item-thumbnail\">\r\n                                    {ReactHtmlParser(openLineData.iconHtml)}\r\n                                  </a>\r\n\r\n                                  <span\r\n                                    className=\"ant-upload-list-item-name ant-upload-list-item-name-icon-count-1\"\r\n                                    title={getIconText(\r\n                                      openLineData.openline_id\r\n                                    )}\r\n                                  >\r\n                                    {getIconText(openLineData.openline_id)}\r\n                                  </span>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n                    <div className=\"steps-action mt-5\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={editOpenline}\r\n                        data-test=\"stepOneNext\"\r\n                        style={{ margin: \"0 8px\" }}\r\n                      >\r\n                        {UPDATE}\r\n                      </Button>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        onClick={cancelHotline}\r\n                        data-test=\"stepOneNext\"\r\n                      >\r\n                        {CANCEL}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Spin>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditOpenline;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport OrganizationContainer from \"./components/manageOrg/OrganizationContainer\";\r\nimport ManageEmp from \"./components/manageEmp/ManageEmp\";\r\nimport ForgotPassword from \"./components/login/ForgotPassword\";\r\nimport ResetPassword from \"./components/login/ResetPassword\";\r\nimport Login from \"./components/login/Login\";\r\nimport ChangePassword from \"./components/form/ChangePassword\";\r\nimport HotlineCreation from \"./components/hotlineCreation/HotlineCreation\";\r\nimport HotlineContainer from \"./components/hotlineDirectory/HotlineContainer\";\r\nimport AssignHotlineModal from \"./components/modal/AssignHotlineModal\";\r\nimport HotlineMessages from \"./components/hotlineMessages/HotlineMessages\";\r\nimport OpenlineMessages from \"./components/openlineMessages/OpenlineMessages\";\r\nimport PermissionDenied from \"./containers/PermissionDenied\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport CreateOrgStepper from \"./components/form/CreateOrgStepper\";\r\nimport OrgDetails from \"./components/form/OrgDetails\";\r\nimport EditOrg from \"./components/form/EditOrg\";\r\nimport EditProfile from \"./components/form/EditProfile\";\r\nimport EditHotLine from \"./components/hotlineDirectory/EditHotLine\";\r\nimport AddEmployee from \"./components/manageEmp/AddEmployee\";\r\nimport ImportFile from \"./components/manageEmp/ImportFile\";\r\nimport CreateManually from \"./components/manageEmp/CreateManually\";\r\nimport ManagePolls from \"./components/managePolls/ManagePolls\";\r\nimport CreatePoll from \"./components/managePolls/CreatePoll\";\r\nimport PreviewPoll from \"./components/managePolls/PreviewPoll\";\r\nimport PollsContainer from \"./components/managePolls/PollsContainer\";\r\n\r\nimport PollResponse from \"./components/managePolls/PollResponse\";\r\nimport EditPoll from \"./components/managePolls/EditPoll\";\r\nimport ExistingPolls from \"./components/managePolls/ExistingPolls\";\r\n\r\nimport OpenlineContainer from \"./components/openlineDirectory/OpenlineContainer\";\r\nimport OpenlineCreation from \"./components/openlineCreation/OpenlineCreation\";\r\nimport EditOpenline from \"./components/openlineDirectory/EditOpenline\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\nfunction Routes(props) {\r\n  const isAuthenticated = AppStorage.get(\"user\");\r\n  const commonForAllUsers = JSON.parse(AppStorage.get(\"user\"));\r\n\r\n  let isamcc = false;\r\n  let isorgcc = false;\r\n  let isamweb = false;\r\n  if (!isAuthenticated) {\r\n    isamcc = true;\r\n    isorgcc = true;\r\n    isamweb = true;\r\n  }\r\n  if (\r\n    isAuthenticated &&\r\n    commonForAllUsers &&\r\n    commonForAllUsers.user_data != \"null\"\r\n  ) {\r\n    isamcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_amcc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isorgcc =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_org_cc_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n    isamweb =\r\n      CryptoJS.AES.decrypt(\r\n        commonForAllUsers.user_data.is_am_web_user,\r\n        \"anonymoose\"\r\n      ).toString(CryptoJS.enc.Utf8) === \"true\";\r\n  }\r\n  const url = window.location.pathname;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/editprofile\" component={EditProfile} />\r\n        <ProtectedRoute path=\"/changepassword\" component={ChangePassword} />\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route exact={true} path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route exact={true} path=\"/resetpassword\" component={ResetPassword} />\r\n        {isorgcc &&\r\n        (url === \"/orgcc/createhotline\" ||\r\n          url === \"/orgcc/edithotline\" ||\r\n          url === \"/orgcc/editopenline\" ||\r\n          url === \"/orgcc/manageemployees\" ||\r\n          url === \"/orgcc/assignhotline\" ||\r\n          url === \"/orgcc/hotlinedirectory\" ||\r\n          url === \"/orgcc/createopenline\" ||\r\n          url === \"/orgcc/openlinedirectory\" ||\r\n          url === \"/orgcc/pollsdirectory\" ||\r\n          url === \"/orgcc/createpoll\" ||\r\n          url.includes(\"/orgcc/editpoll\") ||\r\n          url === \"/orgcc/previewpoll\" ||\r\n          url === \"/orgcc/pollresponse\" ||\r\n          url === \"/orgcc/existingpolls\" ||\r\n          url === \"/orgcc/addemployee\" ||\r\n          url === \"/orgcc/createmanually\" ||\r\n          url === \"/orgcc/importfile\" ||\r\n          url === \"/\" ||\r\n          url === \"/login\") ? (\r\n          <Switch>\r\n            {/* ORGCC ROUTING */}\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createhotline\"\r\n              amorg\r\n              component={HotlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/manageemployees\"\r\n              amorg\r\n              component={ManageEmp}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/importfile\"\r\n              amorg\r\n              component={ImportFile}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/addemployee\"\r\n              amorg\r\n              component={AddEmployee}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createmanually\"\r\n              amorg\r\n              component={CreateManually}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/assignhotline\"\r\n              amorg\r\n              component={AssignHotlineModal}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/hotlinedirectory\"\r\n              amorg\r\n              component={HotlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/edithotline\"\r\n              amorg\r\n              component={EditHotLine}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createopenline\"\r\n              amorg\r\n              component={OpenlineCreation}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/openlinedirectory\"\r\n              amorg\r\n              component={OpenlineContainer}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editopenline\"\r\n              amorg\r\n              component={EditOpenline}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollsdirectory\"\r\n              amorg\r\n              component={PollsContainer}\r\n            />\r\n\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/previewpoll\"\r\n              amorg\r\n              component={PreviewPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/createpoll\"\r\n              amorg\r\n              component={CreatePoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/pollresponse\"\r\n              amorg\r\n              component={PollResponse}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/editpoll/:id\"\r\n              amorg\r\n              component={EditPoll}\r\n            />\r\n            <ProtectedRoute\r\n              exact={true}\r\n              path=\"/orgcc/existingpolls\"\r\n              amorg\r\n              component={ExistingPolls}\r\n            />\r\n          </Switch>\r\n        ) : isamweb &&\r\n          (url === \"/amweb/hotlinemessages\" ||\r\n            url === \"/login\" ||\r\n            url === \"/\" ||\r\n            url === \"/amweb/openlinemessages\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMWEB ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/hotlinemessages\"\r\n                amweb\r\n                component={HotlineMessages}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amweb/openlinemessages\"\r\n                amweb\r\n                component={OpenlineMessages}\r\n              />\r\n            </Switch>\r\n          </>\r\n        ) : isamcc &&\r\n          (url === \"/amcc/manageorganizations\" ||\r\n            url === \"/amcc/createorg\" ||\r\n            url === \"/\" ||\r\n            url.includes(\"/amcc/editorg\") ||\r\n            url.includes(\"/amcc/orgdetails\") ||\r\n            url === \"/login\") ? (\r\n          <>\r\n            {\" \"}\r\n            {/* AMCC ROUTING */}\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/orgdetails/:id\"\r\n                amcc\r\n                component={OrgDetails}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/manageorganizations\"\r\n                amcc\r\n                component={OrganizationContainer}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/createorg\"\r\n                amcc\r\n                component={CreateOrgStepper}\r\n              />\r\n              <ProtectedRoute\r\n                exact={true}\r\n                path=\"/amcc/editorg/:id\"\r\n                amcc\r\n                component={EditOrg}\r\n              />\r\n            </Switch>{\" \"}\r\n          </>\r\n        ) : (\r\n          isAuthenticated && <Route component={PermissionDenied} />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\r\nimport * as AppStorage from \"../utils/AppStorage\";\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet decryptedPassword = \"\";\r\nconst localPwd = AppStorage.get(\"current\");\r\ndecryptedPassword = localPwd\r\n  ? CryptoJS.AES.decrypt(localPwd, \"anonymoose\")\r\n  : \"\";\r\nconst user = JSON.parse(AppStorage.get(\"user\"));\r\nconst userFName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.first_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userLName = user\r\n  ? CryptoJS.AES.decrypt(user?.user_details?.last_name, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userEmail = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.email, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst userMobile = user\r\n  ? CryptoJS.AES.decrypt(user?.user_data?.mobile_number, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    )\r\n  : \"\";\r\nconst amweb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_am_web_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_amcc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amorgcc = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_org_cc_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amidb = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_idb_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amseeded = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_seeded_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst amapp = user\r\n  ? CryptoJS.AES.decrypt(user.user_data?.is_app_user, \"anonymoose\").toString(\r\n      CryptoJS.enc.Utf8\r\n    ) === \"true\"\r\n  : false;\r\nconst userData = {\r\n  ...user,\r\n  user_data: {\r\n    ...user?.user_data,\r\n    email: userEmail,\r\n    mobile_number: userMobile,\r\n    is_am_web_user: amweb,\r\n    is_amcc_user: amcc,\r\n    is_app_user: amapp,\r\n    is_org_cc_user: amorgcc,\r\n    is_idb_user: amidb,\r\n    is_seeded_user: amseeded,\r\n  },\r\n  user_details: {\r\n    ...user?.user_details,\r\n    first_name: userFName,\r\n    last_name: userLName,\r\n  },\r\n};\r\n\r\nconst password = decryptedPassword.toString(CryptoJS.enc.Utf8);\r\nconst initialState = user\r\n  ? {\r\n      isLoggedIn: true,\r\n      user: userData,\r\n      current: password.replaceAll('^\"+|\"+$', \"\"),\r\n    }\r\n  : { isLoggedIn: false, user: null, current: null };\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n        current: payload.current,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        current: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEORG_FAIL, MANAGEORG_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageOrgData = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEORG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageOrgData: payload.manageOrgData,\r\n      };\r\n    case MANAGEORG_FAIL:\r\n      return {\r\n        ...state,\r\n        manageOrgData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MANAGEEMP_FAIL, MANAGEEMP_SUCCESS } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.manageEmpData = null;\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case MANAGEEMP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        manageEmpData: payload.manageEmpData,\r\n      };\r\n    case MANAGEEMP_FAIL:\r\n      return {\r\n        ...state,\r\n        manageEmpData: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HOTLINE_FAIL,\r\n  HOTLINE_SUCCESS,\r\n  HOTLINEASSIGN_SUCCESS,\r\n  HOTLINEASSIGN_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.hotlinesdata = null;\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: payload.hotlinesdata,\r\n      };\r\n    case HOTLINE_FAIL:\r\n      return {\r\n        ...state,\r\n        hotlinesdata: [],\r\n      };\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { HOTLINEASSIGN_SUCCESS, HOTLINEASSIGN_FAIL } from \"../actions/types\";\r\n\r\nconst deafaultState = {};\r\ndeafaultState.assignhotlinedata = [];\r\n\r\nexport default function (state = deafaultState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HOTLINEASSIGN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: payload.assignhotlinedata,\r\n      };\r\n    case HOTLINEASSIGN_FAIL:\r\n      return {\r\n        ...state,\r\n        assignhotlinedata: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    OPENLINE_FAIL,\r\n    OPENLINE_SUCCESS\r\n  } from \"../actions/types\";\r\n  \r\n  const deafaultState = {};\r\n  deafaultState.openlinesdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case OPENLINE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          openlinesdata: payload.openlinesdata,\r\n        };\r\n      case OPENLINE_FAIL:\r\n        return {\r\n          ...state,\r\n          openlinesdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import {\r\n    POLL_FAIL,\r\n    POLL_SUCCESS \r\n } from \"../actions/types\";\r\n   \r\n  const deafaultState = {};\r\n  deafaultState.pollsdata = null;\r\n  \r\n  export default function (state = deafaultState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case POLL_SUCCESS:\r\n        return {\r\n          ...state,\r\n          pollsdata: payload.pollsdata,\r\n        };\r\n      case POLL_FAIL:\r\n        return {\r\n          ...state,\r\n          pollsdata: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport manageOrg from \"./manageOrg\";\r\nimport manageEmp from \"./manageEmp\";\r\nimport hotlinedata from \"./hotlines\";\r\nimport assignedHotline from \"./assignedHotline\";\r\nimport openline from \"./openline\"\r\nimport poll from \"./poll\"\r\n\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  manageOrg,\r\n  manageEmp,\r\n  hotlinedata,\r\n  assignedHotline,\r\n  openline,\r\n  poll\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./assets/scss/style.scss\";\r\nimport \"./assets/icons/icon-styles.css\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./services/stores\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { Modal } from \"antd\";\r\nimport AuthService from \"../src/services/auth-service\";\r\nimport * as AppStorage from \"../src/utils/AppStorage\";\r\nimport { ABOUT_TO_LOGOUT_TEXT, LOGGED_OUT_TEXT } from \"./messages\";\r\nimport { OK_TEXT_MODAL } from \"./headings\";\r\n\r\nfunction App() {\r\n  const timeOutIdle = 1200000; // 20 minutes\r\n  const timeOutLogout = 60000; // a minute\r\n  var idleTimer = null;\r\n  const [idleModal, showIdleModal] = useState(false);\r\n  const [logoutModal, showLogoutModal] = useState(false);\r\n  const [timedOut, setTimedOut] = useState(false);\r\n\r\n  const onIdle = (e) => {\r\n    if (AppStorage.get(\"user\")) {\r\n      const isTimedOut = timedOut;\r\n      if (isTimedOut) {\r\n        showIdleModal(false);\r\n        showLogoutModal(true);\r\n      } else {\r\n        showIdleModal(true);\r\n        idleTimer.reset();\r\n        setTimedOut(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleIdleOk = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleIdleCancel = () => {\r\n    showIdleModal(false);\r\n  };\r\n\r\n  const handleLogoutOk = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const handleLogoutCancel = () => {\r\n    if (AppStorage.get(\"user\")) {\r\n      AuthService.logout();\r\n    }\r\n  };\r\n\r\n  const onActive = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  const onAction = (e) => {\r\n    setTimedOut(false);\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <IdleTimer\r\n        ref={(ref) => {\r\n          idleTimer = ref;\r\n        }}\r\n        element={document}\r\n        onIdle={onIdle}\r\n        onAction={onAction}\r\n        onActive={onActive}\r\n        debounce={250}\r\n        timeout={!timedOut ? timeOutIdle : timeOutLogout}\r\n      />\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"content\">\r\n            <Modal\r\n              visible={idleModal}\r\n              onOk={handleIdleOk}\r\n              onCancel={handleIdleCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{ABOUT_TO_LOGOUT_TEXT}</p>\r\n            </Modal>\r\n            <Modal\r\n              visible={logoutModal}\r\n              onOk={handleLogoutOk}\r\n              onCancel={handleLogoutCancel}\r\n              centered\r\n              width={350}\r\n              okButtonProps={{\r\n                children: \"Custom OK\",\r\n              }}\r\n              cancelButtonProps={{ style: { display: \"none\" } }}\r\n              okText={OK_TEXT_MODAL}\r\n            >\r\n              <p>{LOGGED_OUT_TEXT}</p>\r\n            </Modal>\r\n            <Routes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_sidebar\":\"manageEmp_no_sidebar__2IV_7\",\"box_bordered\":\"manageEmp_box_bordered__1L9Kq\",\"icon\":\"manageEmp_icon__2NaGI\",\"box_bordered_active\":\"manageEmp_box_bordered_active__1hEvf\"};"],"sourceRoot":""}